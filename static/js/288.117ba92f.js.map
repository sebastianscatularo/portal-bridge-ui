{"version":3,"file":"static/js/288.117ba92f.js","mappings":"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D,YAAaljD,EAAQzY,SACrB47D,eAAgBnjD,EAAQk6C,YACxBoJ,iBAAkBtjD,EAAQm6C,cAC1BhV,MAAOnlC,EAAQmlC,MACf1P,KAAMz1B,EAAQy1B,KACd2jB,MAAOp5C,EAAQo5C,MACf4c,QAASh2D,EAAQytC,QACjB8Q,WAAYv+C,EAAQu+C,YAEtB,OAAO,IAAI0K,EAAAA,YAAuBzxE,iGC70DpC,MAmgEA,EAngEgB,CACd,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,iCC1/DK,MAAM+hF,EAAoC,4BAKjD,SAASC,EAAcC,GACrB,MAAMC,EAAW,GACjB,IAAIjvD,EAAM,EACNkvD,EAAU,EAkBd,OAFAF,EAAQn9E,SAfR,SAAas9E,GACXnvD,GAAOmvD,GAASD,EAChBA,GAAW,EACPA,GAAW,KACbD,EAAS1qE,KAAW,KAANyb,GACdA,IAAQ,GACRkvD,GAAW,OAITA,GACFD,EAAS1qE,KAAKyb,GAMXivD,EAGT,SAASG,EAAWC,GAClB,OAAOA,EAAKnxE,KAAKvR,GAAM2iF,EAAQ3iF,KAG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","sources":["../node_modules/@blockshake/defly-connect/dist/App-cff5e450.js","../node_modules/@blockshake/defly-connect/dist/index-bcf8d0cd.js","../node_modules/@blockshake/defly-connect/dist/index.js","../node_modules/alchemy-sdk/src/types/types.ts","../node_modules/alchemy-sdk/src/util/const.ts","../node_modules/alchemy-sdk/src/api/alchemy-config.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/alchemy-sdk/node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/alchemy-sdk/node_modules/@ethersproject/properties/lib.esm/index.js","../node_modules/alchemy-sdk/node_modules/@ethersproject/properties/lib.esm/_version.js","../node_modules/alchemy-sdk/src/api/util.ts","../node_modules/alchemy-sdk/src/util/util.ts","../node_modules/alchemy-sdk/src/internal/core-api.ts","../node_modules/alchemy-sdk/src/api/core-namespace.ts","../node_modules/alchemy-sdk/src/api/debug-namespace.ts","../node_modules/alchemy-sdk/src/util/inputSanitization.ts","../node_modules/alchemy-sdk/src/util/logger.ts","../node_modules/alchemy-sdk/src/version.ts","../node_modules/alchemy-sdk/src/util/sendRest.ts","../node_modules/alchemy-sdk/src/internal/backoff.ts","../node_modules/alchemy-sdk/src/internal/dispatch.ts","../node_modules/alchemy-sdk/src/internal/nft-api.ts","../node_modules/alchemy-sdk/src/api/nft-namespace.ts","../node_modules/alchemy-sdk/src/api/notify-namespace.ts","../node_modules/alchemy-sdk/src/api/transact-namespace.ts","../node_modules/alchemy-sdk/src/internal/internal-types.ts","../node_modules/alchemy-sdk/src/internal/ethers-event.ts","../node_modules/alchemy-sdk/src/api/websocket-namespace.ts","../node_modules/alchemy-sdk/src/api/alchemy.ts","../node_modules/alchemy-sdk/node_modules/axios/index.js","../node_modules/alchemy-sdk/node_modules/axios/lib/adapters/xhr.js","../node_modules/alchemy-sdk/node_modules/axios/lib/axios.js","../node_modules/alchemy-sdk/node_modules/axios/lib/cancel/Cancel.js","../node_modules/alchemy-sdk/node_modules/axios/lib/cancel/CancelToken.js","../node_modules/alchemy-sdk/node_modules/axios/lib/cancel/isCancel.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/Axios.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/InterceptorManager.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/buildFullPath.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/createError.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/dispatchRequest.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/enhanceError.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/mergeConfig.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/settle.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/transformData.js","../node_modules/alchemy-sdk/node_modules/axios/lib/defaults/index.js","../node_modules/alchemy-sdk/node_modules/axios/lib/defaults/transitional.js","../node_modules/alchemy-sdk/node_modules/axios/lib/env/data.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/bind.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/buildURL.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/combineURLs.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/cookies.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/spread.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/validator.js","../node_modules/alchemy-sdk/node_modules/axios/lib/utils.js","../MessagePack/webpack/universalModuleDefinition","../MessagePack/webpack/bootstrap","../MessagePack/src/utils/utf8.ts","../MessagePack/src/ExtData.ts","../MessagePack/src/utils/int.ts","../MessagePack/src/timestamp.ts","../MessagePack/src/ExtensionCodec.ts","../MessagePack/src/utils/typedArrays.ts","../MessagePack/src/Encoder.ts","../MessagePack/src/encode.ts","../MessagePack/src/utils/prettyByte.ts","../MessagePack/src/CachedKeyDecoder.ts","../MessagePack/src/Decoder.ts","../MessagePack/src/decode.ts","../MessagePack/src/utils/stream.ts","../MessagePack/src/decodeAsync.ts","../node_modules/algosdk/src/abi/abi_type.ts","../node_modules/algosdk/src/abi/transaction.ts","../node_modules/algosdk/src/abi/reference.ts","../node_modules/algosdk/src/abi/method.ts","../node_modules/algosdk/src/abi/contract.ts","../node_modules/algosdk/src/abi/interface.ts","../node_modules/algosdk/src/account.ts","../node_modules/algosdk/src/bid.ts","../node_modules/algosdk/src/client/algod.js","../node_modules/algosdk/src/client/urlTokenBaseHTTPClient.ts","../node_modules/algosdk/src/client/client.ts","../node_modules/algosdk/src/client/kmd.ts","../node_modules/algosdk/src/client/v2/algod/accountInformation.ts","../node_modules/algosdk/src/client/v2/algod/accountAssetInformation.ts","../node_modules/algosdk/src/client/v2/algod/accountApplicationInformation.ts","../node_modules/algosdk/src/client/v2/algod/block.ts","../node_modules/algosdk/src/client/v2/algod/compile.ts","../node_modules/algosdk/src/client/v2/algod/dryrun.ts","../node_modules/algosdk/src/client/v2/algod/genesis.ts","../node_modules/algosdk/src/client/v2/algod/getAssetByID.ts","../node_modules/algosdk/src/client/v2/algod/getApplicationByID.ts","../node_modules/algosdk/src/client/v2/algod/getBlockHash.ts","../node_modules/algosdk/src/client/v2/algod/getApplicationBoxByName.ts","../node_modules/algosdk/src/client/v2/algod/getApplicationBoxes.ts","../node_modules/algosdk/src/client/v2/algod/healthCheck.ts","../node_modules/algosdk/src/client/v2/algod/pendingTransactionInformation.ts","../node_modules/algosdk/src/client/v2/algod/pendingTransactions.ts","../node_modules/algosdk/src/client/v2/algod/pendingTransactionsByAddress.ts","../node_modules/algosdk/src/client/v2/algod/getTransactionProof.ts","../node_modules/algosdk/src/client/v2/algod/status.ts","../node_modules/algosdk/src/client/v2/algod/statusAfterBlock.ts","../node_modules/algosdk/src/client/v2/algod/suggestedParams.ts","../node_modules/algosdk/src/client/v2/algod/supply.ts","../node_modules/algosdk/src/client/v2/algod/versions.ts","../node_modules/algosdk/src/client/v2/algod/lightBlockHeaderProof.ts","../node_modules/algosdk/src/client/v2/algod/stateproof.ts","../node_modules/algosdk/src/client/v2/algod/algod.ts","../node_modules/algosdk/src/client/v2/algod/models/types.ts","../node_modules/algosdk/src/client/v2/algod/sendRawTransaction.ts","../node_modules/algosdk/src/client/v2/basemodel.ts","../node_modules/algosdk/src/client/v2/indexer/makeHealthCheck.ts","../node_modules/algosdk/src/client/v2/indexer/lookupAssetBalances.ts","../node_modules/algosdk/src/client/v2/indexer/lookupAccountTransactions.ts","../node_modules/algosdk/src/client/v2/indexer/lookupAssetTransactions.ts","../node_modules/algosdk/src/client/v2/indexer/lookupBlock.ts","../node_modules/algosdk/src/client/v2/indexer/lookupTransactionByID.ts","../node_modules/algosdk/src/client/v2/indexer/lookupAccountByID.ts","../node_modules/algosdk/src/client/v2/indexer/lookupAccountAssets.ts","../node_modules/algosdk/src/client/v2/indexer/lookupAccountCreatedAssets.ts","../node_modules/algosdk/src/client/v2/indexer/lookupAccountAppLocalStates.ts","../node_modules/algosdk/src/client/v2/indexer/lookupAccountCreatedApplications.ts","../node_modules/algosdk/src/client/v2/indexer/lookupAssetByID.ts","../node_modules/algosdk/src/client/v2/indexer/lookupApplications.ts","../node_modules/algosdk/src/client/v2/indexer/lookupApplicationLogs.ts","../node_modules/algosdk/src/client/v2/indexer/lookupApplicationBoxByIDandName.ts","../node_modules/algosdk/src/client/v2/indexer/searchAccounts.ts","../node_modules/algosdk/src/client/v2/indexer/searchForTransactions.ts","../node_modules/algosdk/src/client/v2/indexer/searchForAssets.ts","../node_modules/algosdk/src/client/v2/indexer/searchForApplications.ts","../node_modules/algosdk/src/client/v2/indexer/searchForApplicationBoxes.ts","../node_modules/algosdk/src/client/v2/indexer/indexer.ts","../node_modules/algosdk/src/client/v2/indexer/models/types.ts","../node_modules/algosdk/src/client/v2/jsonrequest.ts","../node_modules/algosdk/src/client/v2/serviceClient.ts","../node_modules/algosdk/src/composer.ts","../node_modules/algosdk/src/convert.ts","../node_modules/algosdk/src/dryrun.ts","../node_modules/algosdk/src/encoding/address.ts","../node_modules/algosdk/src/encoding/bigint.ts","../node_modules/algosdk/src/encoding/encoding.ts","../node_modules/algosdk/src/encoding/uint64.ts","../node_modules/algosdk/src/group.ts","../node_modules/algosdk/src/index.ts","../node_modules/algosdk/src/logic/logic.ts","../node_modules/algosdk/src/logic/sourcemap.ts","../node_modules/algosdk/src/logicTemplates/dynamicfee.js","../node_modules/algosdk/src/logicTemplates/htlc.js","../node_modules/algosdk/src/logicTemplates/index.js","../node_modules/algosdk/src/logicTemplates/limitorder.js","../node_modules/algosdk/src/logicTemplates/periodicpayment.js","../node_modules/algosdk/src/logicTemplates/split.js","../node_modules/algosdk/src/logicTemplates/templates.js","../node_modules/algosdk/src/logicsig.ts","../node_modules/algosdk/src/main.ts","../node_modules/algosdk/src/makeTxn.ts","../node_modules/algosdk/src/mnemonic/wordlists/english.ts","../node_modules/algosdk/src/mnemonic/mnemonic.ts","../node_modules/algosdk/src/multisig.ts","../node_modules/algosdk/src/nacl/naclWrappers.ts","../node_modules/algosdk/src/signer.ts","../node_modules/algosdk/src/boxStorage.ts","../node_modules/algosdk/src/transaction.ts","../node_modules/algosdk/src/types/intDecoding.ts","../node_modules/algosdk/src/types/transactions/base.ts","../node_modules/algosdk/src/utils/utils.ts","../node_modules/algosdk/src/wait.ts","../node_modules/algosdk/node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/aptos/src/index.ts","../node_modules/aptos/src/aptos_account.ts","../node_modules/aptos/src/utils/hd-key.ts","../node_modules/aptos/src/hex_string.ts","../node_modules/aptos/src/utils/misc.ts","../node_modules/aptos/src/utils/memoize-decorator.ts","../node_modules/aptos/src/utils/pagination_helpers.ts","../node_modules/aptos/src/aptos_types/index.ts","../node_modules/aptos/src/bcs/index.ts","../node_modules/aptos/src/bcs/consts.ts","../node_modules/aptos/src/bcs/serializer.ts","../node_modules/aptos/src/bcs/deserializer.ts","../node_modules/aptos/src/bcs/helper.ts","../node_modules/aptos/src/aptos_types/transaction.ts","../node_modules/aptos/src/aptos_types/account_address.ts","../node_modules/aptos/src/aptos_types/ed25519.ts","../node_modules/aptos/src/aptos_types/multi_ed25519.ts","../node_modules/aptos/src/aptos_types/authenticator.ts","../node_modules/aptos/src/aptos_types/identifier.ts","../node_modules/aptos/src/aptos_types/type_tag.ts","../node_modules/aptos/src/aptos_types/abi.ts","../node_modules/aptos/src/aptos_types/authentication_key.ts","../node_modules/aptos/src/aptos_types/rotation_proof_challenge.ts","../node_modules/aptos/src/generated/index.ts","../node_modules/aptos/src/generated/core/BaseHttpRequest.ts","../node_modules/aptos/src/generated/core/request.ts","../node_modules/aptos/src/generated/core/ApiError.ts","../node_modules/aptos/src/generated/core/CancelablePromise.ts","../node_modules/aptos/src/generated/core/AxiosHttpRequest.ts","../node_modules/aptos/src/generated/services/AccountsService.ts","../node_modules/aptos/src/generated/services/BlocksService.ts","../node_modules/aptos/src/generated/services/EventsService.ts","../node_modules/aptos/src/generated/services/GeneralService.ts","../node_modules/aptos/src/generated/services/TablesService.ts","../node_modules/aptos/src/generated/services/TransactionsService.ts","../node_modules/aptos/src/generated/services/ViewService.ts","../node_modules/aptos/src/generated/AptosGeneratedClient.ts","../node_modules/aptos/src/generated/core/OpenAPI.ts","../node_modules/aptos/src/generated/models/AptosErrorCode.ts","../node_modules/aptos/src/generated/models/MoveFunctionVisibility.ts","../node_modules/aptos/src/generated/models/RoleType.ts","../node_modules/aptos/src/generated/schemas/$AccountData.ts","../node_modules/aptos/src/generated/schemas/$AccountSignature.ts","../node_modules/aptos/src/generated/schemas/$AccountSignature_Ed25519Signature.ts","../node_modules/aptos/src/generated/schemas/$AccountSignature_MultiEd25519Signature.ts","../node_modules/aptos/src/generated/schemas/$Address.ts","../node_modules/aptos/src/generated/schemas/$AptosError.ts","../node_modules/aptos/src/generated/schemas/$AptosErrorCode.ts","../node_modules/aptos/src/generated/schemas/$Block.ts","../node_modules/aptos/src/generated/schemas/$BlockMetadataTransaction.ts","../node_modules/aptos/src/generated/schemas/$DecodedTableData.ts","../node_modules/aptos/src/generated/schemas/$DeletedTableData.ts","../node_modules/aptos/src/generated/schemas/$DeleteModule.ts","../node_modules/aptos/src/generated/schemas/$DeleteResource.ts","../node_modules/aptos/src/generated/schemas/$DeleteTableItem.ts","../node_modules/aptos/src/generated/schemas/$DirectWriteSet.ts","../node_modules/aptos/src/generated/schemas/$Ed25519Signature.ts","../node_modules/aptos/src/generated/schemas/$EncodeSubmissionRequest.ts","../node_modules/aptos/src/generated/schemas/$EntryFunctionId.ts","../node_modules/aptos/src/generated/schemas/$EntryFunctionPayload.ts","../node_modules/aptos/src/generated/schemas/$Event.ts","../node_modules/aptos/src/generated/schemas/$EventGuid.ts","../node_modules/aptos/src/generated/schemas/$GasEstimation.ts","../node_modules/aptos/src/generated/schemas/$GenesisPayload.ts","../node_modules/aptos/src/generated/schemas/$GenesisPayload_WriteSetPayload.ts","../node_modules/aptos/src/generated/schemas/$GenesisTransaction.ts","../node_modules/aptos/src/generated/schemas/$HashValue.ts","../node_modules/aptos/src/generated/schemas/$HealthCheckSuccess.ts","../node_modules/aptos/src/generated/schemas/$HexEncodedBytes.ts","../node_modules/aptos/src/generated/schemas/$IdentifierWrapper.ts","../node_modules/aptos/src/generated/schemas/$IndexResponse.ts","../node_modules/aptos/src/generated/schemas/$ModuleBundlePayload.ts","../node_modules/aptos/src/generated/schemas/$MoveAbility.ts","../node_modules/aptos/src/generated/schemas/$MoveFunction.ts","../node_modules/aptos/src/generated/schemas/$MoveFunctionGenericTypeParam.ts","../node_modules/aptos/src/generated/schemas/$MoveFunctionVisibility.ts","../node_modules/aptos/src/generated/schemas/$MoveModule.ts","../node_modules/aptos/src/generated/schemas/$MoveModuleBytecode.ts","../node_modules/aptos/src/generated/schemas/$MoveModuleId.ts","../node_modules/aptos/src/generated/schemas/$MoveResource.ts","../node_modules/aptos/src/generated/schemas/$MoveScriptBytecode.ts","../node_modules/aptos/src/generated/schemas/$MoveStruct.ts","../node_modules/aptos/src/generated/schemas/$MoveStructField.ts","../node_modules/aptos/src/generated/schemas/$MoveStructGenericTypeParam.ts","../node_modules/aptos/src/generated/schemas/$MoveStructTag.ts","../node_modules/aptos/src/generated/schemas/$MoveStructValue.ts","../node_modules/aptos/src/generated/schemas/$MoveType.ts","../node_modules/aptos/src/generated/schemas/$MoveValue.ts","../node_modules/aptos/src/generated/schemas/$MultiAgentSignature.ts","../node_modules/aptos/src/generated/schemas/$MultiEd25519Signature.ts","../node_modules/aptos/src/generated/schemas/$PendingTransaction.ts","../node_modules/aptos/src/generated/schemas/$RawTableItemRequest.ts","../node_modules/aptos/src/generated/schemas/$RoleType.ts","../node_modules/aptos/src/generated/schemas/$ScriptPayload.ts","../node_modules/aptos/src/generated/schemas/$ScriptWriteSet.ts","../node_modules/aptos/src/generated/schemas/$StateCheckpointTransaction.ts","../node_modules/aptos/src/generated/schemas/$StateKeyWrapper.ts","../node_modules/aptos/src/generated/schemas/$SubmitTransactionRequest.ts","../node_modules/aptos/src/generated/schemas/$TableItemRequest.ts","../node_modules/aptos/src/generated/schemas/$Transaction.ts","../node_modules/aptos/src/generated/schemas/$Transaction_BlockMetadataTransaction.ts","../node_modules/aptos/src/generated/schemas/$Transaction_GenesisTransaction.ts","../node_modules/aptos/src/generated/schemas/$Transaction_PendingTransaction.ts","../node_modules/aptos/src/generated/schemas/$Transaction_StateCheckpointTransaction.ts","../node_modules/aptos/src/generated/schemas/$Transaction_UserTransaction.ts","../node_modules/aptos/src/generated/schemas/$TransactionPayload.ts","../node_modules/aptos/src/generated/schemas/$TransactionPayload_EntryFunctionPayload.ts","../node_modules/aptos/src/generated/schemas/$TransactionPayload_ModuleBundlePayload.ts","../node_modules/aptos/src/generated/schemas/$TransactionPayload_ScriptPayload.ts","../node_modules/aptos/src/generated/schemas/$TransactionsBatchSingleSubmissionFailure.ts","../node_modules/aptos/src/generated/schemas/$TransactionsBatchSubmissionResult.ts","../node_modules/aptos/src/generated/schemas/$TransactionSignature.ts","../node_modules/aptos/src/generated/schemas/$TransactionSignature_Ed25519Signature.ts","../node_modules/aptos/src/generated/schemas/$TransactionSignature_MultiAgentSignature.ts","../node_modules/aptos/src/generated/schemas/$TransactionSignature_MultiEd25519Signature.ts","../node_modules/aptos/src/generated/schemas/$U128.ts","../node_modules/aptos/src/generated/schemas/$U256.ts","../node_modules/aptos/src/generated/schemas/$U64.ts","../node_modules/aptos/src/generated/schemas/$UserTransaction.ts","../node_modules/aptos/src/generated/schemas/$VersionedEvent.ts","../node_modules/aptos/src/generated/schemas/$ViewRequest.ts","../node_modules/aptos/src/generated/schemas/$WriteModule.ts","../node_modules/aptos/src/generated/schemas/$WriteResource.ts","../node_modules/aptos/src/generated/schemas/$WriteSet.ts","../node_modules/aptos/src/generated/schemas/$WriteSet_DirectWriteSet.ts","../node_modules/aptos/src/generated/schemas/$WriteSet_ScriptWriteSet.ts","../node_modules/aptos/src/generated/schemas/$WriteSetChange.ts","../node_modules/aptos/src/generated/schemas/$WriteSetChange_DeleteModule.ts","../node_modules/aptos/src/generated/schemas/$WriteSetChange_DeleteResource.ts","../node_modules/aptos/src/generated/schemas/$WriteSetChange_DeleteTableItem.ts","../node_modules/aptos/src/generated/schemas/$WriteSetChange_WriteModule.ts","../node_modules/aptos/src/generated/schemas/$WriteSetChange_WriteResource.ts","../node_modules/aptos/src/generated/schemas/$WriteSetChange_WriteTableItem.ts","../node_modules/aptos/src/generated/schemas/$WriteSetPayload.ts","../node_modules/aptos/src/generated/schemas/$WriteTableItem.ts","../node_modules/aptos/src/transaction_builder/builder.ts","../node_modules/aptos/src/transaction_builder/builder_utils.ts","../node_modules/aptos/src/aptos_client.ts","../node_modules/aptos/src/abis.ts","../node_modules/aptos/src/coin_client.ts","../node_modules/aptos/src/faucet_client.ts","../node_modules/aptos/src/utils/property_map_serde.ts","../node_modules/aptos/src/token_types.ts","../node_modules/aptos/src/token_client.ts","../node_modules/aptos/node_modules/axios/index.js","../node_modules/aptos/node_modules/axios/lib/adapters/xhr.js","../node_modules/aptos/node_modules/axios/lib/axios.js","../node_modules/aptos/node_modules/axios/lib/cancel/CancelToken.js","../node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js","../node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js","../node_modules/aptos/node_modules/axios/lib/core/Axios.js","../node_modules/aptos/node_modules/axios/lib/core/AxiosError.js","../node_modules/aptos/node_modules/axios/lib/core/InterceptorManager.js","../node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js","../node_modules/aptos/node_modules/axios/lib/core/dispatchRequest.js","../node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js","../node_modules/aptos/node_modules/axios/lib/core/settle.js","../node_modules/aptos/node_modules/axios/lib/core/transformData.js","../node_modules/aptos/node_modules/axios/lib/defaults/index.js","../node_modules/aptos/node_modules/axios/lib/defaults/transitional.js","../node_modules/aptos/node_modules/axios/lib/env/data.js","../node_modules/aptos/node_modules/axios/lib/helpers/bind.js","../node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js","../node_modules/aptos/node_modules/axios/lib/helpers/combineURLs.js","../node_modules/aptos/node_modules/axios/lib/helpers/cookies.js","../node_modules/aptos/node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/aptos/node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/aptos/node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/aptos/node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/aptos/node_modules/axios/lib/helpers/null.js","../node_modules/aptos/node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/aptos/node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/aptos/node_modules/axios/lib/helpers/spread.js","../node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js","../node_modules/aptos/node_modules/axios/lib/helpers/validator.js","../node_modules/aptos/node_modules/axios/lib/utils.js","../node_modules/aptos/node_modules/form-data/lib/browser.js","../node_modules/asn1.js/lib/asn1.js","../node_modules/asn1.js/lib/asn1/api.js","../node_modules/asn1.js/lib/asn1/base/buffer.js","../node_modules/asn1.js/lib/asn1/base/index.js","../node_modules/asn1.js/lib/asn1/base/node.js","../node_modules/asn1.js/lib/asn1/base/reporter.js","../node_modules/asn1.js/lib/asn1/constants/der.js","../node_modules/asn1.js/lib/asn1/constants/index.js","../node_modules/asn1.js/lib/asn1/decoders/der.js","../node_modules/asn1.js/lib/asn1/decoders/index.js","../node_modules/asn1.js/lib/asn1/decoders/pem.js","../node_modules/asn1.js/lib/asn1/encoders/der.js","../node_modules/asn1.js/lib/asn1/encoders/index.js","../node_modules/asn1.js/lib/asn1/encoders/pem.js","../node_modules/asn1.js/node_modules/bn.js/lib/bn.js","../node_modules/assert/build/assert.js","../node_modules/assert/build/internal/assert/assertion_error.js","../node_modules/assert/build/internal/errors.js","../node_modules/assert/build/internal/util/comparisons.js","../node_modules/axios/index.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/utils.js","../node_modules/base-x/src/index.js","../node_modules/base64-js/index.js","../node_modules/base64url/dist/base64url.js","../node_modules/base64url/dist/pad-string.js","../node_modules/base64url/index.js","../node_modules/bech32/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/bignumber.js/bignumber.js","../node_modules/binary-parser/lib/binary_parser.ts","../node_modules/bip32-path/index.js","../node_modules/bip32/src/bip32.js","../node_modules/bip32/src/crypto.js","../node_modules/bip32/src/index.js","../node_modules/bip39/src/_wordlists.js","../node_modules/bip39/src/index.js","../node_modules/bn.js/lib/bn.js","../node_modules/borsh/lib/index.js","../node_modules/bowser/es5.js","../node_modules/brorand/index.js","../node_modules/browser-headers/dist/browser-headers.umd.js","../node_modules/browserify-aes/aes.js","../node_modules/browserify-aes/authCipher.js","../node_modules/browserify-aes/browser.js","../node_modules/browserify-aes/decrypter.js","../node_modules/browserify-aes/encrypter.js","../node_modules/browserify-aes/ghash.js","../node_modules/browserify-aes/incr32.js","../node_modules/browserify-aes/modes/cbc.js","../node_modules/browserify-aes/modes/cfb.js","../node_modules/browserify-aes/modes/cfb1.js","../node_modules/browserify-aes/modes/cfb8.js","../node_modules/browserify-aes/modes/ctr.js","../node_modules/browserify-aes/modes/ecb.js","../node_modules/browserify-aes/modes/index.js","../node_modules/browserify-aes/modes/ofb.js","../node_modules/browserify-aes/streamCipher.js","../node_modules/browserify-cipher/browser.js","../node_modules/browserify-des/index.js","../node_modules/browserify-des/modes.js","../node_modules/browserify-rsa/index.js","../node_modules/browserify-sign/algos.js","../node_modules/browserify-sign/browser/index.js","../node_modules/browserify-sign/browser/sign.js","../node_modules/browserify-sign/browser/verify.js","../node_modules/browserify-zlib/lib/binding.js","../node_modules/browserify-zlib/lib/index.js","../node_modules/bs58/index.js","../node_modules/bs58check/base.js","../node_modules/bs58check/index.js","../node_modules/available-typed-arrays/index.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/interopRequireWildcard.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/bignumber.js/bignumber.mjs","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["\"use strict\";var n=require(\"./index-bcf8d0cd.js\"),e=require(\"qr-code-styling\"),t=require(\"lottie-web\");function o(n){return n&&\"object\"==typeof n&&\"default\"in n?n:{default:n}}require(\"@walletconnect/client\"),require(\"algosdk\"),require(\"bowser\");var l=o(e),a=o(t);function i(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&\"undefined\"!=typeof document){var o=document.head||document.getElementsByTagName(\"head\")[0],l=document.createElement(\"style\");l.type=\"text/css\",\"top\"===t&&o.firstChild?o.insertBefore(l,o.firstChild):o.appendChild(l),l.styleSheet?l.styleSheet.cssText=n:l.appendChild(document.createTextNode(n))}}var d=\".defly-wallet-modal-header {\\n  position: absolute;\\n  top: -44px;\\n  right: 0px;\\n  left: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n.defly-wallet-modal-header--mobile {\\n  position: static;\\n}\\n.defly-wallet-modal-header--mobile .defly-wallet-modal-header__close-button {\\n  width: 24px;\\n  height: 24px;\\n  margin: 0;\\n  padding: 0;\\n  background: transparent;\\n  border: unset;\\n  box-shadow: unset;\\n}\\n\\n.defly-wallet-modal-header__brand {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  font-size: 15px;\\n  font-weight: 600;\\n  line-height: 18px;\\n  letter-spacing: -0.13px;\\n  color: #ffffff;\\n}\\n\\n.defly-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.defly-wallet-modal-header__close-button {\\n  width: 40px;\\n  height: 40px;\\n  margin: 0;\\n  padding: 0;\\n  background: #333333;\\n  border: 1.5px solid rgba(255, 255, 255, 0.08);\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\\n  border-radius: 100%;\\n}\\n\\n.defly-wallet-modal-header__close-button__close-icon {\\n  width: 20px;\\n  height: 20px;\\n}\";i(d);function s(){return document.documentElement.clientWidth<=935}function c(){document.documentElement.style.setProperty(\"--vh\",.01*window.innerHeight+\"px\")}const r=document.createElement(\"template\"),p=n.isMobile()?\"defly-wallet-modal-header defly-wallet-modal-header--mobile\":\"defly-wallet-modal-header defly-wallet-modal-header--desktop\";r.innerHTML=`\\n  <div class=\"${p}\">\\n      ${s()&&n.isMobile()?\"\":\"<div class=\\\"defly-wallet-modal-header__brand\\\">\\n              <img src=\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='36' height='36' viewBox='0 0 36 36'%3e %3cg transform='translate(18090 -8429)'%3e %3cg transform='translate(-18227.732 8408.374)'%3e %3cpath d='M168.632%2c47.566%2c155.742%2c26l-12.89%2c21.566%2c12.89-7.354Z' transform='translate(0)' fill='white'/%3e %3cpath d='M191.634%2c257.081l-10.639-5.607-10.639%2c5.607%2c10.639-3.464Z' transform='translate(-25.252 -207.321)' fill='white'/%3e %3c/g%3e %3c/g%3e%3c/svg%3e\\\" />\\n\\n              Defly Connect\\n            </div>\\n            \"} \\n\\n      <button\\n        id=\"defly-wallet-modal-header-close-button\"\\n        class=\"defly-wallet-button defly-wallet-modal-header__close-button\">\\n        <img\\n          class=\"defly-wallet-modal-header__close-button__close-icon\"\\n          src=\"${s()&&n.isMobile()?\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18 6L12 12M12 12L6 18M12 12L18 18M12 12L6 6' stroke='%23999999' stroke-width='2'/%3e%3c/svg%3e\":\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18 6L12 12M12 12L6 18M12 12L18 18M12 12L6 6' stroke='white' stroke-width='2'/%3e%3c/svg%3e\"}\"\\n        />\\n      </button>\\n    </div>\\n`;class m extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const n=document.createElement(\"style\");n.textContent=d,this.shadowRoot.append(r.content.cloneNode(!0),n),this.onClose()}}onClose(){var e;const t=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"defly-wallet-modal-header-close-button\"),o=this.getAttribute(\"modal-id\");t&&o===n.DEFLY_WALLET_REDIRECT_MODAL_ID&&t.addEventListener(\"click\",(()=>{n.removeModalWrapperFromDOM(n.DEFLY_WALLET_REDIRECT_MODAL_ID)}))}}var f=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='36' height='36' viewBox='0 0 36 36'%3e%3cg transform='translate(18090 -8429)'%3e%3cg transform='translate(-18090 8428)'%3e%3crect width='36' height='36' rx='18' transform='translate(0 1)'/%3e%3c/g%3e%3cg transform='translate(-18227.732 8408.374)'%3e%3cpath d='M168.632%2c47.566%2c155.742%2c26l-12.89%2c21.566%2c12.89-7.354Z' transform='translate(0)' fill='white'/%3e%3cpath d='M191.634%2c257.081l-10.639-5.607-10.639%2c5.607%2c10.639-3.464Z' transform='translate(-25.252 -207.321)' fill='white'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e\",w=\".defly-wallet-download-qr-code-wrapper {\\n  width: fit-content;\\n  margin: 0 auto;\\n  display: flex;\\n  background-color: #ffffff;\\n  box-shadow: 0 12px 32px rgba(26, 35, 91, 0.1);\\n  border-radius: 30px;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 15px;\\n}\\n\\n@media (max-width: 935px) {\\n  .defly-wallet-download-qr-code-wrapper {\\n    margin-top: 32px;\\n  }\\n}\";i(w);const x=n.isAndroid()?\"algorand://\":\"defly-wc://\",y=document.createElement(\"template\");y.innerHTML='\\n  <div id=\"defly-wallet-download-qr-code-wrapper\" class=\"defly-wallet-download-qr-code-wrapper\"></div>  \\n';class h extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const n=document.createElement(\"style\");n.textContent=w,this.shadowRoot.append(y.content.cloneNode(!0),n)}}connectedCallback(){var n;const e=new l.default({width:250,height:250,type:\"svg\",data:\"https://defly.app/\",image:f,dotsOptions:{color:\"#000\",type:\"dots\"},imageOptions:{crossOrigin:\"anonymous\",margin:10},cornersSquareOptions:{type:\"extra-rounded\"},cornersDotOptions:{type:\"dot\"}}),t=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"defly-wallet-download-qr-code-wrapper\");t&&e.append(t)}}var g=\".defly-wallet-connect-modal-desktop-mode {\\n  display: grid;\\n  grid-template-columns: 50% auto;\\n  gap: 24px;\\n  align-items: center;\\n}\\n.defly-wallet-connect-modal-desktop-mode--default .defly-wallet-connect-modal-desktop-mode__default-view {\\n  display: block;\\n}\\n.defly-wallet-connect-modal-desktop-mode--default .defly-wallet-connect-modal-desktop-mode__download-view {\\n  display: none;\\n}\\n.defly-wallet-connect-modal-desktop-mode--download .defly-wallet-connect-modal-desktop-mode__default-view {\\n  display: none;\\n}\\n.defly-wallet-connect-modal-desktop-mode--download .defly-wallet-connect-modal-desktop-mode__download-view {\\n  display: block;\\n}\\n.defly-wallet-connect-modal-desktop-mode--download .defly-wallet-connect-modal-desktop-mode__download-view .defly-wallet-connect-modal-download-defly-view__footer a {\\n  display: flex;\\n  cursor: pointer;\\n}\\n.defly-wallet-connect-modal-desktop-mode--select-account {\\n  width: 100%;\\n  height: 100%;\\n}\\n.defly-wallet-connect-modal-desktop-mode--select-account.defly-wallet-connect-modal-desktop-mode--default {\\n  overflow: hidden;\\n}\\n.defly-wallet-connect-modal-desktop-mode--select-account .defly-wallet-accordion {\\n  overflow: hidden;\\n}\\n.defly-wallet-connect-modal-desktop-mode--select-account #defly-wallet-iframe {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 3;\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 16px;\\n}\\n\\n.defly-wallet-connect-modal-desktop-mode__accordion__description,\\n.defly-wallet-connect-modal-desktop-mode__connect-button-wrapper {\\n  padding: 0 40px 20px 64px;\\n}\\n\\n.defly-wallet-connect-modal-desktop-mode__connect-button {\\n  display: block;\\n  width: 100%;\\n  height: 48px;\\n  border: unset;\\n  border-radius: 6px;\\n  background-color: #333333;\\n  color: white;\\n  cursor: pointer;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-size: 13px;\\n}\\n\\n.defly-wallet-connect-qr-code-wrapper {\\n  width: fit-content;\\n  padding: 10px;\\n  margin: 0 auto;\\n  display: flex;\\n  background-color: #ffffff;\\n  box-shadow: 0 12px 32px rgba(26, 35, 91, 0.1);\\n  border-radius: 30px;\\n}\\n\\n.defly-wallet-connect-qr-code-wrapper {\\n  margin-top: 30px;\\n  cursor: pointer;\\n}\\n\\n.defly-wallet-download-qr-code__image {\\n  width: 300px;\\n  height: 300px;\\n}\\n\\n.defly-wallet-accordion-copy-button {\\n  display: block;\\n  width: 100%;\\n  color: #696868;\\n  text-align: center;\\n  margin-top: 15px;\\n  cursor: pointer;\\n  font-size: 12px;\\n  line-height: 16px;\\n  letter-spacing: -0.1px;\\n  font-weight: 400;\\n  transition: all ease-in 0.2s;\\n}\\n.defly-wallet-accordion-copy-button:hover {\\n  color: #999999;\\n}\\n\\n.defly-wallet-connect-modal-desktop-mode__scan-defly-description {\\n  color: #999999;\\n  text-align: center;\\n  margin: 15px 0 12px;\\n  font-size: 22px;\\n  font-weight: 600;\\n  line-height: 26px;\\n  letter-spacing: 0.2px;\\n}\\n.defly-wallet-connect-modal-desktop-mode__scan-defly-description a {\\n  color: #999999;\\n}\\n.defly-wallet-connect-modal-desktop-mode__scan-defly-description a:hover {\\n  color: #696868;\\n}\\n\\n.defly-wallet-connect-modal-desktop-mode__download-defly-description {\\n  color: #696868;\\n  text-align: center;\\n  margin: 32px 0 12px;\\n  font-size: 13px;\\n  font-weight: 500;\\n  line-height: 20px;\\n  letter-spacing: -0.04px;\\n}\\n\\n.defly-wallet-connect-modal-download-defly-view__back-button {\\n  display: flex;\\n  align-items: center;\\n  gap: 16px;\\n  margin-bottom: 14px;\\n  padding: 12px 24px;\\n  color: #3c3c49;\\n  background-color: #ffffff;\\n  outline: none;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n  border: unset;\\n  border-radius: 24px;\\n  font-size: 14px;\\n  font-weight: 600;\\n  line-height: 24px;\\n  letter-spacing: -0.1px;\\n  cursor: pointer;\\n}\\n\\n.defly-wallet-connect-modal-download-defly-view {\\n  padding: 20px;\\n  background-color: #333333;\\n  border-radius: 30px;\\n}\\n\\n.defly-wallet-connect-modal-download-defly-view__title {\\n  margin-bottom: 15px;\\n  color: #999999;\\n  font-weight: 600;\\n  font-size: 22px;\\n  line-height: 24px;\\n  text-align: center;\\n  letter-spacing: 0.2px;\\n}\\n\\n.defly-wallet-connect-modal-download-defly-view__footer {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 12px;\\n  margin-top: 20px;\\n}\\n\\n.defly-wallet-connect-modal-download-defly-view__footer__button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 8px;\\n  padding: 8px 16px;\\n  color: #6a6a81;\\n  background-color: #ffffff;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n  text-decoration: none;\\n  border-radius: 12px;\\n  font-weight: 500;\\n  font-size: 13px;\\n  line-height: 200%;\\n  letter-spacing: -0.04px;\\n  cursor: pointer;\\n}\\n\\n#defly-wallet-iframe {\\n  width: 285px;\\n  height: 376px;\\n  margin: 0 auto;\\n  border: none;\\n}\\n\\n@media (max-width: 935px) {\\n  .defly-wallet-connect-modal-desktop-mode {\\n    grid-template-columns: 1fr;\\n    gap: 24px;\\n  }\\n  .defly-wallet-connect-qr-code-wrapper {\\n    margin-top: 16px;\\n  }\\n  .defly-wallet-connect-modal-download-defly-view {\\n    padding: 24px;\\n  }\\n  .defly-wallet-connect-modal-download-defly-view__footer {\\n    margin-top: 40px;\\n  }\\n}\";i(g);var u=\".defly-wallet-accordion-item:not(:last-of-type) {\\n  margin-bottom: 20px;\\n}\\n.defly-wallet-accordion-item:not(:last-of-type) .defly-wallet-accordion-panel {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n.defly-wallet-accordion-item .defly-wallet-accordion-item__content {\\n  height: 0;\\n  overflow: hidden;\\n  color: #696868;\\n  font-size: 12px;\\n  font-weight: 500;\\n  line-height: 16px;\\n  letter-spacing: -0.1px;\\n  transition: height ease-in 0.2s;\\n}\\n.defly-wallet-accordion-item--active .defly-wallet-accordion-item__content {\\n  height: 494px;\\n  transition: height ease-in 0.2s;\\n}\\n\\n.defly-wallet-accordion-toggle {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  gap: 16px;\\n  padding: 12px 24px;\\n  color: #2c3559;\\n  background-color: #ffffff;\\n  border: none;\\n  border-radius: 24px;\\n  outline: none;\\n  cursor: pointer;\\n  font-size: 16px;\\n  line-height: 18px;\\n  letter-spacing: -0.1px;\\n  font-weight: 600;\\n  transition: all ease-in 0.2s;\\n}\\n.defly-wallet-accordion-toggle__text, .defly-wallet-accordion-toggle__content-with-label__text {\\n  color: #6a6a81;\\n}\\n\\n.defly-wallet-accordion-toggle__bold-color {\\n  color: #3c3c49;\\n  font-weight: 600;\\n}\\n\\n.defly-wallet-accordion-toggle__content-with-label {\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n}\\n\\n.defly-wallet-accordion-toggle__label {\\n  padding: 4px 9px;\\n  color: #00b19e;\\n  background: rgba(0, 177, 158, 0.08);\\n  border-radius: 12px;\\n  font-size: 11px;\\n  font-weight: 600;\\n  line-height: 18px;\\n  letter-spacing: 0.01px;\\n}\\n\\n.defly-wallet-accordion-toggle__button {\\n  position: absolute;\\n  z-index: 2;\\n  width: 100%;\\n  height: 100%;\\n  background: transparent;\\n  box-shadow: none;\\n  outline: none;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n@media (max-width: 935px) {\\n  .defly-wallet-accordion-toggle {\\n    font-size: 14px;\\n    font-weight: 500;\\n    line-height: 24px;\\n    letter-spacing: -0.1px;\\n  }\\n}\";i(u);const _=document.createElement(\"template\"),k=document.createElement(\"style\"),v=document.createElement(\"style\");k.textContent=g,v.textContent=u;_.innerHTML=\"\\n  <div id=\\\"defly-wallet-connect-modal-desktop-mode\\\" class=\\\"defly-wallet-connect-modal-desktop-mode defly-wallet-connect-modal-desktop-mode--default\\\">\\n      <defly-wallet-connect-modal-information-section></defly-wallet-connect-modal-information-section>\\n\\n      <div class=\\\"defly-wallet-connect-modal-desktop-mode__default-view\\\">\\n\\n        <div class=\\\"defly-wallet-accordion-item defly-wallet-accordion-item--active\\\">\\n\\n          <div class=\\\"defly-wallet-accordion-item__content\\\">\\n            <div id=\\\"defly-wallet-connect-modal-connect-qr-code\\\" class=\\\"defly-wallet-connect-qr-code-wrapper f_copy-button\\\"></div>\\n\\n            <div class=\\\"defly-wallet-accordion-copy-button f_copy-button\\\">Tap to copy</div>\\n            <p class=\\\"defly-wallet-connect-modal-desktop-mode__scan-defly-description\\\">\\n                Scan with <a href=\\\"https://defly.app/\\\">Defly Wallet</a>\\n            </p>\\n\\n            \\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"defly-wallet-connect-modal-desktop-mode__download-view\\\">\\n        <button id=\\\"defly-wallet-connect-modal-download-defly-view-back-button\\\" class=\\\"defly-wallet-connect-modal-download-defly-view__back-button\\\">\\n          <img src=\\\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M10.7071 6.29387C11.0976 6.68439 11.0976 7.31756 10.7071 7.70808L7.41421 11.001L19 11.001C19.5523 11.001 20 11.4487 20 12.001C20 12.5533 19.5523 13.001 19 13.001L7.41421 13.001L10.7071 16.2939C11.0976 16.6844 11.0976 17.3176 10.7071 17.7081C10.3166 18.0986 9.68342 18.0986 9.29289 17.7081L4.29289 12.7081C4.10536 12.5205 4 12.2662 4 12.001C4 11.7358 4.10536 11.4814 4.29289 11.2939L9.29289 6.29387C9.68342 5.90335 10.3166 5.90335 10.7071 6.29387Z' fill='%233C3C49'/%3e%3c/svg%3e\\\" alt=\\\"Back Arrow\\\" /> Back\\n        </button>\\n\\n        <div class=\\\"defly-wallet-connect-modal-download-defly-view\\\">\\n          <h1 class=\\\"defly-wallet-connect-modal-download-defly-view__title\\\">\\n            Download Defly Wallet\\n          </h1>\\n\\n          <defly-wallet-download-qr-code></defly-wallet-download-qr-code>\\n\\n          <div class=\\\"defly-wallet-connect-modal-download-defly-view__footer\\\">\\n            <a\\n              href=\\\"https://apps.apple.com/us/app/defly/id1602672723\\\"\\n              target=\\\"_blank\\\"\\n              rel=\\\"noopener noreferrer\\\">\\n              <img src=\\\"data:image/svg+xml,%3csvg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='40' height='40' rx='12' fill='black'/%3e%3cpath d='M25.6308 20.3011C25.6416 19.4664 25.8633 18.6481 26.2753 17.9221C26.6873 17.1962 27.2763 16.5863 27.9873 16.1491C27.5356 15.5039 26.9397 14.973 26.2469 14.5984C25.554 14.2239 24.7834 14.016 23.9963 13.9914C22.317 13.8151 20.6891 14.9962 19.8333 14.9962C18.9611 14.9962 17.6436 14.0089 16.2249 14.0381C15.3072 14.0677 14.4128 14.3346 13.6289 14.8126C12.8451 15.2906 12.1984 15.9636 11.7519 16.7659C9.81789 20.1144 11.2605 25.0354 13.1132 27.742C14.0401 29.0674 15.1233 30.5478 16.5408 30.4953C17.9278 30.4378 18.4458 29.6108 20.1202 29.6108C21.779 29.6108 22.265 30.4953 23.7112 30.4619C25.1995 30.4378 26.1372 29.1307 27.0316 27.7928C27.6976 26.8484 28.2101 25.8047 28.55 24.7003C27.6853 24.3345 26.9474 23.7224 26.4283 22.9401C25.9092 22.1578 25.6318 21.2399 25.6308 20.3011ZM22.8993 12.2113C23.7108 11.2371 24.1106 9.98492 24.0138 8.7207C22.7739 8.85092 21.6287 9.44347 20.8062 10.3803C20.404 10.838 20.096 11.3704 19.8998 11.9472C19.7035 12.5239 19.6229 13.1337 19.6625 13.7417C20.2826 13.7481 20.8961 13.6137 21.4568 13.3486C22.0175 13.0835 22.5107 12.6946 22.8993 12.2113Z' fill='white'/%3e%3c/svg%3e\\\" alt=\\\"App Store icon\\\" />\\n            </a>\\n\\n            <a\\n              href=\\\"https://play.google.com/store/apps/details?id=io.blockshake.defly.app\\\"\\n              target=\\\"_blank\\\"\\n              rel=\\\"noopener noreferrer\\\">\\n              <img src=\\\"data:image/svg+xml,%3csvg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='40' height='40' rx='12' fill='black'/%3e%3cpath d='M12.41 9.7719C12.1334 10.0219 11.9683 10.4388 11.9683 10.9922V10.8671V29.1294V29.0091C11.9683 29.5202 12.1099 29.9149 12.3497 30.169L12.4109 30.2277V30.228C12.6051 30.4035 12.854 30.4966 13.1393 30.4963C13.418 30.4963 13.7316 30.4073 14.0626 30.2194L26.0264 23.4107L30.1359 21.0717C30.6578 20.7748 30.9508 20.3917 30.9998 20.0014V19.9998C30.9508 19.6087 30.6578 19.2259 30.1359 18.9289L26.0261 16.5902L14.0627 9.78154C13.731 9.59325 13.4171 9.50391 13.1376 9.50391C12.8527 9.50391 12.6041 9.59677 12.41 9.7719H12.41Z' fill='%2300C1FF'/%3e%3cpath d='M12.411 30.2285L12.3497 30.1698C12.1099 29.9157 11.9683 29.5209 11.9683 29.0098V29.1301V10.8724V10.993C11.9683 10.4396 12.1334 10.0226 12.41 9.77268L22.622 20.0009L12.411 30.2285Z' fill='url(%23paint0_linear_173_14441)'/%3e%3cpath d='M26.0256 23.4102L22.6211 19.9996L26.0253 16.5896L30.1351 18.9283C30.657 19.2253 30.95 19.6081 30.9989 19.9993V20.0008C30.95 20.3911 30.657 20.7742 30.1351 21.0712L26.0256 23.4101' fill='url(%23paint1_linear_173_14441)'/%3e%3cpath d='M13.1374 30.4961C12.8522 30.4964 12.6033 30.4032 12.4092 30.2277V30.2275L22.6202 19.9999L26.0246 23.4104L14.0608 30.2191C13.7298 30.4071 13.4162 30.4961 13.1374 30.4961Z' fill='url(%23paint2_linear_173_14441)'/%3e%3cpath d='M22.6212 20.002L12.4092 9.7737C12.6033 9.59858 12.8519 9.50571 13.1368 9.50571C13.4163 9.50571 13.7302 9.59501 14.0618 9.78335L26.0253 16.592L22.6212 20.002' fill='url(%23paint3_linear_173_14441)'/%3e%3cpath d='M13.1394 30.6172C12.8542 30.6172 12.6049 30.524 12.4108 30.3486L12.4105 30.3489C12.4097 30.3481 12.4088 30.3473 12.4079 30.3466L12.3548 30.2947C12.3531 30.2931 12.3516 30.2912 12.3496 30.2893L12.4108 30.2279C12.6049 30.4034 12.8538 30.4966 13.1392 30.4962C13.4179 30.4962 13.7315 30.4073 14.0625 30.2193L26.0263 23.4106L26.1029 23.4874L26.0253 23.5316L14.0625 30.3398C13.7608 30.5111 13.4739 30.6004 13.2147 30.6153C13.1896 30.6165 13.1645 30.6171 13.1394 30.6172' fill='url(%23paint4_linear_173_14441)'/%3e%3cpath d='M12.3497 30.2891C12.1099 30.0349 11.9683 29.6406 11.9683 29.1292V29.0089C11.9683 29.52 12.1099 29.9146 12.3497 30.1688L12.4109 30.2275L12.3497 30.2891Z' fill='url(%23paint5_linear_173_14441)'/%3e%3cpath d='M26.1025 23.4882L26.0259 23.4114L30.1349 21.0727C30.6568 20.7758 30.9498 20.3927 30.9987 20.0025C30.9987 20.1457 30.9668 20.2889 30.9035 20.4282C30.7756 20.7091 30.5194 20.9744 30.135 21.1934L26.1025 23.4883' fill='url(%23paint6_linear_173_14441)'/%3e%3cpath d='M30.9991 20C30.9501 19.6089 30.6571 19.2261 30.1353 18.9291L26.0259 16.5907L26.1025 16.5139H26.1029L30.1353 18.8088C30.7106 19.1365 30.9987 19.5682 30.9991 20Z' fill='url(%23paint7_linear_173_14441)'/%3e%3cpath d='M11.9683 10.9922V10.8661C11.9683 10.8206 11.9695 10.7761 11.9718 10.7329V10.7309C11.9718 10.7303 11.9718 10.7297 11.972 10.729V10.7242C11.9969 10.284 12.1334 9.94066 12.3497 9.71139L12.4099 9.77198C12.1334 10.0219 11.9683 10.4388 11.9683 10.9922Z' fill='url(%23paint8_linear_173_14441)'/%3e%3cpath d='M26.026 16.5898L14.0625 9.78115C13.7308 9.59285 13.417 9.50355 13.1375 9.50355C12.8525 9.50355 12.6039 9.59642 12.4099 9.77154L12.3496 9.71091C12.3684 9.69096 12.388 9.67172 12.4082 9.65322C12.4089 9.65255 12.4099 9.65188 12.4105 9.65125C12.6031 9.47747 12.849 9.3846 13.1314 9.38293H13.1375C13.417 9.38293 13.7308 9.47227 14.0625 9.66064L26.1029 16.5128L26.1026 16.513L26.026 16.5898Z' fill='url(%23paint9_linear_173_14441)'/%3e%3cdefs%3e%3clinearGradient id='paint0_linear_173_14441' x1='18.4943' y1='10.6794' x2='9.69389' y2='19.494' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2300A0FF'/%3e%3cstop offset='0.00657' stop-color='%2300A1FF'/%3e%3cstop offset='0.2601' stop-color='%2300BEFF'/%3e%3cstop offset='0.5122' stop-color='%2300D2FF'/%3e%3cstop offset='0.7604' stop-color='%2300DFFF'/%3e%3cstop offset='1' stop-color='%2300E3FF'/%3e%3c/linearGradient%3e%3clinearGradient id='paint1_linear_173_14441' x1='31.6348' y1='19.9407' x2='11.691' y2='19.9407' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFE000'/%3e%3cstop offset='0.4087' stop-color='%23FFBD00'/%3e%3cstop offset='0.7754' stop-color='orange'/%3e%3cstop offset='1' stop-color='%23FF9C00'/%3e%3c/linearGradient%3e%3clinearGradient id='paint2_linear_173_14441' x1='24.2172' y1='23.2425' x2='9.30414' y2='38.0705' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FF3A44'/%3e%3cstop offset='1' stop-color='%23C31162'/%3e%3c/linearGradient%3e%3clinearGradient id='paint3_linear_173_14441' x1='9.77725' y1='8.25731' x2='16.4237' y2='14.876' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2332A071'/%3e%3cstop offset='0.0685' stop-color='%232DA771'/%3e%3cstop offset='0.4762' stop-color='%2315CF74'/%3e%3cstop offset='0.8009' stop-color='%2306E775'/%3e%3cstop offset='1' stop-color='%2300F076'/%3e%3c/linearGradient%3e%3clinearGradient id='paint4_linear_173_14441' x1='24.2114' y1='25.6084' x2='12.2683' y2='37.5709' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23CC2E36'/%3e%3cstop offset='1' stop-color='%239C0E4E'/%3e%3c/linearGradient%3e%3clinearGradient id='paint5_linear_173_14441' x1='13.3285' y1='10.6804' x2='5.57625' y2='18.4453' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23008DE0'/%3e%3cstop offset='0.00657' stop-color='%23008DE0'/%3e%3cstop offset='0.2601' stop-color='%2300A7E0'/%3e%3cstop offset='0.5122' stop-color='%2300B8E0'/%3e%3cstop offset='0.7604' stop-color='%2300C4E0'/%3e%3cstop offset='1' stop-color='%2300C7E0'/%3e%3c/linearGradient%3e%3clinearGradient id='paint6_linear_173_14441' x1='31.6346' y1='20.0018' x2='11.6929' y2='20.0018' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23E0C500'/%3e%3cstop offset='0.4087' stop-color='%23E0A600'/%3e%3cstop offset='0.7754' stop-color='%23E09100'/%3e%3cstop offset='1' stop-color='%23E08900'/%3e%3c/linearGradient%3e%3clinearGradient id='paint7_linear_173_14441' x1='31.6349' y1='20.0008' x2='11.6933' y2='20.0008' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFE840'/%3e%3cstop offset='0.4087' stop-color='%23FFCE40'/%3e%3cstop offset='0.7754' stop-color='%23FFBC40'/%3e%3cstop offset='1' stop-color='%23FFB540'/%3e%3c/linearGradient%3e%3clinearGradient id='paint8_linear_173_14441' x1='13.3201' y1='10.6927' x2='5.8533' y2='17.8475' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2340B8FF'/%3e%3cstop offset='0.00657' stop-color='%2340B9FF'/%3e%3cstop offset='0.2601' stop-color='%2340CEFF'/%3e%3cstop offset='0.5122' stop-color='%2340DDFF'/%3e%3cstop offset='0.7604' stop-color='%2340E7FF'/%3e%3cstop offset='1' stop-color='%2340EAFF'/%3e%3c/linearGradient%3e%3clinearGradient id='paint9_linear_173_14441' x1='9.76302' y1='10.4182' x2='15.0961' y2='15.76' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2365B895'/%3e%3cstop offset='0.0685' stop-color='%2362BD95'/%3e%3cstop offset='0.4762' stop-color='%2350DB97'/%3e%3cstop offset='0.8009' stop-color='%2344ED98'/%3e%3cstop offset='1' stop-color='%2340F498'/%3e%3c/linearGradient%3e%3c/defs%3e%3c/svg%3e\\\" alt=\\\"Play Store icon\\\" />\\n            </a>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  \";class b extends HTMLElement{constructor(){super(),this.attachShadow({mode:\"open\"}),this.shadowRoot&&(this.shadowRoot.append(_.content.cloneNode(!0),k,v),this.shadowRoot.addEventListener(\"click\",(n=>{this.handleAccordion(n)})))}connectedCallback(){this.handleChangeView()}handleChangeView(){var n,e,t;const o=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"defly-wallet-connect-modal-desktop-mode-download-defly-button\"),l=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"defly-wallet-connect-modal-download-defly-view-back-button\"),a=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelectorAll(\".f_copy-button\");o&&o.addEventListener(\"click\",(()=>{this.onClickDownload()})),l&&l.addEventListener(\"click\",(()=>{this.onClickBack()})),a&&a.length&&a.forEach((n=>{n.addEventListener(\"click\",(()=>{this.onClickCopy()}))})),this.renderQRCode()}handleAccordion(n){var e,t;if(n.target instanceof Element){if(!n.target.classList.contains(\"defly-wallet-accordion-toggle__button\"))return;if(this.shadowRoot&&(null===(e=n.target.parentElement)||void 0===e?void 0:e.parentElement)){const e=null===(t=n.target.parentElement)||void 0===t?void 0:t.parentElement;if(!e)return;if(e.classList.contains(\"defly-wallet-accordion-item--active\"))return;const o=this.shadowRoot.querySelectorAll(\".defly-wallet-accordion-item.defly-wallet-accordion-item--active\");for(let n=0;n<o.length;n++)o[n].classList.remove(\"defly-wallet-accordion-item--active\");e.classList.toggle(\"defly-wallet-accordion-item--active\")}}}renderQRCode(){var n;const e=this.getAttribute(\"uri\");if(e){const t=new l.default({width:330,height:330,type:\"svg\",data:e,image:f,dotsOptions:{color:\"#000\",type:\"dots\"},imageOptions:{imageSize:.21,crossOrigin:\"anonymous\"},cornersSquareOptions:{type:\"extra-rounded\"},cornersDotOptions:{type:\"dot\"}}),o=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"defly-wallet-connect-modal-connect-qr-code\");o&&t.append(o)}}onClickDownload(){if(this.shadowRoot){const n=this.shadowRoot.getElementById(\"defly-wallet-connect-modal-desktop-mode\");n&&(n.classList.remove(\"defly-wallet-connect-modal-desktop-mode--default\"),n.classList.add(\"defly-wallet-connect-modal-desktop-mode--download\"))}}onClickCopy(){if(this.shadowRoot){const n=this.getAttribute(\"uri\");if(n){const e=document.createElement(\"textarea\");e.style.position=\"fixed\",e.style.left=\"0\",e.style.top=\"0\",e.style.opacity=\"0\",e.value=n,document.body.appendChild(e),e.focus(),e.select(),document.execCommand(\"copy\"),document.body.removeChild(e)}}}onClickBack(){if(this.shadowRoot){const n=this.shadowRoot.getElementById(\"defly-wallet-connect-modal-desktop-mode\");n&&(n.classList.add(\"defly-wallet-connect-modal-desktop-mode--default\"),n.classList.remove(\"defly-wallet-connect-modal-desktop-mode--download\"))}}}function E(e=!0){let t=x;const o=n.detectBrowser();return e&&o&&(t=`${t}?browser=${encodeURIComponent(o)}`),t}var C=\".defly-wallet-connect-modal-touch-screen-mode {\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  gap: 46px;\\n  padding: 4px;\\n}\\n\\n.defly-wallet-connect-modal-touch-screen-mode--pending-message-view {\\n  gap: 56px;\\n  grid-template-rows: auto 48px;\\n  height: 100%;\\n  padding-bottom: 70px;\\n}\\n\\n.defly-wallet-connect-modal-touch-screen-mode__launch-defly-wallet-button,\\n.defly-wallet-connect-modal-touch-screen-mode__install-defly-wallet-button {\\n  display: block;\\n  padding: 14px;\\n  border-radius: 12px;\\n  text-decoration: none;\\n  text-align: center;\\n  font-size: 15px;\\n  line-height: 26px;\\n  letter-spacing: -0.09px;\\n  font-weight: 500;\\n  margin: 0 40px;\\n}\\n\\n.defly-wallet-connect-modal-touch-screen-mode__launch-defly-wallet-button {\\n  margin-bottom: 45px;\\n  background: linear-gradient(90deg, #3E38B9, #413AAA);\\n  color: #ffffff;\\n}\\n\\n.defly-wallet-connect-modal-touch-screen-mode__install-defly-wallet-button {\\n  margin-bottom: 20px;\\n  background-color: #494949;\\n  color: #ffffff;\\n}\\n\\n.defly-wallet-connect-modal-touch-screen-mode__new-to-defly-box {\\n  position: relative;\\n  margin-bottom: 5px;\\n}\\n\\n.defly-wallet-connect-modal-touch-screen-mode__new-to-defly-box__text {\\n  color: #999999;\\n  font-size: 16px;\\n  font-weight: 500;\\n  line-height: 24px;\\n  letter-spacing: -0.04px;\\n  text-align: center;\\n}\\n.defly-wallet-connect-modal-touch-screen-mode__new-to-defly-box__text a {\\n  color: inherit;\\n}\";i(C);const L=document.createElement(\"template\");class D extends HTMLElement{constructor(){var e;if(super(),this.attachShadow({mode:\"open\"}),L.innerHTML='\\n  <div class=\"defly-wallet-connect-modal-touch-screen-mode\">\\n    <defly-wallet-connect-modal-information-section></defly-wallet-connect-modal-information-section>\\n\\n    <div>\\n      <a\\n        id=\"defly-wallet-connect-modal-touch-screen-mode-launch-defly-wallet-button\"\\n        class=\"defly-wallet-connect-modal-touch-screen-mode__launch-defly-wallet-button\"\\n        rel=\"noopener noreferrer\"\\n        target=\"_blank\">\\n        Launch Defly Wallet\\n      </a>\\n\\n      <div\\n        class=\"defly-wallet-connect-modal-touch-screen-mode__new-to-defly-box\">\\n        <p class=\"defly-wallet-connect-modal-touch-screen-mode__new-to-defly-box__text\">\\n          New to <a href=\"https://defly.app/\">Defly Wallet</a>?\\n        </p>\\n      </div>\\n\\n      <a\\n        href=\"https://defly.app/download.html\"\\n        class=\"defly-wallet-connect-modal-touch-screen-mode__install-defly-wallet-button\"\\n        rel=\"noopener noreferrer\"\\n        target=\"_blank\">\\n        Install Defly Wallet\\n      </a>\\n    </div>\\n  </div>\\n',this.shadowRoot){const t=document.createElement(\"style\");t.textContent=C,this.shadowRoot.append(L.content.cloneNode(!0),t);const o=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"defly-wallet-connect-modal-touch-screen-mode-launch-defly-wallet-button\"),l=this.getAttribute(\"uri\");o&&l&&(o.setAttribute(\"href\",function(e){let t=E(!1);n.isIOS()&&!t.includes(\"-wc\")&&(t=t.replace(\"://\",\"-wc://\"));let o=`${t}wc?uri=${encodeURIComponent(e)}`;const l=n.detectBrowser();return n.isAndroid()&&(o=e),l&&(o=`${o}&browser=${encodeURIComponent(l)}`),o}(l)),o.addEventListener(\"click\",(()=>{this.onClickLaunch()})))}}onClickLaunch(){if(L.innerHTML=`\\n    <div class=\"defly-wallet-connect-modal-touch-screen-mode defly-wallet-connect-modal-touch-screen-mode--pending-message-view\">\\n      <defly-wallet-connect-modal-pending-message-section should-use-sound=\"${this.getAttribute(\"should-use-sound\")}\"></defly-wallet-connect-modal-pending-message-section>\\n    </div>\\n  `,this.shadowRoot){const n=document.createElement(\"style\");n.textContent=C,this.shadowRoot.innerHTML=\"\",this.shadowRoot.append(L.content.cloneNode(!0),n)}}}var A='@import url(\"https://fonts.googleapis.com/css2?family=Spline+Sans:wght@400;500;600&display=swap\");\\n@font-face {\\n  font-family: \"PP Right Grotesk\";\\n  src: url(\"../asset/fonts/pp-right-grotesk-wide-black.woff2\") format(\"woff2\");\\n  font-weight: 900;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n.defly-wallet-modal {\\n  --defly-wallet-modal-font-family: \"Spline Sans\", sans-serif;\\n  --defly-wallet-connect-modal-headline-family: \"PP Right Grotesk\", sans-serif;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 999999;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.7);\\n}\\n.defly-wallet-modal--select-account .defly-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n}\\n.defly-wallet-modal--mobile .defly-wallet-modal__body {\\n  top: 40px;\\n  bottom: 0;\\n  left: 20px;\\n  width: calc(100% - 40px);\\n  max-width: unset;\\n  height: calc(100 * var(--vh));\\n  padding: 20px;\\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\\n  border-radius: 20px 20px 0px 0px;\\n  animation: 0.3s DeflyWalletConnectMobileSlideIn ease-out;\\n  overflow-y: auto;\\n  transform: unset;\\n}\\n.defly-wallet-modal--mobile .defly-wallet-modal__body::before {\\n  background-image: unset;\\n}\\n.defly-wallet-modal * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.defly-wallet-modal ul,\\n.defly-wallet-modal ol,\\n.defly-wallet-modal li {\\n  list-style-type: none;\\n}\\n\\n.defly-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.defly-wallet-modal__logo img {\\n  display: block;\\n  width: 32px;\\n}\\n\\n.defly-wallet-modal__body {\\n  position: relative;\\n  top: 50%;\\n  left: 50%;\\n  width: 979px;\\n  max-width: calc(100vw - 80px);\\n  padding: 28px;\\n  background-color: #131313;\\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\\n  border-radius: 40px;\\n  animation: 0.3s DeflyWalletConnectSlideIn ease-out;\\n  transform: translate(-50%, -50%);\\n}\\n\\n@media (max-width: 935px) {\\n  .defly-wallet-modal--desktop .defly-wallet-modal__body {\\n    width: 100%;\\n    max-width: calc(100vw - 32px);\\n    padding: 24px;\\n  }\\n}\\n@keyframes DeflyWalletConnectSlideIn {\\n  0% {\\n    opacity: 0;\\n    transform: translate(-50%, calc(-50% + 24px));\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translate(-50%, -50%);\\n  }\\n}\\n@keyframes DeflyWalletConnectMobileSlideIn {\\n  0% {\\n    top: 30%;\\n    opacity: 0;\\n  }\\n  100% {\\n    top: 40px;\\n    opacity: 1;\\n  }\\n}';i(A);const S=document.createElement(\"template\"),M=n.isMobile()?`${n.DEFLY_WALLET_MODAL_CLASSNAME} ${n.DEFLY_WALLET_MODAL_CLASSNAME}--mobile`:`${n.DEFLY_WALLET_MODAL_CLASSNAME} ${n.DEFLY_WALLET_MODAL_CLASSNAME}--desktop`;class B extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const e=document.createElement(\"style\");e.textContent=A,s()&&n.isMobile()?(S.innerHTML=`\\n        <div class=\"${M}\">\\n          <div class=\"defly-wallet-modal__body\" part=\"body\">\\n            <defly-wallet-modal-header modal-id=\"${n.DEFLY_WALLET_CONNECT_MODAL_ID}\"></defly-wallet-modal-header/>\\n      \\n            <defly-wallet-modal-touch-screen-mode uri=\"${this.getAttribute(\"uri\")}\" should-use-sound=\"${this.getAttribute(\"should-use-sound\")}\"></defly-wallet-modal-touch-screen-mode>\\n          </div>\\n        </div>\\n      `,this.shadowRoot.append(S.content.cloneNode(!0),e)):(S.innerHTML=`\\n          <div class=\"${M}\">\\n            <div class=\"defly-wallet-modal__body\">\\n              <defly-wallet-modal-header modal-id=\"${n.DEFLY_WALLET_CONNECT_MODAL_ID}\"></defly-wallet-modal-header/>\\n        \\n              <defly-wallet-modal-desktop-mode id=\"defly-wallet-modal-desktop-mode\" uri=\"${this.getAttribute(\"uri\")}\">\\n              </defly-wallet-modal-desktop-mode>\\n            </div>\\n          </div>\\n        `,this.shadowRoot.append(S.content.cloneNode(!0),e))}}}var F='@import url(\"https://fonts.googleapis.com/css2?family=Spline+Sans:wght@400;500;600&display=swap\");\\n@font-face {\\n  font-family: \"PP Right Grotesk\";\\n  src: url(\"../asset/fonts/pp-right-grotesk-wide-black.woff2\") format(\"woff2\");\\n  font-weight: 900;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n.defly-wallet-modal {\\n  --defly-wallet-modal-font-family: \"Spline Sans\", sans-serif;\\n  --defly-wallet-connect-modal-headline-family: \"PP Right Grotesk\", sans-serif;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 999999;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.7);\\n}\\n.defly-wallet-modal--select-account .defly-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n}\\n.defly-wallet-modal--mobile .defly-wallet-modal__body {\\n  top: 40px;\\n  bottom: 0;\\n  left: 20px;\\n  width: calc(100% - 40px);\\n  max-width: unset;\\n  height: calc(100 * var(--vh));\\n  padding: 20px;\\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\\n  border-radius: 20px 20px 0px 0px;\\n  animation: 0.3s DeflyWalletConnectMobileSlideIn ease-out;\\n  overflow-y: auto;\\n  transform: unset;\\n}\\n.defly-wallet-modal--mobile .defly-wallet-modal__body::before {\\n  background-image: unset;\\n}\\n.defly-wallet-modal * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.defly-wallet-modal ul,\\n.defly-wallet-modal ol,\\n.defly-wallet-modal li {\\n  list-style-type: none;\\n}\\n\\n.defly-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.defly-wallet-modal__logo img {\\n  display: block;\\n  width: 32px;\\n}\\n\\n.defly-wallet-modal__body {\\n  position: relative;\\n  top: 50%;\\n  left: 50%;\\n  width: 979px;\\n  max-width: calc(100vw - 80px);\\n  padding: 28px;\\n  background-color: #131313;\\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\\n  border-radius: 40px;\\n  animation: 0.3s DeflyWalletConnectSlideIn ease-out;\\n  transform: translate(-50%, -50%);\\n}\\n\\n@media (max-width: 935px) {\\n  .defly-wallet-modal--desktop .defly-wallet-modal__body {\\n    width: 100%;\\n    max-width: calc(100vw - 32px);\\n    padding: 24px;\\n  }\\n}\\n@keyframes DeflyWalletConnectSlideIn {\\n  0% {\\n    opacity: 0;\\n    transform: translate(-50%, calc(-50% + 24px));\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translate(-50%, -50%);\\n  }\\n}\\n@keyframes DeflyWalletConnectMobileSlideIn {\\n  0% {\\n    top: 30%;\\n    opacity: 0;\\n  }\\n  100% {\\n    top: 40px;\\n    opacity: 1;\\n  }\\n}\\n.defly-wallet-redirect-modal {\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  gap: 56px;\\n  grid-template-rows: auto 48px;\\n  height: 100%;\\n  padding: 4px;\\n  padding-bottom: 70px;\\n}\\n\\n.defly-wallet-redirect-modal__content {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n}\\n\\n.defly-wallet-redirect-modal__content__title {\\n  margin: 20px 0 8px;\\n  color: #3c3c49;\\n  font-size: 18px;\\n  font-weight: 600;\\n  line-height: 22px;\\n  letter-spacing: -0.26px;\\n}\\n\\n.defly-wallet-redirect-modal__content__description,\\n.defly-wallet-redirect-modal__content__install-defly-text {\\n  color: #3c3c49;\\n  max-width: 271px;\\n  font-size: 14px;\\n  font-weight: 400;\\n  line-height: 24px;\\n  letter-spacing: -0.09px;\\n  text-align: center;\\n}\\n\\n.defly-wallet-redirect-modal__content__description {\\n  margin-bottom: 24px;\\n}\\n\\n.defly-wallet-redirect-modal__content__install-defly-text__link {\\n  color: #6b46fe;\\n  font-size: 14px;\\n  font-weight: 400;\\n  line-height: 24px;\\n  letter-spacing: -0.09px;\\n  text-align: center;\\n}\\n\\n.defly-wallet-redirect-modal__launch-defly-wallet-button {\\n  display: block;\\n  padding: 14px;\\n  color: #ffffff;\\n  background-color: #6b46fe;\\n  border-radius: 12px;\\n  text-decoration: none;\\n  text-align: center;\\n  font-size: 14px;\\n  line-height: 20px;\\n  letter-spacing: -0.09px;\\n  font-weight: 500;\\n}';i(F);const R=document.createElement(\"template\");R.innerHTML=`\\n  <div class=\"defly-wallet-modal defly-wallet-modal--mobile\">\\n    <div class=\"defly-wallet-modal__body\">\\n    <defly-wallet-modal-header modal-id=\"${n.DEFLY_WALLET_REDIRECT_MODAL_ID}\"></pera-wallet-modal-header/>\\n      <div class=\"defly-wallet-redirect-modal\">\\n        <div class=\"defly-wallet-redirect-modal__content\">\\n          <img src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='120' height='38' viewBox='0 0 120 38'%3e %3cdefs%3e %3cclipPath id='a'%3e %3crect width='120' height='38' fill='white'/%3e %3c/clipPath%3e %3c/defs%3e %3cg transform='translate(18090 -8428)'%3e %3cg transform='translate(-18090 8428)' clip-path='url(%23a)'%3e %3crect width='36' height='36' rx='7.768' transform='translate(0 1)' fill='%23222222'/%3e %3cpath d='M112.25%2c37h-11.5A5.976%2c5.976%2c0%2c0%2c1%2c95%2c30.818V9.182A5.976%2c5.976%2c0%2c0%2c1%2c100.75%2c3h11.5A5.976%2c5.976%2c0%2c0%2c1%2c118%2c9.182V30.818A5.976%2c5.976%2c0%2c0%2c1%2c112.25%2c37Z' transform='translate(0 -1)' fill='rgba(107%2c70%2c254%2c0.1)'/%3e %3cpath d='M112.25%2c38.5h-11.5a7.484%2c7.484%2c0%2c0%2c1-7.25-7.682V9.182A7.484%2c7.484%2c0%2c0%2c1%2c100.75%2c1.5h11.5a7.484%2c7.484%2c0%2c0%2c1%2c7.25%2c7.682V30.818A7.484%2c7.484%2c0%2c0%2c1%2c112.25%2c38.5Zm-11.5-34A4.487%2c4.487%2c0%2c0%2c0%2c96.5%2c9.182V30.818a4.487%2c4.487%2c0%2c0%2c0%2c4.25%2c4.682h11.5a4.487%2c4.487%2c0%2c0%2c0%2c4.25-4.682V9.182A4.487%2c4.487%2c0%2c0%2c0%2c112.25%2c4.5Z' transform='translate(0 -1)' fill='white'/%3e %3cpath d='M78.927%2c16.594H52v-3H71.683l-2.534-2.534L71.27%2c8.939Z' fill='white'/%3e %3cpath d='M59.73%2c30.655%2c52.073%2c23H79v3H59.317l2.534%2c2.534Z' fill='white'/%3e %3cpath d='M109.565%2c30.175h-5.826a1.5%2c1.5%2c0%2c1%2c1%2c0-3h5.826a1.5%2c1.5%2c0%2c0%2c1%2c0%2c3Z' fill='white'/%3e %3c/g%3e %3cg transform='translate(-18227.544 8408.866)'%3e %3cpath d='M168.632%2c47.566%2c155.742%2c26l-12.89%2c21.566%2c12.89-7.354Z' transform='translate(0)' fill='white'/%3e %3cpath d='M191.634%2c257.081l-10.639-5.607-10.639%2c5.607%2c10.639-3.464Z' transform='translate(-25.252 -207.321)' fill='white'/%3e %3c/g%3e %3c/g%3e%3c/svg%3e\" />\\n\\n          <h1 class=\"defly-wallet-redirect-modal__content__title\">\\n            Can't Launch Defly\\n          </h1>\\n\\n          <p class=\"defly-wallet-redirect-modal__content__description\">\\n            We couldn't redirect you to Defly Wallet automatically. Please try again.\\n          </p>\\n\\n          <p class=\"defly-wallet-redirect-modal__content__install-defly-text\">\\n            Don't have Defly Wallet installed yet?\\n            <br />\\n            \\n            <a\\n              id=\"defly-wallet-redirect-modal-download-defly-link\"\\n              class=\"defly-wallet-redirect-modal__content__install-defly-text__link\"\\n              href=\"https://deflywallet.app/download/\"\\n              rel=\"noopener noreferrer\"\\n              target=\"_blank\">\\n              Tap here to install.\\n            </a>\\n          </p>\\n        </div>\\n\\n        <a\\n          id=\"defly-wallet-redirect-modal-launch-defly-link\"\\n          class=\"defly-wallet-redirect-modal__launch-defly-wallet-button\"\\n          rel=\"noopener noreferrer\"\\n          target=\"_blank\">\\n          Launch Defly Wallet\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n`;class T extends HTMLElement{constructor(){var n,e;if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const t=document.createElement(\"style\");t.textContent=F,this.shadowRoot.append(R.content.cloneNode(!0),t);const o=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"defly-wallet-redirect-modal-download-defly-link\");null==o||o.addEventListener(\"click\",(()=>{this.onClose()}));const l=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"defly-wallet-redirect-modal-launch-defly-link\");null==l||l.addEventListener(\"click\",(()=>{this.onClose(),window.open(E(),\"_blank\")}))}}connectedCallback(){const n=window.open(E(),\"_blank\");n&&!n.closed&&this.onClose()}onClose(){n.removeModalWrapperFromDOM(n.DEFLY_WALLET_REDIRECT_MODAL_ID)}}var I=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='101.962' height='90.114' viewBox='0 0 101.962 90.114'%3e %3cg transform='translate(0.004)'%3e %3cpath d='M244.81%2c107.44%2c193.834%2c26l-50.986%2c81.44%2c50.986-27.77Z' transform='translate(-142.852 -26)' fill='white'/%3e %3cpath d='M254.505%2c273.648l-42.072-22.175-42.076%2c22.175%2c42.076-13.7Z' transform='translate(-161.446 -183.534)' fill='white'/%3e %3c/g%3e%3c/svg%3e\",z=\".defly-wallet-connect-modal-information-section {\\n  padding: 12px;\\n  display: flex;\\n  align-items: center;\\n  flex-flow: column;\\n  justify-content: center;\\n}\\n.defly-wallet-connect-modal-information-section--mobile {\\n  padding: 0;\\n  margin-top: 20px;\\n}\\n.defly-wallet-connect-modal-information-section--mobile .defly-wallet-connect-modal-information-section__defly-icon {\\n  margin-bottom: 21px;\\n  max-width: 70px;\\n}\\n.defly-wallet-connect-modal-information-section--mobile .defly-wallet-connect-modal-information-section__title {\\n  font-size: 34px;\\n  line-height: 32px;\\n}\\n\\n.defly-wallet-connect-modal-information-section__defly-icon {\\n  margin-bottom: 32px;\\n}\\n\\n.defly-wallet-connect-modal-information-section__title {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  color: #fff;\\n  font-size: 52px;\\n  line-height: 48px;\\n  font-weight: 900;\\n  white-space: pre-line;\\n  text-align: center;\\n  letter-spacing: 0;\\n  font-family: var(--defly-wallet-connect-modal-headline-family), sans-serif;\\n}\\n\\n.defly-wallet-connect-modal-information-section__download-defly-button {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  margin: 20px auto 0;\\n  padding: 0;\\n  color: #999999;\\n  background-color: transparent;\\n  outline: none;\\n  border: none;\\n  font-weight: 600;\\n  font-size: 13px;\\n  line-height: 20px;\\n  letter-spacing: 0.01px;\\n  cursor: pointer;\\n}\\n.defly-wallet-connect-modal-information-section__download-defly-button:hover {\\n  opacity: 0.8;\\n}\\n\\n@media (max-width: 935px) {\\n  .defly-wallet-connect-modal-information-section--desktop {\\n    padding: 0;\\n  }\\n  .defly-wallet-connect-modal-information-section--desktop .defly-wallet-connect-modal-information-section__defly-icon {\\n    max-width: 70px;\\n    margin-bottom: 21px;\\n  }\\n  .defly-wallet-connect-modal-information-section--desktop .defly-wallet-connect-modal-information-section__title {\\n    font-size: 34px;\\n    line-height: 32px;\\n  }\\n  .defly-wallet-connect-modal-information-section__download-defly-button {\\n    display: none;\\n  }\\n}\";i(z);const O=document.createElement(\"template\"),W=n.isMobile()?\"defly-wallet-connect-modal-information-section defly-wallet-connect-modal-information-section--mobile\":\"defly-wallet-connect-modal-information-section defly-wallet-connect-modal-information-section--desktop\";O.innerHTML=`\\n  <section class=\"${W}\">\\n    <img src=\"${I}\" class=\"defly-wallet-connect-modal-information-section__defly-icon\" alt=\"Defly Wallet\" />\\n    <h1 class=\"defly-wallet-connect-modal-information-section__title\">Secure \\n wallet & \\n trading</h1>\\n \\n    <button\\n        id=\"defly-wallet-connect-modal-information-section-download-defly-button\"\\n        class=\"defly-wallet-connect-modal-information-section__download-defly-button\">\\n        <img src=\"data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect x='2' y='2' width='4.66667' height='4.66667' rx='1.2' stroke='%23999999' stroke-width='1.5'/%3e%3crect x='2' y='9.33203' width='4.66667' height='4.66667' rx='1.2' stroke='%23999999' stroke-width='1.5'/%3e%3crect x='9.33325' y='2' width='4.66667' height='4.66667' rx='1.2' stroke='%23999999' stroke-width='1.5'/%3e%3cpath d='M8.70581 9.5293H10.9411' stroke='%23999999' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M13.1765 12.668L14.6667 12.668' stroke='%23999999' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M13.1765 14L14.6667 14' stroke='%23999999' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M11.686 14L13.1762 14' stroke='%23999999' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M12.4314 9.5293H14.6667' stroke='%23999999' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M8.70581 10.2754H12.4313' stroke='%23999999' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 11.7656H11.6862' stroke='%23999999' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 12.5117H11.6862' stroke='%23999999' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M8.70581 13.2539H10.196' stroke='%23999999' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M8.70581 14H10.196' stroke='%23999999' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 11.0195H12.4313' stroke='%23999999' stroke-width='1.25' stroke-linejoin='round'/%3e%3c/svg%3e\" alt=\"QR Icon\" />\\n        Download\\n      </button>\\n  </section>\\n`;class H extends HTMLElement{constructor(){var n;if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const e=document.createElement(\"style\");e.textContent=z,this.shadowRoot.append(O.content.cloneNode(!0),e);const t=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"defly-wallet-connect-modal-information-section-download-defly-button\");t&&t.addEventListener(\"click\",(()=>{this.onClickDownload()}))}}onClickDownload(){if(this.shadowRoot){const n=this.shadowRoot.host.parentElement;n&&(n.classList.remove(\"defly-wallet-connect-modal-desktop-mode--default\"),n.classList.add(\"defly-wallet-connect-modal-desktop-mode--download\"))}}}var V='@import url(\"https://fonts.googleapis.com/css2?family=Spline+Sans:wght@400;500;600&display=swap\");\\n@font-face {\\n  font-family: \"PP Right Grotesk\";\\n  src: url(\"../asset/fonts/pp-right-grotesk-wide-black.woff2\") format(\"woff2\");\\n  font-weight: 900;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n.defly-wallet-modal {\\n  --defly-wallet-modal-font-family: \"Spline Sans\", sans-serif;\\n  --defly-wallet-connect-modal-headline-family: \"PP Right Grotesk\", sans-serif;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 999999;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.7);\\n}\\n.defly-wallet-modal--select-account .defly-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n}\\n.defly-wallet-modal--mobile .defly-wallet-modal__body {\\n  top: 40px;\\n  bottom: 0;\\n  left: 20px;\\n  width: calc(100% - 40px);\\n  max-width: unset;\\n  height: calc(100 * var(--vh));\\n  padding: 20px;\\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\\n  border-radius: 20px 20px 0px 0px;\\n  animation: 0.3s DeflyWalletConnectMobileSlideIn ease-out;\\n  overflow-y: auto;\\n  transform: unset;\\n}\\n.defly-wallet-modal--mobile .defly-wallet-modal__body::before {\\n  background-image: unset;\\n}\\n.defly-wallet-modal * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.defly-wallet-modal ul,\\n.defly-wallet-modal ol,\\n.defly-wallet-modal li {\\n  list-style-type: none;\\n}\\n\\n.defly-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.defly-wallet-modal__logo img {\\n  display: block;\\n  width: 32px;\\n}\\n\\n.defly-wallet-modal__body {\\n  position: relative;\\n  top: 50%;\\n  left: 50%;\\n  width: 979px;\\n  max-width: calc(100vw - 80px);\\n  padding: 28px;\\n  background-color: #131313;\\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\\n  border-radius: 40px;\\n  animation: 0.3s DeflyWalletConnectSlideIn ease-out;\\n  transform: translate(-50%, -50%);\\n}\\n\\n@media (max-width: 935px) {\\n  .defly-wallet-modal--desktop .defly-wallet-modal__body {\\n    width: 100%;\\n    max-width: calc(100vw - 32px);\\n    padding: 24px;\\n  }\\n}\\n@keyframes DeflyWalletConnectSlideIn {\\n  0% {\\n    opacity: 0;\\n    transform: translate(-50%, calc(-50% + 24px));\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translate(-50%, -50%);\\n  }\\n}\\n@keyframes DeflyWalletConnectMobileSlideIn {\\n  0% {\\n    top: 30%;\\n    opacity: 0;\\n  }\\n  100% {\\n    top: 40px;\\n    opacity: 1;\\n  }\\n}\\n.defly-wallet-connect-modal-pending-message-section {\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  grid-template-rows: auto 48px;\\n  gap: 56px;\\n  height: 100%;\\n  padding: 4px;\\n  padding-bottom: 70px;\\n}\\n\\n.defly-wallet-connect-modal-pending-message {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  text-align: center;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view {\\n  display: flex;\\n  justify-content: space-between;\\n  flex-direction: column;\\n  height: 100%;\\n  margin-top: 10px;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view__image {\\n  margin: 0 auto;\\n  display: block;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view__title {\\n  margin: 16px 0 12px;\\n  color: #ffffff;\\n  text-align: center;\\n  font-size: 18px;\\n  font-weight: 500;\\n  line-height: 24px;\\n  letter-spacing: -0.26px;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view__description {\\n  color: #999999;\\n  font-size: 14px;\\n  text-align: center;\\n  font-weight: 400;\\n  line-height: 24px;\\n  letter-spacing: -0.01px;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view__button {\\n  display: block;\\n  width: 100%;\\n  padding: 14px;\\n  border-radius: 12px;\\n  text-decoration: none;\\n  text-align: center;\\n  font-size: 14px;\\n  line-height: 20px;\\n  letter-spacing: -0.09px;\\n  font-weight: 500;\\n  color: #ffffff;\\n  background-color: #6b46fe;\\n  border: none;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor {\\n  display: flex;\\n  gap: 12px;\\n  margin-bottom: 20px;\\n  padding: 16px;\\n  background: #ffffff;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n  border-radius: 12px;\\n  text-decoration: none;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__image {\\n  width: 24px;\\n  height: 24px;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title-wrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: 4px;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title {\\n  margin: 0;\\n  font-size: 14px;\\n  font-weight: 500;\\n  line-height: 20px;\\n  letter-spacing: -0.1px;\\n  color: #3c3c49;\\n}\\n.defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__description {\\n  /* stylelint-disable value-no-vendor-prefix */\\n  /* stylelint-disable  property-no-vendor-prefix */\\n  display: -webkit-box;\\n  max-width: 100%;\\n  -webkit-line-clamp: 2;\\n  /* autoprefixer: ignore next */\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  /* stylelint-enable value-no-vendor-prefix */\\n  /* stylelint-enable property-no-vendor-prefix */\\n  margin: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n  line-height: 18px;\\n  letter-spacing: 0.01px;\\n  color: #9d9dae;\\n}\\n\\n.defly-wallet-connect-modal-pending-message__animation-wrapper {\\n  width: 56px;\\n  height: 56px;\\n  background-color: #6b46fe;\\n  border-radius: 50%;\\n}\\n\\n.defly-wallet-connect-modal-pending-message__text {\\n  max-width: 271px;\\n  margin-top: 20px;\\n  color: #ffffff;\\n  font-size: 18px;\\n  font-weight: 500;\\n  line-height: 28px;\\n  letter-spacing: -0.26px;\\n}\\n\\n.defly-wallet-connect-modal-pending-message__cancel-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  padding: 14px;\\n  color: #6a6a81;\\n  background-color: #ffffff;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n  border-radius: 12px;\\n  text-decoration: none;\\n  text-align: center;\\n  font-size: 14px;\\n  line-height: 20px;\\n  letter-spacing: -0.09px;\\n  font-weight: 500;\\n  border: none;\\n}';i(V);const G=document.createElement(\"template\");G.innerHTML=`\\n  <div class=\"defly-wallet-connect-modal-pending-message-section\">\\n    <div class=\"defly-wallet-connect-modal-pending-message\">\\n      <img src=\"${I}\" alt=\"Defly Wallet Logo\" />\\n\\n      <div class=\"defly-wallet-connect-modal-pending-message__text\">\\n        Please wait while we connect you to Defly Wallet...\\n      </div>\\n    </div>\\n\\n    <button\\n      id=\"defly-wallet-connect-modal-pending-message-cancel-button\"\\n      class=\"defly-wallet-button defly-wallet-connect-modal-pending-message__cancel-button\">\\n        Cancel\\n    </button>\\n  </div>\\n\\n  <div id=\"defly-wallet-connect-modal-pending-message-audio-wrapper\"></div>\\n`;const P=`\\n  <div class=\"defly-wallet-connect-modal-pending-message--try-again-view\">\\n    <div>\\n      <img class=\"defly-wallet-connect-modal-pending-message--try-again-view__image\" src=\"${I}\" alt=\"Defly Wallet\" />\\n\\n      <h1 class=\"defly-wallet-connect-modal-pending-message--try-again-view__title\">\\n        Couldn’t establish connection\\n      </h1>\\n\\n      <p class=\"defly-wallet-connect-modal-pending-message--try-again-view__description\">\\n        Having issues? Before trying again, make sure to read the support article below and apply the possible solutions.\\n      </p>\\n    </div>\\n\\n    <div>\\n      <a\\n        href=\"https://support.deflywallet.app/en/article/resolving-walletconnect-issues-1tolptm/\"\\n        target=\"_blank\"\\n        rel=\"noopener noreferrer\"\\n        class=\"defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor\">\\n        <img\\n          class=\"defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__image\"\\n          src=\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 22.3199C7.72 22.3199 7.42998 22.2499 7.16998 22.1099C6.59998 21.8099 6.25 21.2099 6.25 20.5699V19.15C3.23 18.84 1.25 16.6199 1.25 13.4399V7.43994C1.25 3.99994 3.56 1.68994 7 1.68994H17C20.44 1.68994 22.75 3.99994 22.75 7.43994V13.4399C22.75 16.8799 20.44 19.1899 17 19.1899H13.23L8.96997 22.03C8.67997 22.22 8.34 22.3199 8 22.3199ZM7 3.17993C4.42 3.17993 2.75 4.84993 2.75 7.42993V13.43C2.75 16.01 4.42 17.68 7 17.68C7.41 17.68 7.75 18.02 7.75 18.43V20.56C7.75 20.69 7.83 20.75 7.88 20.78C7.93001 20.81 8.03001 20.84 8.14001 20.77L12.59 17.81C12.71 17.73 12.86 17.68 13.01 17.68H17.01C19.59 17.68 21.26 16.01 21.26 13.43V7.42993C21.26 4.84993 19.59 3.17993 17.01 3.17993H7ZM11.9998 12.11C11.5898 12.11 11.2498 11.77 11.2498 11.36V11.15C11.2498 10.0038 12.0798 9.4336 12.4082 9.20798L12.4198 9.20001C12.7898 8.95001 12.9098 8.78002 12.9098 8.52002C12.9098 8.02002 12.4998 7.60999 11.9998 7.60999C11.4998 7.60999 11.0898 8.02002 11.0898 8.52002C11.0898 8.93002 10.7498 9.27002 10.3398 9.27002C9.92984 9.27002 9.58984 8.93002 9.58984 8.52002C9.58984 7.19002 10.6698 6.10999 11.9998 6.10999C13.3298 6.10999 14.4098 7.19002 14.4098 8.52002C14.4098 9.66002 13.5698 10.23 13.2598 10.44C12.8698 10.7 12.7498 10.87 12.7498 11.15V11.36C12.7498 11.78 12.4098 12.11 11.9998 12.11ZM11.25 13.85C11.25 14.26 11.58 14.6 12 14.6C12.42 14.6 12.75 14.26 12.75 13.85C12.75 13.44 12.41 13.1 12 13.1C11.59 13.1 11.25 13.44 11.25 13.85Z' fill='%236B46FE'/%3e%3c/svg%3e\"\\n          alt=\"Help Icon\"\\n        />\\n\\n        <div>\\n          <div\\n            class=\"defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title-wrapper\">\\n            <h1\\n              class=\"defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title\">\\n                Resolving WalletConnect issues\\n            </h1>\\n\\n            <img src=\"data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M11.3287 10.0983C10.9574 10.0983 10.6564 9.79734 10.6564 9.42604L10.6564 6.29525L5.14866 11.803C4.88611 12.0655 4.46044 12.0655 4.19789 11.803C3.93534 11.5404 3.93534 11.1147 4.19789 10.8522L9.70561 5.34447L6.57482 5.34447C6.20352 5.34447 5.90252 5.04347 5.90252 4.67218C5.90252 4.30088 6.20352 3.99988 6.57482 3.99988L11.3287 3.99988C11.507 3.99988 11.678 4.07071 11.8041 4.19679C11.9301 4.32287 12.001 4.49387 12.001 4.67218L12.001 9.42604C12.001 9.79734 11.7 10.0983 11.3287 10.0983Z' fill='%239D9DAE'/%3e%3c/svg%3e\" alt=\"Send Icon\"/>\\n          </div>\\n\\n          <p\\n            class=\"defly-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__description\">\\n            Unfortunately there are several known issues related to WalletConnect that our team is working on. Some of these issues are related to the WalletConnect JavaScript implementation on the dApp ...\\n          </p>\\n        </div>\\n      </a>\\n\\n      <button id=\"defly-wallet-connect-modal-pending-message-try-again-button\" class=\"defly-wallet-connect-button defly-wallet-connect-modal-pending-message--try-again-view__button\">\\n        Close & Try Again\\n      </button>\\n    </div>\\n  </div>\\n  `;class Z extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const n=document.createElement(\"style\");n.textContent=V,this.shadowRoot.append(G.content.cloneNode(!0),n)}}connectedCallback(){var n;const e=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"defly-wallet-connect-modal-pending-message-cancel-button\");null==e||e.addEventListener(\"click\",(()=>{this.onClose()})),this.addAudioForConnection(),setTimeout((()=>{var n;if(G.innerHTML=P,this.shadowRoot){const e=document.createElement(\"style\");e.textContent=V,this.shadowRoot.innerHTML=\"\",this.shadowRoot.append(G.content.cloneNode(!0),e);const t=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"defly-wallet-connect-modal-pending-message-try-again-button\");null==t||t.addEventListener(\"click\",(()=>{this.onClose()}))}}),3e4)}onClose(){n.removeModalWrapperFromDOM(n.DEFLY_WALLET_CONNECT_MODAL_ID)}addAudioForConnection(){var e;if(\"true\"===this.getAttribute(\"should-use-sound\")&&n.isIOS()){const n=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"defly-wallet-connect-modal-pending-message-audio-wrapper\"),t=document.createElement(\"audio\");t.src=\"https://defly-walletconnect.s3.eu-central-1.amazonaws.com/audio.mp3\",t.autoplay=!0,t.loop=!0,null==n||n.appendChild(t)}}}var N={v:\"5.7.1\",fr:25,ip:0,op:100,w:1e3,h:1e3,nm:\"Animation\",ddd:0,assets:[],layers:[{ddd:0,ind:1,ty:1,nm:\"Circle\",sr:1,ks:{o:{a:0,k:73,ix:11},r:{a:0,k:0,ix:10},p:{a:1,k:[{i:{x:.833,y:.833},o:{x:.167,y:.167},t:18,s:[724,614,0],to:[-35,2.333,0],ti:[35,-2.333,0]},{i:{x:.833,y:.833},o:{x:.167,y:.167},t:25,s:[514,628,0],to:[0,0,0],ti:[0,0,0]},{i:{x:.833,y:.833},o:{x:.167,y:.167},t:53,s:[514,628,0],to:[35,-2.333,0],ti:[-35,2.333,0]},{t:62,s:[724,614,0]}],ix:2},a:{a:0,k:[608.861,710.127,0],ix:1},s:{a:0,k:[79,79,100],ix:6}},ao:0,hasMask:!0,masksProperties:[{inv:!1,mode:\"a\",pt:{a:0,k:{i:[[27.614,0],[0,-27.614],[-27.614,0],[0,27.614]],o:[[-27.614,0],[0,27.614],[27.614,0],[0,-27.614]],v:[[608,662],[558,712],[608,762],[658,712]],c:!0},ix:1},o:{a:0,k:100,ix:3},x:{a:0,k:0,ix:4},nm:\"Mask 1\"}],ef:[{ty:21,nm:\"Fill\",np:9,mn:\"ADBE Fill\",ix:1,en:1,ef:[{ty:10,nm:\"Fill Mask\",mn:\"ADBE Fill-0001\",ix:1,v:{a:0,k:0,ix:1}},{ty:7,nm:\"All Masks\",mn:\"ADBE Fill-0007\",ix:2,v:{a:0,k:0,ix:2}},{ty:2,nm:\"Color\",mn:\"ADBE Fill-0002\",ix:3,v:{a:0,k:[.748628020287,.656362950802,.86274510622,1],ix:3}},{ty:7,nm:\"Invert\",mn:\"ADBE Fill-0006\",ix:4,v:{a:0,k:0,ix:4}},{ty:0,nm:\"Horizontal Feather\",mn:\"ADBE Fill-0003\",ix:5,v:{a:0,k:0,ix:5}},{ty:0,nm:\"Vertical Feather\",mn:\"ADBE Fill-0004\",ix:6,v:{a:0,k:0,ix:6}},{ty:0,nm:\"Opacity\",mn:\"ADBE Fill-0005\",ix:7,v:{a:0,k:1,ix:7}}]}],sw:1e3,sh:1e3,sc:\"#ffffff\",ip:0,op:754,st:0,bm:0},{ddd:0,ind:2,ty:4,nm:\"Layer 1 Outlines 2\",parent:9,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[511.524,444,0],ix:2},a:{a:0,k:[157.775,147.25,0],ix:1},s:{a:0,k:[46,46,100],ix:6}},ao:0,ef:[{ty:21,nm:\"Fill\",np:9,mn:\"ADBE Fill\",ix:1,en:1,ef:[{ty:10,nm:\"Fill Mask\",mn:\"ADBE Fill-0001\",ix:1,v:{a:0,k:0,ix:1}},{ty:7,nm:\"All Masks\",mn:\"ADBE Fill-0007\",ix:2,v:{a:0,k:0,ix:2}},{ty:2,nm:\"Color\",mn:\"ADBE Fill-0002\",ix:3,v:{a:0,k:[.054901964962,.050980396569,.06274510175,1],ix:3}},{ty:7,nm:\"Invert\",mn:\"ADBE Fill-0006\",ix:4,v:{a:0,k:0,ix:4}},{ty:0,nm:\"Horizontal Feather\",mn:\"ADBE Fill-0003\",ix:5,v:{a:0,k:0,ix:5}},{ty:0,nm:\"Vertical Feather\",mn:\"ADBE Fill-0004\",ix:6,v:{a:0,k:0,ix:6}},{ty:0,nm:\"Opacity\",mn:\"ADBE Fill-0005\",ix:7,v:{a:0,k:1,ix:7}}]}],shapes:[{ty:\"gr\",it:[{ind:0,ty:\"sh\",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[157.525,133.595],[0,-133.596],[-157.525,133.595],[0,42.488]],c:!0},ix:2},nm:\"Path 1\",mn:\"ADBE Vector Shape - Group\",hd:!1},{ty:\"fl\",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:\"Fill 1\",mn:\"ADBE Vector Graphic - Fill\",hd:!1},{ty:\"tr\",p:{a:0,k:[157.775,133.846],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:\"Transform\"}],nm:\"Group 2\",np:2,cix:2,bm:0,ix:1,mn:\"ADBE Vector Group\",hd:!1}],ip:0,op:754,st:0,bm:0},{ddd:0,ind:3,ty:4,nm:\"Layer 1 Outlines\",parent:9,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[511.524,444,0],ix:2},a:{a:0,k:[157.775,147.25,0],ix:1},s:{a:0,k:[46,46,100],ix:6}},ao:0,ef:[{ty:21,nm:\"Fill\",np:9,mn:\"ADBE Fill\",ix:1,en:1,ef:[{ty:10,nm:\"Fill Mask\",mn:\"ADBE Fill-0001\",ix:1,v:{a:0,k:0,ix:1}},{ty:7,nm:\"All Masks\",mn:\"ADBE Fill-0007\",ix:2,v:{a:0,k:0,ix:2}},{ty:2,nm:\"Color\",mn:\"ADBE Fill-0002\",ix:3,v:{a:0,k:[.058823533356,.054901964962,.06274510175,1],ix:3}},{ty:7,nm:\"Invert\",mn:\"ADBE Fill-0006\",ix:4,v:{a:0,k:0,ix:4}},{ty:0,nm:\"Horizontal Feather\",mn:\"ADBE Fill-0003\",ix:5,v:{a:0,k:0,ix:5}},{ty:0,nm:\"Vertical Feather\",mn:\"ADBE Fill-0004\",ix:6,v:{a:0,k:0,ix:6}},{ty:0,nm:\"Opacity\",mn:\"ADBE Fill-0005\",ix:7,v:{a:0,k:1,ix:7}}]}],shapes:[{ty:\"gr\",it:[{ind:0,ty:\"sh\",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[130.021,34.263],[0,-34.264],[-130.021,34.263],[0,-8.067]],c:!0},ix:2},nm:\"Path 1\",mn:\"ADBE Vector Shape - Group\",hd:!1},{ty:\"fl\",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:\"Fill 1\",mn:\"ADBE Vector Graphic - Fill\",hd:!1},{ty:\"tr\",p:{a:0,k:[157.775,259.986],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:\"Transform\"}],nm:\"Group 1\",np:2,cix:2,bm:0,ix:1,mn:\"ADBE Vector Group\",hd:!1}],ip:0,op:754,st:0,bm:0},{ddd:0,ind:4,ty:1,nm:\"White Solid 2\",parent:9,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[512,508,0],ix:2},a:{a:0,k:[500,500,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,hasMask:!0,masksProperties:[{inv:!1,mode:\"a\",pt:{a:0,k:{i:[[11.046,0],[0,0],[0,-11.046],[0,0],[-11.046,0],[0,0],[0,11.046],[0,0]],o:[[0,0],[-11.046,0],[0,0],[0,11.046],[0,0],[11.046,0],[0,0],[0,-11.046]],v:[[648,314],[344,314],[324,334],[324,546],[344,566],[648,566],[668,546],[668,334]],c:!0},ix:1},o:{a:0,k:100,ix:3},x:{a:0,k:0,ix:4},nm:\"Mask 1\"}],ef:[{ty:22,nm:\"Stroke\",np:13,mn:\"ADBE Stroke\",ix:1,en:1,ef:[{ty:10,nm:\"Path\",mn:\"ADBE Stroke-0001\",ix:1,v:{a:0,k:1,ix:1}},{ty:7,nm:\"All Masks\",mn:\"ADBE Stroke-0010\",ix:2,v:{a:0,k:0,ix:2}},{ty:7,nm:\"Stroke Sequentially\",mn:\"ADBE Stroke-0011\",ix:3,v:{a:0,k:1,ix:3}},{ty:2,nm:\"Color\",mn:\"ADBE Stroke-0002\",ix:4,v:{a:0,k:[.525490224361,.231372565031,.972549080849,1],ix:4}},{ty:0,nm:\"Brush Size\",mn:\"ADBE Stroke-0003\",ix:5,v:{a:0,k:2,ix:5}},{ty:0,nm:\"Brush Hardness\",mn:\"ADBE Stroke-0004\",ix:6,v:{a:0,k:.75,ix:6}},{ty:0,nm:\"Opacity\",mn:\"ADBE Stroke-0005\",ix:7,v:{a:0,k:1,ix:7}},{ty:0,nm:\"Start\",mn:\"ADBE Stroke-0008\",ix:8,v:{a:0,k:0,ix:8}},{ty:0,nm:\"End\",mn:\"ADBE Stroke-0009\",ix:9,v:{a:0,k:100,ix:9}},{ty:7,nm:\"Spacing\",mn:\"ADBE Stroke-0006\",ix:10,v:{a:0,k:15,ix:10}},{ty:7,nm:\"Paint Style\",mn:\"ADBE Stroke-0007\",ix:11,v:{a:0,k:1,ix:11}}]}],sw:1e3,sh:1e3,sc:\"#ffffff\",ip:0,op:754,st:0,bm:0},{ddd:0,ind:5,ty:1,nm:\"White Solid 2\",parent:9,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[512,388,0],ix:2},a:{a:0,k:[500,500,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,hasMask:!0,masksProperties:[{inv:!1,mode:\"a\",pt:{a:0,k:{i:[[11.046,0],[0,0],[0,-11.046],[0,0],[-11.046,0],[0,0],[0,11.046],[0,0]],o:[[0,0],[-11.046,0],[0,0],[0,11.046],[0,0],[11.046,0],[0,0],[0,-11.046]],v:[[648,314],[344,314],[324,334],[324,386],[344,406],[648,406],[668,386],[668,334]],c:!0},ix:1},o:{a:0,k:100,ix:3},x:{a:0,k:0,ix:4},nm:\"Mask 1\"}],ef:[{ty:22,nm:\"Stroke\",np:13,mn:\"ADBE Stroke\",ix:1,en:1,ef:[{ty:10,nm:\"Path\",mn:\"ADBE Stroke-0001\",ix:1,v:{a:0,k:1,ix:1}},{ty:7,nm:\"All Masks\",mn:\"ADBE Stroke-0010\",ix:2,v:{a:0,k:0,ix:2}},{ty:7,nm:\"Stroke Sequentially\",mn:\"ADBE Stroke-0011\",ix:3,v:{a:0,k:1,ix:3}},{ty:2,nm:\"Color\",mn:\"ADBE Stroke-0002\",ix:4,v:{a:0,k:[.525490224361,.231372565031,.972549080849,1],ix:4}},{ty:0,nm:\"Brush Size\",mn:\"ADBE Stroke-0003\",ix:5,v:{a:0,k:2,ix:5}},{ty:0,nm:\"Brush Hardness\",mn:\"ADBE Stroke-0004\",ix:6,v:{a:0,k:.75,ix:6}},{ty:0,nm:\"Opacity\",mn:\"ADBE Stroke-0005\",ix:7,v:{a:0,k:1,ix:7}},{ty:0,nm:\"Start\",mn:\"ADBE Stroke-0008\",ix:8,v:{a:0,k:0,ix:8}},{ty:0,nm:\"End\",mn:\"ADBE Stroke-0009\",ix:9,v:{a:0,k:100,ix:9}},{ty:7,nm:\"Spacing\",mn:\"ADBE Stroke-0006\",ix:10,v:{a:0,k:15,ix:10}},{ty:7,nm:\"Paint Style\",mn:\"ADBE Stroke-0007\",ix:11,v:{a:0,k:1,ix:11}}]}],sw:1e3,sh:1e3,sc:\"#ffffff\",ip:0,op:754,st:0,bm:0},{ddd:0,ind:7,ty:1,nm:\"Button\",parent:9,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[510,736,0],ix:2},a:{a:0,k:[497.468,353.165,0],ix:1},s:{a:1,k:[{i:{x:[.667,.667,.667],y:[1,1,1]},o:{x:[.333,.333,.333],y:[0,0,0]},t:32,s:[100,100,100]},{i:{x:[.667,.667,.667],y:[1,1,1]},o:{x:[.333,.333,.333],y:[0,0,0]},t:35,s:[79,79,100]},{t:43,s:[100,100,100]}],ix:6}},ao:0,hasMask:!0,masksProperties:[{inv:!1,mode:\"a\",pt:{a:0,k:{i:[[11.046,0],[0,0],[0,-11.046],[0,0],[-11.046,0],[0,0],[0,11.046],[0,0]],o:[[0,0],[-11.046,0],[0,0],[0,11.046],[0,0],[11.046,0],[0,0],[0,-11.046]],v:[[648,314],[344,314],[324,334],[324,386],[344,406],[648,406],[668,386],[668,334]],c:!0},ix:1},o:{a:0,k:100,ix:3},x:{a:0,k:0,ix:4},nm:\"Mask 1\"}],ef:[{ty:21,nm:\"Fill\",np:9,mn:\"ADBE Fill\",ix:1,en:1,ef:[{ty:10,nm:\"Fill Mask\",mn:\"ADBE Fill-0001\",ix:1,v:{a:0,k:0,ix:1}},{ty:7,nm:\"All Masks\",mn:\"ADBE Fill-0007\",ix:2,v:{a:0,k:0,ix:2}},{ty:2,nm:\"Color\",mn:\"ADBE Fill-0002\",ix:3,v:{a:0,k:[.686274528503,.290196090937,.937254965305,1],ix:3}},{ty:7,nm:\"Invert\",mn:\"ADBE Fill-0006\",ix:4,v:{a:0,k:0,ix:4}},{ty:0,nm:\"Horizontal Feather\",mn:\"ADBE Fill-0003\",ix:5,v:{a:0,k:0,ix:5}},{ty:0,nm:\"Vertical Feather\",mn:\"ADBE Fill-0004\",ix:6,v:{a:0,k:0,ix:6}},{ty:0,nm:\"Opacity\",mn:\"ADBE Fill-0005\",ix:7,v:{a:0,k:1,ix:7}}]}],sw:1e3,sh:1e3,sc:\"#ffffff\",ip:0,op:754,st:0,bm:0},{ddd:0,ind:8,ty:4,nm:\"Shape Layer 1\",parent:9,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[500,493.102,0],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,ef:[{ty:25,nm:\"Drop Shadow\",np:8,mn:\"ADBE Drop Shadow\",ix:1,en:1,ef:[{ty:2,nm:\"Shadow Color\",mn:\"ADBE Drop Shadow-0001\",ix:1,v:{a:0,k:[0,0,0,1],ix:1}},{ty:0,nm:\"Opacity\",mn:\"ADBE Drop Shadow-0002\",ix:2,v:{a:0,k:87.5,ix:2}},{ty:0,nm:\"Direction\",mn:\"ADBE Drop Shadow-0003\",ix:3,v:{a:0,k:173,ix:3}},{ty:0,nm:\"Distance\",mn:\"ADBE Drop Shadow-0004\",ix:4,v:{a:0,k:8,ix:4}},{ty:0,nm:\"Softness\",mn:\"ADBE Drop Shadow-0005\",ix:5,v:{a:0,k:125,ix:5}},{ty:7,nm:\"Shadow Only\",mn:\"ADBE Drop Shadow-0006\",ix:6,v:{a:0,k:0,ix:6}}]}],shapes:[{ty:\"gr\",it:[{ty:\"rc\",d:1,s:{a:0,k:[452,730],ix:2},p:{a:0,k:[0,0],ix:3},r:{a:0,k:20,ix:4},nm:\"Rectangle Path 1\",mn:\"ADBE Vector Shape - Rect\",hd:!1},{ty:\"st\",c:{a:0,k:[1,1,1,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:0,ix:5},lc:1,lj:1,ml:4,bm:0,nm:\"Stroke 1\",mn:\"ADBE Vector Graphic - Stroke\",hd:!1},{ty:\"fl\",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:\"Fill 1\",mn:\"ADBE Vector Graphic - Fill\",hd:!1},{ty:\"tr\",p:{a:0,k:[6,-7],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:\"Transform\"}],nm:\"Rectangle 1\",np:3,cix:2,bm:0,ix:1,mn:\"ADBE Vector Group\",hd:!1}],ip:0,op:754,st:0,bm:0},{ddd:0,ind:9,ty:1,nm:\"White Solid 1\",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:1,k:[{i:{x:.667,y:1},o:{x:.333,y:0},t:1,s:[500,562,0],to:[0,-23.333,0],ti:[0,23.333,0]},{i:{x:.833,y:.833},o:{x:.167,y:.167},t:13,s:[500,422,0],to:[0,0,0],ti:[0,0,0]},{i:{x:.667,y:1},o:{x:.333,y:0},t:65,s:[500,422,0],to:[0,23.333,0],ti:[0,-23.333,0]},{t:79,s:[500,562,0]}],ix:2},a:{a:0,k:[500,500,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,hasMask:!0,masksProperties:[{inv:!1,mode:\"a\",pt:{a:0,k:{i:[[11.046,0],[0,0],[0,-11.046],[0,0],[-11.046,0],[0,0],[0,11.046],[0,0]],o:[[0,0],[-11.046,0],[0,0],[0,11.046],[0,0],[11.046,0],[0,0],[0,-11.046]],v:[[712,122],[302,122],[282,142],[282,830],[302,850],[712,850],[732,830],[732,142]],c:!0},ix:1},o:{a:0,k:100,ix:3},x:{a:0,k:0,ix:4},nm:\"Mask 1\"}],ef:[{ty:25,nm:\"Drop Shadow\",np:8,mn:\"ADBE Drop Shadow\",ix:1,en:1,ef:[{ty:2,nm:\"Shadow Color\",mn:\"ADBE Drop Shadow-0001\",ix:1,v:{a:0,k:[0,0,0,1],ix:1}},{ty:0,nm:\"Opacity\",mn:\"ADBE Drop Shadow-0002\",ix:2,v:{a:0,k:87.5,ix:2}},{ty:0,nm:\"Direction\",mn:\"ADBE Drop Shadow-0003\",ix:3,v:{a:0,k:173,ix:3}},{ty:0,nm:\"Distance\",mn:\"ADBE Drop Shadow-0004\",ix:4,v:{a:0,k:8,ix:4}},{ty:0,nm:\"Softness\",mn:\"ADBE Drop Shadow-0005\",ix:5,v:{a:0,k:125,ix:5}},{ty:7,nm:\"Shadow Only\",mn:\"ADBE Drop Shadow-0006\",ix:6,v:{a:0,k:0,ix:6}}]}],sw:1e3,sh:1e3,sc:\"#ffffff\",ip:0,op:754,st:0,bm:0}],markers:[]},j='.defly-wallet-sign-txn-toast {\\n  --defly-wallet-sign-txn-toast-width: 422px;\\n  --defly-wallet-sign-txn-toast-height: 134px;\\n  --defly-wallet-sign-txn-toast-font-family: \"Inter\", sans-serif;\\n  position: fixed;\\n  bottom: 28px;\\n  right: 35px;\\n  z-index: 11;\\n  overflow: hidden;\\n  width: var(--defly-wallet-sign-txn-toast-width);\\n  height: var(--defly-wallet-sign-txn-toast-height);\\n  background: #edeffb;\\n  border-radius: 8px;\\n  animation: 0.2s DeflyWalletSignTxnToastSlideIn ease-out;\\n}\\n.defly-wallet-sign-txn-toast * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--defly-wallet-sign-txn-toast-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.defly-wallet-sign-txn-toast ul,\\n.defly-wallet-sign-txn-toast ol,\\n.defly-wallet-sign-txn-toast li {\\n  list-style-type: none;\\n}\\n\\n.defly-wallet-sign-txn-toast__header__close-button {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  width: 20px;\\n  height: 20px;\\n  margin: 0;\\n  padding: 0;\\n  background: transparent;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.defly-wallet-sign-txn-toast__content__lottie-animation {\\n  position: absolute;\\n  top: -75px;\\n  left: -100px;\\n  width: 368px;\\n  height: 368px;\\n}\\n\\n.defly-wallet-sign-txn-toast__content__description {\\n  position: absolute;\\n  top: 40px;\\n  right: 48px;\\n  max-width: 197px;\\n  color: #3c3c49;\\n  font-size: 14px;\\n  line-height: 22px;\\n  letter-spacing: -0.1px;\\n}\\n\\n@media (max-width: 935px) {\\n  .defly-wallet-sign-txn-toast {\\n    display: none;\\n  }\\n}\\n@keyframes DeflyWalletSignTxnToastSlideIn {\\n  0% {\\n    bottom: 12px;\\n    opacity: 0;\\n  }\\n  100% {\\n    bottom: 26px;\\n    opacity: 1;\\n  }\\n}';i(j);const q=document.createElement(\"template\");q.innerHTML='\\n  <div class=\"defly-wallet-sign-txn-toast\">\\n    <div class=\"defly-wallet-sign-txn-toast__header\">\\n      <button\\n        id=\"defly-wallet-sign-txn-toast-close-button\"\\n        class=\"defly-wallet-sign-txn-toast__header__close-button\">\\n        <img src=\"data:image/svg+xml,%3csvg width=\\'20\\' height=\\'20\\' viewBox=\\'0 0 20 20\\' fill=\\'none\\' xmlns=\\'http://www.w3.org/2000/svg\\'%3e%3cpath d=\\'M14.4107 4.41074L9.41074 9.41074L10.5893 10.5893L15.5893 5.58926L14.4107 4.41074ZM9.41074 9.41074L4.41074 14.4107L5.58926 15.5893L10.5893 10.5893L9.41074 9.41074ZM15.5893 14.4107L10.5893 9.41074L9.41074 10.5893L14.4107 15.5893L15.5893 14.4107ZM10.5893 9.41074L5.58926 4.41074L4.41074 5.58926L9.41074 10.5893L10.5893 9.41074Z\\' fill=\\'%239099BD\\'/%3e%3c/svg%3e\" />\\n      </button>\\n    </div>\\n    <div class=\"defly-wallet-sign-txn-toast__content\">\\n      <div id=\"defly-wallet-sign-txn-toast-lottie-animation\" style=\"width:368;height:368\" class=\"defly-wallet-sign-txn-toast__content__lottie-animation\"></div>\\n      <p class=\"defly-wallet-sign-txn-toast__content__description\">\\n        Please launch <b>Defly Wallet</b> on your iOS or Android device to sign this transaction.\\n      </p>\\n    </div>\\n  </div>\\n';class $ extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const e=document.createElement(\"style\");e.textContent=j,this.shadowRoot.append(q.content.cloneNode(!0),e);const t=this.shadowRoot.getElementById(\"defly-wallet-sign-txn-toast-close-button\");null==t||t.addEventListener(\"click\",(()=>{n.removeModalWrapperFromDOM(n.DEFLY_WALLET_SIGN_TXN_TOAST_ID)})),this.renderLottieAnimation()}}renderLottieAnimation(){var n;const e=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"defly-wallet-sign-txn-toast-lottie-animation\");e&&a.default.loadAnimation({container:e,renderer:\"svg\",loop:!0,autoplay:!0,animationData:N})}}var U='@import url(\"https://fonts.googleapis.com/css2?family=Spline+Sans:wght@400;500;600&display=swap\");\\n@font-face {\\n  font-family: \"PP Right Grotesk\";\\n  src: url(\"../asset/fonts/pp-right-grotesk-wide-black.woff2\") format(\"woff2\");\\n  font-weight: 900;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n.defly-wallet-modal {\\n  --defly-wallet-modal-font-family: \"Spline Sans\", sans-serif;\\n  --defly-wallet-connect-modal-headline-family: \"PP Right Grotesk\", sans-serif;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 999999;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.7);\\n}\\n.defly-wallet-modal--select-account .defly-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n}\\n.defly-wallet-modal--mobile .defly-wallet-modal__body {\\n  top: 40px;\\n  bottom: 0;\\n  left: 20px;\\n  width: calc(100% - 40px);\\n  max-width: unset;\\n  height: calc(100 * var(--vh));\\n  padding: 20px;\\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\\n  border-radius: 20px 20px 0px 0px;\\n  animation: 0.3s DeflyWalletConnectMobileSlideIn ease-out;\\n  overflow-y: auto;\\n  transform: unset;\\n}\\n.defly-wallet-modal--mobile .defly-wallet-modal__body::before {\\n  background-image: unset;\\n}\\n.defly-wallet-modal * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.defly-wallet-modal ul,\\n.defly-wallet-modal ol,\\n.defly-wallet-modal li {\\n  list-style-type: none;\\n}\\n\\n.defly-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--defly-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.defly-wallet-modal__logo img {\\n  display: block;\\n  width: 32px;\\n}\\n\\n.defly-wallet-modal__body {\\n  position: relative;\\n  top: 50%;\\n  left: 50%;\\n  width: 979px;\\n  max-width: calc(100vw - 80px);\\n  padding: 28px;\\n  background-color: #131313;\\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\\n  border-radius: 40px;\\n  animation: 0.3s DeflyWalletConnectSlideIn ease-out;\\n  transform: translate(-50%, -50%);\\n}\\n\\n@media (max-width: 935px) {\\n  .defly-wallet-modal--desktop .defly-wallet-modal__body {\\n    width: 100%;\\n    max-width: calc(100vw - 32px);\\n    padding: 24px;\\n  }\\n}\\n@keyframes DeflyWalletConnectSlideIn {\\n  0% {\\n    opacity: 0;\\n    transform: translate(-50%, calc(-50% + 24px));\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translate(-50%, -50%);\\n  }\\n}\\n@keyframes DeflyWalletConnectMobileSlideIn {\\n  0% {\\n    top: 30%;\\n    opacity: 0;\\n  }\\n  100% {\\n    top: 40px;\\n    opacity: 1;\\n  }\\n}\\n.defly-wallet-sign-txn-modal.defly-wallet-modal .defly-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n  background-image: unset;\\n  padding: 0;\\n}\\n.defly-wallet-sign-txn-modal.defly-wallet-modal .defly-wallet-modal__body .defly-wallet-sign-txn-modal__body__content {\\n  width: 100%;\\n  height: 100%;\\n}\\n.defly-wallet-sign-txn-modal.defly-wallet-modal .defly-wallet-modal__body #defly-wallet-iframe {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 16px;\\n  margin: 0 auto;\\n  border: none;\\n}';i(U);const Y=document.createElement(\"template\");Y.innerHTML=`\\n  <div class=\"${n.DEFLY_WALLET_MODAL_CLASSNAME} defly-wallet-sign-txn-modal\">\\n    <div class=\"defly-wallet-modal__body\">\\n      <defly-wallet-modal-header modal-id=\"${n.DEFLY_WALLET_SIGN_TXN_MODAL_ID}\"></defly-wallet-modal-header/>\\n\\n      <div class=\"defly-wallet-sign-txn-modal__body__content\" />\\n    </div>\\n  </div>\\n`;class Q extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const n=document.createElement(\"style\");n.textContent=U,this.shadowRoot.append(Y.content.cloneNode(!0),n)}}}window.addEventListener(\"DOMContentLoaded\",(()=>{c()})),window.addEventListener(\"resize\",(()=>{c()})),window.customElements.define(\"defly-wallet-connect-modal\",B),window.customElements.define(\"defly-wallet-modal-desktop-mode\",b),window.customElements.define(\"defly-wallet-modal-header\",m),window.customElements.define(\"defly-wallet-modal-touch-screen-mode\",D),window.customElements.define(\"defly-wallet-redirect-modal\",T),window.customElements.define(\"defly-wallet-connect-modal-information-section\",H),window.customElements.define(\"defly-wallet-connect-modal-pending-message-section\",Z),window.customElements.define(\"defly-wallet-sign-txn-toast\",$),window.customElements.define(\"defly-wallet-sign-txn-modal\",Q),window.customElements.define(\"defly-wallet-download-qr-code\",h);\n","\"use strict\";var e=require(\"@walletconnect/client\"),t=require(\"algosdk\"),n=require(\"bowser\");function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var r=o(e),i=o(t),l=o(n);function s(e,t,n,o){return new(n||(n=Promise))((function(r,i){function l(e){try{c(o.next(e))}catch(e){i(e)}}function s(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,s)}c((o=o.apply(e,t||[])).next())}))}class c extends Error{constructor(e,t,...n){super(...n),Error.captureStackTrace&&Error.captureStackTrace(this,c),this.name=\"DeflyWalletConnectError\",this.data=e,this.message=t}}const d=\"defly-wallet-connect-modal-wrapper\",a=\"defly-wallet-redirect-modal-wrapper\",u=\"defly-wallet-sign-txn-toast-wrapper\",h=\"defly-wallet-modal\";function f(e){const t=document.createElement(\"div\");return t.setAttribute(\"id\",e),document.body.appendChild(t),t}function v(e){const t=document.getElementById(e);t&&t.remove()}const g=\"DeflyWallet.Wallet\",m=\"walletconnect\";function y(){return\"undefined\"==typeof localStorage?void 0:localStorage}function w(){const e=function(){var e;const t=null===(e=y())||void 0===e?void 0:e.getItem(g);return t?JSON.parse(t):null}();let t=null;return\"defly-wallet\"===(null==e?void 0:e.type)&&(t=\"mobile\"),t}function p(e){const t=e.slice();for(let e=t.length-1;e>0;e--){const n=Math.floor(Math.random()*(e+1));[t[e],t[n]]=[t[n],t[e]]}return t}function S(){return function(e,t={}){return fetch(e,t).then((e=>e.json())).then((e=>e))}(\"https://static.defly.app/wc-bridge-servers.json\",{cache:\"no-store\"})}function T(){return s(this,void 0,void 0,(function*(){let e={bridgeURL:\"\",shouldUseSound:!0,silent:!1};try{const t=yield S();void 0!==t.use_sound&&(e.shouldUseSound=t.use_sound),void 0!==t.silent&&(e.silent=t.silent),e=Object.assign(Object.assign({},e),{bridgeURL:p(t.servers||[])[0]||\"\"})}catch(e){console.log(e)}return e}))}function b(e){return Uint8Array.from(window.atob(e),(e=>e.charCodeAt(0)))}function A(){return\"undefined\"!=typeof navigator}function E(){return A()&&/iPhone|iPod|Android/i.test(navigator.userAgent)}function D({shouldUseSound:e}){return{open:(t={shouldUseSound:e},e=>{if(!document.getElementById(d)){const n=f(d),o=`${e}&algorand=true`,{shouldUseSound:r}=t;n.innerHTML=`<defly-wallet-connect-modal uri=\"${o}\" should-use-sound=\"${r}\"></defly-wallet-connect-modal>`}}),close:()=>v(d)};var t}\"undefined\"!=typeof window&&(window.global=window,window.Buffer=window.Buffer||require(\"buffer\").Buffer,Promise.resolve().then((function(){return require(\"./App-cff5e450.js\")}))),exports.DEFLY_WALLET_CONNECT_MODAL_ID=d,exports.DEFLY_WALLET_MODAL_CLASSNAME=h,exports.DEFLY_WALLET_REDIRECT_MODAL_ID=a,exports.DEFLY_WALLET_SIGN_TXN_MODAL_ID=\"defly-wallet-sign-txn-modal-wrapper\",exports.DEFLY_WALLET_SIGN_TXN_TOAST_ID=u,exports.DeflyWalletConnect=class{constructor(e){this.bridge=(null==e?void 0:e.bridge)||\"\",this.connector=null,this.shouldShowSignTxnToast=void 0===(null==e?void 0:e.shouldShowSignTxnToast)||e.shouldShowSignTxnToast,this.chainId=null==e?void 0:e.chainId}get platform(){return w()}get isConnected(){return\"mobile\"===this.platform&&!!this.connector}connect(){return new Promise(((e,t)=>s(this,void 0,void 0,(function*(){var n;try{if(null===(n=this.connector)||void 0===n?void 0:n.connected)try{yield this.connector.killSession()}catch(e){}const{bridgeURL:o,shouldUseSound:i}=yield T();this.connector=new r.default({bridge:this.bridge||o||\"https://bridge.walletconnect.org\",storageId:m,qrcodeModal:D({shouldUseSound:i})}),yield this.connector.createSession({chainId:this.chainId||4160}),function(e){var t,n,o,r;const i=document.getElementById(d),l=null===(n=null===(t=null==i?void 0:i.querySelector(\"defly-wallet-connect-modal\"))||void 0===t?void 0:t.shadowRoot)||void 0===n?void 0:n.querySelector(`.${h}`),s=null===(r=null===(o=null==l?void 0:l.querySelector(\"defly-wallet-modal-header\"))||void 0===o?void 0:o.shadowRoot)||void 0===r?void 0:r.getElementById(\"defly-wallet-modal-header-close-button\");null==s||s.addEventListener(\"click\",(()=>{e(),v(d)}))}((()=>t(new c({type:\"CONNECT_MODAL_CLOSED\"},\"Connect modal is closed by user\")))),this.connector.on(\"connect\",((n,o)=>{var r,i;n&&t(n),e((null===(r=this.connector)||void 0===r?void 0:r.accounts)||[]),function(e,t){var n;null===(n=y())||void 0===n||n.setItem(g,JSON.stringify({type:t||\"defly-wallet\",accounts:e,selectedAccount:e[0]}))}((null===(i=this.connector)||void 0===i?void 0:i.accounts)||[])}))}catch(e){t(new c({type:\"SESSION_CONNECT\",detail:e},e.message||\"There was an error while connecting to Defly Wallet\"))}}))))}reconnectSession(){return new Promise(((e,t)=>s(this,void 0,void 0,(function*(){var n,o;try{this.connector&&e(this.connector.accounts||[]),this.bridge=(null===(n=function(){var e;const t=null===(e=y())||void 0===e?void 0:e.getItem(m);return t?JSON.parse(t):null}())||void 0===n?void 0:n.bridge)||\"\",this.bridge&&(this.connector=new r.default({bridge:this.bridge}),e((null===(o=this.connector)||void 0===o?void 0:o.accounts)||[])),this.isConnected||e([])}catch(e){yield this.disconnect(),t(new c({type:\"SESSION_RECONNECT\",detail:e},e.message||\"There was an error while reconnecting to Defly Wallet\"))}}))))}disconnect(){var e;return s(this,void 0,void 0,(function*(){let t;this.isConnected&&\"mobile\"===this.platform&&(t=null===(e=this.connector)||void 0===e?void 0:e.killSession(),null==t||t.then((()=>{this.connector=null}))),yield new Promise(((e,t)=>{var n,o;try{null===(n=y())||void 0===n||n.removeItem(m),null===(o=y())||void 0===o||o.removeItem(g),e(void 0)}catch(e){t(e)}}))}))}signTransactionWithMobile(e){return s(this,void 0,void 0,(function*(){const t=(n=\"algo_signTxn\",o=[e],{id:Date.now()*Math.pow(10,3)+Math.floor(Math.random()*Math.pow(10,3)),jsonrpc:\"2.0\",method:n,params:o});var n,o;try{try{const{silent:e}=yield T(),n=(yield this.connector.sendCustomRequest(t,{forcePushNotification:!e})).filter(Boolean);return\"string\"==typeof n[0]?n.map(b):n.map((e=>Uint8Array.from(e)))}catch(e){return yield Promise.reject(new c({type:\"SIGN_TRANSACTIONS\",detail:e},e.message||\"Failed to sign transaction\"))}}finally{v(a),v(u)}}))}signTransaction(e,t){return s(this,void 0,void 0,(function*(){if(\"mobile\"===this.platform&&(E()?f(a).innerHTML=\"<defly-wallet-redirect-modal></defly-wallet-redirect-modal>\":!E()&&this.shouldShowSignTxnToast&&(f(u).innerHTML=\"<defly-wallet-sign-txn-toast></defly-wallet-sign-txn-toast>\"),!this.connector))throw new Error(\"DeflyWalletConnect was not initialized correctly.\");const n=e.flatMap((e=>e.map((e=>function(e,t){let n;t&&!(e.signers||[]).includes(t)&&(n=[]);const o={txn:(r=e.txn,Buffer.from(i.default.encodeUnsignedTransaction(r)).toString(\"base64\"))};var r;return Array.isArray(n)&&(o.signers=n),e.authAddr&&(o.authAddr=e.authAddr),e.message&&(o.message=e.message),e.msig&&(o.msig=e.msig),o}(e,t)))));return this.signTransactionWithMobile(n)}))}},exports.closeDeflyWalletSignTxnToast=function(){v(u)},exports.detectBrowser=function(){if(!A())return null;const{userAgent:e}=navigator;let t;return t=e.match(/DuckDuckGo/i)?\"DuckDuckGo\":e.match(/OPX/i)?\"Opera GX\":navigator.brave?\"Brave\":l.default.getParser(navigator.userAgent).getBrowserName(),t},exports.isAndroid=function(){return A()&&/Android/i.test(navigator.userAgent)},exports.isIOS=function(){return A()&&/iPhone|iPad|iPod/i.test(navigator.userAgent)},exports.isMobile=E,exports.removeModalWrapperFromDOM=v;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./index-bcf8d0cd.js\");require(\"@walletconnect/client\"),require(\"algosdk\"),require(\"bowser\"),exports.DeflyWalletConnect=e.DeflyWalletConnect,exports.closeDeflyWalletSignTxnToast=e.closeDeflyWalletSignTxnToast;\n","import {\n  BlockTag,\n  EventType,\n  TransactionReceipt\n} from '@ethersproject/abstract-provider';\nimport { BigNumberish } from '@ethersproject/bignumber';\n\nimport { BaseNft, Nft, NftContract } from '../api/nft';\n\nexport * from './ethers-types';\n\n// TODO: separate this file into other files.\n\n/**\n * Options object used to configure the Alchemy SDK.\n *\n * @public\n */\nexport interface AlchemySettings {\n  /**\n   * The Alchemy API key that can be found in the Alchemy dashboard.\n   *\n   * Defaults to: \"demo\" (a rate-limited public API key)\n   */\n  apiKey?: string;\n\n  /**\n   * The name of the network. Once configured, the network cannot be changed. To\n   * use a different network, instantiate a new `Alchemy` instance.\n   *\n   * Defaults to: Network.ETH_MAINNET\n   */\n  network?: Network;\n\n  /** The maximum number of retries to attempt if a request fails. Defaults to 5. */\n  maxRetries?: number;\n\n  /**\n   * Optional URL endpoint to use for all requests. Setting this field will\n   * override the URL generated by the {@link network} and {@link apiKey} fields.\n   *\n   * This field is useful for testing or for using a custom node endpoint. Note\n   * that not all methods will work with custom URLs.\n   */\n  url?: string;\n\n  /**\n   * Alchemy auth token required to use the Notify API. This token can be found\n   * in the Alchemy Dashboard on the Notify tab.\n   */\n  authToken?: string;\n\n  /**\n   * Optional Request timeout provided in `ms` while using NFT and NOTIFY API.\n   * Default to 0 (No timeout).\n   */\n  requestTimeout?: number;\n\n  /**\n   * Optional setting that automatically batches and sends json-rpc requests for\n   * higher throughput and reduced network IO. Defaults to false.\n   *\n   * This implementation is based on the `JsonRpcBatchProvider` in ethers.\n   */\n  batchRequests?: boolean;\n}\n\n/**\n * The supported networks by Alchemy. Note that some functions are not available\n * on all networks. Please refer to the Alchemy documentation for which APIs are\n * available on which networks\n * {@link https://docs.alchemy.com/alchemy/apis/feature-support-by-chain}\n *\n * @public\n */\nexport enum Network {\n  ETH_MAINNET = 'eth-mainnet',\n  /** @deprecated - Will be removed in subsequent versions */\n  ETH_ROPSTEN = 'eth-ropsten',\n  ETH_GOERLI = 'eth-goerli',\n  /** @deprecated - Will be removed in subsequent versions */\n  ETH_KOVAN = 'eth-kovan',\n  /** @deprecated - Will be removed in subsequent versions */\n  ETH_RINKEBY = 'eth-rinkeby',\n  ETH_SEPOLIA = 'eth-sepolia',\n  OPT_MAINNET = 'opt-mainnet',\n  /** @deprecated - Will be removed in subsequent versions */\n  OPT_KOVAN = 'opt-kovan',\n  OPT_GOERLI = 'opt-goerli',\n  ARB_MAINNET = 'arb-mainnet',\n  /** @deprecated - Will be removed in subsequent versions */\n  ARB_RINKEBY = 'arb-rinkeby',\n  ARB_GOERLI = 'arb-goerli',\n  MATIC_MAINNET = 'polygon-mainnet',\n  MATIC_MUMBAI = 'polygon-mumbai',\n  ASTAR_MAINNET = 'astar-mainnet',\n  POLYGONZKEVM_MAINNET = 'polygonzkevm-mainnet',\n  POLYGONZKEVM_TESTNET = 'polygonzkevm-testnet'\n}\n\n/** Token Types for the `getTokenBalances()` endpoint. */\nexport enum TokenBalanceType {\n  /**\n   * Option to fetch the top 100 tokens by 24-hour volume. This option is only\n   * available on Mainnet in Ethereum, Polygon, and Arbitrum.\n   */\n  DEFAULT_TOKENS = 'DEFAULT_TOKENS',\n\n  /**\n   * Option to fetch the set of ERC-20 tokens that the address as ever held. his\n   * list is produced by an address's historical transfer activity and includes\n   * all tokens that the address has ever received.\n   */\n  ERC20 = 'erc20'\n}\n\n/**\n * Optional params to pass into `getTokenBalances()` to fetch all ERC-20 tokens\n * instead of passing in an array of contract addresses to fetch balances for.\n */\nexport interface TokenBalancesOptionsErc20 {\n  /** The ERC-20 token type. */\n  type: TokenBalanceType.ERC20;\n\n  /** Optional page key for pagination (only applicable to TokenBalanceType.ERC20) */\n  pageKey?: string;\n}\n\n/**\n * Optional params to pass into `getTokenBalances()` to fetch the top 100 tokens\n * instead of passing in an array of contract addresses to fetch balances for.\n */\nexport interface TokenBalancesOptionsDefaultTokens {\n  /** The top 100 token type. */\n  type: TokenBalanceType.DEFAULT_TOKENS;\n}\n\n/**\n * Response object for when the {@link TokenBalancesOptionsErc20} options are\n * used. A page key may be returned if the provided address has many transfers.\n */\nexport interface TokenBalancesResponseErc20 extends TokenBalancesResponse {\n  /**\n   * An optional page key to passed into the next request to fetch the next page\n   * of token balances.\n   */\n  pageKey?: string;\n}\n\n/** @public */\nexport interface TokenBalancesResponse {\n  address: string;\n  tokenBalances: TokenBalance[];\n}\n\n/** @public */\nexport type TokenBalance = TokenBalanceSuccess | TokenBalanceFailure;\n\n/** @public */\nexport interface TokenBalanceSuccess {\n  contractAddress: string;\n  tokenBalance: string;\n  error: null;\n}\n\n/** @public */\nexport interface TokenBalanceFailure {\n  contractAddress: string;\n  tokenBalance: null;\n  error: string;\n}\n\n/**\n * Optional params to pass into {@link CoreNamespace.getTokensForOwner}.\n */\nexport interface GetTokensForOwnerOptions {\n  /**\n   * List of contract addresses to filter by. If omitted, defaults to\n   * {@link TokenBalanceType.ERC20}.\n   */\n  contractAddresses?: string[] | TokenBalanceType;\n  /**\n   * Optional page key from an existing {@link GetTokensForOwnerResponse} to use for\n   * pagination.\n   */\n  pageKey?: string;\n}\n\n/**\n * Response object for {@link CoreNamespace.getTokensForOwner}.\n */\nexport interface GetTokensForOwnerResponse {\n  /** Owned tokens for the provided addresses along with relevant metadata. */\n  tokens: OwnedToken[];\n  /** Page key for the next page of results, if one exists. */\n  pageKey?: string;\n}\n\n/**\n * Represents an owned token on a {@link GetTokensForOwnerResponse}.\n */\nexport interface OwnedToken {\n  /** The contract address of the token. */\n  contractAddress: string;\n  /**\n   * The raw value of the balance field as a hex string. This value is undefined\n   * if the {@link error} field is present.\n   */\n  rawBalance?: string;\n  /**\n   * The formatted value of the balance field as a hex string. This value is\n   * undefined if the {@link error} field is present, or if the `decimals` field=\n   * is undefined.\n   */\n  balance?: string;\n  /** */\n  /**\n   * The token's name. Is undefined if the name is not defined in the contract and\n   * not available from other sources.\n   */\n  name?: string;\n  /**\n   * The token's symbol. Is undefined if the symbol is not defined in the contract\n   * and not available from other sources.\n   */\n  symbol?: string;\n  /**\n   * The number of decimals of the token. Is undefined if not defined in the\n   * contract and not available from other sources.\n   */\n  decimals?: number;\n  /** URL link to the token's logo. Is undefined if the logo is not available. */\n  logo?: string;\n  /**\n   * Error from fetching the token balances. If this field is defined, none of\n   * the other fields will be defined.\n   */\n  error?: string;\n}\n\n/**\n * Response object for the {@link CoreNamespace.getTokenMetadata} method.\n *\n * @public\n */\nexport interface TokenMetadataResponse {\n  /**\n   * The token's name. Is `null` if the name is not defined in the contract and\n   * not available from other sources.\n   */\n  name: string | null;\n\n  /**\n   * The token's symbol. Is `null` if the symbol is not defined in the contract\n   * and not available from other sources.\n   */\n  symbol: string | null;\n\n  /**\n   * The number of decimals of the token. Returns `null` if not defined in the\n   * contract and not available from other sources.\n   */\n  decimals: number | null;\n\n  /** URL link to the token's logo. Is `null` if the logo is not available. */\n  logo: string | null;\n}\n\n/**\n * Parameters for the {@link CoreNamespace.getAssetTransfers} method.\n *\n * @public\n */\nexport interface AssetTransfersParams {\n  /**\n   * The starting block to check for transfers. This value is inclusive and\n   * defaults to `0x0` if omitted.\n   */\n  fromBlock?: string;\n\n  /**\n   * The ending block to check for transfers. This value is inclusive and\n   * defaults to the latest block if omitted.\n   */\n  toBlock?: string;\n\n  /**\n   * Whether to return results in ascending or descending order by block number.\n   * Defaults to ascending if omitted.\n   */\n  order?: SortingOrder;\n\n  /**\n   * The from address to filter transfers by. This value defaults to a wildcard\n   * for all addresses if omitted.\n   */\n  fromAddress?: string;\n\n  /**\n   * The to address to filter transfers by. This value defaults to a wildcard\n   * for all address if omitted.\n   */\n  toAddress?: string;\n\n  /**\n   * List of contract addresses to filter for - only applies to \"erc20\",\n   * \"erc721\", \"erc1155\" transfers. Defaults to all address if omitted.\n   */\n  contractAddresses?: string[];\n\n  /**\n   * Whether to exclude transfers with zero value. Note that zero value is\n   * different than null value. Defaults to `true` if omitted.\n   */\n  excludeZeroValue?: boolean;\n\n  /** REQUIRED field. An array of categories to get transfers for. */\n  category: AssetTransfersCategory[];\n\n  /** The maximum number of results to return per page. Defaults to 1000 if omitted. */\n  maxCount?: number;\n\n  /**\n   * Optional page key from an existing {@link OwnedBaseNftsResponse}\n   * {@link AssetTransfersResult}to use for pagination.\n   */\n  pageKey?: string;\n\n  /**\n   * Whether to include additional metadata about each transfer event. Defaults\n   * to `false` if omitted.\n   */\n  withMetadata?: boolean;\n}\n\n/**\n * Parameters for the {@link CoreNamespace.getAssetTransfers} method that\n * includes metadata.\n *\n * @public\n */\nexport interface AssetTransfersWithMetadataParams extends AssetTransfersParams {\n  withMetadata: true;\n}\n\n/**\n * Categories of transfers to use with the {@link AssetTransfersParams} request\n * object when using {@link CoreNamespace.getAssetTransfers}.\n *\n * @public\n */\nexport enum AssetTransfersCategory {\n  /**\n   * Top level ETH transactions that occur where the `fromAddress` is an\n   * external user-created address. External addresses have private keys and are\n   * accessed by users.\n   */\n  EXTERNAL = 'external',\n\n  /**\n   * Top level ETH transactions that occur where the `fromAddress` is an\n   * internal, smart contract address. For example, a smart contract calling\n   * another smart contract or sending\n   */\n  INTERNAL = 'internal',\n\n  /** ERC20 transfers. */\n  ERC20 = 'erc20',\n\n  /** ERC721 transfers. */\n  ERC721 = 'erc721',\n\n  /** ERC1155 transfers. */\n  ERC1155 = 'erc1155',\n\n  /** Special contracts that don't follow ERC 721/1155, (ex: CryptoKitties). */\n  SPECIALNFT = 'specialnft'\n}\n\n/**\n * Enum for the order of the {@link AssetTransfersParams} request object when\n * using {@link CoreNamespace.getAssetTransfers}.\n *\n * @deprecated Use {@link SortingOrder} instead. This enum will be removed in a\n *   future version.\n * @public\n */\nexport enum AssetTransfersOrder {\n  ASCENDING = 'asc',\n  DESCENDING = 'desc'\n}\n\n/**\n * An enum for specifying the token type on NFTs.\n *\n * @public\n */\nexport enum NftTokenType {\n  ERC721 = 'ERC721',\n  ERC1155 = 'ERC1155',\n  NO_SUPPORTED_NFT_STANDARD = 'NO_SUPPORTED_NFT_STANDARD',\n  NOT_A_CONTRACT = 'NOT_A_CONTRACT',\n  UNKNOWN = 'UNKNOWN'\n}\n\n/**\n * Response object for the {@link CoreNamespace.getAssetTransfers} method.\n *\n * @public\n */\nexport interface AssetTransfersResponse {\n  transfers: AssetTransfersResult[];\n  /** Page key for the next page of results, if one exists. */\n  pageKey?: string;\n}\n\n/**\n * Response object for the {@link CoreNamespace.getAssetTransfers} method when\n * the {@link AssetTransfersWithMetadataParams} are used.\n *\n * @public\n */\nexport interface AssetTransfersWithMetadataResponse {\n  transfers: AssetTransfersWithMetadataResult[];\n  pageKey?: string;\n}\n\n/**\n * Represents a transfer event that is returned in a {@link AssetTransfersResponse}.\n *\n * @public\n */\nexport interface AssetTransfersResult {\n  /** The unique ID of the transfer. */\n  uniqueId: string;\n\n  /** The category of the transfer. */\n  category: AssetTransfersCategory;\n\n  /** The block number where the transfer occurred. */\n  blockNum: string;\n\n  /** The from address of the transfer. */\n  from: string;\n\n  /** The to address of the transfer. */\n  to: string | null;\n\n  /**\n   * Converted asset transfer value as a number (raw value divided by contract\n   * decimal). `null` if ERC721 transfer or contract decimal not available.\n   */\n  value: number | null;\n\n  /**\n   * The raw ERC721 token id of the transfer as a hex string. `null` if not an\n   * ERC721 transfer.\n   */\n  erc721TokenId: string | null;\n\n  /**\n   * A list of ERC1155 metadata objects if the asset transferred is an ERC1155\n   * token. `null` if not an ERC1155 transfer.\n   */\n  erc1155Metadata: ERC1155Metadata[] | null;\n\n  /** The token id of the token transferred. */\n  tokenId: string | null;\n\n  /**\n   * Returns the token's symbol or ETH for other transfers. `null` if the\n   * information was not available.\n   */\n  asset: string | null;\n\n  /** The transaction hash of the transfer transaction. */\n  hash: string;\n\n  /** Information about the raw contract of the asset transferred. */\n  rawContract: RawContract;\n}\n\n/**\n * Represents a transfer event that is returned in a\n * {@link AssetTransfersResponse} when {@link AssetTransfersWithMetadataParams} are used.\n *\n * @public\n */\nexport interface AssetTransfersWithMetadataResult extends AssetTransfersResult {\n  /** Additional metadata about the transfer event. */\n  metadata: AssetTransfersMetadata;\n}\n\n/**\n * The metadata object for a {@link AssetTransfersResult} when the\n * {@link AssetTransfersParams.withMetadata} field is set to true.\n *\n * @public\n */\nexport interface AssetTransfersMetadata {\n  /** Timestamp of the block from which the transaction event originated. */\n  blockTimestamp: string;\n}\n\n/**\n * Represents NFT metadata that holds fields. Note that since there is no\n * standard metadata format, the fields are not guaranteed to be present.\n *\n * @public\n */\nexport interface NftMetadata extends Record<string, any> {\n  /** Name of the NFT asset. */\n  name?: string;\n\n  /** A human-readable description of the NFT asset. */\n  description?: string;\n\n  /** URL to the NFT asset image. */\n  image?: string;\n\n  /**\n   * The image URL that appears along the top of the NFT asset page. This tends\n   * to be the highest resolution image.\n   */\n  external_url?: string;\n\n  /** Background color of the NFT item. Usually defined as a 6 character hex string. */\n  background_color?: string;\n\n  /** The traits, attributes, and characteristics for the NFT asset. */\n  attributes?: Array<Record<string, any>>;\n}\n\n/**\n * Represents the URI information the NFT's metadata.\n *\n * @public\n */\nexport interface TokenUri {\n  /**\n   * URI for the location of the NFT's original metadata blob (ex: the original\n   * IPFS link).\n   */\n  raw: string;\n\n  /** Public gateway URI for the raw URI. Generally offers better performance. */\n  gateway: string;\n}\n\n/**\n * Represents the URI information for the NFT's media assets.\n *\n * @public\n */\nexport interface Media {\n  /**\n   * URI for the location of the NFT's original metadata blob for media (ex: the\n   * original IPFS link).\n   */\n  raw: string;\n\n  /** Public gateway URI for the raw URI. Generally offers better performance. */\n  gateway: string;\n\n  /** URL for a resized thumbnail of the NFT media asset. */\n  thumbnail?: string;\n\n  /**\n   * The media format (ex: jpg, gif, png) of the {@link gateway} and\n   * {@link thumbnail} assets.\n   */\n  format?: string;\n\n  /**\n   * DEPRECATED - The size of the media asset in bytes\n   *\n   * @deprecated - Please use {@link bytes} instead. This field will be removed\n   *   in a subsequent release.\n   */\n  size?: number;\n\n  /** The size of the media asset in bytes. */\n  bytes?: number;\n}\n\n/** Potential reasons why an NFT contract was classified as spam. */\nexport enum NftSpamClassification {\n  Erc721TooManyOwners = 'Erc721TooManyOwners',\n  Erc721TooManyTokens = 'Erc721TooManyTokens',\n  Erc721DishonestTotalSupply = 'Erc721DishonestTotalSupply',\n  MostlyHoneyPotOwners = 'MostlyHoneyPotOwners',\n  OwnedByMostHoneyPots = 'OwnedByMostHoneyPots'\n}\n\n/** Detailed information on whether and why an NFT contract was classified as spam. */\nexport interface SpamInfo {\n  isSpam: boolean;\n\n  /** A list of reasons why an NFT contract was marked as spam. */\n  classifications: NftSpamClassification[];\n}\n\n/**\n * Optional parameters object for the {@link getNftsForOwner} and\n * {@link getNftsForOwnerIterator} functions.\n *\n * This interface is used to fetch NFTs with their associated metadata. To get\n * Nfts without their associated metadata, use {@link GetBaseNftsForOwnerOptions}.\n *\n * @public\n */\nexport interface GetNftsForOwnerOptions {\n  /**\n   * Optional page key from an existing {@link OwnedBaseNftsResponse} or\n   * {@link OwnedNftsResponse}to use for pagination.\n   */\n  pageKey?: string;\n\n  /** Optional list of contract addresses to filter the results by. Limit is 20. */\n  contractAddresses?: string[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are excluded from the response.\n   */\n  excludeFilters?: NftFilters[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are included in the response.\n   */\n  includeFilters?: NftFilters[];\n\n  /**\n   * Sets the total number of NFTs to return in the response. Defaults to 100.\n   * Maximum page size is 100.\n   */\n  pageSize?: number;\n\n  /** Optional boolean flag to omit NFT metadata. Defaults to `false`. */\n  omitMetadata?: boolean;\n\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n\n  /**\n   * Order in which to return results. By default, results are ordered by\n   * contract address and token ID in lexicographic order.\n   */\n  orderBy?: NftOrdering;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForOwner} and\n * {@link getNftsForOwnerIterator} functions.\n *\n * This interface is used to fetch NFTs without their associated metadata. To\n * get Nfts with their associated metadata, use {@link GetNftsForOwnerOptions}.\n *\n * @public\n */\nexport interface GetBaseNftsForOwnerOptions {\n  /**\n   * Optional page key from an existing {@link OwnedBaseNftsResponse} or\n   * {@link OwnedNftsResponse}to use for pagination.\n   */\n  pageKey?: string;\n\n  /** Optional list of contract addresses to filter the results by. Limit is 20. */\n  contractAddresses?: string[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are excluded from the response.\n   */\n  excludeFilters?: NftFilters[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are included in the response.\n   */\n  includeFilters?: NftFilters[];\n\n  /**\n   * Sets the total number of NFTs to return in the response. Defaults to 100.\n   * Maximum page size is 100.\n   */\n  pageSize?: number;\n\n  /** Optional boolean flag to include NFT metadata. Defaults to `false`. */\n  omitMetadata: true;\n\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n\n  /**\n   * Order in which to return results. By default, results are ordered by\n   * contract address and token ID in lexicographic order.\n   */\n  orderBy?: NftOrdering;\n}\n\n/**\n * Enum of NFT filters that can be applied to a {@link getNftsForOwner} request.\n * NFTs that match one or more of these filters are excluded from the response.\n *\n * @deprecated Use {@link NftFilters} instead. This enum will be removed in a\n *   future version.\n *\n * @beta\n */\nexport enum NftExcludeFilters {\n  /** Exclude NFTs that have been classified as spam. */\n  SPAM = 'SPAM',\n\n  /** Exclude NFTs that have been airdropped to a user. */\n  AIRDROPS = 'AIRDROPS'\n}\n\n/**\n * Enum of NFT filters that can be applied to a {@link getNftsForOwner} or a\n * {@link getContractsForOwner} request.\n *\n * @beta\n */\nexport enum NftFilters {\n  /** NFTs that have been classified as spam. */\n  SPAM = 'SPAM',\n\n  /** NFTs that have been airdropped to a user. */\n  AIRDROPS = 'AIRDROPS'\n}\n\n/**\n * Enum of ordering that can be applied to a {@link getNftsForOwner} or a\n * {@link getContractsForOwner} response.\n *\n * @beta\n */\nexport enum NftOrdering {\n  TRANSFERTIME = 'TRANSFERTIME'\n}\n\n/**\n * The response object for the {@link getNftsForOwner} and\n * {@link getNftsForOwnerIterator} functions. The object contains the NFTs with\n * metadata owned by the provided address, along with pagination information and\n * the total count.\n *\n * @public\n */\nexport interface OwnedNftsResponse {\n  /** The NFTs owned by the provided address. */\n  readonly ownedNfts: OwnedNft[];\n\n  /**\n   * Pagination token that can be passed into another request to fetch the next\n   * NFTs. If there is no page key, then there are no more NFTs to fetch.\n   */\n  readonly pageKey?: string;\n\n  /** The total count of NFTs owned by the provided address. */\n  readonly totalCount: number;\n\n  /** The canonical head block hash of when your request was received. */\n  blockHash: string;\n}\n\n/**\n * The response object for the {@link getNftsForOwner} and\n * {@link getNftsForOwnerIterator} functions. The object contains the NFTs\n * without metadata owned by the provided address, along with pagination\n * information and the total count.\n *\n * @public\n */\nexport interface OwnedBaseNftsResponse {\n  /** The NFTs owned by the provided address. */\n  readonly ownedNfts: OwnedBaseNft[];\n\n  /**\n   * Pagination token that can be passed into another request to fetch the next\n   * NFTs. If there is no page key, then there are no more NFTs to fetch.\n   */\n  readonly pageKey?: string;\n\n  /** The total count of NFTs owned by the provided address. */\n  readonly totalCount: number;\n\n  /** The canonical head block hash of when your request was received. */\n  blockHash: string;\n}\n\n/**\n * Represents an NFT with metadata owned by an address.\n *\n * @public\n */\nexport interface OwnedNft extends Nft {\n  /** The token balance of the NFT. */\n  readonly balance: number;\n}\n\n/**\n * Represents an NFT without metadata owned by an address.\n *\n * @public\n */\nexport interface OwnedBaseNft extends BaseNft {\n  /** The token balance of the NFT. */\n  readonly balance: number;\n}\n\n/**\n * The response object for the {@link getOwnersForNft}.\n *\n * @public\n */\nexport interface GetOwnersForNftResponse {\n  /** An array of owner addresses for the provided token. */\n  readonly owners: string[];\n\n  /** Optional The key for the next page of results, if applicable. */\n  readonly pageKey?: string;\n}\n\n/**\n * The response object for the {@link getOwnersForContract}.\n *\n * @public\n */\nexport interface GetOwnersForContractResponse {\n  /** An array of owner addresses for the provided contract address */\n  owners: string[];\n}\n\n/**\n * The response object for the {@link getOwnersForContract}.\n *\n * @public\n */\nexport interface GetOwnersForContractWithTokenBalancesResponse {\n  /** An array of owner addresses for the provided contract address */\n  owners: NftContractOwner[];\n\n  /** Optional page key that is returned when a collection has more than 50,000 owners. */\n  pageKey?: string;\n}\n\n/**\n * An object representing the owner of an NFT and its corresponding token\n * balances in a {@link GetOwnersForContractWithTokenBalancesResponse} object.\n */\nexport interface NftContractOwner {\n  /** The NFT's owner address. */\n  ownerAddress: string;\n\n  /** A list of objects containing token balances for the provided NFT contract. */\n  tokenBalances: NftContractTokenBalance[];\n}\n\n/**\n * An object representing the owned token and balance values in a\n * {@link GetOwnersForContractWithTokenBalancesResponse} object.\n */\nexport interface NftContractTokenBalance {\n  /** The token id owned in the NFT contract. */\n  tokenId: string;\n\n  /** The token Id balance for the provided owner. */\n  balance: number;\n}\n\n/**\n * Additional options for the {@link NftNamespace.getNftMetadata} method.\n */\nexport interface GetNftMetadataOptions {\n  /** Optional field to specify the type of token to speed up the query. */\n  tokenType?: NftTokenType;\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n\n  /**\n   * Whether to refresh the metadata for the given NFT token before returning\n   * the response. Defaults to false for faster response times.\n   */\n  refreshCache?: boolean;\n}\n\n/**\n * Represents an NFT token to fetch metadata for in a\n * {@link NftNamespace.getNftMetadataBatch} method.\n */\nexport interface NftMetadataBatchToken {\n  /** The NFT contract address. Limited to ERC721 and ERC1155 tokens. */\n  contractAddress: string;\n\n  /** The id of the NFT. */\n  tokenId: BigNumberish;\n\n  /** Optional field to specify the type of token to speed up the query. */\n  tokenType?: NftTokenType.ERC1155 | NftTokenType.ERC721;\n}\n\n/** Additional options for the {@link NftNamespace.getNftMetadataBatch} method. */\nexport interface NftMetadataBatchOptions {\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n\n  /**\n   * Whether to refresh the metadata for the given NFT token before returning\n   * the response. Defaults to false for faster response times.\n   */\n  refreshCache?: boolean;\n}\n\n/**\n * The successful object returned by the {@link getFloorPrice} call for each\n * marketplace (e.g. looksRare).\n *\n * @public\n */\nexport interface FloorPriceMarketplace {\n  /** The floor price of the collection on the given marketplace */\n  readonly floorPrice: number;\n  /** The currency in which the floor price is denominated */\n  readonly priceCurrency: string;\n  /** The link to the collection on the given marketplace */\n  readonly collectionUrl: string;\n  /** UTC timestamp of when the floor price was retrieved from the marketplace */\n  readonly retrievedAt: string;\n}\n\n/**\n * The failing object returned by the {@link getFloorPrice} call for each\n * marketplace (e.g. looksRare).\n *\n * @public\n */\nexport interface FloorPriceError {\n  /** Error fetching floor prices from the given marketplace */\n  readonly error: string;\n}\n\n/**\n * The response object for the {@link getFloorPrice} method.\n *\n * @public\n */\nexport interface GetFloorPriceResponse {\n  /**\n   * Name of the NFT marketplace where the collection is listed. Current\n   * marketplaces supported: OpenSea, LooksRare\n   */\n  readonly openSea: FloorPriceMarketplace | FloorPriceError;\n  readonly looksRare: FloorPriceMarketplace | FloorPriceError;\n}\n\n/**\n * Optional parameters object for the the {@link getContractsForOwner} method\n *\n * @public\n */\nexport interface GetContractsForOwnerOptions {\n  /** Key for pagination to use to fetch results from the next page if available. */\n  pageKey?: string;\n\n  /**\n   * Configure the number of NFTs to return in each response. Maximum pages size\n   * is 100. Defaults to 100.\n   */\n  pageSize?: number;\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are included in the response. May not be used in\n   * conjunction with {@link excludeFilters}.\n   */\n  includeFilters?: NftFilters[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are excluded from the response. May not be used in\n   * conjunction with {@link includeFilters}\n   */\n  excludeFilters?: NftFilters[];\n\n  /**\n   * Order in which to return results. By default, results are ordered by\n   * contract address and token ID in lexicographic order.\n   */\n  orderBy?: NftOrdering;\n}\n\n/**\n * The response for the {@link NftNamespace.getContractsForOwner} method.\n *\n * @public\n */\nexport interface GetContractsForOwnerResponse {\n  /** The list of contracts, that match the query, held by the given address. */\n  contracts: ContractForOwner[];\n\n  /** Key for pagination to use to fetch results from the next page if available. */\n  pageKey?: string;\n\n  /** Total number of NFT contracts held by the given address. */\n  totalCount: number;\n}\n\n/** Represents a single NFT contract data in the {@link GetContractsForOwnerResponse}. */\nexport interface ContractForOwner extends NftContract {\n  /**\n   * Sum of NFT balances across all token IDs held by the owner. For\n   * non-fungible tokens this will be equal to the numDistinctTokensOwned, but\n   * it may be higher if the user holds some fungible ERC1155 tokens.\n   */\n  totalBalance: number;\n\n  /** The title of the token held by the owner. */\n  title: string;\n\n  /**\n   * Number of distinct token IDs held by the owner. For non-fungible tokens\n   * this will be equal to the totalBalance, but it may be lower if the user\n   * holds some fungible ERC1155 tokens.\n   */\n  numDistinctTokensOwned: number;\n\n  isSpam: boolean;\n\n  /** One of the tokens from this contract held by the owner. */\n  tokenId: string;\n\n  /** Alternative NFT metadata for this contract to be parsed manually. */\n  media: Media[];\n}\n\n/**\n * The type of transfer for the request. Note that using `TO` will also include\n * NFTs that were minted by the owner.\n */\nexport enum GetTransfersForOwnerTransferType {\n  'TO' = 'TO',\n  'FROM' = 'FROM'\n}\n\n/**\n * Optional parameters object for the {@link NftNamespace.getTransfersForOwner} method.\n */\nexport interface GetTransfersForOwnerOptions {\n  /**\n   * List of NFT contract addresses to filter mints by. If omitted, defaults to\n   * all contract addresses.\n   */\n  contractAddresses?: string[];\n\n  /**\n   * Filter mints by ERC721 vs ERC1155 contracts. If omitted, defaults to all\n   * NFTs.\n   */\n  tokenType?: NftTokenType.ERC1155 | NftTokenType.ERC721;\n\n  /**\n   * Optional page key from an existing {@link TransfersNftResponse} to use for\n   * pagination.\n   */\n  pageKey?: string;\n}\n\n/**\n * Optional parameters object for the {@link NftNamespace.getTransfersForOwner}\n * method.\n */\nexport interface GetTransfersForContractOptions {\n  /** Starting block (inclusive) to get transfers from. */\n  fromBlock?: BlockTag;\n  /** Ending block (inclusive) to get transfers from. */\n  toBlock?: BlockTag;\n  /**\n   * Whether to return results in ascending or descending order by block number.\n   * Defaults to ascending if omitted.\n   */\n  order?: SortingOrder;\n  /**\n   * Optional page key from an existing {@link TransfersNftResponse} to use for\n   * pagination.\n   */\n  pageKey?: string;\n}\n\n/**\n * Response object for NFT methods that fetch NFTs that were transferred or\n * minted (ex: {@link NftNamespace.getTransfersForOwner} or\n * {@link NftNamespace.getMintedNfts}).\n */\nexport interface TransfersNftResponse {\n  /** An array of NFTs.*/\n  nfts: TransferredNft[];\n  /** Optional page key to use to fetch the next group of NFTs. */\n  pageKey?: string;\n}\n\n/**\n * NFT with extra data for a single NFT that was transferred or minted.\n */\nexport interface TransferredNft extends Nft {\n  /**\n   * The address the NFT was from. For minted NFTs, this field is the set to\n   * `0x0000000000000000000000000000000000000000`.\n   **/\n  from: string;\n  /** The address the NFT was sent or minted to. */\n  to?: string;\n  /** The transaction hash where the transfer or mint occurred. */\n  transactionHash: string;\n  /** The block number as a hex string of when the transfer or mint occurred. */\n  blockNumber: string;\n}\n\n/**\n * Optional parameters object for the {@link NftNamespace.getMintedNfts} method.\n */\nexport interface GetMintedNftsOptions {\n  /**\n   * List of NFT contract addresses to filter mints by. If omitted, defaults to\n   * all contract addresses.\n   */\n  contractAddresses?: string[];\n\n  /**\n   * Filter mints by ERC721 vs ERC1155 contracts. If omitted, defaults to all\n   * NFTs.\n   */\n  tokenType?: NftTokenType.ERC1155 | NftTokenType.ERC721;\n\n  /**\n   * Optional page key from an existing {@link TransfersNftResponse} to use for\n   * pagination.\n   */\n  pageKey?: string;\n}\n\n/**\n * @deprecated Use {@link TransfersNftResponse} instead.\n */\nexport interface GetMintedNftsResponse {\n  /** An array of the minted NFTs for the provided owner address. */\n  nfts: Nft[];\n\n  /** Key for pagination to use to fetch results from the next page if available. */\n  pageKey?: string;\n}\n\n/**\n * Optional parameters object for the {@link NftNamespace.getNftSales} method.\n *\n * This interface is used to filter the NFT sales data.\n *\n * @public\n */\nexport interface GetNftSalesOptions {\n  /** The block number to start fetching NFT sales data from. */\n  fromBlock?: number | 'latest';\n\n  /** The block number limit to fetch NFT sales data from. */\n  toBlock?: number | 'latest';\n\n  /** Whether to return the results in ascending or descending order by block number. */\n  order?: SortingOrder;\n\n  /** The NFT marketplace to filter sales by. */\n  marketplace?: NftSaleMarketplace;\n\n  /** The address of the NFT buyer to filter sales by. */\n  buyerAddress?: string;\n\n  /** The address of the NFT seller to filter sales by. */\n  sellerAddress?: string;\n\n  /**\n   * Filter by whether the buyer or seller was the taker in the NFT trade.\n   * Defaults to returning both buyer and seller taker trades.\n   */\n  taker?: NftSaleTakerType;\n\n  /** The maximum number of NFT sales to return. */\n  limit?: number;\n\n  /** Key for pagination to use to fetch results from the next page if available. */\n  pageKey?: string;\n}\n\n/**\n * Alternative optional parameters object for the {@link NftNamespace.getNftSales}\n * method that allows filtering results by contractAddress.\n *\n * This interface is used to filter the NFT sales data.\n *\n * @public\n */\nexport interface GetNftSalesOptionsByContractAddress\n  extends GetNftSalesOptions {\n  /** The contract address of a NFT collection to filter sales by. */\n  contractAddress: string;\n\n  /** The token ID of an NFT within the specified contractAddress to filter sales by. */\n  tokenId?: BigNumberish;\n}\n\n/**\n * The response for the {@link NftNamespace.getNftSales} method.\n *\n * @public\n */\nexport interface GetNftSalesResponse {\n  /** The page key to use to fetch the next page if more results are available. */\n  pageKey?: string;\n\n  /** List of NFT sales that match the query */\n  nftSales: NftSale[];\n}\n\n/** Represents a single NFT sale data in the {@link GetNftSalesResponse}. */\nexport interface NftSale {\n  /** The marketplace the sale took place on. */\n  marketplace: NftSaleMarketplace;\n\n  /** The NFT contract address. */\n  contractAddress: string;\n\n  /** The decimal token ID of the NFT being sold. */\n  tokenId: string;\n\n  /** The number of tokens sold in the sale as a decimal integer string. */\n  quantity: string;\n\n  /** The address of the buyer in the NFT sale. */\n  buyerAddress: string;\n\n  /** The address of the seller in the NFT sale. */\n  sellerAddress: string;\n\n  /** Whether the price taker in the trade was the buyer or the seller. */\n  taker: NftSaleTakerType;\n\n  /** The payment from buyer to the seller. */\n  sellerFee: NftSaleFeeData;\n\n  /**\n   * The payment from buyer to the marketplace.\n   * @deprecated Please use `protocolFee` instead.\n   */\n  marketplaceFee?: NftSaleFeeData;\n\n  /** The payment from buyer to the marketplace. */\n  protocolFee?: NftSaleFeeData;\n\n  /** The payment from buyer to the royalty address of the NFT collection. */\n  royaltyFee?: NftSaleFeeData;\n\n  /** The block number the NFT sale took place in. */\n  blockNumber: number;\n\n  /** The log number of the sale event emitted within the block. */\n  logIndex: number;\n\n  /** The index of the token within the bundle of NFTs sold in the sale. */\n  bundleIndex: number;\n\n  /** The transactionHash of the NFT sale. */\n  transactionHash: string;\n}\n\n/**\n * Fee detail for an NFT sale.\n *\n * @public\n */\nexport interface NftSaleFeeData {\n  /** The fee payment amount as a decimal integer string. */\n  amount: string;\n\n  /** The symbol of the token used for the payment. */\n  symbol: string;\n\n  /** The number of decimals of the token used for the payment. */\n  decimal: number;\n}\n\n/**\n * Enum for representing the supported sorting orders of the API.\n *\n * @public\n */\nexport enum SortingOrder {\n  ASCENDING = 'asc',\n  DESCENDING = 'desc'\n}\n\n/**\n * Enum representing the supported NFT marketplaces by the\n * {@link NftNamespace.getNftSales} method.\n *\n * @public\n */\nexport enum NftSaleMarketplace {\n  SEAPORT = 'seaport',\n  LOOKSRARE = 'looksrare',\n  X2Y2 = 'x2y2',\n  'WYVERN' = 'wyvern',\n  'CRYPTOPUNKS' = 'cryptopunks',\n  UNKNOWN = 'unknown'\n}\n\n/**\n * Enum for specifying the taker type for the {@link NftNamespace.getNftSales}\n * method.\n *\n * @public\n */\nexport enum NftSaleTakerType {\n  BUYER = 'buyer',\n  SELLER = 'seller'\n}\n\n/**\n * Information about the rarity of an NFT's attribute in the specified collection.\n *\n * @public\n */\nexport interface NftAttributeRarity {\n  /** Name of the NFT's attribute. */\n  value: string;\n\n  /** The type of NFT attribute. */\n  traitType: string;\n\n  /**\n   * A number from 0 to 1 representing the prevalence of this value for this\n   * trait type in the current collection.\n   */\n  prevalence: number;\n}\n\n/**\n * Summary of the attribute prevalence for the specified NFT contract.\n *\n * @public\n */\nexport interface NftAttributesResponse {\n  /** The specified NFT contract's address. */\n  contractAddress: string;\n\n  /** The specified NFT contract's total supply. */\n  totalSupply: number;\n\n  /**\n   * The attribute prevalence of each trait grouped by the trait type for the\n   * provided NFT.\n   */\n  summary: Record<string, Record<string, number>>;\n}\n\n/** The refresh result response object returned by {@link refreshContract}. */\nexport interface RefreshContractResult {\n  /** The NFT contract address that was passed in to be refreshed. */\n  contractAddress: string;\n\n  /** The current state of the refresh request. */\n  refreshState: RefreshState;\n\n  /**\n   * Percentage of tokens currently refreshed, represented as an integer string.\n   * Field can be null if the refresh has not occurred.\n   */\n  progress: string | null;\n}\n\n/** The current state of the NFT contract refresh process. */\nexport enum RefreshState {\n  /** The provided contract is not an NFT or does not contain metadata. */\n  DOES_NOT_EXIST = 'does_not_exist',\n\n  /** The contract has already been queued for refresh. */\n  ALREADY_QUEUED = 'already_queued',\n\n  /** The contract is currently being refreshed. */\n  IN_PROGRESS = 'in_progress',\n\n  /** The contract refresh is complete. */\n  FINISHED = 'finished',\n\n  /** The contract refresh has been queued and await execution. */\n  QUEUED = 'queued',\n\n  /** The contract was unable to be queued due to an internal error. */\n  QUEUE_FAILED = 'queue_failed'\n}\n\n/**\n * The parameter field of {@link TransactionReceiptsParams}.\n *\n * @public\n */\nexport interface TransactionReceiptsBlockNumber {\n  /** The block number to get transaction receipts for. */\n  blockNumber: string;\n}\n\n/**\n * The parameter field of {@link TransactionReceiptsParams}.\n *\n * @public\n */\nexport interface TransactionReceiptsBlockHash {\n  /** The block hash to get transaction receipts for. */\n  blockHash: string;\n}\n\n/**\n * The parameters to use with the {@link CoreNamespace.getTransactionReceipts} method.\n *\n * @public\n */\nexport type TransactionReceiptsParams =\n  | TransactionReceiptsBlockNumber\n  | TransactionReceiptsBlockHash;\n\n/**\n * Response object for a {@link CoreNamespace.getTransactionReceipts} call.\n *\n * @public\n */\nexport interface TransactionReceiptsResponse {\n  /** A list of transaction receipts for the queried block. */\n  receipts: TransactionReceipt[] | null;\n}\n\n/**\n * Metadata object returned in a {@link AssetTransfersResult} object if the asset\n * transferred is an ERC1155.\n *\n * @public\n */\nexport interface ERC1155Metadata {\n  tokenId: string;\n  value: string;\n}\n\n/**\n * Information about the underlying contract for the asset that was transferred\n * in a {@link AssetTransfersResult} object.\n *\n * @public\n */\nexport interface RawContract {\n  /**\n   * The raw transfer value as a hex string. `null` if the transfer was for an\n   * ERC721 or ERC1155 token.\n   */\n  value: string | null;\n\n  /** The contract address. `null` if it was an internal or external transfer. */\n  address: string | null;\n\n  /**\n   * The number of decimals in the contract as a hex string. `null` if the value\n   * is not in the contract and not available from other sources.\n   */\n  decimal: string | null;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForContract} and\n * {@link getNftsForContractIterator} functions.\n *\n * This interface is used to fetch NFTs with their associated metadata. To get\n * Nfts without their associated metadata, use {@link GetBaseNftsForContractOptions}.\n *\n * @public\n */\nexport interface GetNftsForContractOptions {\n  /**\n   * Optional page key from an existing {@link NftContractBaseNftsResponse} or\n   * {@link NftContractNftsResponse}to use for pagination.\n   */\n  pageKey?: string;\n\n  /** Optional boolean flag to omit NFT metadata. Defaults to `false`. */\n  omitMetadata?: boolean;\n\n  /**\n   * Sets the total number of NFTs to return in the response. Defaults to 100.\n   * Maximum page size is 100.\n   */\n  pageSize?: number;\n\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForContract} and\n * {@link getNftsForContractIterator} functions.\n *\n * This interface is used to fetch NFTs without their associated metadata. To\n * get Nfts with their associated metadata, use {@link GetNftsForContractOptions}.\n *\n * @public\n */\nexport interface GetBaseNftsForContractOptions {\n  /**\n   * Optional page key from an existing {@link NftContractBaseNftsResponse} or\n   * {@link NftContractNftsResponse}to use for pagination.\n   */\n  pageKey?: string;\n\n  /** Optional boolean flag to omit NFT metadata. Defaults to `false`. */\n  omitMetadata: false;\n\n  /**\n   * Sets the total number of NFTs to return in the response. Defaults to 100.\n   * Maximum page size is 100.\n   */\n  pageSize?: number;\n\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForContract} method.\n *\n * This interface configures options when fetching the owner addresses of the\n * provided contract.\n *\n * @public\n */\nexport interface GetOwnersForContractOptions {\n  /**\n   * Whether to include the token balances per token id for each owner. Defaults\n   * to false when omitted.\n   */\n  withTokenBalances?: boolean;\n\n  /** The block number in hex or decimal to fetch owners for. */\n  block?: string;\n\n  /** Optional page key to paginate the next page for large requests. */\n  pageKey?: string;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForContract} method.\n *\n * This interface configures options when fetching the owner addresses of the\n * provided contract.\n *\n * @public\n */\nexport interface GetOwnersForContractWithTokenBalancesOptions {\n  /**\n   * Whether to include the token balances per token id for each owner. Defaults\n   * to false when omitted.\n   */\n  withTokenBalances: true;\n\n  /** The block number in hex or decimal to fetch owners for. */\n  block?: string;\n\n  /** Optional page key to paginate the next page for large requests. */\n  pageKey?: string;\n}\n\n/**\n * Optional parameters object for the {@link getOwnersForNft} method.\n *\n * This interface configures options when fetching the owner addresses of the\n * provided NFT contract.\n *\n * @public\n */\nexport interface GetOwnersForNftOptions {\n  /** Optional page key to paginate the next page for large requests. */\n  pageKey?: string;\n\n  /**\n   * Sets the total number of owners to return in the response.\n   */\n  pageSize?: number;\n}\n\n/**\n * The response object for the {@link getNftsForContract} function. The object\n * contains the NFTs without metadata inside the NFT contract.\n *\n * @public\n */\nexport interface NftContractBaseNftsResponse {\n  /** An array of NFTs without metadata. */\n  nfts: BaseNft[];\n\n  /**\n   * Pagination token that can be passed into another request to fetch the next\n   * NFTs. If there is no page key, then there are no more NFTs to fetch.\n   */\n  pageKey?: string;\n}\n\n/**\n * The response object for the {@link getNftsForContract} function. The object\n * contains the NFTs with metadata inside the NFT contract.\n *\n * @public\n */\nexport interface NftContractNftsResponse {\n  /** An array of NFTs with metadata. */\n  nfts: Nft[];\n\n  /**\n   * Pagination token that can be passed into another request to fetch the next\n   * NFTs. If there is no page key, then there are no more NFTs to fetch.\n   */\n  pageKey?: string;\n}\n\n/** OpenSea's metadata for an NFT collection. */\nexport interface OpenSeaCollectionMetadata {\n  /** The floor price of the NFT. */\n  floorPrice?: number;\n  /** The name of the collection on OpenSea. */\n  collectionName?: string;\n  /** The approval status of the collection on OpenSea. */\n  safelistRequestStatus?: OpenSeaSafelistRequestStatus;\n  /** The image URL determined by OpenSea. */\n  imageUrl?: string;\n  /** The description of the collection on OpenSea. */\n  description?: string;\n  /** The homepage of the collection as determined by OpenSea. */\n  externalUrl?: string;\n  /** The Twitter handle of the collection. */\n  twitterUsername?: string;\n  /** The Discord URL of the collection. */\n  discordUrl?: string;\n  /** Timestamp of when the OpenSea metadata was last ingested by Alchemy. */\n  lastIngestedAt?: string;\n}\n\n/** An OpenSea collection's approval status. */\nexport enum OpenSeaSafelistRequestStatus {\n  /** Verified collection. */\n  VERIFIED = 'verified',\n  /** Collections that are approved on open sea and can be found in search results. */\n  APPROVED = 'approved',\n  /** Collections that requested safelisting on OpenSea. */\n  REQUESTED = 'requested',\n  /** Brand new collections. */\n  NOT_REQUESTED = 'not_requested'\n}\n\n/**\n * The response object for the {@link findContractDeployer} function.\n *\n * @public\n */\nexport interface DeployResult {\n  /** The address of the contract deployer, if it is available. */\n  readonly deployerAddress?: string;\n\n  /** The block number the contract was deployed in. */\n  readonly blockNumber: number;\n}\n\n/**\n * Method names for Alchemy's custom Subscription API endpoints.\n *\n * This value is provided in the `method` field when creating an event filter on\n * the Websocket Namespace.\n */\nexport enum AlchemySubscription {\n  PENDING_TRANSACTIONS = 'alchemy_pendingTransactions',\n  MINED_TRANSACTIONS = 'alchemy_minedTransactions'\n}\n\n/**\n * Event filter for the {@link AlchemyWebSocketProvider.on} and\n * {@link AlchemyWebSocketProvider.once} methods to use Alchemy's custom\n * `alchemy_pendingTransactions` endpoint.\n *\n * Returns the transaction information for all pending transactions that match a\n * given filter. For full documentation, see:\n * {@link https://docs.alchemy.com/reference/alchemy-pendingtransactions}\n *\n * Note that excluding all optional parameters will return transaction\n * information for ALL pending transactions that are added to the mempool.\n *\n * @public\n */\nexport interface AlchemyPendingTransactionsEventFilter {\n  method: AlchemySubscription.PENDING_TRANSACTIONS;\n\n  /**\n   * Filter pending transactions sent FROM the provided address or array of\n   * addresses.\n   *\n   * If a {@link AlchemyPendingTransactionsEventFilter.toAddress} is also\n   * present, then this filter will return transactions sent from the\n   * `fromAddress` OR transactions received by the `toAddress`.\n   */\n  fromAddress?: string | string[];\n\n  /**\n   * Filter pending transactions sent TO the provided address or array of\n   * addresses.\n   *\n   * If a {@link AlchemyPendingTransactionsEventFilter.fromAddress} is also\n   * present, then this filter will return transactions sent from the\n   * `fromAddress` OR transactions received by the `toAddress`.\n   */\n  toAddress?: string | string[];\n\n  /**\n   * Whether to only include transaction hashes and exclude the rest of the\n   * transaction response for a smaller payload. Defaults to false (by default,\n   * the entire transaction response is included).\n   *\n   * Note that setting only {@link hashesOnly} to true will return the same\n   * response as subscribing to `newPendingTransactions`.\n   */\n  hashesOnly?: boolean;\n}\n\n/**\n * Event filter for the {@link AlchemyWebSocketProvider.on} and\n * {@link AlchemyWebSocketProvider.once} methods to use Alchemy's custom\n * `alchemy_minedTransactions` endpoint.\n *\n * Returns the transaction information for all mined transactions that match the\n * provided filter. For full documentation, see:\n * {@link https://docs.alchemy.com/reference/alchemy-minedtransactions}\n *\n * Note that excluding all optional parameters will return transaction\n * information for ALL mined transactions.\n *\n * @public\n */\nexport interface AlchemyMinedTransactionsEventFilter {\n  method: AlchemySubscription.MINED_TRANSACTIONS;\n\n  /**\n   * Address filters to subscribe to. Defaults to all transactions if omitted.\n   * Limit 100 address filters. Requires a non-empty array.\n   */\n  addresses?: NonEmptyArray<AlchemyMinedTransactionsAddress>;\n\n  /**\n   * Whether to include transactions that were removed from the mempool.\n   * Defaults to false.\n   */\n  includeRemoved?: boolean;\n\n  /**\n   * Whether to only include transaction hashes and exclude the rest of the\n   * transaction response for a smaller payload. Defaults to false (by default,\n   * the entire transaction response is included).\n   */\n  hashesOnly?: boolean;\n}\n\n/**\n * Address filters for {@link AlchemyMinedTransactionsEventFilter}. Requires at\n * least one of the fields to be set.\n */\nexport type AlchemyMinedTransactionsAddress = RequireAtLeastOne<{\n  to?: string;\n  from?: string;\n}>;\n\n/**\n * Alchemy's event type that extends the default {@link EventType} interface to\n * also include Alchemy's Subscription API.\n *\n * @public\n */\nexport type AlchemyEventType = EventType | AlchemyEventFilter;\n\n/**\n * This type represents the Alchemy's Subscription API endpoints as event\n * filters compatible with other ethers events.\n */\nexport type AlchemyEventFilter =\n  | AlchemyMinedTransactionsEventFilter\n  | AlchemyPendingTransactionsEventFilter;\n\n/** Options for the {@link TransactNamespace.sendPrivateTransaction} method. */\nexport interface SendPrivateTransactionOptions {\n  /**\n   * Whether to use fast-mode. Defaults to false. Please note that fast mode\n   * transactions cannot be cancelled using\n   * {@link TransactNamespace.cancelPrivateTransaction}. method.\n   *\n   * See {@link https://docs.flashbots.net/flashbots-protect/rpc/fast-mode} for\n   * more details.\n   */\n  fast: boolean;\n}\n\n/**\n * Asset type returned when calling {@link TransactNamespace.simulateAssetChanges}.\n * Allows you to determine if the assets approved or / and transferred are\n * native, tokens or NFTs.\n */\nexport enum SimulateAssetType {\n  /**\n   * Native transfers that involve the currency of the chain the simulation is\n   * run on (ex: ETH for Ethereum, MATIC for Polygon, ETH for Arbitrum).\n   */\n  NATIVE = 'NATIVE',\n  /** ERC20 approval or transfers. */\n  ERC20 = 'ERC20',\n  /** ERC721 approval or transfers. */\n  ERC721 = 'ERC721',\n  /** ERC1155 approval or transfers. */\n  ERC1155 = 'ERC1155',\n  /**\n   * Special contracts that don't follow ERC 721/1155.Currently limited to\n   * CryptoKitties and CryptoPunks.\n   */\n  SPECIAL_NFT = 'SPECIAL_NFT'\n}\n\n/**\n * Change type returned when calling {@link TransactNamespace.simulateAssetChanges}.\n */\nexport enum SimulateChangeType {\n  /**\n   * Represents a transaction that approved or disapproved permissions for a\n   * contract.\n   *\n   * APPROVE without token ID → approve all tokens\n   * APPROVE without amount → approve all amount\n   * APPROVE with zero amount → approval being cleared\n   */\n  APPROVE = 'APPROVE',\n\n  /**\n   * Represents a transaction that transferred tokens from one address to another.\n   */\n  TRANSFER = 'TRANSFER'\n}\n\n/**\n * The error field returned in a {@link SimulateAssetChangesResponse} if the\n * simulation failed.\n */\nexport interface SimulateAssetChangesError extends Record<string, any> {\n  /** The error message. */\n  message: string;\n}\n\n/**\n * Represents an asset change from a call to\n * {@link TransactNamespace.simulateAssetChanges}.\n */\nexport interface SimulateAssetChangesChange {\n  /** The type of asset from the transaction. */\n  assetType: SimulateAssetType;\n\n  /** The type of change from the transaction. */\n  changeType: SimulateChangeType;\n\n  /** The from address. */\n  from: string;\n\n  /** The to address. */\n  to: string;\n\n  /**\n   * The raw amount as an integer string. Only available on TRANSFER changes for\n   * NATIVE and ERC20 assets, or ERC721/ERC1155 disapprove changes (field set to\n   * '0').\n   */\n  rawAmount?: string;\n\n  /**\n   * The amount as an integer string. This value is calculated by applying the\n   * `decimals` field to the `rawAmount` field. Only available on TRANSFER\n   * changes for NATIVE and ERC20 assets, or ERC721/ERC1155 disapprove changes\n   * (field set to '0').\n   */\n  amount?: string;\n\n  /** The name of the asset transferred, if available. */\n  name?: string;\n\n  /** The symbol of the asset transferred if available. */\n  symbol?: string;\n\n  /**\n   * The number of decimals used by the ERC20 token. Set to 0 for APPROVE\n   * changes. Field is undefined if it's not defined in the contract and not\n   * available from other sources.\n   */\n  decimals?: number;\n\n  /**\n   * The contract address of the asset. Only applicable to ERC20, ERC721,\n   * ERC1155, NFT and SPECIAL_NFT transactions.\n   */\n  contractAddress?: string;\n\n  /**\n   * URL for the logo of the asset, if available. Only applicable to ERC20 transactions.\n   */\n  logo?: string;\n\n  /**\n   * The token id of the asset transferred. Only applicable to ERC721,\n   * ERC1155 and SPECIAL_NFT NFTs.\n   */\n  tokenId?: string;\n}\n\n/**\n * Response object for the {@link TransactNamespace.simulateAssetChanges} method.\n */\nexport interface SimulateAssetChangesResponse {\n  /** An array of asset changes that resulted from the transaction. */\n  changes: SimulateAssetChangesChange[];\n  /**\n   * The amount of gas used by the transaction represented as a hex string. The\n   * field is undefined if an error occurred.\n   */\n  gasUsed?: string;\n  /** Optional error field that is present if an error occurred. */\n  error?: SimulateAssetChangesError;\n}\n\n/**\n * Authority used to decode calls and logs when using the\n * {@link TransactNamespace.simulateExecution} method.\n */\nexport enum DecodingAuthority {\n  ETHERSCAN = 'ETHERSCAN'\n}\n\n/** The input or output parameters from a {@link DecodedDebugCallTrace}. */\nexport interface DecodedCallParam {\n  /** Value of the parameter. */\n  value: string;\n  /** The name of the parameter. */\n  name: string;\n  /** The type of the parameter.*/\n  type: string;\n}\n\n/** The input parameters from a {@link DecodedLog}. */\nexport interface DecodedLogInput extends DecodedCallParam {\n  /** Whether the log is marked as indexed in the smart contract. */\n  indexed: boolean;\n}\n\n/**\n * Decoded representation of the call trace that is part of a\n * {@link SimulationCallTrace}.\n */\nexport interface DecodedDebugCallTrace {\n  /** The smart contract method called. */\n  methodName: string;\n  /** Method inputs. */\n  inputs: DecodedCallParam[];\n  /** Method outputs. */\n  outputs: DecodedCallParam[];\n  /** The source used to provide the decoded call trace. */\n  authority: DecodingAuthority;\n}\n\n/** The type of call in a debug call trace. */\nexport enum DebugCallType {\n  CREATE = 'CREATE',\n  CALL = 'CALL',\n  STATICCALL = 'STATICCALL',\n  DELEGATECALL = 'DELEGATECALL'\n}\n\n/**\n * Debug call trace in a {@link SimulateExecutionResponse}.\n */\nexport interface SimulationCallTrace\n  extends Omit<DebugCallTrace, 'revertReason' | 'calls'> {\n  /** The type of call. */\n  type: DebugCallType;\n  /** A decoded version of the call. Provided on a best-effort basis. */\n  decoded?: DecodedDebugCallTrace;\n}\n\n/**\n * Decoded representation of the debug log that is part of a\n * {@link SimulationDebugLog}.\n */\n\nexport interface DecodedLog {\n  /** The decoded name of the log event. */\n  eventName: string;\n  /** The decoded inputs to the log. */\n  inputs: DecodedLogInput[];\n  /** The source used to provide the decoded log. */\n  authority: DecodingAuthority;\n}\n\n/**\n * Debug log in a {@link SimulateExecutionResponse}.\n */\nexport interface SimulationDebugLog {\n  /** An array of topics in the log. */\n  topics: string[];\n  /** The address of the contract that generated the log. */\n  address: string;\n  /** The data included the log. */\n  data: string;\n  /** A decoded version of the log. Provided on a best-effort basis. */\n  decoded?: DecodedLog;\n}\n\n/** Response object for the {@link TransactNamespace.simulateExecution} method. */\nexport interface SimulateExecutionResponse {\n  /**\n   * An array of traces generated during simulation that represent the execution\n   * of the transaction along with the decoded calls if available.\n   */\n  calls: SimulationCallTrace[];\n\n  /**\n   * An array of logs emitted during simulation along with the decoded logs if\n   * available.\n   */\n  logs: SimulationDebugLog[];\n}\n\n/**\n * Response object for the {@link TransactNamespace.sendGasOptimizedTransaction} method.\n *\n * @internal\n */\n// TODO(txjob): Remove internal tag once this feature is released.\nexport interface GasOptimizedTransactionResponse {\n  /**\n   * The tracking id. This can be used to check the status of the transaction\n   * via {@link TransactNamespace.getGasOptimizedTransactionStatus}.\n   */\n  trackingId: string;\n\n  /* An array of the transaction hashes from submitted transactions. */\n  transactionHashes: string[];\n}\n\n/**\n * Response object for the\n * {@link TransactNamespace.getGasOptimizedTransactionStatus} method.\n *\n * @internal\n */\n// TODO(txjob): Remove internal tag once this feature is released.\nexport interface GasOptimizedTransactionStatusResponse {\n  /** The status of the submitted transaction job. */\n  jobStatus: GasOptimizedTransactionStatus;\n\n  /** An array of the submitted transactions hashes that have been attempted. */\n  transactionHashesAttempted: string[];\n\n  /** The final mined transaction hash if the job was completed successfully. */\n  minedTransactionHash?: string;\n}\n\n/**\n * Potential transaction job statuses for a {@link GasOptimizedTransactionResponse}\n *\n * @internal\n */\n// TODO(txjob): Remove internal tag once this feature is released.\nexport enum GasOptimizedTransactionStatus {\n  UNSPECIFIED = 'TRANSACTION_JOB_STATUS_UNSPECIFIED',\n  IN_PROGRESS = 'IN_PROGRESS',\n  COMPLETE = 'COMPLETE',\n  ABANDONED = 'ABANDONED'\n}\n\n/** SDK representation of a Webhook in the Notify API. */\nexport interface Webhook {\n  /** The webhook's unique id. */\n  id: string;\n  /** The network the webhook is on. */\n  network: Network;\n  /** The type of webhook. */\n  type: WebhookType;\n  /** The url that the webhook sends its payload to. */\n  url: string;\n  /** Whether the webhook is currently active */\n  isActive: boolean;\n  /** The creation time of the webhook as an ISO string. */\n  timeCreated: string;\n  /** The signing key used to verify payloads for the webhook. */\n  signingKey: string;\n  /** The webhook version. All newly created webhooks default to V2. */\n  version: WebhookVersion;\n  /**\n   * The app id of the app used for the webhook. This field is only present on\n   * {@link MinedTransactionWebhook} and {@link DroppedTransactionWebhook}\n   */\n  appId?: string;\n}\n\n/** The version of the webhook. All newly created webhooks default to V2. */\nexport enum WebhookVersion {\n  V1 = 'V1',\n  V2 = 'V2'\n}\n\n/** The type of {@link Webhook}. */\nexport enum WebhookType {\n  MINED_TRANSACTION = 'MINED_TRANSACTION',\n  DROPPED_TRANSACTION = 'DROPPED_TRANSACTION',\n  ADDRESS_ACTIVITY = 'ADDRESS_ACTIVITY',\n  NFT_ACTIVITY = 'NFT_ACTIVITY',\n  NFT_METADATA_UPDATE = 'NFT_METADATA_UPDATE',\n  GRAPHQL = 'GRAPHQL'\n}\n\n/**\n * A Mined Transaction Webhook is used to notify your app whenever a transaction\n * sent through your API key gets successfully mined. This is useful if you want\n * to notify customers that their transaction went through.\n */\nexport interface MinedTransactionWebhook extends Webhook {\n  type: WebhookType.MINED_TRANSACTION;\n}\n\n/**\n * A Dropped Transaction webhook is used to notify your app whenever a\n * transaction sent through your API key gets dropped. This can be useful if you\n * want to notify customers that their transactions were dropped.\n */\nexport interface DroppedTransactionWebhook extends Webhook {\n  type: WebhookType.DROPPED_TRANSACTION;\n}\n\n/**\n * An Address Activity Webhook tracks ETH, ERC20, ERC721, and ERC1155 transfers\n * for the provided addresses. This can be used to notify your app with\n * real-time state changes when your tracked addresses send or receive tokens.\n */\nexport interface AddressActivityWebhook extends Webhook {\n  type: WebhookType.ADDRESS_ACTIVITY;\n}\n\n/**\n * The NFT Activity Webhook tracks all ERC721 and ERC1155 activity. This can be\n * used to notify your app with real time state changes when an NFT is\n * transferred between addresses.\n */\nexport interface NftActivityWebhook extends Webhook {\n  type: WebhookType.NFT_ACTIVITY;\n}\n\n/**\n * The NFT Metadata Update Webhook tracks all ERC721 and ERC1155 metadata updates.\n * This can be used to notify your app with real time state changes when an NFT's\n * metadata changes.\n */\nexport interface NftMetadataUpdateWebhook extends Webhook {\n  type: WebhookType.NFT_METADATA_UPDATE;\n}\n\n/**\n * The Custom Webhook can track any event on every block (think transfers, staking,\n * minting, burning, approvals, etc.)\n * This can be used to notify your app with real time changes whenever an\n * EOA or a smart contract performs any action on-chain.\n */\nexport interface CustomGraphqlWebhook extends Webhook {\n  type: WebhookType.GRAPHQL;\n}\n\n/** The response for a {@link NotifyNamespace.getAllWebhooks} method. */\nexport interface GetAllWebhooksResponse {\n  /** All webhooks attached to the provided auth token. */\n  webhooks: Webhook[];\n  /** The total number of webhooks. */\n  totalCount: number;\n}\n\n/** Options object for the {@link NotifyNamespace.getAddresses} method. */\nexport interface GetAddressesOptions {\n  /** Number of addresses to fetch. */\n  limit?: number;\n\n  /** Page */\n  pageKey?: string;\n}\n\n/** Response object for the {@link NotifyNamespace.getAddresses} method. */\nexport interface AddressActivityResponse {\n  /** The addresses for the webhook. */\n  addresses: string[];\n  /** The total number of addresses. */\n  totalCount: number;\n  /** Optional page key used to fetch the remaining addresses. */\n  pageKey?: string;\n}\n\n/** Response object for the {@link NotifyNamespace.getGraphqlQuery} method. */\nexport interface CustomGraphqlWebhookConfig {\n  /** The graphql query for the webhook. */\n  graphqlQuery: string;\n}\n\n/**\n * Params to pass in when calling {@link NotifyNamespace.createWebhook} in order\n * to create a {@link MinedTransactionWebhook} or {@link DroppedTransactionWebhook}.\n *\n * The webhook will be created on the app and network associated with the appId.\n * To find the app id of a project, go to the Alchemy Dashboard in the Apps tab.\n * After clicking on an app, the app id is the string in the URL following 'apps/'.\n *\n * This is a temporary workaround for now. We're planning on detecting the app\n * id from the provided api key directly. Stay tuned!\n */\nexport interface TransactionWebhookParams {\n  /** The app id of the project to create the webhook on. */\n  appId: string;\n}\n\n/**\n * Params to pass in when calling {@link NotifyNamespace.createWebhook} in order\n * to create a {@link NftActivityWebhook} or {@link NftMetadataUpdateWebhook}.\n */\nexport interface NftWebhookParams {\n  /** Array of NFT filters the webhook should track. */\n  filters: NftFilter[];\n  /**\n   * Optional network to create the webhook on. If omitted, the webhook will be\n   * created on network of the app provided in the api key config.\n   */\n  network?: Network;\n}\n\n/**\n * Params to pass in when calling {@link NotifyNamespace.createWebhook} in order\n * to create a {@link CustomGraphqlWebhook}\n */\nexport interface CustomGraphqlWebhookParams {\n  /** GraphQL query */\n  graphqlQuery: string;\n  /**\n   * Optional network to create the webhook on. If omitted, the webhook will be\n   * created on network of the app provided in the api key config.\n   */\n  network?: Network;\n}\n\n/**\n * Params to pass in when calling {@link NotifyNamespace.createWebhook} in order\n * to create a {@link AddressActivityWebhook}.\n */\nexport interface AddressWebhookParams {\n  /** Array of addresses the webhook should activity for. */\n  addresses: string[];\n  /**\n   * Optional network to create the webhook on. If omitted, the webhook will be\n   * created on network of the app provided in the api key config.\n   */\n  network?: Network;\n}\n\n/** NFT to track on a {@link NftActivityWebhook} or {@link NftMetadataUpdateWebhook}. */\nexport interface NftFilter {\n  /** The contract address of the NFT. */\n  contractAddress: string;\n  /**\n   * The token id of the NFT to track. If this field is omitted, defaults to\n   * tracking all NFTs for the provided contract address.\n   */\n  tokenId?: BigNumberish;\n}\n\n/** Response object for the {@link NotifyNamespace.getNftFilters} method. */\nexport interface NftFiltersResponse {\n  /** The NFT filters on the provided webhook. */\n  filters: NftFilter[];\n  /** The total number of NFT filters on the webhook. */\n  totalCount: number;\n  /** Optional page key used to fetch the remaining filters. */\n  pageKey?: string;\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to mark a\n * webhook as active or inactive.\n */\nexport interface WebhookStatusUpdate {\n  /** Whether the webhook is active. */\n  isActive: boolean;\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to add and\n * remove NFT filters for a {@link NftActivityWebhook}.\n */\nexport interface WebhookNftFilterUpdate {\n  /** The filters to additionally track. */\n  addFilters: NftFilter[];\n  /** Existing filters to remove. */\n  removeFilters: NftFilter[];\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to add and\n * remove NFT filters for a {@link NftMetadataUpdateWebhook}.\n */\nexport interface WebhookNftMetadataFilterUpdate {\n  /** The filters to additionally track. */\n  addMetadataFilters: NftFilter[];\n  /** Existing filters to remove. */\n  removeMetadataFilters: NftFilter[];\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to add and\n * remove addresses for a {@link AddressActivityWebhook}.\n */\nexport interface WebhookAddressUpdate {\n  /** The addresses to additionally track. */\n  addAddresses: string[];\n  /** Existing addresses to remove. */\n  removeAddresses: string[];\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to replace\n * all existing addresses for a {@link AddressActivityWebhook}.\n */\nexport interface WebhookAddressOverride {\n  /** The new addresses to track. Existing addresses will be removed. */\n  newAddresses: string[];\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to update a\n * {@link NftActivityWebhook}.\n */\nexport type NftWebhookUpdate =\n  | WebhookStatusUpdate\n  | RequireAtLeastOne<WebhookNftFilterUpdate>;\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to update a\n * {@link NftMetadataUpdateWebhook}.\n */\nexport type NftMetadataWebhookUpdate =\n  | WebhookStatusUpdate\n  | RequireAtLeastOne<WebhookNftMetadataFilterUpdate>;\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to update a\n * {@link CustomGraphqlWebhook}.\n */\nexport type CustomGraphqlWebhookUpdate = WebhookStatusUpdate;\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to update a\n * {@link AddressActivityWebhook}.\n */\nexport type AddressWebhookUpdate =\n  | WebhookStatusUpdate\n  | RequireAtLeastOne<WebhookAddressUpdate>\n  | WebhookAddressOverride;\n\n/**\n * Transaction object used in {@link DebugNamespace.traceCall}, {@link TransactNamespace.simulateAssetChanges} and {@link TransactNamespace.simulateExecution}.\n */\nexport interface DebugTransaction {\n  /** The address the transaction is directed to. */\n  to?: string;\n  /** The address the transaction is sent from. */\n  from?: string;\n  /** The gas provided for the transaction execution, as a hex string. */\n  gas?: string;\n  /** The gas price to use as a hex string. */\n  gasPrice?: string;\n  /** The value associated with the transaction as a hex string. */\n  value?: string;\n  /** The data associated with the transaction. */\n  data?: string;\n}\n\n/**\n * Commitment level of the target block with using methods in the\n * {@link DebugNamespace}\n */\nexport enum CommitmentLevel {\n  /**\n   * Sample next block inferred by Alchemy built on top of the latest block.\n   * This contains the set of transactions taken from the local mempool and\n   * is a proxy for blocks that have not been mined yet.\n   */\n  PENDING = 'pending',\n  /**\n   * The most recent block in the canonical chain observed by Alchemy. Note that\n   * this block may be re-orged out of the canonical chain.\n   */\n  LATEST = 'latest',\n  /**\n   * The most recent crypto-economically secure block that cannot be re-orged\n   * outside of manual intervention driven by community coordination. This is\n   * only available on {@link Network.ETH_GOERLI} and {@link Network.ETH_SEPOLIA}.\n   */\n  SAFE = 'safe',\n  /**\n   * The most recent secure block that has been accepted by >2/3 of validators.\n   * This block is very unlikely to be re-orged. This is only available on\n   * {@link Network.ETH_GOERLI} and {@link Network.ETH_SEPOLIA}.\n   */\n  FINALIZED = 'finalized',\n  /**\n   * The lowest numbered block available that is usually the first block created.\n   */\n  EARLIEST = 'earliest'\n}\n\n/**\n * The block identifier to specify which block to run a debug call in, used for\n * methods in the {@link DebugNamespace}.\n */\nexport type BlockIdentifier = string | CommitmentLevel;\n\n/**\n * The type of tracer to use when running debug methods in the\n * {@link DebugNamespace}.\n */\nexport enum DebugTracerType {\n  CALL_TRACER = 'callTracer',\n  PRESTATE_TRACER = 'prestateTracer'\n}\n\n/**\n * Tracer used with debug methods in the {@link DebugNamespace}.\n *\n * This tracer tracks all call frames executed during a transaction, including\n * depth 0. The returned result {@link DebugCallTrace} is a nested list of call\n * frames executed as part of the call.\n *\n * Here are some things to note when using the call tracer:\n * - Calls to precompiles are also included in the result.\n * - In case a frame reverts, the field output will contain the raw return data.\n * - In case the top level frame reverts, its `revertReason` field will contain\n *   the parsed reason of revert as returned by the Solidity contract\n */\nexport interface DebugCallTracer {\n  /** Specified type is `CALL_TRACER`. */\n  type: DebugTracerType.CALL_TRACER;\n  /**\n   * Whether to only trace the main (top-level) calls and ignore sub-calls.\n   * Defaults to `false`.\n   */\n  onlyTopCall?: boolean;\n}\n\n/**\n * Tracer used with debug methods in the {@link DebugNamespace}.\n *\n * This tracer replays the transaction and tracks every part of state that was\n * touched during the transaction.\n *\n * Returns a {@link DebugPrestateTrace}. This contains sufficient information to\n * create a local execution of the transaction from a custom assembled genesis\n * block.\n */\nexport interface DebugPrestateTracer {\n  /** Specified type is `PRESTATE_TRACER`. */\n  type: DebugTracerType.PRESTATE_TRACER;\n  /**\n   * Whether to only trace the main (top-level) calls and ignore sub-calls.\n   * Defaults to `false`.\n   */\n  onlyTopCall?: boolean;\n}\n\n/**\n * Debug result returned when using a {@link DebugCallTracer}.\n */\nexport interface DebugCallTrace {\n  /** The type of call: `CALL` or `CREATE` for the top-level call. */\n  type: string;\n  /** From address of the transaction. */\n  from: string;\n  /** To address of the transaction. */\n  to: string;\n  /** Amount of value transfer as a hex string. */\n  value: string;\n  /** Gas provided for call as a hex string. */\n  gas: string;\n  /** Gas used during the call as a hex string. */\n  gasUsed: string;\n  /** Call data. */\n  input: string;\n  /** Return data. */\n  output: string;\n  /** Optional error field. */\n  error?: string;\n  /** Solidity revert reason, if the call reverted. */\n  revertReason?: string;\n  /** Array of sub-calls executed as part of the original call. */\n  calls?: DebugCallTrace[];\n}\n\n/**\n * Filter object used to filter logs by a specific block hash when using\n * {@link CoreNamespace.getLogs}.\n */\nexport interface FilterByBlockHash extends EventFilter {\n  /** The specific block hash to search for logs matching the filter. */\n  blockHash?: string;\n}\n\n/**\n * Filter object used to filter logs by block number range when using\n * {@link CoreNamespace.getLogs}\n */\nexport interface Filter extends EventFilter {\n  /** The starting block (inclusive) to search for logs matching the filter. */\n  fromBlock?: BlockTag;\n  /** The end block (inclusive) to search for logs matching the filter.*/\n  toBlock?: BlockTag;\n}\n\n/**\n * Filter object used to filter logs by when using {@link CoreNamespace.getLogs}\n */\nexport interface EventFilter {\n  /** The address to filter by. If omitted, filters for all addresses. */\n  address?: string | string[];\n  /** The topics to filter by, or null to match any topics. */\n  topics?: Array<string | Array<string> | null>;\n}\n\n/**\n * Debug result returned by a {@link DebugPrestateTracer}.\n *\n * The keys are the addresses of the accounts, mapped to its corresponding state.\n */\nexport type DebugPrestateTrace = Record<string, DebugPrestate>;\n\n/** The */\nexport interface DebugPrestate {\n  /** Balance of the account in wei as a hex string. */\n  balance: string;\n  /** Nonce */\n  nonce: number;\n  /** Hex-encoded bytecode. */\n  code: string;\n  /** Storage slots of the contract. */\n  storage: Record<string, string>;\n}\n\n/**\n * Requires at least one of the properties to be set.\n *\n * Implementation copied over from\n * {@link https://learn.microsoft.com/en-us/javascript/api/@azure/keyvault-certificates/requireatleastone?view=azure-node-latest}\n */\nexport type RequireAtLeastOne<T> = {\n  [K in keyof T]-?: Required<Pick<T, K>> &\n    Partial<Pick<T, Exclude<keyof T, K>>>;\n}[keyof T];\n\n/** Requires an array with at least one value. */\nexport type NonEmptyArray<T> = [T, ...T[]];\n","import { Network as NetworkFromEthers } from '@ethersproject/networks';\n\nimport { Network } from '../types/types';\n\nexport const DEFAULT_ALCHEMY_API_KEY = 'demo';\nexport const DEFAULT_NETWORK = Network.ETH_MAINNET;\nexport const DEFAULT_MAX_RETRIES = 5;\nexport const DEFAULT_REQUEST_TIMEOUT = 0; // 0 = no timeout\n\n/**\n * Returns the base URL for making Alchemy API requests. The `alchemy.com`\n * endpoints only work with non eth json-rpc requests.\n *\n * @internal\n */\nexport function getAlchemyHttpUrl(network: Network, apiKey: string): string {\n  return `https://${network}.g.alchemy.com/v2/${apiKey}`;\n}\n\nexport function getAlchemyNftHttpUrl(network: Network, apiKey: string): string {\n  return `https://${network}.g.alchemy.com/nft/v2/${apiKey}`;\n}\n\nexport function getAlchemyWsUrl(network: Network, apiKey: string): string {\n  return `wss://${network}.g.alchemy.com/v2/${apiKey}`;\n}\n\nexport function getAlchemyWebhookHttpUrl(): string {\n  return 'https://dashboard.alchemy.com/api';\n}\n\nexport enum AlchemyApiType {\n  BASE,\n  NFT,\n  WEBHOOK\n}\n\n/**\n * Mapping of network names to their corresponding Network strings used to\n * create an Ethers.js Provider instance.\n */\nexport const EthersNetwork = {\n  [Network.ETH_MAINNET]: 'mainnet',\n  [Network.ETH_ROPSTEN]: 'ropsten',\n  [Network.ETH_GOERLI]: 'goerli',\n  [Network.ETH_KOVAN]: 'kovan',\n  [Network.ETH_RINKEBY]: 'rinkeby',\n  [Network.ETH_SEPOLIA]: 'sepolia',\n  [Network.OPT_MAINNET]: 'optimism',\n  [Network.OPT_KOVAN]: 'optimism-kovan',\n  [Network.OPT_GOERLI]: 'optimism-goerli',\n  [Network.ARB_MAINNET]: 'arbitrum',\n  [Network.ARB_RINKEBY]: 'arbitrum-rinkeby',\n  [Network.ARB_GOERLI]: 'arbitrum-goerli',\n  [Network.MATIC_MAINNET]: 'matic',\n  [Network.MATIC_MUMBAI]: 'maticmum',\n  [Network.ASTAR_MAINNET]: 'astar-mainnet',\n  [Network.POLYGONZKEVM_MAINNET]: 'polygonzkevm-mainnet',\n  [Network.POLYGONZKEVM_TESTNET]: 'polygonzkevm-testnet'\n};\n\n/**\n * Mapping of network names to their corresponding Ethers Network objects. These\n * networks are not yet supported by Ethers and are listed here to be overriden\n * in the provider.\n */\nexport const CustomNetworks: { [key: string]: NetworkFromEthers } = {\n  'arbitrum-goerli': {\n    chainId: 421613,\n    name: 'arbitrum-goerli'\n  },\n  'astar-mainnet': {\n    chainId: 592,\n    name: 'astar-mainnet'\n  },\n  sepolia: {\n    chainId: 11155111,\n    name: 'sepolia'\n  },\n  'polygonzkevm-mainnet': {\n    chainId: 1101,\n    name: 'polygonzkevm-mainnet'\n  },\n  'polygonzkevm-testnet': {\n    chainId: 1442,\n    name: 'polygonzkevm-testnet'\n  }\n};\n\nexport function noop(): void {\n  // It's a no-op\n}\n\nexport const ETH_NULL_VALUE = '0x';\n\nexport const ETH_NULL_ADDRESS = '0x0000000000000000000000000000000000000000';\n","import { AlchemySettings, Network } from '../types/types';\nimport {\n  AlchemyApiType,\n  DEFAULT_ALCHEMY_API_KEY,\n  DEFAULT_MAX_RETRIES,\n  DEFAULT_NETWORK,\n  DEFAULT_REQUEST_TIMEOUT,\n  getAlchemyHttpUrl,\n  getAlchemyNftHttpUrl,\n  getAlchemyWebhookHttpUrl\n} from '../util/const';\nimport type { AlchemyProvider } from './alchemy-provider';\nimport type { AlchemyWebSocketProvider } from './alchemy-websocket-provider';\n\n/**\n * This class holds the config information for the SDK client instance and\n * exposes the underlying providers for more advanced use cases.\n *\n * @public\n */\nexport class AlchemyConfig {\n  /** The Alchemy API key. */\n  readonly apiKey: string;\n\n  /** The Network that this SDK is associated with. */\n  readonly network: Network;\n\n  /** The maximum number of retries to perform. */\n  readonly maxRetries: number;\n\n  /** Setting to enable automatic batching on json-rpc requests. Defaults to false.*/\n  readonly batchRequests: boolean;\n\n  /**\n   * The optional hardcoded URL to send requests to instead of using the network\n   * and apiKey.\n   */\n  readonly url?: string;\n\n  /** The optional Alchemy auth token to use when sending requests with the Notify API. */\n  readonly authToken?: string;\n\n  /**\n   * The optional Request timeout provided in `ms` for NFT and NOTIFY API. Defaults to 0.\n   */\n  readonly requestTimeout?: number;\n\n  /**\n   * Dynamically imported provider instance.\n   *\n   * @internal\n   */\n  private _baseAlchemyProvider: Promise<AlchemyProvider> | undefined;\n\n  /**\n   * Dynamically imported provider instance.\n   *\n   * @internal\n   */\n  private _baseAlchemyWssProvider:\n    | Promise<AlchemyWebSocketProvider>\n    | undefined;\n\n  constructor(config?: AlchemySettings) {\n    this.apiKey = config?.apiKey || DEFAULT_ALCHEMY_API_KEY;\n    this.network = config?.network || DEFAULT_NETWORK;\n    this.maxRetries = config?.maxRetries || DEFAULT_MAX_RETRIES;\n    this.url = config?.url;\n    this.authToken = config?.authToken;\n    this.batchRequests = config?.batchRequests || false;\n    this.requestTimeout = config?.requestTimeout || DEFAULT_REQUEST_TIMEOUT;\n  }\n\n  /**\n   * Returns the URL endpoint to send the HTTP request to. If a custom URL was\n   * provided in the config, that URL is returned. Otherwise, the default URL is\n   * from the network and API key.\n   *\n   * @param apiType - The type of API to get the URL for.\n   * @internal\n   */\n  _getRequestUrl(apiType: AlchemyApiType): string {\n    if (this.url !== undefined) {\n      return this.url;\n    } else if (apiType === AlchemyApiType.NFT) {\n      return getAlchemyNftHttpUrl(this.network, this.apiKey);\n    } else if (apiType === AlchemyApiType.WEBHOOK) {\n      return getAlchemyWebhookHttpUrl();\n    } else {\n      return getAlchemyHttpUrl(this.network, this.apiKey);\n    }\n  }\n\n  /**\n   * Returns an AlchemyProvider instance. Only one provider is created per\n   * Alchemy instance.\n   *\n   * The AlchemyProvider is a wrapper around ether's `AlchemyProvider` class and\n   * has been expanded to support Alchemy's Enhanced APIs.\n   *\n   * Most common methods on the provider are available as top-level methods on\n   * the {@link Alchemy} instance, but the provider is exposed here to access\n   * other less-common methods.\n   *\n   * @public\n   */\n  getProvider(): Promise<AlchemyProvider> {\n    if (!this._baseAlchemyProvider) {\n      this._baseAlchemyProvider = (async () => {\n        const { AlchemyProvider } = await import('./alchemy-provider');\n        return new AlchemyProvider(this);\n      })();\n    }\n    return this._baseAlchemyProvider;\n  }\n\n  /**\n   * Returns an AlchemyWebsocketProvider instance. Only one provider is created\n   * per Alchemy instance.\n   *\n   * The AlchemyWebSocketProvider is a wrapper around ether's\n   * `AlchemyWebSocketProvider` class and has been expanded to support Alchemy's\n   * Subscription APIs, automatic backfilling, and other performance improvements.\n   *\n   * Most common methods on the provider are available as top-level methods on\n   * the {@link Alchemy} instance, but the provider is exposed here to access\n   * other less-common methods.\n   */\n  getWebSocketProvider(): Promise<AlchemyWebSocketProvider> {\n    if (!this._baseAlchemyWssProvider) {\n      this._baseAlchemyWssProvider = (async () => {\n        const { AlchemyWebSocketProvider } = await import(\n          './alchemy-websocket-provider'\n        );\n        return new AlchemyWebSocketProvider(this);\n      })();\n    }\n    return this._baseAlchemyWssProvider;\n  }\n}\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n    ///////////////////\n    // Interaction Errors\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nexport function resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nexport function checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nexport function shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value = null;\n            try {\n                value = object[keys[i]];\n            }\n            catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n            if (!_isFrozen(value)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nexport function deepCopy(object) {\n    return _deepCopy(object);\n}\nexport class Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"properties/5.7.0\";\n//# sourceMappingURL=_version.js.map","import { BigNumber } from '@ethersproject/bignumber';\n\n/**\n * Converts a hex string to a decimal number.\n *\n * @param hexString - The hex string to convert.\n * @public\n */\nexport function fromHex(hexString: string): number {\n  return BigNumber.from(hexString).toNumber();\n}\n\n/**\n * Converts a number to a hex string.\n *\n * @param num - The number to convert to hex.\n * @public\n */\nexport function toHex(num: number): string {\n  return BigNumber.from(num).toHexString();\n}\n\n/**\n * Checks if a value is a hex string.\n *\n * @param possibleHexString - The value to check.\n * @public\n */\nexport function isHex(possibleHexString: string): boolean {\n  return /^0x[0-9a-fA-F]+$/.test(possibleHexString);\n}\n","import { BigNumber } from '@ethersproject/bignumber';\n\nimport { BaseNft, Nft, NftContract } from '../api/nft';\nimport { toHex } from '../api/util';\nimport {\n  RawBaseNft,\n  RawContractBaseNft,\n  RawGetContractsForOwnerResponse,\n  RawGetNftSalesResponse,\n  RawNft,\n  RawNftAttributeRarity,\n  RawNftContract,\n  RawOpenSeaCollectionMetadata,\n  RawSpamInfo\n} from '../internal/raw-interfaces';\nimport {\n  GetContractsForOwnerResponse,\n  GetNftSalesResponse,\n  NftAttributeRarity,\n  NftSaleMarketplace,\n  NftSaleTakerType,\n  NftTokenType,\n  OpenSeaCollectionMetadata,\n  OpenSeaSafelistRequestStatus,\n  SpamInfo,\n  TokenUri\n} from '../types/types';\n\nexport function formatBlock(block: string | number): string {\n  if (typeof block === 'string') {\n    return block;\n  } else if (Number.isInteger(block)) {\n    return toHex(block);\n  }\n  return block.toString();\n}\n\nfunction stringToEnum<T extends string>(\n  x: string,\n  enumb: Record<string, T>\n): T | undefined {\n  return Object.values(enumb).includes(x as T) ? (x as T) : undefined;\n}\n\nexport function getNftContractFromRaw(\n  rawNftContract: RawNftContract\n): NftContract {\n  return {\n    address: rawNftContract.address,\n    name: rawNftContract.contractMetadata.name,\n    symbol: rawNftContract.contractMetadata.symbol,\n    totalSupply: rawNftContract.contractMetadata.totalSupply,\n    tokenType: parseNftTokenType(rawNftContract.contractMetadata.tokenType),\n    openSea: parseOpenSeaMetadata(rawNftContract.contractMetadata.openSea),\n    contractDeployer: rawNftContract.contractMetadata.contractDeployer,\n    deployedBlockNumber: rawNftContract.contractMetadata.deployedBlockNumber\n  };\n}\n\nexport function getBaseNftFromRaw(rawBaseNft: RawBaseNft): BaseNft;\nexport function getBaseNftFromRaw(\n  rawContractBaseNft: RawContractBaseNft,\n  contractAddress: string\n): BaseNft;\nexport function getBaseNftFromRaw(\n  rawBaseNft: RawBaseNft | RawContractBaseNft,\n  contractAddress?: string\n): BaseNft {\n  return {\n    contract: contractAddress\n      ? { address: contractAddress }\n      : (rawBaseNft as RawBaseNft).contract,\n    tokenId: BigNumber.from(rawBaseNft.id.tokenId).toString(),\n    tokenType: parseNftTokenType(rawBaseNft.id.tokenMetadata?.tokenType)\n  };\n}\n\nexport function getNftFromRaw(rawNft: RawNft): Nft {\n  try {\n    const tokenType = parseNftTokenType(rawNft.id.tokenMetadata?.tokenType);\n    const spamInfo = parseSpamInfo(rawNft.spamInfo);\n\n    return {\n      contract: {\n        address: rawNft.contract.address,\n        name: rawNft.contractMetadata?.name,\n        symbol: rawNft.contractMetadata?.symbol,\n        totalSupply: rawNft.contractMetadata?.totalSupply,\n        tokenType,\n        openSea: parseOpenSeaMetadata(rawNft.contractMetadata?.openSea),\n        contractDeployer: rawNft.contractMetadata?.contractDeployer,\n        deployedBlockNumber: rawNft.contractMetadata?.deployedBlockNumber\n      },\n      tokenId: parseNftTokenId(rawNft.id.tokenId),\n      tokenType,\n      title: rawNft.title,\n      description: parseNftDescription(rawNft.description),\n      timeLastUpdated: rawNft.timeLastUpdated,\n      metadataError: rawNft.error,\n      rawMetadata: rawNft.metadata,\n      tokenUri: parseNftTokenUri(rawNft.tokenUri),\n      media: parseNftTokenUriArray(rawNft.media),\n      spamInfo\n    };\n  } catch (e) {\n    throw new Error('Error parsing the NFT response: ' + e);\n  }\n}\n\nexport function getNftSalesFromRaw(\n  rawNftSales: RawGetNftSalesResponse\n): GetNftSalesResponse {\n  return {\n    pageKey: rawNftSales?.pageKey,\n    nftSales: rawNftSales.nftSales.map(rawNftSale => ({\n      marketplace: parseNftSaleMarketplace(rawNftSale.marketplace),\n      contractAddress: rawNftSale.contractAddress,\n      tokenId: rawNftSale.tokenId,\n      quantity: rawNftSale.quantity,\n      buyerAddress: rawNftSale.buyerAddress,\n      sellerAddress: rawNftSale.sellerAddress,\n      taker: parseNftTaker(rawNftSale.taker),\n      sellerFee: rawNftSale?.sellerFee,\n      marketplaceFee: rawNftSale?.protocolFee,\n      protocolFee: rawNftSale?.protocolFee,\n      royaltyFee: rawNftSale?.royaltyFee,\n      blockNumber: rawNftSale?.blockNumber,\n      logIndex: rawNftSale.logIndex,\n      bundleIndex: rawNftSale.bundleIndex,\n      transactionHash: rawNftSale.transactionHash\n    }))\n  };\n}\n\nfunction parseNftSaleMarketplace(marketplace: string): NftSaleMarketplace {\n  switch (marketplace) {\n    case 'looksrare':\n      return NftSaleMarketplace.LOOKSRARE;\n    case 'seaport':\n      return NftSaleMarketplace.SEAPORT;\n    case 'x2y2':\n      return NftSaleMarketplace.X2Y2;\n    case 'wyvern':\n      return NftSaleMarketplace.WYVERN;\n    case 'cryptopunks':\n      return NftSaleMarketplace.CRYPTOPUNKS;\n    default:\n      return NftSaleMarketplace.UNKNOWN;\n  }\n}\n\nfunction parseNftTaker(taker: string): NftSaleTakerType {\n  // The `.toLowerCase()` call is needed because the API returns the capitalized values\n  switch (taker.toLowerCase()) {\n    case 'buyer':\n      return NftSaleTakerType.BUYER;\n    case 'seller':\n      return NftSaleTakerType.SELLER;\n    default:\n      throw new Error(`Unsupported NftSaleTakerType ${taker}`);\n  }\n}\n\nexport function getNftRarityFromRaw(\n  rawNftRarity: RawNftAttributeRarity[]\n): NftAttributeRarity[] {\n  return rawNftRarity.map(({ prevalence, trait_type, value }) => ({\n    prevalence,\n    traitType: trait_type,\n    value\n  }));\n}\n\nexport function getContractsForOwnerFromRaw(\n  rawContractsForOwner: RawGetContractsForOwnerResponse\n): GetContractsForOwnerResponse {\n  return {\n    pageKey: rawContractsForOwner?.pageKey,\n    totalCount: rawContractsForOwner.totalCount,\n    contracts: rawContractsForOwner.contracts.map(contract => {\n      return {\n        address: contract.address,\n        totalSupply: contract.totalSupply,\n        isSpam: contract.isSpam,\n        media: contract.media,\n        numDistinctTokensOwned: contract.numDistinctTokensOwned,\n        tokenId: contract.tokenId,\n        totalBalance: contract.totalBalance,\n        name: contract.name,\n        title: contract.title,\n        openSea: parseOpenSeaMetadata(contract?.opensea),\n        symbol: contract?.symbol,\n        tokenType: parseNftTokenType(contract?.tokenType),\n        contractDeployer: contract.contractDeployer,\n        deployedBlockNumber: contract.deployedBlockNumber\n      };\n    })\n  };\n}\n\nfunction parseNftTokenId(tokenId: string): string {\n  // We have to normalize the token id here since the backend sometimes\n  // returns the token ID as a hex string and sometimes as an integer.\n  return BigNumber.from(tokenId).toString();\n}\n\nfunction parseNftTokenType(tokenType: string | undefined): NftTokenType {\n  switch (tokenType) {\n    case 'erc721':\n    case 'ERC721':\n      return NftTokenType.ERC721;\n    case 'erc1155':\n    case 'ERC1155':\n      return NftTokenType.ERC1155;\n    case 'no_supported_nft_standard':\n    case 'NO_SUPPORTED_NFT_STANDARD':\n      return NftTokenType.NO_SUPPORTED_NFT_STANDARD;\n    case 'not_a_contract':\n    case 'NOT_A_CONTRACT':\n      return NftTokenType.NOT_A_CONTRACT;\n    default:\n      return NftTokenType.UNKNOWN;\n  }\n}\n\nfunction parseSpamInfo(\n  spamInfo: RawSpamInfo | undefined\n): SpamInfo | undefined {\n  if (!spamInfo) {\n    return undefined;\n  }\n  const { isSpam, classifications } = spamInfo;\n  return {\n    isSpam: isSpam === 'true',\n    classifications\n  };\n}\n\nfunction parseNftDescription(description?: string | string[]): string {\n  if (description === undefined) {\n    return '';\n  }\n\n  // TODO: Remove after backend adds JSON stringification.\n  if (!Array.isArray(description) && typeof description === 'object') {\n    return JSON.stringify(description);\n  }\n\n  return typeof description === 'string' ? description : description.join(' ');\n}\n\nfunction parseNftTokenUri(uri: TokenUri | undefined): TokenUri | undefined {\n  if (uri && uri.raw.length === 0 && uri.gateway.length == 0) {\n    return undefined;\n  }\n  return uri;\n}\n\nfunction parseNftTokenUriArray(arr: TokenUri[] | undefined): TokenUri[] {\n  if (arr === undefined) {\n    return [];\n  }\n  return arr.filter(uri => parseNftTokenUri(uri) !== undefined);\n}\n\nexport function parseOpenSeaMetadata(\n  openSea: RawOpenSeaCollectionMetadata | undefined\n): OpenSeaCollectionMetadata | undefined {\n  if (openSea === undefined) {\n    return undefined;\n  }\n  return {\n    floorPrice: openSea.floorPrice,\n    collectionName: openSea.collectionName,\n    safelistRequestStatus:\n      openSea.safelistRequestStatus !== undefined\n        ? stringToEnum(\n            openSea.safelistRequestStatus,\n            OpenSeaSafelistRequestStatus\n          )\n        : undefined,\n    imageUrl: openSea.imageUrl,\n    description: openSea.description,\n    externalUrl: openSea.externalUrl,\n    twitterUsername: openSea.twitterUsername,\n    discordUrl: openSea.discordUrl,\n    lastIngestedAt: openSea.lastIngestedAt\n  };\n}\n\nexport const IS_BROWSER = typeof window !== 'undefined' && window !== null;\n\n/** Recursively converts all `null` fields to `undefined. */\n// TODO: Add typing support so it doesn't return `any`.\nexport function nullsToUndefined<T>(obj: T): any {\n  if (obj === null) {\n    return undefined as any;\n  }\n\n  // if `obj` is an object, recursively convert all `null` fields to `undefined`.\n  if (typeof obj === 'object') {\n    for (const key in obj) {\n      obj[key] = nullsToUndefined(obj[key]) as any;\n    }\n  }\n  return obj as any;\n}\n","import type { Log } from '@ethersproject/abstract-provider';\nimport { resolveProperties } from '@ethersproject/properties';\n\nimport { AlchemyConfig } from '../api/alchemy-config';\nimport { toHex } from '../api/util';\nimport {\n  AssetTransfersParams,\n  AssetTransfersResponse,\n  AssetTransfersWithMetadataParams,\n  AssetTransfersWithMetadataResponse,\n  Filter,\n  FilterByBlockHash,\n  TransactionReceiptsParams,\n  TransactionReceiptsResponse\n} from '../types/types';\nimport { formatBlock } from '../util/util';\n\n/**\n * This file contains the underlying implementations for exposed API surface in\n * the {@link CoreNamespace}. By moving the methods out into a separate file,\n * other namespaces can access these methods without depending on the entire\n * CoreNamespace, or override the `srcMethod` param used for logging.\n */\n\n/**\n * Gets the asset transfers for the provided params.\n */\nexport async function getAssetTransfers(\n  config: AlchemyConfig,\n  params: AssetTransfersWithMetadataParams | AssetTransfersParams,\n  srcMethod = 'getAssetTransfers'\n): Promise<AssetTransfersResponse | AssetTransfersWithMetadataResponse> {\n  const provider = await config.getProvider();\n  if (params.fromAddress) {\n    params.fromAddress = await provider._getAddress(params.fromAddress);\n  }\n  if (params.toAddress) {\n    params.toAddress = await provider._getAddress(params.toAddress);\n  }\n  return provider._send(\n    'alchemy_getAssetTransfers',\n    [\n      {\n        ...params,\n        fromBlock:\n          params.fromBlock != null ? formatBlock(params.fromBlock) : undefined,\n        toBlock:\n          params.toBlock != null ? formatBlock(params.toBlock) : undefined,\n        maxCount: params.maxCount != null ? toHex(params.maxCount) : undefined\n      }\n    ],\n    srcMethod\n  );\n}\n\nexport async function getTransactionReceipts(\n  config: AlchemyConfig,\n  params: TransactionReceiptsParams,\n  srcMethod = 'getTransactionReceipts'\n): Promise<TransactionReceiptsResponse> {\n  const provider = await config.getProvider();\n  return provider._send('alchemy_getTransactionReceipts', [params], srcMethod);\n}\n\n/**\n * This method is based on the ethers implementation of getLogs, but is expanded\n * to support specifying an address array in the filter.\n *\n * The main modifications made to support an address array are:\n * - Custom `getFilter()` method that supports an address array\n * - Use of `arrayOf()` formatter to format the logs to avoid the `Formatter` import.\n * - Use of `provider.send()` to avoid formatting logic in `provider.perform()`.\n */\nexport async function getLogs(\n  config: AlchemyConfig,\n  filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>\n): Promise<Array<Log>> {\n  const provider = await config.getProvider();\n  await provider.getNetwork();\n  const params = await resolveProperties({\n    filter: getFilter(config, filter)\n  });\n\n  const logs: Array<Log> = await provider.send('eth_getLogs', [params.filter]);\n  logs.forEach(log => {\n    if (log.removed == null) {\n      log.removed = false;\n    }\n  });\n  return arrayOf(provider.formatter.filterLog.bind(provider.formatter))(logs);\n}\n\n/**\n * This method is based on and copied from the ethers implementation of\n * `JsonRpcProvider._getFilter()`, but is extended to support an address array.\n *\n * This implementation is a hacky way to get around the ethers formatter. The\n * formatter is used to check the types of the `filter` params, but ethers does\n * not allow an array in the `address` field. To preserve the ethers formatter\n * on the other fields, we use the formatter to check the types of those other\n * fields, and then manually check the `address` field last.\n */\nasync function getFilter(\n  config: AlchemyConfig,\n  filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>\n): Promise<Filter | FilterByBlockHash> {\n  // START MODIFIED CODE\n  const provider = await config.getProvider();\n  const resolvedFilter = await filter;\n  let result: any = {};\n  // END MODIFIED CODE\n\n  ['blockHash', 'topics'].forEach(key => {\n    if ((resolvedFilter as any)[key] == null) {\n      return;\n    }\n    result[key] = (resolvedFilter as any)[key];\n  });\n\n  ['fromBlock', 'toBlock'].forEach(key => {\n    if ((resolvedFilter as any)[key] == null) {\n      return;\n    }\n    result[key] = provider._getBlockTag((resolvedFilter as any)[key]);\n  });\n\n  // BEGIN MODIFIED CODE\n  // Format the `result` object using the ethers formatter without the `address`\n  // field.\n  result = provider.formatter.filter(await resolveProperties(result));\n\n  // After formatting the other fields, manually format the `address` field\n  // before adding it to the `result` object.\n  if (Array.isArray(resolvedFilter.address)) {\n    result.address = await Promise.all(\n      resolvedFilter.address.map(async (address: string) =>\n        provider._getAddress(address)\n      )\n    );\n  } else if (resolvedFilter.address != null) {\n    result.address = await provider._getAddress(resolvedFilter.address);\n  }\n\n  return result;\n  // END MODIFIED CODE\n}\n\n/**\n * DO NOT MODIFY.\n *\n * This function is directly copied over from ethers implementation of\n * `Formatter.arrayOf()`. It is copied here to avoid having to import the\n * `Formatter` class or `FormatterFunc` type from ethers, that are not part of\n * the default export.\n *\n * This function returns a function that applies the formatter to an array of\n * values, and is used to format the logs returned by `getLogs()`.\n */\nfunction arrayOf(format: any): any {\n  return function (array: any): Array<any> {\n    if (!Array.isArray(array)) {\n      throw new Error('not an array');\n    }\n\n    const result: any = [];\n\n    array.forEach(value => {\n      result.push(format(value));\n    });\n\n    return result;\n  };\n}\n","import type {\n  Block,\n  BlockTag,\n  BlockWithTransactions,\n  FeeData,\n  Log,\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionResponse\n} from '@ethersproject/abstract-provider';\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber';\nimport type { Network as EthersNetworkAlias } from '@ethersproject/networks/lib/types';\nimport type { Deferrable } from '@ethersproject/properties';\n\nimport {\n  getAssetTransfers,\n  getLogs,\n  getTransactionReceipts\n} from '../internal/core-api';\nimport {\n  AssetTransfersParams,\n  AssetTransfersResponse,\n  AssetTransfersWithMetadataParams,\n  AssetTransfersWithMetadataResponse,\n  DeployResult,\n  Filter,\n  FilterByBlockHash,\n  GetTokensForOwnerOptions,\n  GetTokensForOwnerResponse,\n  TokenBalanceType,\n  TokenBalancesOptionsDefaultTokens,\n  TokenBalancesOptionsErc20,\n  TokenBalancesResponse,\n  TokenBalancesResponseErc20,\n  TokenMetadataResponse,\n  TransactionReceiptsParams,\n  TransactionReceiptsResponse\n} from '../types/types';\nimport { ETH_NULL_VALUE } from '../util/const';\nimport { nullsToUndefined } from '../util/util';\nimport { AlchemyConfig } from './alchemy-config';\nimport { toHex } from './util';\nimport { formatUnits } from './utils';\n\n/**\n * The core namespace contains all commonly-used [Ethers.js\n * Provider](https://docs.ethers.io/v5/api/providers/api-providers/#AlchemyProvider)\n * methods. If you are already using Ethers.js, you should be simply able to\n * replace the Ethers.js Provider object with `alchemy.core` when accessing\n * provider methods and it should just work.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the core namespace\n * via `alchemy.core`.\n */\nexport class CoreNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Returns the balance of a given address as of the provided block.\n   *\n   * @param addressOrName The address or name of the account to get the balance for.\n   * @param blockTag The optional block number or hash to get the balance for.\n   *   Defaults to 'latest' if unspecified.\n   * @public\n   */\n  async getBalance(\n    addressOrName: string | Promise<string>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<BigNumber> {\n    const provider = await this.config.getProvider();\n    return provider.getBalance(addressOrName, blockTag);\n  }\n\n  /**\n   * Returns the contract code of the provided address at the block. If there is\n   * no contract deployed, the result is `0x`.\n   *\n   * @param addressOrName The address or name of the account to get the code for.\n   * @param blockTag The optional block number or hash to get the code for.\n   *   Defaults to 'latest' if unspecified.\n   * @public\n   */\n  async getCode(\n    addressOrName: string | Promise<string>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<string> {\n    const provider = await this.config.getProvider();\n    return provider.getCode(addressOrName, blockTag);\n  }\n\n  /**\n   * Return the value of the provided position at the provided address, at the\n   * provided block in `Bytes32` format.\n   *\n   * @param addressOrName The address or name of the account to get the code for.\n   * @param position The position of the storage slot to get.\n   * @param blockTag The optional block number or hash to get the code for.\n   *   Defaults to 'latest' if unspecified.\n   * @public\n   */\n  async getStorageAt(\n    addressOrName: string | Promise<string>,\n    position: BigNumberish | Promise<BigNumberish>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<string> {\n    const provider = await this.config.getProvider();\n    return provider.getStorageAt(addressOrName, position, blockTag);\n  }\n\n  /**\n   * Returns the number of transactions ever sent from the provided address, as\n   * of the provided block tag. This value is used as the nonce for the next\n   * transaction from the address sent to the network.\n   *\n   * @param addressOrName The address or name of the account to get the nonce for.\n   * @param blockTag The optional block number or hash to get the nonce for.\n   * @public\n   */\n  async getTransactionCount(\n    addressOrName: string | Promise<string>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<number> {\n    const provider = await this.config.getProvider();\n    return provider.getTransactionCount(addressOrName, blockTag);\n  }\n\n  /**\n   * Returns the block from the network based on the provided block number or\n   * hash. Transactions on the block are represented as an array of transaction\n   * hashes. To get the full transaction details on the block, use\n   * {@link getBlockWithTransactions} instead.\n   *\n   * @param blockHashOrBlockTag The block number or hash to get the block for.\n   * @public\n   */\n  async getBlock(\n    blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>\n  ): Promise<Block> {\n    const provider = await this.config.getProvider();\n    return provider.getBlock(blockHashOrBlockTag);\n  }\n\n  /**\n   * Returns the block from the network based on the provided block number or\n   * hash. Transactions on the block are represented as an array of\n   * {@link TransactionResponse} objects.\n   *\n   * @param blockHashOrBlockTag The block number or hash to get the block for.\n   * @public\n   */\n  async getBlockWithTransactions(\n    blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>\n  ): Promise<BlockWithTransactions> {\n    const provider = await this.config.getProvider();\n    return provider.getBlockWithTransactions(blockHashOrBlockTag);\n  }\n\n  /**\n   * Returns the {@link EthersNetworkAlias} Alchemy is connected to.\n   *\n   * @public\n   */\n  async getNetwork(): Promise<EthersNetworkAlias> {\n    const provider = await this.config.getProvider();\n    return provider.getNetwork();\n  }\n\n  /**\n   * Returns the block number of the most recently mined block.\n   *\n   * @public\n   */\n  async getBlockNumber(): Promise<number> {\n    const provider = await this.config.getProvider();\n    return provider.getBlockNumber();\n  }\n\n  /**\n   * Returns the best guess of the current gas price to use in a transaction.\n   *\n   * @public\n   */\n  async getGasPrice(): Promise<BigNumber> {\n    const provider = await this.config.getProvider();\n    return provider.getGasPrice();\n  }\n\n  /**\n   * Returns the recommended fee data to use in a transaction.\n   *\n   * For an EIP-1559 transaction, the maxFeePerGas and maxPriorityFeePerGas\n   * should be used.\n   *\n   * For legacy transactions and networks which do not support EIP-1559, the\n   * gasPrice should be used.\n   *\n   * @public\n   */\n  async getFeeData(): Promise<FeeData> {\n    const provider = await this.config.getProvider();\n    return provider.getFeeData();\n  }\n\n  /**\n   * Returns a Promise which will stall until the network has heen established,\n   * ignoring errors due to the target node not being active yet.\n   *\n   * This can be used for testing or attaching scripts to wait until the node is\n   * up and running smoothly.\n   *\n   * @public\n   */\n  async ready(): Promise<EthersNetworkAlias> {\n    const provider = await this.config.getProvider();\n    return provider.ready;\n  }\n\n  /**\n   * Returns the result of executing the transaction, using call. A call does\n   * not require any ether, but cannot change any state. This is useful for\n   * calling getters on Contracts.\n   *\n   * @param transaction The transaction to execute.\n   * @param blockTag The optional block number or hash to get the call for.\n   * @public\n   */\n  async call(\n    transaction: Deferrable<TransactionRequest>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<string> {\n    const provider = await this.config.getProvider();\n    return provider.call(transaction, blockTag);\n  }\n\n  /**\n   * Returns an estimate of the amount of gas that would be required to submit\n   * transaction to the network.\n   *\n   * An estimate may not be accurate since there could be another transaction on\n   * the network that was not accounted for, but after being mined affects the\n   * relevant state.\n   *\n   * This is an alias for {@link TransactNamespace.estimateGas}.\n   *\n   * @param transaction The transaction to estimate gas for.\n   * @public\n   */\n  async estimateGas(\n    transaction: Deferrable<TransactionRequest>\n  ): Promise<BigNumber> {\n    const provider = await this.config.getProvider();\n    return provider.estimateGas(transaction);\n  }\n\n  /**\n   * Returns the transaction with hash or null if the transaction is unknown.\n   *\n   * If a transaction has not been mined, this method will search the\n   * transaction pool. Various backends may have more restrictive transaction\n   * pool access (e.g. if the gas price is too low or the transaction was only\n   * recently sent and not yet indexed) in which case this method may also return null.\n   *\n   * NOTE: This is an alias for {@link TransactNamespace.getTransaction}.\n   *\n   * @param transactionHash The hash of the transaction to get.\n   * @public\n   */\n  async getTransaction(\n    transactionHash: string | Promise<string>\n  ): Promise<TransactionResponse | null> {\n    const provider = await this.config.getProvider();\n    return provider.getTransaction(transactionHash);\n  }\n\n  /**\n   * Returns the transaction receipt for hash or null if the transaction has not\n   * been mined.\n   *\n   * To stall until the transaction has been mined, consider the\n   * waitForTransaction method below.\n   *\n   * @param transactionHash The hash of the transaction to get.\n   * @public\n   */\n  async getTransactionReceipt(\n    transactionHash: string | Promise<string>\n  ): Promise<TransactionReceipt | null> {\n    const provider = await this.config.getProvider();\n    return provider.getTransactionReceipt(transactionHash);\n  }\n\n  /**\n   * Submits transaction to the network to be mined. The transaction must be\n   * signed, and be valid (i.e. the nonce is correct and the account has\n   * sufficient balance to pay for the transaction).\n   *\n   * NOTE: This is an alias for {@link TransactNamespace.getTransaction}.\n   *\n   * @param signedTransaction The signed transaction to send.\n   * @public\n   */\n  async sendTransaction(\n    signedTransaction: string | Promise<string>\n  ): Promise<TransactionResponse> {\n    const provider = await this.config.getProvider();\n    return provider.sendTransaction(signedTransaction);\n  }\n\n  /**\n   * Returns a promise which will not resolve until specified transaction hash is mined.\n   *\n   * If {@link confirmations} is 0, this method is non-blocking and if the\n   * transaction has not been mined returns null. Otherwise, this method will\n   * block until the transaction has confirmed blocks mined on top of the block\n   * in which it was mined.\n   *\n   * NOTE: This is an alias for {@link TransactNamespace.getTransaction}.\n   *\n   * @param transactionHash The hash of the transaction to wait for.\n   * @param confirmations The number of blocks to wait for.\n   * @param timeout The maximum time to wait for the transaction to confirm.\n   * @public\n   */\n  async waitForTransaction(\n    transactionHash: string,\n    confirmations?: number,\n    timeout?: number\n  ): Promise<TransactionReceipt | null> {\n    const provider = await this.config.getProvider();\n    return provider.waitForTransaction(transactionHash, confirmations, timeout);\n  }\n\n  /**\n   * Returns an array of logs that match the provided filter.\n   *\n   * @param filter The filter object to use.\n   * @public\n   */\n  async getLogs(\n    filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>\n  ): Promise<Array<Log>> {\n    return getLogs(this.config, filter);\n  }\n\n  /**\n   * Allows sending a raw message to the Alchemy backend.\n   *\n   * @param method The method to call.\n   * @param params The parameters to pass to the method.\n   * @public\n   */\n  async send(method: string, params: Array<any>): Promise<any> {\n    const provider = await this.config.getProvider();\n    return provider.send(method, params);\n  }\n\n  /**\n   * Finds the address that deployed the provided contract and block number it\n   * was deployed in.\n   *\n   * NOTE: This method performs a binary search across all blocks since genesis\n   * and can take a long time to complete. This method is a convenience method\n   * that will eventually be replaced by a single call to an Alchemy endpoint\n   * with this information cached.\n   *\n   * @param contractAddress - The contract address to find the deployer for.\n   * @beta\n   */\n  async findContractDeployer(contractAddress: string): Promise<DeployResult> {\n    const provider = await this.config.getProvider();\n    const currentBlockNum = await provider.getBlockNumber();\n    if (\n      (await provider.getCode(contractAddress, currentBlockNum)) ===\n      ETH_NULL_VALUE\n    ) {\n      throw new Error(`Contract '${contractAddress}' does not exist`);\n    }\n\n    // Binary search for the block number that the contract was deployed in.\n    const firstBlock = await binarySearchFirstBlock(\n      0,\n      currentBlockNum + 1,\n      contractAddress,\n      this.config\n    );\n\n    // Find the first transaction in the block that matches the provided address.\n    const txReceipts = await getTransactionReceipts(\n      this.config,\n      {\n        blockNumber: toHex(firstBlock)\n      },\n      'findContractDeployer'\n    );\n    const matchingReceipt = txReceipts.receipts?.find(\n      receipt => receipt.contractAddress === contractAddress.toLowerCase()\n    );\n    return {\n      deployerAddress: matchingReceipt?.from,\n      blockNumber: firstBlock\n    };\n  }\n\n  /**\n   * Returns the ERC-20 token balances for a specific owner address.\n   *\n   * @param addressOrName The owner address to get the token balances for.\n   * @public\n   */\n  async getTokenBalances(\n    addressOrName: string\n  ): Promise<TokenBalancesResponseErc20>;\n\n  /**\n   * Returns the token balances for a specific owner address given a list of contracts.\n   *\n   * @param addressOrName The owner address to get the token balances for.\n   * @param contractAddresses A list of contract addresses to check. If omitted,\n   *   all ERC-20 tokens will be checked.\n   * @public\n   */\n  async getTokenBalances(\n    addressOrName: string,\n    contractAddresses?: string[]\n  ): Promise<TokenBalancesResponse>;\n\n  /**\n   * Returns the ERC-20 token balances for a specific owner.\n   *\n   * This overload covers the erc-20 token type which includes a page key in the response.\n   *\n   * @param addressOrName The owner address to get the token balances for.\n   * @param options Token type options set to ERC-20 with optional page key.\n   * @public\n   */\n  async getTokenBalances(\n    addressOrName: string,\n    options: TokenBalancesOptionsErc20\n  ): Promise<TokenBalancesResponseErc20>;\n\n  /**\n   * Returns the token balances for a specific owner, fetching from the top 100\n   * tokens by 24 hour volume.\n   *\n   * This overload covers the default token type which includes a page key in\n   * the response.\n   *\n   * @param addressOrName The owner address to get the token balances for.\n   * @param options Token type options set to ERC-20 with optional page key.\n   * @public\n   */\n  async getTokenBalances(\n    addressOrName: string,\n    options: TokenBalancesOptionsDefaultTokens\n  ): Promise<TokenBalancesResponse>;\n\n  async getTokenBalances(\n    addressOrName: string,\n    contractAddressesOrOptions?:\n      | string[]\n      | TokenBalancesOptionsDefaultTokens\n      | TokenBalancesOptionsErc20\n  ) {\n    const provider = await this.config.getProvider();\n    const address = await provider._getAddress(addressOrName);\n    if (Array.isArray(contractAddressesOrOptions)) {\n      if (contractAddressesOrOptions.length > 1500) {\n        throw new Error(\n          'You cannot pass in more than 1500 contract addresses to getTokenBalances()'\n        );\n      }\n      if (contractAddressesOrOptions.length === 0) {\n        throw new Error(\n          'getTokenBalances() requires at least one contractAddress when using an array'\n        );\n      }\n      return provider._send(\n        'alchemy_getTokenBalances',\n        [address, contractAddressesOrOptions],\n        'getTokenBalances'\n      );\n    } else {\n      const tokenType =\n        contractAddressesOrOptions === undefined\n          ? TokenBalanceType.ERC20\n          : contractAddressesOrOptions.type;\n      const params: Array<string | { pageKey: string }> = [address, tokenType];\n      if (\n        contractAddressesOrOptions?.type === TokenBalanceType.ERC20 &&\n        contractAddressesOrOptions.pageKey\n      ) {\n        params.push({ pageKey: contractAddressesOrOptions.pageKey });\n      }\n      return provider._send(\n        'alchemy_getTokenBalances',\n        params,\n        'getTokenBalances'\n      );\n    }\n  }\n\n  /**\n   * Returns the tokens that the specified address owns, along with the amount\n   * of each token and the relevant metadata.\n   *\n   * @param addressOrName The owner address to get the tokens with balances for.\n   * @param options Additional options to pass to the request.\n   * @public\n   */\n  async getTokensForOwner(\n    addressOrName: string,\n    options?: GetTokensForOwnerOptions\n  ): Promise<GetTokensForOwnerResponse> {\n    const provider = await this.config.getProvider();\n    const address = await provider._getAddress(addressOrName);\n    const params: any[] = [\n      address,\n      options?.contractAddresses ?? TokenBalanceType.ERC20\n    ];\n    if (options?.pageKey) {\n      params.push({ pageKey: options.pageKey });\n    }\n    const response = (await provider._send(\n      'alchemy_getTokenBalances',\n      params,\n      'getTokensForOwner'\n    )) as TokenBalancesResponseErc20;\n\n    const formattedBalances = response.tokenBalances.map(balance => ({\n      contractAddress: balance.contractAddress,\n      rawBalance: BigNumber.from(balance.tokenBalance!).toString()\n    }));\n\n    const metadata: TokenMetadataResponse[] = await Promise.all(\n      response.tokenBalances.map(token =>\n        provider._send(\n          'alchemy_getTokenMetadata',\n          [token.contractAddress],\n          'getTokensForOwner',\n          /* forceBatch= */ true\n        )\n      )\n    );\n    const ownedTokens = formattedBalances.map((balance, index) => ({\n      ...balance,\n      ...metadata[index],\n      balance:\n        metadata[index].decimals !== null\n          ? formatUnits(balance.rawBalance, metadata[index].decimals!)\n          : undefined\n    }));\n\n    return {\n      tokens: ownedTokens.map(nullsToUndefined),\n      pageKey: response.pageKey\n    };\n  }\n\n  /**\n   * Returns metadata for a given token contract address.\n   *\n   * @param address The contract address to get metadata for.\n   * @public\n   */\n  async getTokenMetadata(address: string): Promise<TokenMetadataResponse> {\n    const provider = await this.config.getProvider();\n    return provider._send(\n      'alchemy_getTokenMetadata',\n      [address],\n      'getTokenMetadata'\n    );\n  }\n\n  /**\n   * Get transactions for specific addresses. See the web documentation for the\n   * full details:\n   * https://docs.alchemy.com/alchemy/enhanced-apis/transfers-api#alchemy_getassettransfers\n   *\n   * This overload requires {@link AssetTransfersWithMetadataParams.withMetadata}\n   * to be set to `true`, which results in additional metadata returned in the\n   * response object.\n   *\n   * @param params An object containing fields for the asset transfer query\n   * @public\n   */\n  async getAssetTransfers(\n    params: AssetTransfersWithMetadataParams\n  ): Promise<AssetTransfersWithMetadataResponse>;\n\n  /**\n   * Get transactions for specific addresses. See the web documentation for the\n   * full details:\n   * https://docs.alchemy.com/alchemy/enhanced-apis/transfers-api#alchemy_getassettransfers\n   *\n   * @param params An object containing fields for the asset transfer query.\n   * @public\n   */\n  async getAssetTransfers(\n    params: AssetTransfersParams\n  ): Promise<AssetTransfersResponse>;\n  async getAssetTransfers(\n    params: AssetTransfersWithMetadataParams | AssetTransfersParams\n  ): Promise<AssetTransfersResponse | AssetTransfersWithMetadataResponse> {\n    return getAssetTransfers(this.config, params);\n  }\n\n  /**\n   * Gets all transaction receipts for a given block by number or block hash.\n   *\n   * @param params An object containing fields for the transaction receipt query.\n   * @public\n   */\n  async getTransactionReceipts(\n    params: TransactionReceiptsParams\n  ): Promise<TransactionReceiptsResponse> {\n    return getTransactionReceipts(this.config, params);\n  }\n\n  /**\n   * Returns the underlying owner address for the provided ENS address, or `null`\n   * if the ENS name does not have an underlying address.\n   *\n   * @param name The ENS address name to resolve.\n   */\n  async resolveName(name: string): Promise<string | null> {\n    const provider = await this.config.getProvider();\n    return provider.resolveName(name);\n  }\n\n  /**\n   * Performs a reverse lookup of the address in ENS using the Reverse Registrar. If the name does not exist, or the forward lookup does not match, null is returned.\n   *\n   * An ENS name requires additional configuration to setup a reverse record, so not all ENS addresses will map back to the original ENS domain.\n   *\n   * @param address The address to look up the ENS domain name for.\n   */\n  async lookupAddress(address: string): Promise<string | null> {\n    const provider = await this.config.getProvider();\n    return provider.lookupAddress(address);\n  }\n}\n\n/**\n * Perform a binary search between an integer range of block numbers to find the\n * block number where the contract was deployed.\n *\n * @internal\n */\nasync function binarySearchFirstBlock(\n  start: number,\n  end: number,\n  address: string,\n  config: AlchemyConfig\n): Promise<number> {\n  if (start >= end) {\n    return end;\n  }\n\n  const mid = Math.floor((start + end) / 2);\n  const provider = await config.getProvider();\n  const code = await provider.getCode(address, mid);\n  if (code === ETH_NULL_VALUE) {\n    return binarySearchFirstBlock(mid + 1, end, address, config);\n  }\n  return binarySearchFirstBlock(start, mid, address, config);\n}\n","import {\n  BlockIdentifier,\n  DebugCallTrace,\n  DebugCallTracer,\n  DebugPrestateTrace,\n  DebugPrestateTracer,\n  DebugTransaction\n} from '../types/types';\nimport { AlchemyConfig } from './alchemy-config';\nimport { hexStripZeros, hexValue, isHexString } from './utils';\n\n/**\n * The Debug namespace contains methods to access the non-standard RPC methods\n * for inspecting and debugging transactions.\n *\n * For more information on the different methods and use cases please read our\n * [documentation](https://docs.alchemy.com/reference/debug-api-quickstart).\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the debug namespace\n * via `alchemy.debug`.\n */\nexport class DebugNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Runs an `eth_call` with the context of the provided block execution using the\n   * final state of the parent block as the base.\n   *\n   * @param transaction The transaction to debug trace.\n   * @param blockIdentifier The block to debug the transaction in. Can be a\n   * block hash, block number hex string, or commitment level.\n   * @param tracer Tracer type and configuration.\n   */\n  traceCall(\n    transaction: DebugTransaction,\n    blockIdentifier: BlockIdentifier,\n    tracer: DebugCallTracer\n  ): Promise<DebugCallTrace>;\n\n  /**\n   * Runs an `eth_call` with the context of the provided block execution using the\n   * final state of the parent block as the base.\n   *\n   * @param transaction The transaction to debug trace.\n   * @param blockIdentifier The block to debug the transaction in. Can be a\n   * block hash, block number hex string, or commitment level.\n   * @param tracer Tracer type and configuration.\n   */\n  traceCall(\n    transaction: DebugTransaction,\n    blockIdentifier: BlockIdentifier,\n    tracer: DebugPrestateTracer\n  ): Promise<DebugPrestateTrace>;\n  async traceCall(\n    transaction: DebugTransaction,\n    blockIdentifier: BlockIdentifier,\n    tracer: DebugCallTracer | DebugPrestateTracer\n  ): Promise<DebugCallTrace | DebugPrestateTrace> {\n    const provider = await this.config.getProvider();\n    const params = [transaction, blockIdentifier, parseTracerParams(tracer)];\n    return provider._send('debug_traceCall', params, 'traceCall');\n  }\n\n  /**\n   * Attempts to run the transaction in the exact same manner as it was executed\n   * on the network. It will replay any transaction that may have been executed\n   * prior to this one before it and will then attempt to execute the transaction\n   * that corresponds to the given hash.\n   *\n   * @param transactionHash The transaction hash of the transaction to trace.\n   * @param tracer Tracer type and configuration.\n   * @param timeout  A duration string of decimal numbers that overrides the\n   * default timeout of 5 seconds for JavaScript-based tracing calls. Max\n   * timeout is \"10s\". Valid time units are \"ns\", \"us\", \"ms\", \"s\" each with\n   * optional fraction, such as \"300ms\" or \"2s45ms\".\n   */\n  async traceTransaction(\n    transactionHash: string,\n    tracer: DebugCallTracer,\n    timeout?: string\n  ): Promise<DebugCallTrace>;\n\n  /**\n   * Attempts to run the transaction in the exact same manner as it was executed\n   * on the network. It will replay any transaction that may have been executed\n   * prior to this one before it and will then attempt to execute the transaction\n   * that corresponds to the given hash.\n   *\n   * @param transactionHash The transaction hash of the transaction to trace.\n   * @param tracer Tracer type and configuration.\n   * @param timeout  A duration string of decimal numbers that overrides the\n   * default timeout of 5 seconds for JavaScript-based tracing calls. Max\n   * timeout is \"10s\". Valid time units are \"ns\", \"us\", \"ms\", \"s\" each with\n   * optional fraction, such as \"300ms\" or \"2s45ms\".\n   */\n  async traceTransaction(\n    transactionHash: string,\n    tracer: DebugPrestateTracer,\n    timeout?: string\n  ): Promise<DebugPrestateTrace>;\n  async traceTransaction(\n    transactionHash: string,\n    tracer: DebugCallTracer | DebugPrestateTracer,\n    timeout?: string\n  ): Promise<DebugCallTrace | DebugPrestateTrace> {\n    const provider = await this.config.getProvider();\n    const params = [transactionHash, parseTracerParams(tracer, timeout)];\n    return provider._send('debug_traceTransaction', params, 'traceTransaction');\n  }\n\n  /**\n   * Replays a block that has already been mined.\n   *\n   * @param blockIdentifier The block to debug the transaction in. Can be a\n   * block hash, block number hex string, or commitment level.\n   * @param tracer Tracer type and configuration.\n   */\n  traceBlock(\n    blockIdentifier: BlockIdentifier | number,\n    tracer: DebugCallTracer\n  ): Promise<DebugCallTrace>;\n  /**\n   * Replays a block that has already been mined.\n   *\n   * @param blockIdentifier The block to debug the transaction in. Can be a\n   * block hash, block number hex string, or commitment level.\n   * @param tracer Tracer type and configuration.\n   */\n  traceBlock(\n    blockIdentifier: BlockIdentifier | number,\n    tracer: DebugPrestateTracer\n  ): Promise<DebugPrestateTrace>;\n  async traceBlock(\n    blockIdentifier: BlockIdentifier | number,\n    tracer: DebugCallTracer | DebugPrestateTracer\n  ): Promise<DebugCallTrace | DebugPrestateTrace> {\n    const provider = await this.config.getProvider();\n    let method: string;\n    let params: [string, RawTracer];\n    if (isHexString(blockIdentifier, 32)) {\n      method = 'debug_traceBlockByHash';\n      params = [blockIdentifier as string, parseTracerParams(tracer)];\n    } else {\n      method = 'debug_traceBlockByNumber';\n      const block =\n        typeof blockIdentifier === 'number'\n          ? hexStripZeros(hexValue(blockIdentifier))\n          : blockIdentifier;\n      params = [block as string, parseTracerParams(tracer)];\n    }\n    return provider._send(method, params, 'traceBlock');\n  }\n}\n\ninterface RawTracer {\n  tracer: string;\n  tracerConfig?: {\n    onlyTopCall?: boolean;\n    timeout?: string;\n  };\n}\n\nfunction parseTracerParams(\n  tracer: DebugCallTracer | DebugPrestateTracer,\n  timeout?: string\n): RawTracer {\n  return {\n    tracer: tracer.type,\n    ...(tracer.onlyTopCall !== undefined && {\n      tracerConfig: {\n        onlyTopCall: tracer.onlyTopCall,\n        timeout\n      }\n    })\n  };\n}\n","import { InputNftTokenType } from '../internal/nft-api';\nimport { NftTokenType } from '../types/types';\n\nexport function sanitizeTokenType(tokenType?: NftTokenType): InputNftTokenType {\n  if (tokenType === NftTokenType.ERC1155 || tokenType === NftTokenType.ERC721) {\n    return tokenType;\n  }\n  return undefined;\n}\n","/**\n * The SDK has 4 log levels and a 5th option for disabling all logging. By\n * default, the log level is set to INFO.\n *\n * The order is a follows: DEBUG < INFO < WARN < ERROR\n *\n * All log types above the current log level will be outputted.\n */\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\n/**\n * The level of verbosity for the logger.\n *\n * @public\n */\nexport type LogLevelString = 'debug' | 'info' | 'warn' | 'error' | 'silent';\n\nconst logLevelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  silent: LogLevel.SILENT\n};\n\n// HACKY: Use the console method as a string rather than the function itself\n// in order to allow for mocking in tests.\nconst logLevelToConsoleFn = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\nconst DEFAULT_LOG_LEVEL = LogLevel.INFO;\n\n/**\n * Configures the verbosity of logging. The default log level is `info`.\n *\n * @param logLevel - The verbosity of logging. Can be any of the following values:\n *\n *   - `debug`: The most verbose logging level.\n *   - `info`: The default logging level.\n *   - `warn`: A logging level for non-critical issues.\n *   - `error`: A logging level for critical issues.\n *   - `silent`: Turn off all logging.\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  loggerClient.logLevel = logLevelStringToEnum[logLevel];\n}\n\nexport function logDebug(message: string, ...args: unknown[]): void {\n  loggerClient.debug(message, args);\n}\n\nexport function logInfo(message: string, ...args: unknown[]): void {\n  loggerClient.info(message, args);\n}\n\nexport function logWarn(message: string, ...args: unknown[]): void {\n  loggerClient.warn(message, args);\n}\n\nexport function logError(message: string, ...args: unknown[]): void {\n  loggerClient.error(message, args);\n}\n\nexport class Logger {\n  /** The log level of the given Logger instance. */\n  private _logLevel = DEFAULT_LOG_LEVEL;\n\n  constructor() {}\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  debug(...args: unknown[]): void {\n    this._log(LogLevel.DEBUG, ...args);\n  }\n\n  info(...args: unknown[]): void {\n    this._log(LogLevel.INFO, ...args);\n  }\n\n  warn(...args: unknown[]): void {\n    this._log(LogLevel.WARN, ...args);\n  }\n\n  error(...args: unknown[]): void {\n    this._log(LogLevel.ERROR, ...args);\n  }\n\n  /**\n   * Forwards log messages to their corresponding console counterparts if the\n   * log level allows it.\n   */\n  private _log(logLevel: LogLevel, ...args: unknown[]): void {\n    if (logLevel < this._logLevel) {\n      return;\n    }\n    const now = new Date().toISOString();\n    const method =\n      logLevelToConsoleFn[logLevel as keyof typeof logLevelToConsoleFn];\n    if (method) {\n      console[method as 'log' | 'info' | 'warn' | 'error'](\n        `[${now}] Alchemy:`,\n        ...args.map(stringify)\n      );\n    } else {\n      throw new Error(\n        `Logger received an invalid logLevel (value: ${logLevel})`\n      );\n    }\n  }\n}\n\nfunction stringify(obj: unknown): string | unknown {\n  if (typeof obj === 'string') {\n    return obj;\n  } else {\n    try {\n      return JSON.stringify(obj);\n    } catch (e) {\n      // Failed to convert to JSON, log the object directly.\n      return obj;\n    }\n  }\n}\n\n// Instantiate default logger for the SDK.\nconst loggerClient: Logger = new Logger();\n","// This file is autogenerated by injectVersion.js. Any changes will be\n// overwritten on commit!\nexport const VERSION = '2.8.0';\n","/**\n * Given a REST endpoint, method, and params, sends the request with axios and\n * returns the response.\n */\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nimport { VERSION } from '../version';\nimport { IS_BROWSER } from './util';\n\n/**\n * Helper function to send http requests using Axis.\n *\n * @private\n */\nexport function sendAxiosRequest<Req, Res>(\n  baseUrl: string,\n  restApiName: string,\n  methodName: string,\n  params: Req,\n  overrides?: AxiosRequestConfig\n): Promise<AxiosResponse<Res>> {\n  const requestUrl = baseUrl + '/' + restApiName;\n  const config: AxiosRequestConfig = {\n    ...overrides,\n    headers: {\n      ...overrides?.headers,\n      ...(!IS_BROWSER && { 'Accept-Encoding': 'gzip' }),\n      'Alchemy-Ethers-Sdk-Version': VERSION,\n      'Alchemy-Ethers-Sdk-Method': methodName\n    },\n    method: overrides?.method ?? 'GET',\n    url: requestUrl,\n    params\n  };\n  return axios(config);\n}\n","import { logDebug } from '../util/logger';\n\nexport const DEFAULT_BACKOFF_INITIAL_DELAY_MS = 1000;\nexport const DEFAULT_BACKOFF_MULTIPLIER = 1.5;\nexport const DEFAULT_BACKOFF_MAX_DELAY_MS = 30 * 1000;\nexport const DEFAULT_BACKOFF_MAX_ATTEMPTS = 5;\n\n/**\n * Helper class for implementing exponential backoff and max retry attempts.\n *\n * @private\n * @internal\n */\nexport class ExponentialBackoff {\n  private readonly initialDelayMs = DEFAULT_BACKOFF_INITIAL_DELAY_MS;\n  private readonly backoffMultiplier = DEFAULT_BACKOFF_MULTIPLIER;\n  private readonly maxDelayMs = DEFAULT_BACKOFF_MAX_DELAY_MS;\n\n  private numAttempts = 0;\n  private currentDelayMs = 0;\n  private isInBackoff = false;\n\n  constructor(private readonly maxAttempts = DEFAULT_BACKOFF_MAX_ATTEMPTS) {}\n\n  /**\n   * Returns a promise that resolves after the the backoff delay. The delay is\n   * increased for each attempt. The promise is rejected if the maximum number\n   * of attempts is exceeded.\n   */\n  // TODO: beautify this into an async iterator.\n  backoff(): Promise<void> {\n    if (this.numAttempts >= this.maxAttempts) {\n      return Promise.reject(\n        new Error(`Exceeded maximum number of attempts: ${this.maxAttempts}`)\n      );\n    }\n    if (this.isInBackoff) {\n      return Promise.reject(\n        new Error('A backoff operation is already in progress')\n      );\n    }\n\n    const backoffDelayWithJitterMs = this.withJitterMs(this.currentDelayMs);\n    if (backoffDelayWithJitterMs > 0) {\n      logDebug(\n        'ExponentialBackoff.backoff',\n        `Backing off for ${backoffDelayWithJitterMs}ms`\n      );\n    }\n\n    // Calculate the next delay.\n    this.currentDelayMs *= this.backoffMultiplier;\n    this.currentDelayMs = Math.max(this.currentDelayMs, this.initialDelayMs);\n    this.currentDelayMs = Math.min(this.currentDelayMs, this.maxDelayMs);\n    this.numAttempts += 1;\n\n    return new Promise(resolve => {\n      this.isInBackoff = true;\n      setTimeout(() => {\n        this.isInBackoff = false;\n        resolve();\n      }, backoffDelayWithJitterMs);\n    });\n  }\n\n  /**\n   * Applies +/- 50% jitter to the backoff delay, up to the max delay cap.\n   *\n   * @private\n   * @param delayMs\n   */\n  private withJitterMs(delayMs: number): number {\n    return Math.min(delayMs + (Math.random() - 0.5) * delayMs, this.maxDelayMs);\n  }\n}\n","import axios, { AxiosError, AxiosRequestConfig } from 'axios';\n\nimport { AlchemyConfig } from '../api/alchemy-config';\nimport { AlchemyApiType } from '../util/const';\nimport { logDebug, logInfo } from '../util/logger';\nimport { sendAxiosRequest } from '../util/sendRest';\nimport { ExponentialBackoff } from './backoff';\n\n/**\n * A wrapper function to make http requests and retry if the request fails.\n *\n * @internal\n */\n// TODO: Wrap Axios error in AlchemyError.\nexport async function requestHttpWithBackoff<Req, Res>(\n  config: AlchemyConfig,\n  apiType: AlchemyApiType,\n  restApiName: string,\n  methodName: string,\n  params: Req,\n  overrides?: AxiosRequestConfig\n): Promise<Res> {\n  let lastError: Error | undefined = undefined;\n  const backoff = new ExponentialBackoff(config.maxRetries);\n  for (let attempt = 0; attempt < config.maxRetries + 1; attempt++) {\n    try {\n      if (lastError !== undefined) {\n        logInfo('requestHttp', `Retrying after error: ${lastError.message}`);\n      }\n\n      try {\n        await backoff.backoff();\n      } catch (err) {\n        // Backoff errors when the maximum number of attempts is reached. Break\n        // out of the loop to preserve the last error.\n        break;\n      }\n\n      const response = await sendAxiosRequest<Req, Res>(\n        config._getRequestUrl(apiType),\n        restApiName,\n        methodName,\n        params,\n        {\n          ...overrides,\n          timeout: config.requestTimeout\n        }\n      );\n\n      if (response.status === 200) {\n        logDebug(restApiName, `Successful request: ${restApiName}`);\n        return response.data;\n      } else {\n        logInfo(\n          restApiName,\n          `Request failed: ${restApiName}, ${response.status}, ${response.data}`\n        );\n        lastError = new Error(response.status + ': ' + response.data);\n      }\n    } catch (err) {\n      if (!axios.isAxiosError(err) || err.response === undefined) {\n        throw err;\n      }\n      // TODO: Standardize all errors into AlchemyError\n      lastError = new Error(err.response.status + ': ' + err.response.data);\n      if (!isRetryableHttpError(err, apiType)) {\n        break;\n      }\n    }\n  }\n  return Promise.reject(lastError);\n}\n\nfunction isRetryableHttpError(\n  err: AxiosError,\n  apiType: AlchemyApiType\n): boolean {\n  // TODO: remove 500s after webhooks are more stable.\n  const retryableCodes =\n    apiType === AlchemyApiType.WEBHOOK ? [429, 500] : [429];\n  return (\n    err.response !== undefined && retryableCodes.includes(err.response.status)\n  );\n}\n\n/**\n * Fetches all pages in a paginated endpoint, given a `pageKey` field that\n * represents the property name containing the next page token.\n *\n * @internal\n */\nexport async function* paginateEndpoint<\n  ReqPageKey extends string,\n  ResPageKey extends string,\n  Req extends Partial<Record<string, any> & Record<ReqPageKey, string>>,\n  Res extends Partial<Record<string, any> & Record<ResPageKey, string>>\n>(\n  config: AlchemyConfig,\n  apiType: AlchemyApiType,\n  restApiName: string,\n  methodName: string,\n  reqPageKey: ReqPageKey,\n  resPageKey: ResPageKey,\n  params: Req\n): AsyncIterable<Res> {\n  let hasNext = true;\n  const requestParams = { ...params };\n  while (hasNext) {\n    const response = await requestHttpWithBackoff<Req, Res>(\n      config,\n      apiType,\n      restApiName,\n      methodName,\n      requestParams\n    );\n    yield response;\n    if (response[resPageKey] !== undefined) {\n      requestParams[reqPageKey] = response[resPageKey] as any;\n    } else {\n      hasNext = false;\n    }\n  }\n}\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber';\n\nimport { AlchemyConfig } from '../api/alchemy-config';\nimport { BaseNft, Nft, NftContract } from '../api/nft';\nimport {\n  AssetTransfersCategory,\n  AssetTransfersParams,\n  AssetTransfersResponse,\n  AssetTransfersResult,\n  GetBaseNftsForContractOptions,\n  GetBaseNftsForOwnerOptions,\n  GetContractsForOwnerOptions,\n  GetContractsForOwnerResponse,\n  GetFloorPriceResponse,\n  GetMintedNftsOptions,\n  GetNftMetadataOptions,\n  GetNftSalesOptions,\n  GetNftSalesOptionsByContractAddress,\n  GetNftSalesResponse,\n  GetNftsForContractOptions,\n  GetNftsForOwnerOptions,\n  GetOwnersForContractOptions,\n  GetOwnersForContractResponse,\n  GetOwnersForContractWithTokenBalancesOptions,\n  GetOwnersForContractWithTokenBalancesResponse,\n  GetOwnersForNftResponse,\n  GetTransfersForContractOptions,\n  GetTransfersForOwnerOptions,\n  GetTransfersForOwnerTransferType,\n  NftAttributeRarity,\n  NftAttributesResponse,\n  NftContractBaseNftsResponse,\n  NftContractNftsResponse,\n  NftFilters,\n  NftMetadataBatchOptions,\n  NftMetadataBatchToken,\n  NftOrdering,\n  NftSaleMarketplace,\n  NftSaleTakerType,\n  NftTokenType,\n  OwnedBaseNft,\n  OwnedBaseNftsResponse,\n  OwnedNft,\n  OwnedNftsResponse,\n  RefreshContractResult,\n  RefreshState,\n  SortingOrder,\n  TransfersNftResponse\n} from '../types/types';\nimport { AlchemyApiType, ETH_NULL_ADDRESS } from '../util/const';\nimport { sanitizeTokenType } from '../util/inputSanitization';\nimport {\n  getBaseNftFromRaw,\n  getContractsForOwnerFromRaw,\n  getNftContractFromRaw,\n  getNftFromRaw,\n  getNftRarityFromRaw,\n  getNftSalesFromRaw\n} from '../util/util';\nimport { getAssetTransfers } from './core-api';\nimport { paginateEndpoint, requestHttpWithBackoff } from './dispatch';\nimport {\n  RawBaseNft,\n  RawContractBaseNft,\n  RawGetBaseNftsForContractResponse,\n  RawGetBaseNftsResponse,\n  RawGetContractsForOwnerResponse,\n  RawGetNftSalesResponse,\n  RawGetNftsForContractResponse,\n  RawGetNftsResponse,\n  RawGetOwnersForContractResponse,\n  RawNft,\n  RawNftAttributeRarity,\n  RawNftContract,\n  RawOwnedBaseNft,\n  RawOwnedNft,\n  RawReingestContractResponse\n} from './raw-interfaces';\n\n/**\n * This file contains the underlying implementations for exposed API surface in\n * the {@link NftNamespace}. By moving the methods out into a separate file,\n * other namespaces can access these methods without depending on the entire\n * NftNamespace.\n */\n\n/**\n * Get the NFT metadata for the provided contract address.\n */\nexport async function getNftMetadata(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  options?: GetNftMetadataOptions,\n  srcMethod = 'getNftMetadata'\n): Promise<Nft> {\n  const response = await requestHttpWithBackoff<GetNftMetadataParams, RawNft>(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTMetadata',\n    srcMethod,\n    {\n      contractAddress,\n      tokenId: BigNumber.from(tokenId!).toString(),\n      tokenType: sanitizeTokenType(options?.tokenType),\n      tokenUriTimeoutInMs: options?.tokenUriTimeoutInMs,\n      refreshCache: options?.refreshCache\n    }\n  );\n  return getNftFromRaw(response);\n}\n\nexport async function getNftMetadataBatch(\n  config: AlchemyConfig,\n  tokens: Array<NftMetadataBatchToken>,\n  options?: NftMetadataBatchOptions\n): Promise<Nft[]> {\n  const data = {\n    tokens,\n    tokenUriTimeoutInMs: options?.tokenUriTimeoutInMs,\n    refreshCache: options?.refreshCache\n  };\n  const response = await requestHttpWithBackoff<{}, RawNft[]>(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTMetadataBatch',\n    'getNftMetadataBatch',\n    {},\n    {\n      method: 'POST',\n      data\n    }\n  );\n  return response.map(getNftFromRaw);\n}\n\nexport async function getContractMetadata(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'getContractMetadata'\n): Promise<NftContract> {\n  const response = await requestHttpWithBackoff<\n    GetContractMetadataParams,\n    RawNftContract\n  >(config, AlchemyApiType.NFT, 'getContractMetadata', srcMethod, {\n    contractAddress\n  });\n\n  return getNftContractFromRaw(response);\n}\n\nexport async function getContractMetadataBatch(\n  config: AlchemyConfig,\n  contractAddresses: string[]\n): Promise<NftContract[]> {\n  const response = await requestHttpWithBackoff<{}, RawNftContract[]>(\n    config,\n    AlchemyApiType.NFT,\n    'getContractMetadataBatch',\n    'getContractMetadataBatch',\n    {},\n    {\n      method: 'POST',\n      data: { contractAddresses }\n    }\n  );\n\n  return response.map(getNftContractFromRaw);\n}\n\nexport async function* getNftsForOwnerIterator(\n  config: AlchemyConfig,\n  owner: string,\n  options?: GetNftsForOwnerOptions | GetBaseNftsForOwnerOptions,\n  srcMethod = 'getNftsForOwnerIterator'\n): AsyncIterable<OwnedBaseNft | OwnedNft> {\n  const withMetadata = omitMetadataToWithMetadata(options?.omitMetadata);\n  for await (const response of paginateEndpoint(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTs',\n    srcMethod,\n    'pageKey',\n    'pageKey',\n    {\n      contractAddresses: options?.contractAddresses,\n      pageKey: options?.pageKey,\n      filters: options?.excludeFilters,\n      owner,\n      withMetadata\n    }\n  )) {\n    for (const ownedNft of response.ownedNfts as\n      | RawOwnedNft[]\n      | RawOwnedBaseNft[]) {\n      yield {\n        ...nftFromGetNftResponse(ownedNft),\n        balance: parseInt(ownedNft.balance)\n      };\n    }\n  }\n}\n\nexport async function getNftsForOwner(\n  config: AlchemyConfig,\n  owner: string,\n  options?: GetNftsForOwnerOptions | GetBaseNftsForOwnerOptions,\n  srcMethod = 'getNftsForOwner'\n): Promise<OwnedNftsResponse | OwnedBaseNftsResponse> {\n  const withMetadata = omitMetadataToWithMetadata(options?.omitMetadata);\n  const response = await requestHttpWithBackoff<\n    GetNftsAlchemyParams,\n    RawGetBaseNftsResponse | RawGetNftsResponse\n  >(config, AlchemyApiType.NFT, 'getNFTs', srcMethod, {\n    contractAddresses: options?.contractAddresses,\n    pageKey: options?.pageKey,\n    filters: options?.excludeFilters,\n    excludeFilters: options?.excludeFilters,\n    includeFilters: options?.includeFilters,\n    owner,\n    pageSize: options?.pageSize,\n    withMetadata,\n    tokenUriTimeoutInMs: options?.tokenUriTimeoutInMs,\n    orderBy: options?.orderBy\n  });\n  return {\n    ownedNfts: response.ownedNfts.map(res => ({\n      ...nftFromGetNftResponse(res),\n      balance: parseInt(res.balance)\n    })),\n    pageKey: response.pageKey,\n    totalCount: response.totalCount,\n    blockHash: response.blockHash\n  };\n}\n\nexport async function getNftsForContract(\n  config: AlchemyConfig,\n  contractAddress: string,\n  options?: GetBaseNftsForContractOptions | GetNftsForContractOptions,\n  srcMethod = 'getNftsForContract'\n): Promise<NftContractNftsResponse | NftContractBaseNftsResponse> {\n  const withMetadata = omitMetadataToWithMetadata(options?.omitMetadata);\n  const response = await requestHttpWithBackoff<\n    GetNftsForContractAlchemyParams,\n    RawGetBaseNftsForContractResponse | RawGetNftsForContractResponse\n  >(config, AlchemyApiType.NFT, 'getNFTsForCollection', srcMethod, {\n    contractAddress,\n    startToken: options?.pageKey,\n    withMetadata,\n    limit: options?.pageSize ?? undefined,\n    tokenUriTimeoutInMs: options?.tokenUriTimeoutInMs\n  });\n\n  return {\n    nfts: response.nfts.map(res =>\n      nftFromGetNftContractResponse(res, contractAddress)\n    ),\n    pageKey: response.nextToken\n  };\n}\n\nexport async function* getNftsForContractIterator(\n  config: AlchemyConfig,\n  contractAddress: string,\n  options?: GetBaseNftsForContractOptions | GetNftsForContractOptions,\n  srcMethod = 'getNftsForContractIterator'\n): AsyncIterable<BaseNft | Nft> {\n  const withMetadata = omitMetadataToWithMetadata(options?.omitMetadata);\n  for await (const response of paginateEndpoint(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTsForCollection',\n    srcMethod,\n    'startToken',\n    'nextToken',\n    {\n      contractAddress,\n      startToken: options?.pageKey,\n      withMetadata\n    }\n  )) {\n    for (const nft of response.nfts as RawContractBaseNft[] | RawNft[]) {\n      yield nftFromGetNftContractResponse(nft, contractAddress);\n    }\n  }\n}\n\nexport async function getOwnersForContract(\n  config: AlchemyConfig,\n  contractAddress: string,\n  options?:\n    | GetOwnersForContractWithTokenBalancesOptions\n    | GetOwnersForContractOptions,\n  srcMethod = 'getOwnersForContract'\n): Promise<\n  GetOwnersForContractResponse | GetOwnersForContractWithTokenBalancesResponse\n> {\n  // Cast to `any` to avoid more type wrangling.\n  const response: any = await requestHttpWithBackoff<\n    GetOwnersForNftContractAlchemyParams,\n    RawGetOwnersForContractResponse\n  >(config, AlchemyApiType.NFT, 'getOwnersForCollection', srcMethod, {\n    ...options,\n    contractAddress\n  });\n\n  return {\n    owners: response.ownerAddresses,\n\n    // Only include the pageKey in the final response if it's defined\n    ...(response.pageKey !== undefined && { pageKey: response.pageKey })\n  };\n}\n\nexport async function getContractsForOwner(\n  config: AlchemyConfig,\n  owner: string,\n  options?: GetContractsForOwnerOptions,\n  srcMethod = 'getContractsForOwner'\n): Promise<GetContractsForOwnerResponse> {\n  const response = await requestHttpWithBackoff<\n    GetContractsForOwnerParams,\n    RawGetContractsForOwnerResponse\n  >(config, AlchemyApiType.NFT, 'getContractsForOwner', srcMethod, {\n    owner,\n    excludeFilters: options?.excludeFilters,\n    includeFilters: options?.includeFilters,\n    pageKey: options?.pageKey,\n    pageSize: options?.pageSize,\n    orderBy: options?.orderBy\n  });\n\n  return getContractsForOwnerFromRaw(response);\n}\n\nexport async function getOwnersForNft(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  options?: GetOwnersForContractOptions,\n  srcMethod = 'getOwnersForNft'\n): Promise<GetOwnersForNftResponse> {\n  return requestHttpWithBackoff(\n    config,\n    AlchemyApiType.NFT,\n    'getOwnersForToken',\n    srcMethod,\n    {\n      contractAddress,\n      tokenId: BigNumber.from(tokenId!).toString(),\n      ...options\n    }\n  );\n}\n\nexport async function getMintedNfts(\n  config: AlchemyConfig,\n  owner: string,\n  options?: GetMintedNftsOptions\n): Promise<TransfersNftResponse> {\n  const provider = await config.getProvider();\n  const ownerAddress = await provider._getAddress(owner);\n  const category = nftTokenTypeToCategory(options?.tokenType);\n  const params: AssetTransfersParams = {\n    fromBlock: '0x0',\n    fromAddress: ETH_NULL_ADDRESS,\n    toAddress: ownerAddress,\n    excludeZeroValue: true,\n    contractAddresses: options?.contractAddresses,\n    category,\n    maxCount: 100,\n    pageKey: options?.pageKey\n  };\n  const response = await getAssetTransfers(config, params, 'getMintedNfts');\n  return getNftsForTransfers(config, response);\n}\n\nexport async function getTransfersForOwner(\n  config: AlchemyConfig,\n  owner: string,\n  transferType: GetTransfersForOwnerTransferType,\n  options?: GetTransfersForOwnerOptions\n): Promise<TransfersNftResponse> {\n  const provider = await config.getProvider();\n  const ownerAddress = await provider._getAddress(owner);\n  const category = nftTokenTypeToCategory(options?.tokenType);\n  const params: AssetTransfersParams = {\n    fromBlock: '0x0',\n    excludeZeroValue: true,\n    contractAddresses: options?.contractAddresses,\n    category,\n    maxCount: 100,\n    pageKey: options?.pageKey\n  };\n\n  if (transferType === GetTransfersForOwnerTransferType.TO) {\n    params.toAddress = ownerAddress;\n  } else {\n    params.fromAddress = ownerAddress;\n  }\n  const transfersResponse = await getAssetTransfers(\n    config,\n    params,\n    'getTransfersForOwner'\n  );\n\n  return getNftsForTransfers(config, transfersResponse);\n}\n\nexport async function getTransfersForContract(\n  config: AlchemyConfig,\n  contract: string,\n  options?: GetTransfersForContractOptions\n): Promise<TransfersNftResponse> {\n  const category = [\n    AssetTransfersCategory.ERC721,\n    AssetTransfersCategory.ERC1155,\n    AssetTransfersCategory.SPECIALNFT\n  ];\n  const provider = await config.getProvider();\n  const fromBlock = options?.fromBlock\n    ? provider.formatter.blockTag(\n        await provider._getBlockTag(options.fromBlock)\n      )\n    : '0x0';\n  const toBlock = options?.toBlock\n    ? provider.formatter.blockTag(await provider._getBlockTag(options.toBlock))\n    : undefined;\n  const params: AssetTransfersParams = {\n    fromBlock,\n    toBlock,\n    excludeZeroValue: true,\n    contractAddresses: [contract],\n    order: options?.order,\n    category,\n    maxCount: 100,\n    pageKey: options?.pageKey\n  };\n\n  const transfersResponse = await getAssetTransfers(\n    config,\n    params,\n    'getTransfersForContract'\n  );\n\n  return getNftsForTransfers(config, transfersResponse);\n}\n\nfunction nftTokenTypeToCategory(\n  tokenType: NftTokenType | undefined\n): AssetTransfersCategory[] {\n  switch (tokenType) {\n    case NftTokenType.ERC721:\n      return [AssetTransfersCategory.ERC721];\n    case NftTokenType.ERC1155:\n      return [AssetTransfersCategory.ERC1155];\n    default:\n      return [\n        AssetTransfersCategory.ERC721,\n        AssetTransfersCategory.ERC1155,\n        AssetTransfersCategory.SPECIALNFT\n      ];\n  }\n}\n\nfunction parse1155Transfer(\n  transfer: AssetTransfersResult\n): NftMetadataBatchToken[] {\n  return transfer.erc1155Metadata!.map(metadata => ({\n    contractAddress: transfer.rawContract.address!,\n    tokenId: metadata.tokenId,\n    tokenType: NftTokenType.ERC1155\n  }));\n}\n\nexport async function checkNftOwnership(\n  config: AlchemyConfig,\n  owner: string,\n  contractAddresses: string[],\n  srcMethod = 'checkNftOwnership'\n): Promise<boolean> {\n  if (contractAddresses.length === 0) {\n    throw new Error('Must provide at least one contract address');\n  }\n  const response = await getNftsForOwner(\n    config,\n    owner,\n    {\n      contractAddresses,\n      omitMetadata: true\n    },\n    srcMethod\n  );\n  return response.ownedNfts.length > 0;\n}\n\nexport async function verifyNftOwnership(\n  config: AlchemyConfig,\n  owner: string,\n  contractAddresses: string | string[],\n  srcMethod = 'verifyNftOwnership'\n): Promise<boolean | { [contractAddress: string]: boolean }> {\n  if (typeof contractAddresses === 'string') {\n    const response = await getNftsForOwner(\n      config,\n      owner,\n      {\n        contractAddresses: [contractAddresses],\n        omitMetadata: true\n      },\n      srcMethod\n    );\n    return response.ownedNfts.length > 0;\n  } else {\n    if (contractAddresses.length === 0) {\n      throw new Error('Must provide at least one contract address');\n    }\n    const response = await getNftsForOwner(\n      config,\n      owner,\n      {\n        contractAddresses,\n        omitMetadata: true\n      },\n      srcMethod\n    );\n\n    // Create map where all input contract addresses are set to false, then flip\n    // owned nfts to true.\n    const result = contractAddresses.reduce(\n      (acc: { [contractAddress: string]: boolean }, curr) => {\n        acc[curr] = false;\n        return acc;\n      },\n      {}\n    );\n    for (const nft of response.ownedNfts) {\n      result[nft.contract.address] = true;\n    }\n    return result;\n  }\n}\n\nexport async function isSpamContract(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'isSpamContract'\n): Promise<boolean> {\n  return requestHttpWithBackoff<IsSpamContractParams, boolean>(\n    config,\n    AlchemyApiType.NFT,\n    'isSpamContract',\n    srcMethod,\n    {\n      contractAddress\n    }\n  );\n}\n\nexport async function getSpamContracts(\n  config: AlchemyConfig,\n  srcMethod = 'getSpamContracts'\n): Promise<string[]> {\n  return requestHttpWithBackoff<undefined, string[]>(\n    config,\n    AlchemyApiType.NFT,\n    'getSpamContracts',\n    srcMethod,\n    undefined\n  );\n}\n\nexport async function getFloorPrice(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'getFloorPrice'\n): Promise<GetFloorPriceResponse> {\n  return requestHttpWithBackoff<GetFloorPriceParams, GetFloorPriceResponse>(\n    config,\n    AlchemyApiType.NFT,\n    'getFloorPrice',\n    srcMethod,\n    {\n      contractAddress\n    }\n  );\n}\n\nexport async function getNftSales(\n  config: AlchemyConfig,\n  options: GetNftSalesOptions | GetNftSalesOptionsByContractAddress = {},\n  srcMethod = 'getNftSales'\n): Promise<GetNftSalesResponse> {\n  // Avoid ts compiler complaining about the contractAddress field.\n  const params: Partial<GetNftSalesOptionsByContractAddress> = {\n    ...options\n  };\n\n  const response = await requestHttpWithBackoff<\n    GetNftSalesParams,\n    RawGetNftSalesResponse\n  >(config, AlchemyApiType.NFT, 'getNFTSales', srcMethod, {\n    fromBlock: params?.fromBlock,\n    toBlock: params?.toBlock,\n    order: params?.order,\n    marketplace: params?.marketplace,\n    contractAddress: params?.contractAddress,\n    tokenId: params?.tokenId\n      ? BigNumber.from(params?.tokenId).toString()\n      : undefined,\n    sellerAddress: params?.sellerAddress,\n    buyerAddress: params?.buyerAddress,\n    taker: params?.taker,\n    limit: params?.limit,\n    pageKey: params?.pageKey\n  });\n\n  return getNftSalesFromRaw(response);\n}\n\nexport async function computeRarity(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  srcMethod = 'computeRarity'\n): Promise<NftAttributeRarity[]> {\n  const response = await requestHttpWithBackoff<\n    ComputeRarityParams,\n    RawNftAttributeRarity[]\n  >(config, AlchemyApiType.NFT, 'computeRarity', srcMethod, {\n    contractAddress,\n    tokenId: BigNumber.from(tokenId).toString()\n  });\n\n  return getNftRarityFromRaw(response);\n}\n\nexport async function searchContractMetadata(\n  config: AlchemyConfig,\n  query: string,\n  srcMethod = 'searchContractMetadata'\n): Promise<NftContract[]> {\n  const response = await requestHttpWithBackoff<\n    SearchContractMetadataParams,\n    RawNftContract[]\n  >(config, AlchemyApiType.NFT, 'searchContractMetadata', srcMethod, {\n    query\n  });\n\n  return response.map(getNftContractFromRaw);\n}\n\nexport async function summarizeNftAttributes(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'summarizeNftAttributes'\n): Promise<NftAttributesResponse> {\n  return requestHttpWithBackoff<\n    SummarizeNftAttributesParams,\n    NftAttributesResponse\n  >(config, AlchemyApiType.NFT, 'summarizeNftAttributes', srcMethod, {\n    contractAddress\n  });\n}\n\nexport async function refreshNftMetadata(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  srcMethod = 'refreshNftMetadata'\n): Promise<boolean> {\n  const tokenIdString = BigNumber.from(tokenId!).toString();\n  const first = await getNftMetadata(\n    config,\n    contractAddress,\n    tokenIdString,\n    undefined,\n    srcMethod\n  );\n  const second = await refresh(\n    config,\n    contractAddress,\n    tokenIdString,\n    srcMethod\n  );\n  return first.timeLastUpdated !== second.timeLastUpdated;\n}\n\nexport async function refreshContract(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'refreshContract'\n): Promise<RefreshContractResult> {\n  const response = await requestHttpWithBackoff<\n    ReingestContractParams,\n    RawReingestContractResponse\n  >(config, AlchemyApiType.NFT, 'reingestContract', srcMethod, {\n    contractAddress\n  });\n\n  return {\n    contractAddress: response.contractAddress,\n    refreshState: parseReingestionState(response.reingestionState),\n    progress: response.progress\n  };\n}\n\nasync function refresh(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  srcMethod: string\n): Promise<Nft> {\n  const response = await requestHttpWithBackoff<GetNftMetadataParams, RawNft>(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTMetadata',\n    srcMethod,\n    {\n      contractAddress,\n      tokenId: BigNumber.from(tokenId!).toString(),\n      refreshCache: true\n    }\n  );\n  return getNftFromRaw(response);\n}\n\n/**\n * Helper method to convert a NFT response received from Alchemy backend to an\n * SDK NFT type.\n *\n * @internal\n */\nfunction nftFromGetNftResponse(\n  ownedNft: RawOwnedBaseNft | RawOwnedNft\n): Nft | BaseNft {\n  if (isNftWithMetadata(ownedNft)) {\n    return getNftFromRaw(ownedNft);\n  } else {\n    return getBaseNftFromRaw(ownedNft);\n  }\n}\n\n/**\n * Helper method to convert a NFT response received from Alchemy backend to an\n * SDK NFT type.\n *\n * @internal\n */\nfunction nftFromGetNftContractResponse(\n  ownedNft: RawContractBaseNft | RawNft,\n  contractAddress: string\n): Nft | BaseNft {\n  if (isNftWithMetadata(ownedNft)) {\n    return getNftFromRaw(ownedNft);\n  } else {\n    return getBaseNftFromRaw(ownedNft, contractAddress);\n  }\n}\n\n/** @internal */\n// TODO: more comprehensive type check\nfunction isNftWithMetadata(\n  response: RawBaseNft | RawContractBaseNft | RawNft\n): response is RawNft {\n  return (response as RawNft).title !== undefined;\n}\n\n/**\n * Given an AssetTransfersResponse, fetches the NFTs associated with the\n * transfers and collates them with transfer metadata.\n */\nasync function getNftsForTransfers(\n  config: AlchemyConfig,\n  response: AssetTransfersResponse\n): Promise<TransfersNftResponse> {\n  const metadataTransfers = response.transfers\n    .filter(transfer => transfer.rawContract.address !== null)\n    // Use flatMap to flatten 1155 transfers that contain multiple NFTs.\n    .flatMap(transfer => {\n      const tokens = getTokensFromTransfer(transfer);\n\n      const metadata = {\n        from: transfer.from,\n        to: transfer.to ?? undefined,\n        transactionHash: transfer.hash,\n        blockNumber: transfer.blockNum\n      };\n      return tokens.map(token => ({ metadata, token }));\n    });\n\n  if (metadataTransfers.length === 0) {\n    return { nfts: [] };\n  }\n\n  const nfts = await getNftMetadataBatch(\n    config,\n    metadataTransfers.map(transfer => transfer.token)\n  );\n  const transferredNfts = nfts.map((nft, i) => ({\n    ...nft,\n    ...metadataTransfers[i].metadata\n  }));\n\n  return {\n    nfts: transferredNfts,\n    pageKey: response.pageKey\n  };\n}\n\n/**\n * Returns the underlying NFT tokens from a transfer as the params for a\n * `getNftMetadataBatch` call. Handles the 1155 case where multiple NFTs can be\n * transferred in a single transaction.\n */\nfunction getTokensFromTransfer(\n  transfer: AssetTransfersResult\n): NftMetadataBatchToken[] {\n  // ERC1155 NFTs can contain multiple tokens in a single transfer, which\n  // requires special logic.\n  if (transfer.category === AssetTransfersCategory.ERC1155) {\n    return parse1155Transfer(transfer);\n  } else {\n    return [\n      {\n        contractAddress: transfer.rawContract.address!,\n        tokenId: transfer.tokenId!,\n        tokenType:\n          transfer.category === AssetTransfersCategory.ERC721\n            ? NftTokenType.ERC721\n            : undefined\n      }\n    ];\n  }\n}\n\n/**\n * Flips the `omitMetadata` SDK parameter type to the `withMetadata` parameter\n * required by the Alchemy API. If `omitMetadata` is undefined, the SDK defaults\n * to including metadata.\n *\n * @internal\n */\nfunction omitMetadataToWithMetadata(\n  omitMetadata: boolean | undefined\n): boolean {\n  return omitMetadata === undefined ? true : !omitMetadata;\n}\n\nfunction parseReingestionState(reingestionState: string): RefreshState {\n  switch (reingestionState) {\n    case 'does_not_exist':\n      return RefreshState.DOES_NOT_EXIST;\n    case 'already_queued':\n      return RefreshState.ALREADY_QUEUED;\n    case 'in_progress':\n      return RefreshState.IN_PROGRESS;\n    case 'finished':\n      return RefreshState.FINISHED;\n    case 'queued':\n      return RefreshState.QUEUED;\n    case 'queue_failed':\n      return RefreshState.QUEUE_FAILED;\n    default:\n      throw new Error('Unknown reingestion state: ' + reingestionState);\n  }\n}\n\n/**\n * Interface for the `getNftsForNftContract` endpoint. The main difference is\n * that the endpoint has a `startToken` parameter, but the SDK standardizes all\n * pagination parameters to `pageKey`.\n *\n * @internal\n */\ninterface GetNftsForContractAlchemyParams {\n  contractAddress: string;\n  startToken?: string;\n  withMetadata: boolean;\n  limit?: number;\n  tokenUriTimeoutInMs?: number;\n}\n\n/**\n * Interface for the `getNfts` endpoint. The main difference is that the\n * endpoint has a `withMetadata` parameter, but the SDK exposes the parameter as\n * `omitMetadata`.\n *\n * @internal\n */\ninterface GetNftsAlchemyParams {\n  owner: string;\n  pageKey?: string;\n  contractAddresses?: string[];\n  /** @deprecated - Please use `excludeFilters` instead. */\n  filters?: string[];\n  excludeFilters?: NftFilters[];\n  includeFilters?: NftFilters[];\n  pageSize?: number;\n  withMetadata: boolean;\n  tokenUriTimeoutInMs?: number;\n  orderBy?: string;\n}\n\n/**\n * NftTokenTypes that are allowed as request inputs.\n *\n * @internal\n */\nexport type InputNftTokenType =\n  | NftTokenType.ERC1155\n  | NftTokenType.ERC721\n  | undefined;\n\n/**\n * Interface for the `getNftMetadata` endpoint.\n *\n * @internal\n */\ninterface GetNftMetadataParams {\n  contractAddress: string;\n  tokenId: string;\n  tokenType?: InputNftTokenType;\n  refreshCache?: boolean;\n  tokenUriTimeoutInMs?: number;\n}\n\n/**\n * Interface for the `isSpamContract` endpoint.\n *\n * @internal\n */\ninterface IsSpamContractParams {\n  contractAddress: string;\n}\n\n/**\n * Interface for the `getNftContractMetadata` endpoint.\n *\n * @internal\n */\ninterface GetContractMetadataParams {\n  contractAddress: string;\n}\n\n/**\n * Interface for the `getOwnersForNftContract` endpoint.\n *\n * @internal\n */\ninterface GetOwnersForNftContractAlchemyParams {\n  contractAddress: string;\n}\n\n/**\n * Interface for the `getOwnersForContract` endpoint.\n *\n * @internal\n */\ninterface GetContractsForOwnerParams {\n  owner: string;\n  pageKey?: string;\n  pageSize?: number;\n  includeFilters?: NftFilters[];\n  excludeFilters?: NftFilters[];\n  orderBy?: NftOrdering;\n}\n\n/**\n * Interface for the `getFloorPrice` endpoint.\n *\n * @internal\n */\ninterface GetFloorPriceParams {\n  contractAddress: string;\n}\n\n/**\n * Interface for the `getNftSales` endpoint.\n *\n * @internal\n */\ninterface GetNftSalesParams {\n  fromBlock?: number | 'latest';\n  toBlock?: number | 'latest';\n  order?: SortingOrder;\n  marketplace?: NftSaleMarketplace;\n  contractAddress?: string;\n  tokenId?: string;\n  sellerAddress?: string;\n  buyerAddress?: string;\n  taker?: NftSaleTakerType;\n  limit?: number;\n  pageKey?: string;\n}\n\n/**\n * Interface for the `computeRarity` endpoint.\n *\n * @internal\n */\ninterface ComputeRarityParams {\n  contractAddress: string;\n  tokenId: string;\n}\n\n/**\n * Interface for the `searchContractMetadata` endpoint.\n *\n * @internal\n */\ninterface SearchContractMetadataParams {\n  query: string;\n}\n\n/**\n * Interface for the `summarizeNFTAttributes` endpoint.\n *\n * @internal\n */\ninterface SummarizeNftAttributesParams {\n  contractAddress: string;\n}\n\ninterface ReingestContractParams {\n  contractAddress: string;\n}\n","import type { BigNumberish } from '@ethersproject/bignumber';\n\nimport {\n  checkNftOwnership,\n  computeRarity,\n  getContractMetadata,\n  getContractMetadataBatch,\n  getContractsForOwner,\n  getFloorPrice,\n  getMintedNfts,\n  getNftMetadata,\n  getNftMetadataBatch,\n  getNftSales,\n  getNftsForContract,\n  getNftsForContractIterator,\n  getNftsForOwner,\n  getNftsForOwnerIterator,\n  getOwnersForContract,\n  getOwnersForNft,\n  getSpamContracts,\n  getTransfersForContract,\n  getTransfersForOwner,\n  isSpamContract,\n  refreshContract,\n  refreshNftMetadata,\n  searchContractMetadata,\n  summarizeNftAttributes,\n  verifyNftOwnership\n} from '../internal/nft-api';\nimport {\n  GetBaseNftsForContractOptions,\n  GetBaseNftsForOwnerOptions,\n  GetContractsForOwnerOptions,\n  GetContractsForOwnerResponse,\n  GetFloorPriceResponse,\n  GetMintedNftsOptions,\n  GetNftMetadataOptions,\n  GetNftSalesOptions,\n  GetNftSalesOptionsByContractAddress,\n  GetNftSalesResponse,\n  GetNftsForContractOptions,\n  GetNftsForOwnerOptions,\n  GetOwnersForContractOptions,\n  GetOwnersForContractResponse,\n  GetOwnersForContractWithTokenBalancesOptions,\n  GetOwnersForContractWithTokenBalancesResponse,\n  GetOwnersForNftOptions,\n  GetOwnersForNftResponse,\n  GetTransfersForContractOptions,\n  GetTransfersForOwnerOptions,\n  GetTransfersForOwnerTransferType,\n  NftAttributeRarity,\n  NftAttributesResponse,\n  NftContractBaseNftsResponse,\n  NftContractNftsResponse,\n  NftMetadataBatchOptions,\n  NftMetadataBatchToken,\n  NftTokenType,\n  OwnedBaseNft,\n  OwnedBaseNftsResponse,\n  OwnedNft,\n  OwnedNftsResponse,\n  RefreshContractResult,\n  TransfersNftResponse\n} from '../types/types';\nimport { AlchemyConfig } from './alchemy-config';\nimport { BaseNft, Nft, NftContract } from './nft';\n\n/**\n * The NFT namespace contains all the functionality related to NFTs.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the core namespace\n * via `alchemy.nft`.\n */\nexport class NftNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Get the NFT metadata associated with the provided parameters.\n   *\n   * @param contractAddress - The contract address of the NFT.\n   * @param tokenId - Token id of the NFT.\n   * @param tokenType - Optionally specify the type of token to speed up the query.\n   * @param tokenUriTimeoutInMs - No set timeout by default - When metadata is\n   *   requested, this parameter is the timeout (in milliseconds) for the\n   *   website hosting the metadata to respond. If you want to only access the\n   *   cache and not live fetch any metadata for cache misses then set this value to 0.\n   * @public\n   * @deprecated Please use the method with the `options` overload. This method\n   * will be removed in a subsequent release.\n   */\n  getNftMetadata(\n    contractAddress: string,\n    tokenId: BigNumberish,\n    tokenType?: NftTokenType,\n    tokenUriTimeoutInMs?: number\n  ): Promise<Nft>;\n\n  /**\n   * Get the NFT metadata associated with the provided parameters.\n   *\n   * @param contractAddress - The contract address of the NFT.\n   * @param tokenId - Token id of the NFT.\n   * @param options - Options for the request.\n   * @public\n   */\n  getNftMetadata(\n    contractAddress: string,\n    tokenId: BigNumberish,\n    options?: GetNftMetadataOptions\n  ): Promise<Nft>;\n  getNftMetadata(\n    contractAddress: string,\n    tokenId: BigNumberish,\n    optionsOrTokenType?: GetNftMetadataOptions | NftTokenType,\n    tokenUriTimeoutInMs?: number\n  ): Promise<Nft> {\n    let options: GetNftMetadataOptions;\n    if (typeof optionsOrTokenType === 'object') {\n      options = {\n        tokenType: optionsOrTokenType.tokenType,\n        tokenUriTimeoutInMs: optionsOrTokenType.tokenUriTimeoutInMs,\n        refreshCache: optionsOrTokenType.refreshCache\n      };\n    } else {\n      options = {\n        tokenType: optionsOrTokenType,\n        tokenUriTimeoutInMs\n      };\n    }\n    return getNftMetadata(this.config, contractAddress, tokenId, options);\n  }\n\n  /**\n   * Gets the NFT metadata for multiple NFT tokens.\n   *\n   * @param tokens An array of NFT tokens to fetch metadata for.\n   * @param options Configuration options for making the request.\n   */\n  getNftMetadataBatch(\n    tokens: Array<NftMetadataBatchToken>,\n    options?: NftMetadataBatchOptions\n  ): Promise<Nft[]> {\n    return getNftMetadataBatch(this.config, tokens, options);\n  }\n\n  /**\n   * Get the NFT contract metadata associated with the provided parameters.\n   *\n   * @param contractAddress - The contract address of the NFT.\n   * @public\n   */\n  getContractMetadata(contractAddress: string): Promise<NftContract> {\n    return getContractMetadata(this.config, contractAddress);\n  }\n\n  /**\n   * Get the NFT contract metadata for multiple NFT contracts in a single request.\n   *\n   * @param contractAddresses - An array of contract addresses to fetch metadata for.\n   */\n  getContractMetadataBatch(\n    contractAddresses: string[]\n  ): Promise<NftContract[]> {\n    return getContractMetadataBatch(this.config, contractAddresses);\n  }\n\n  /**\n   * Fetches all NFTs for a given owner and yields them in an async iterable.\n   *\n   * This method returns the full NFT for the owner and pages through all page\n   * keys until all NFTs have been fetched.\n   *\n   * @param owner - The address of the owner.\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  getNftsForOwnerIterator(\n    owner: string,\n    options?: GetNftsForOwnerOptions\n  ): AsyncIterable<OwnedNft>;\n  /**\n   * Fetches all NFTs for a given owner and yields them in an async iterable.\n   *\n   * This method returns the base NFTs that omit the associated metadata and\n   * pages through all page keys until all NFTs have been fetched.\n   *\n   * @param owner - The address of the owner.\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  getNftsForOwnerIterator(\n    owner: string,\n    options?: GetBaseNftsForOwnerOptions\n  ): AsyncIterable<OwnedBaseNft>;\n  getNftsForOwnerIterator(\n    owner: string,\n    options?: GetNftsForOwnerOptions | GetBaseNftsForOwnerOptions\n  ): AsyncIterable<OwnedBaseNft | OwnedNft> {\n    return getNftsForOwnerIterator(this.config, owner, options);\n  }\n\n  /**\n   * Get all NFTs for an owner.\n   *\n   * This method returns the full NFTs in the contract. To get all NFTs without\n   * their associated metadata, use {@link GetBaseNftsForOwnerOptions}.\n   *\n   * @param owner - The address of the owner.\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  getNftsForOwner(\n    owner: string,\n    options?: GetNftsForOwnerOptions\n  ): Promise<OwnedNftsResponse>;\n  /**\n   * Get all base NFTs for an owner.\n   *\n   * This method returns the base NFTs that omit the associated metadata. To get\n   * all NFTs with their associated metadata, use {@link GetNftsForOwnerOptions}.\n   *\n   * @param owner - The address of the owner.\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  getNftsForOwner(\n    owner: string,\n    options?: GetBaseNftsForOwnerOptions\n  ): Promise<OwnedBaseNftsResponse>;\n  getNftsForOwner(\n    owner: string,\n    options?: GetNftsForOwnerOptions | GetBaseNftsForOwnerOptions\n  ): Promise<OwnedNftsResponse | OwnedBaseNftsResponse> {\n    return getNftsForOwner(this.config, owner, options);\n  }\n\n  /**\n   * Get all NFTs for a given contract address.\n   *\n   * This method returns the full NFTs in the contract. To get all NFTs without\n   * their associated metadata, use {@link GetBaseNftsForContractOptions}.\n   *\n   * @param contractAddress - The contract address of the NFT contract.\n   * @param options - The parameters to use for the request. or\n   *   {@link NftContractNftsResponse} response.\n   * @beta\n   */\n  getNftsForContract(\n    contractAddress: string,\n    options?: GetNftsForContractOptions\n  ): Promise<NftContractNftsResponse>;\n  /**\n   * Get all base NFTs for a given contract address.\n   *\n   * This method returns the base NFTs that omit the associated metadata. To get\n   * all NFTs with their associated metadata, use {@link GetNftsForContractOptions}.\n   *\n   * @param contractAddress - The contract address of the NFT contract.\n   * @param options - The optional parameters to use for the request.\n   * @beta\n   */\n  getNftsForContract(\n    contractAddress: string,\n    options?: GetBaseNftsForContractOptions\n  ): Promise<NftContractBaseNftsResponse>;\n  getNftsForContract(\n    contractAddress: string,\n    options?: GetBaseNftsForContractOptions | GetNftsForContractOptions\n  ): Promise<NftContractNftsResponse | NftContractBaseNftsResponse> {\n    return getNftsForContract(this.config, contractAddress, options);\n  }\n\n  /**\n   * Fetches all NFTs for a given contract address and yields them in an async iterable.\n   *\n   * This method returns the full NFTs in the contract and pages through all\n   * page keys until all NFTs have been fetched. To get all NFTs without their\n   * associated metadata, use {@link GetBaseNftsForContractOptions}.\n   *\n   * @param contractAddress - The contract address of the NFT contract.\n   * @param options - The optional parameters to use for the request.\n   * @beta\n   */\n  getNftsForContractIterator(\n    contractAddress: string,\n    options?: GetNftsForContractOptions\n  ): AsyncIterable<Nft>;\n  /**\n   * Fetches all base NFTs for a given contract address and yields them in an\n   * async iterable.\n   *\n   * This method returns the base NFTs that omit the associated metadata and\n   * pages through all page keys until all NFTs have been fetched. To get all\n   * NFTs with their associated metadata, use {@link GetNftsForContractOptions}.\n   *\n   * @param contractAddress - The contract address of the NFT contract.\n   * @param options - The optional parameters to use for the request.\n   * @beta\n   */\n  getNftsForContractIterator(\n    contractAddress: string,\n    options?: GetBaseNftsForContractOptions\n  ): AsyncIterable<BaseNft>;\n  getNftsForContractIterator(\n    contractAddress: string,\n    options?: GetBaseNftsForContractOptions | GetNftsForContractOptions\n  ): AsyncIterable<BaseNft | Nft> {\n    return getNftsForContractIterator(this.config, contractAddress, options);\n  }\n\n  /**\n   * Gets all the owners for a given NFT contract along with the token balance.\n   *\n   * @param contractAddress - The NFT contract to get the owners for.\n   * @param options Optional parameters to use for the request.\n   * @public\n   */\n  getOwnersForContract(\n    contractAddress: string,\n    options: GetOwnersForContractWithTokenBalancesOptions\n  ): Promise<GetOwnersForContractWithTokenBalancesResponse>;\n\n  /**\n   * Gets all the owners for a given NFT contract.\n   *\n   * Note that token balances are omitted by default. To include token balances\n   * for each owner, use {@link GetOwnersForContractWithTokenBalancesOptions},\n   * which has the `withTokenBalances` field set to `true`.\n   *\n   * @param contractAddress - The NFT contract to get the owners for.\n   * @param options Optional parameters to use for the request.\n   * @public\n   */\n  getOwnersForContract(\n    contractAddress: string,\n    options?: GetOwnersForContractOptions\n  ): Promise<GetOwnersForContractResponse>;\n  getOwnersForContract(\n    contractAddress: string,\n    options?:\n      | GetOwnersForContractOptions\n      | GetOwnersForContractWithTokenBalancesOptions\n  ): Promise<\n    GetOwnersForContractResponse | GetOwnersForContractWithTokenBalancesResponse\n  > {\n    return getOwnersForContract(this.config, contractAddress, options);\n  }\n\n  /**\n   * Gets all the owners for a given NFT contract address and token ID.\n   *\n   * @param contractAddress - The NFT contract address.\n   * @param tokenId - Token id of the NFT.\n   * @param options - Optional parameters to use for the request.\n   * @beta\n   */\n  getOwnersForNft(\n    contractAddress: string,\n    tokenId: BigNumberish,\n    options?: GetOwnersForNftOptions\n  ): Promise<GetOwnersForNftResponse> {\n    return getOwnersForNft(this.config, contractAddress, tokenId, options);\n  }\n\n  /**\n   * Gets all NFT contracts held by the specified owner address.\n   *\n   * @param owner - Address for NFT owner (can be in ENS format!).\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  getContractsForOwner(\n    owner: string,\n    options?: GetContractsForOwnerOptions\n  ): Promise<GetContractsForOwnerResponse> {\n    return getContractsForOwner(this.config, owner, options);\n  }\n\n  /**\n   * Gets all NFT transfers for a given owner's address.\n   *\n   * @param owner The owner to get transfers for.\n   * @param category Whether to get transfers to or from the owner address.\n   * @param options Additional options for the request.\n   */\n  getTransfersForOwner(\n    owner: string,\n    category: GetTransfersForOwnerTransferType,\n    options?: GetTransfersForOwnerOptions\n  ): Promise<TransfersNftResponse> {\n    return getTransfersForOwner(this.config, owner, category, options);\n  }\n\n  /**\n   * Gets all NFT transfers for a given NFT contract address.\n   *\n   * Defaults to all transfers for the contract. To get transfers for a specific\n   * block range, use {@link GetTransfersForContractOptions}.\n   *\n   * @param contract The NFT contract to get transfers for.\n   * @param options Additional options for the request.\n   */\n  getTransfersForContract(\n    contract: string,\n    options?: GetTransfersForContractOptions\n  ): Promise<TransfersNftResponse> {\n    return getTransfersForContract(this.config, contract, options);\n  }\n\n  /**\n   * Get all the NFTs minted by a specified owner address.\n   *\n   * @param owner - Address for the NFT owner (can be in ENS format).\n   * @param options - The optional parameters to use for the request.\n   */\n  async getMintedNfts(\n    owner: string,\n    options?: GetMintedNftsOptions\n  ): Promise<TransfersNftResponse> {\n    return getMintedNfts(this.config, owner, options);\n  }\n\n  /**\n   * DEPRECATED - Checks that the provided owner address owns one of more of the\n   * provided NFTs.\n   *\n   * @deprecated - Use {@link verifyNftOwnership} instead. This method will be\n   *   removed in a future release.\n   * @param owner - The owner address to check.\n   * @param contractAddresses - An array of NFT contract addresses to check ownership for.\n   */\n  checkNftOwnership(\n    owner: string,\n    contractAddresses: string[]\n  ): Promise<boolean> {\n    return checkNftOwnership(this.config, owner, contractAddresses);\n  }\n\n  /**\n   * Checks that the provided owner address owns one of more of the provided\n   * NFT. Returns a boolean indicating whether the owner address owns the provided NFT.\n   *\n   * @param owner - The owner address to check.\n   * @param contractAddress - An NFT contract address to check ownership for.\n   */\n  verifyNftOwnership(owner: string, contractAddress: string): Promise<boolean>;\n\n  /**\n   * Checks which of the provided NFTs the owner address owns. Returns a map of\n   * contract address to a boolean indicating whether the owner address owns the NFT.\n   *\n   * @param owner - The owner address to check.\n   * @param contractAddresses - An array NFT contract address to check ownership for.\n   */\n  verifyNftOwnership(\n    owner: string,\n    contractAddresses: string[]\n  ): Promise<{ [contractAddress: string]: boolean }>;\n  verifyNftOwnership(\n    owner: string,\n    contractAddress: string | string[]\n  ): Promise<boolean | { [contractAddress: string]: boolean }> {\n    return verifyNftOwnership(this.config, owner, contractAddress);\n  }\n\n  /**\n   * Returns whether a contract is marked as spam or not by Alchemy. For more\n   * information on how we classify spam, go to our NFT API FAQ at\n   * https://docs.alchemy.com/alchemy/enhanced-apis/nft-api/nft-api-faq#nft-spam-classification.\n   *\n   * @param contractAddress - The contract address to check.\n   * @beta\n   */\n  isSpamContract(contractAddress: string): Promise<boolean> {\n    return isSpamContract(this.config, contractAddress);\n  }\n\n  /**\n   * Returns a list of all spam contracts marked by Alchemy. For details on how\n   * Alchemy marks spam contracts, go to\n   * https://docs.alchemy.com/alchemy/enhanced-apis/nft-api/nft-api-faq#nft-spam-classification.\n   *\n   * @beta\n   */\n  getSpamContracts(): Promise<string[]> {\n    return getSpamContracts(this.config);\n  }\n\n  /**\n   * Returns the floor prices of a NFT contract by marketplace.\n   *\n   * @param contractAddress - The contract address for the NFT collection.\n   * @beta\n   */\n  getFloorPrice(contractAddress: string): Promise<GetFloorPriceResponse> {\n    return getFloorPrice(this.config, contractAddress);\n  }\n\n  /**\n   * Returns NFT sales that have happened through on-chain marketplaces.\n   *\n   * @param options - The optional parameters to use for the request.\n   * @beta\n   */\n  getNftSales(options?: GetNftSalesOptions): Promise<GetNftSalesResponse>;\n  getNftSales(\n    options?: GetNftSalesOptionsByContractAddress\n  ): Promise<GetNftSalesResponse>;\n  getNftSales(\n    options?: GetNftSalesOptions | GetNftSalesOptionsByContractAddress\n  ): Promise<GetNftSalesResponse> {\n    return getNftSales(this.config, options);\n  }\n\n  /**\n   * Get the rarity of each attribute of an NFT.\n   *\n   * @param contractAddress - Contract address for the NFT collection.\n   * @param tokenId - Token id of the NFT.\n   */\n  computeRarity(\n    contractAddress: string,\n    tokenId: BigNumberish\n  ): Promise<NftAttributeRarity[]> {\n    return computeRarity(this.config, contractAddress, tokenId);\n  }\n\n  /**\n   * Search for a keyword across metadata of all ERC-721 and ERC-1155 smart contracts.\n   *\n   * @param query - The search string that you want to search for in contract metadata.\n   */\n  searchContractMetadata(query: string): Promise<NftContract[]> {\n    return searchContractMetadata(this.config, query);\n  }\n\n  /**\n   * Get a summary of attribute prevalence for an NFT collection.\n   *\n   * @param contractAddress - Contract address for the NFT collection.\n   */\n  summarizeNftAttributes(\n    contractAddress: string\n  ): Promise<NftAttributesResponse> {\n    return summarizeNftAttributes(this.config, contractAddress);\n  }\n\n  /**\n   * Refreshes the cached metadata for a provided NFT contract address and token\n   * id. Returns a boolean value indicating whether the metadata was refreshed.\n   *\n   * This method is useful when you want to refresh the metadata for a NFT that\n   * has been updated since the last time it was fetched. Note that the backend\n   * only allows one refresh per token every 15 minutes, globally for all users.\n   * The last refresh time for an NFT can be accessed on the\n   * {@link Nft.timeLastUpdated} field.\n   *\n   * To trigger a refresh for all NFTs in a contract, use {@link refreshContract} instead.\n   *\n   * @param contractAddress - The contract address of the NFT.\n   * @param tokenId - The token id of the NFT.\n   */\n  refreshNftMetadata(\n    contractAddress: string,\n    tokenId: BigNumberish\n  ): Promise<boolean> {\n    return refreshNftMetadata(this.config, contractAddress, tokenId);\n  }\n\n  /**\n   * Triggers a metadata refresh all NFTs in the provided contract address. This\n   * method is useful after an NFT collection is revealed.\n   *\n   * Refreshes are queued on the Alchemy backend and may take time to fully\n   * process. To refresh the metadata for a specific token, use the\n   * {@link refreshNftMetadata} method instead.\n   *\n   * @param contractAddress - The contract address of the NFT collection.\n   * @beta\n   */\n  refreshContract(contractAddress: string): Promise<RefreshContractResult> {\n    return refreshContract(this.config, contractAddress);\n  }\n}\n","import { AxiosRequestConfig, Method } from 'axios';\n\nimport { BigNumber } from '@ethersproject/bignumber';\n\nimport { requestHttpWithBackoff } from '../internal/dispatch';\nimport {\n  RawAddressActivityResponse,\n  RawCreateWebhookResponse,\n  RawCustomGraphqlWebhookConfig,\n  RawGetAllWebhooksResponse,\n  RawNftFilterParam,\n  RawNftFiltersResponse,\n  RawWebhook\n} from '../internal/raw-interfaces';\nimport {\n  AddressActivityResponse,\n  AddressActivityWebhook,\n  AddressWebhookParams,\n  AddressWebhookUpdate,\n  CustomGraphqlWebhook,\n  CustomGraphqlWebhookConfig,\n  CustomGraphqlWebhookParams,\n  CustomGraphqlWebhookUpdate,\n  DroppedTransactionWebhook,\n  GetAddressesOptions,\n  GetAllWebhooksResponse,\n  MinedTransactionWebhook,\n  Network,\n  NftActivityWebhook,\n  NftFilter,\n  NftFiltersResponse,\n  NftMetadataUpdateWebhook,\n  NftMetadataWebhookUpdate,\n  NftWebhookParams,\n  NftWebhookUpdate,\n  TransactionWebhookParams,\n  Webhook,\n  WebhookType,\n  WebhookVersion\n} from '../types/types';\nimport { AlchemyApiType } from '../util/const';\nimport { AlchemyConfig } from './alchemy-config';\n\n/**\n * The Notify namespace contains methods used for creating, reading, updating,\n * and deleting webhooks in the Notify API.\n *\n * To use the methods in the API, you must provide your team's auth token in the\n * {@link AlchemySettings.authToken} field when configuring\n * {@link AlchemySettings}. The auth token can be found in the Alchemy Dashboard\n * on the Notify tab.\n *\n * Note that not all networks are supported in the Notify API. Please consult\n * the documentation for which networks are supported.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the notify\n * namespace via `alchemy.notify`.\n */\nexport class NotifyNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Get all webhooks on your team.\n   *\n   * The team is determined by the `authToken` provided into the {@link AlchemySettings}\n   * object when creating a new {@link Alchemy} instance.\n   *\n   * This method returns a response object containing all the webhooks\n   */\n  async getAllWebhooks(): Promise<GetAllWebhooksResponse> {\n    this.verifyConfig();\n    const response = await this.sendWebhookRequest<RawGetAllWebhooksResponse>(\n      'team-webhooks',\n      'getAllWebhooks',\n      {}\n    );\n    return {\n      webhooks: parseRawWebhookResponse(response),\n      totalCount: response.data.length\n    };\n  }\n\n  /**\n   * Get all addresses tracked for the provided {@link AddressActivityWebhook}.\n   *\n   * @param addressWebhook The Address Activity webhook.\n   * @param options Pagination options when fetching addresses.\n   */\n  getAddresses(\n    addressWebhook: AddressActivityWebhook,\n    options?: GetAddressesOptions\n  ): Promise<AddressActivityResponse>;\n\n  /**\n   * Get all addresses tracked for the provided {@link AddressActivityWebhook}.\n   *\n   * @param webhookId The id of the address activity webhook. Passing in an id\n   *   of a non-address-activity webhook will result in a response object with\n   *   no addresses.\n   * @param options Pagination options when fetching addresses.\n   */\n  getAddresses(\n    webhookId: string,\n    options?: GetAddressesOptions\n  ): Promise<AddressActivityResponse>;\n  async getAddresses(\n    webhookOrId: AddressActivityWebhook | string,\n    options?: GetAddressesOptions\n  ): Promise<AddressActivityResponse> {\n    this.verifyConfig();\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    const response = await this.sendWebhookRequest<RawAddressActivityResponse>(\n      'webhook-addresses',\n      'getAddresses',\n      {\n        webhook_id: webhookId,\n        limit: options?.limit,\n        after: options?.pageKey\n      }\n    );\n    return parseRawAddressActivityResponse(response);\n  }\n\n  /**\n   * Get the graphql query used for the provided {@link CustomGraphqlWebhook}.\n   *\n   * @param customGraphqlWebhook The webhook to get the graphql query for.\n   */\n  getGraphqlQuery(\n    customGraphqlWebhook: CustomGraphqlWebhook\n  ): Promise<CustomGraphqlWebhookConfig>;\n\n  /**\n   * Get the graphql query used for the provided {@link CustomGraphqlWebhook}.\n   *\n   * @param webhookId The id of the custom webhook. Passing in an id\n   *   of a non-custom webhook will result in a response object with\n   *   no graphql query.\n   */\n  getGraphqlQuery(webhookId: string): Promise<CustomGraphqlWebhookConfig>;\n  async getGraphqlQuery(\n    webhookOrId: CustomGraphqlWebhook | string\n  ): Promise<CustomGraphqlWebhookConfig> {\n    this.verifyConfig();\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    const response =\n      await this.sendWebhookRequest<RawCustomGraphqlWebhookConfig>(\n        'dashboard-webhook-graphql-query',\n        'getGraphqlQuery',\n        {\n          webhook_id: webhookId\n        }\n      );\n    return parseRawCustomGraphqlWebhookResponse(response);\n  }\n\n  /**\n   * Get all NFTs tracked for the provided {@link NftActivityWebhook}.\n   *\n   * @param nftWebhook The NFT Activity webhook.\n   * @param options Pagination options when fetching NFT filters.\n   */\n  getNftFilters(\n    nftWebhook: NftActivityWebhook,\n    options?: GetAddressesOptions\n  ): Promise<NftFiltersResponse>;\n\n  /**\n   * Get all NFT filters tracked for the provided {@link NftActivityWebhook}.\n   *\n   * @param webhookId The id of the NFT activity webhook. Passing in an\n   *   incorrect id of a non-NFT webhook will result in a response object with\n   *   no filters.\n   * @param options Pagination options when fetching nft filters.\n   */\n  getNftFilters(\n    webhookId: string,\n    options?: GetAddressesOptions\n  ): Promise<NftFiltersResponse>;\n  async getNftFilters(\n    webhookOrId: NftActivityWebhook | string,\n    options?: GetAddressesOptions\n  ): Promise<NftFiltersResponse> {\n    this.verifyConfig();\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    const response = await this.sendWebhookRequest<RawNftFiltersResponse>(\n      'webhook-nft-filters',\n      'getNftFilters',\n      {\n        webhook_id: webhookId,\n        limit: options?.limit,\n        after: options?.pageKey\n      }\n    );\n    return parseRawNftFiltersResponse(response);\n  }\n\n  /**\n   * Update a {@link NftActivityWebhook}'s active status or NFT filters.\n   *\n   * @param nftWebhook The NFT activity webhook to update.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    nftWebhook: NftActivityWebhook,\n    update: NftWebhookUpdate\n  ): Promise<void>;\n\n  /**\n   * Update a {@link NftActivityWebhook}'s active status or NFT filters.\n   *\n   * @param nftWebhookId The id of the NFT activity webhook.\n   * @param update Object containing the update.\n   */\n  updateWebhook(nftWebhookId: string, update: NftWebhookUpdate): Promise<void>;\n\n  /**\n   * Update a {@link NftMetadataUpdateWebhook}'s active status or NFT filters.\n   *\n   * @param nftMetadataWebhookId The id of the NFT activity webhook.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    nftMetadataWebhookId: string,\n    update: NftMetadataWebhookUpdate\n  ): Promise<void>;\n\n  /**\n   * Update a {@link CustomGraphqlWebhook}'s active status.\n   * The graphql query associated with the webhook is immutable.\n   *\n   * @param customGraphqlWebhookId The id of the custom webhook.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    customGraphqlWebhookId: string,\n    update: CustomGraphqlWebhookUpdate\n  ): Promise<void>;\n\n  /**\n   * Update a {@link AddressActivityWebhook}'s active status or addresses.\n   *\n   * @param addressWebhook The address activity webhook to update.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    addressWebhook: AddressActivityWebhook,\n    update: AddressWebhookUpdate\n  ): Promise<void>;\n\n  /**\n   * Update a {@link AddressActivityWebhook}'s active status or addresses.\n   *\n   * @param addressWebhookId The id of the address activity webhook.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    addressWebhookId: string,\n    update: AddressWebhookUpdate\n  ): Promise<void>;\n  async updateWebhook(\n    webhookOrId: NftActivityWebhook | AddressActivityWebhook | string,\n    update:\n      | NftWebhookUpdate\n      | AddressWebhookUpdate\n      | NftMetadataWebhookUpdate\n      | CustomGraphqlWebhookUpdate\n  ): Promise<void> {\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    let restApiName;\n    let methodName;\n    let method: Method;\n    let data;\n    if ('isActive' in update) {\n      restApiName = 'update-webhook';\n      methodName = 'updateWebhook';\n      method = 'PUT';\n      data = {\n        webhook_id: webhookId,\n        is_active: update.isActive\n      };\n    } else if ('addFilters' in update || 'removeFilters' in update) {\n      restApiName = 'update-webhook-nft-filters';\n      methodName = 'updateWebhookNftFilters';\n      method = 'PATCH';\n      data = {\n        webhook_id: webhookId,\n        nft_filters_to_add: update.addFilters\n          ? update.addFilters.map(nftFilterToParam)\n          : [],\n        nft_filters_to_remove: update.removeFilters\n          ? update.removeFilters.map(nftFilterToParam)\n          : []\n      };\n    } else if (\n      'addMetadataFilters' in update ||\n      'removeMetadataFilters' in update\n    ) {\n      restApiName = 'update-webhook-nft-metadata-filters';\n      methodName = 'updateWebhookNftMetadataFilters';\n      method = 'PATCH';\n      data = {\n        webhook_id: webhookId,\n        nft_metadata_filters_to_add: update.addMetadataFilters\n          ? update.addMetadataFilters.map(nftFilterToParam)\n          : [],\n        nft_metadata_filters_to_remove: update.removeMetadataFilters\n          ? update.removeMetadataFilters.map(nftFilterToParam)\n          : []\n      };\n    } else if ('addAddresses' in update || 'removeAddresses' in update) {\n      restApiName = 'update-webhook-addresses';\n      methodName = 'webhook:updateWebhookAddresses';\n      method = 'PATCH';\n      data = {\n        webhook_id: webhookId,\n        addresses_to_add: await this.resolveAddresses(update.addAddresses),\n        addresses_to_remove: await this.resolveAddresses(update.removeAddresses)\n      };\n    } else if ('newAddresses' in update) {\n      restApiName = 'update-webhook-addresses';\n      methodName = 'webhook:updateWebhookAddress';\n      method = 'PUT';\n      data = {\n        webhook_id: webhookId,\n        addresses: await this.resolveAddresses(update.newAddresses)\n      };\n    } else {\n      throw new Error('Invalid `update` param passed into `updateWebhook`');\n    }\n\n    await this.sendWebhookRequest(\n      restApiName,\n      methodName,\n      {},\n      {\n        method,\n        data\n      }\n    );\n  }\n\n  /**\n   * Create a new {@link MinedTransactionWebhook} to track mined transactions\n   * sent by the app associated with the app id.\n   *\n   * Note that the webhook will be created in the app network of the provided app id.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the app id.\n   */\n  // TODO(webhook): Automatically populate app id from api key.\n  createWebhook(\n    url: string,\n    type: WebhookType.MINED_TRANSACTION,\n    params: TransactionWebhookParams\n  ): Promise<MinedTransactionWebhook>;\n\n  /**\n   * Create a new {@link DroppedTransactionWebhook} to track dropped transactions\n   * sent by the app associated with the app id.\n   *\n   * Note that the webhook will be created in the app network of the provided app id.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the app id.\n   */\n  // TODO(webhook): Automatically populate app id from api key.\n  createWebhook(\n    url: string,\n    type: WebhookType.DROPPED_TRANSACTION,\n    params: TransactionWebhookParams\n  ): Promise<DroppedTransactionWebhook>;\n\n  /**\n   * Create a new {@link NftActivityWebhook} to track NFT transfers.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the NFTs to track and the\n   *   network the webhook should be created on.\n   */\n  createWebhook(\n    url: string,\n    type: WebhookType.NFT_ACTIVITY,\n    params: NftWebhookParams\n  ): Promise<NftActivityWebhook>;\n\n  createWebhook(\n    url: string,\n    type: WebhookType.NFT_METADATA_UPDATE,\n    params: NftWebhookParams\n  ): Promise<NftMetadataUpdateWebhook>;\n\n  /**\n   * Create a new {@link CustomGraphqlWebhook} to track any event on every block.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the graphql query to be executed\n   * on every block\n   */\n  createWebhook(\n    url: string,\n    type: WebhookType.GRAPHQL,\n    params: CustomGraphqlWebhookParams\n  ): Promise<CustomGraphqlWebhook>;\n\n  /**\n   * Create a new {@link AddressActivityWebhook} to track address activity.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the addresses to track and the\n   *   network the webhook should be created on.\n   */\n  createWebhook(\n    url: string,\n    type: WebhookType.ADDRESS_ACTIVITY,\n    params: AddressWebhookParams\n  ): Promise<AddressActivityWebhook>;\n  async createWebhook(\n    url: string,\n    type: WebhookType,\n    params:\n      | NftWebhookParams\n      | AddressWebhookParams\n      | TransactionWebhookParams\n      | CustomGraphqlWebhookParams\n  ): Promise<\n    | MinedTransactionWebhook\n    | DroppedTransactionWebhook\n    | NftActivityWebhook\n    | AddressActivityWebhook\n    | NftMetadataUpdateWebhook\n    | CustomGraphqlWebhook\n  > {\n    let appId;\n    if (\n      type === WebhookType.MINED_TRANSACTION ||\n      type === WebhookType.DROPPED_TRANSACTION\n    ) {\n      if (!('appId' in params)) {\n        throw new Error('Transaction Webhooks require an app id.');\n      }\n      appId = params.appId;\n    }\n\n    let network = NETWORK_TO_WEBHOOK_NETWORK.get(this.config.network);\n    let nftFilterObj;\n    let addresses;\n    let graphqlQuery;\n    if (\n      type === WebhookType.NFT_ACTIVITY ||\n      type === WebhookType.NFT_METADATA_UPDATE\n    ) {\n      if (!('filters' in params) || params.filters.length === 0) {\n        throw new Error(\n          'Nft Activity Webhooks require a non-empty array input.'\n        );\n      }\n      network = params.network\n        ? NETWORK_TO_WEBHOOK_NETWORK.get(params.network)\n        : network;\n      const filters = (params.filters as NftFilter[]).map(filter =>\n        filter.tokenId\n          ? {\n              contract_address: filter.contractAddress,\n              token_id: BigNumber.from(filter.tokenId).toString()\n            }\n          : {\n              contract_address: filter.contractAddress\n            }\n      );\n      nftFilterObj =\n        type === WebhookType.NFT_ACTIVITY\n          ? { nft_filters: filters }\n          : { nft_metadata_filters: filters };\n    } else if (type === WebhookType.ADDRESS_ACTIVITY) {\n      if (\n        params === undefined ||\n        !('addresses' in params) ||\n        params.addresses.length === 0\n      ) {\n        throw new Error(\n          'Address Activity Webhooks require a non-empty array input.'\n        );\n      }\n      network = params.network\n        ? NETWORK_TO_WEBHOOK_NETWORK.get(params.network)\n        : network;\n      addresses = await this.resolveAddresses(params.addresses);\n    } else if (type == WebhookType.GRAPHQL) {\n      if (\n        params === undefined ||\n        !('graphqlQuery' in params) ||\n        params.graphqlQuery.length === 0\n      ) {\n        throw new Error('Custom Webhooks require a non-empty graphql query.');\n      }\n      network = params.network\n        ? NETWORK_TO_WEBHOOK_NETWORK.get(params.network)\n        : network;\n      graphqlQuery = params.graphqlQuery;\n    }\n\n    const data = {\n      network,\n      webhook_type: type,\n      webhook_url: url,\n      ...(appId && { app_id: appId }),\n\n      // Only include the filters/addresses in the final response if they're defined\n      ...nftFilterObj,\n      ...(addresses && { addresses }),\n      ...(graphqlQuery && { graphql_query: graphqlQuery })\n    };\n\n    const response = await this.sendWebhookRequest<RawCreateWebhookResponse>(\n      'create-webhook',\n      'createWebhook',\n      {},\n      {\n        method: 'POST',\n        data\n      }\n    );\n\n    return parseRawWebhook(response.data);\n  }\n\n  /**\n   * Delete the provided webhook.\n   *\n   * @param webhook The webhook to delete.\n   */\n  deleteWebhook(webhook: Webhook): Promise<void>;\n\n  /**\n   * Delete the provided webhook.\n   *\n   * @param webhookId The id of the webhook to delete.\n   */\n  deleteWebhook(webhookId: string): Promise<void>;\n  async deleteWebhook(webhookOrId: Webhook | string): Promise<void> {\n    this.verifyConfig();\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    const response = await this.sendWebhookRequest<RawNftFiltersResponse>(\n      'delete-webhook',\n      'deleteWebhook',\n      {\n        webhook_id: webhookId\n      },\n      {\n        method: 'DELETE'\n      }\n    );\n\n    if ('message' in response) {\n      throw new Error(\n        `Webhook not found. Failed to delete webhook: ${webhookId}`\n      );\n    }\n  }\n\n  private verifyConfig() {\n    if (this.config.authToken === undefined) {\n      throw new Error(\n        'Using the Notify API requires setting the Alchemy Auth Token in ' +\n          'the settings object when initializing Alchemy.'\n      );\n    }\n  }\n\n  private sendWebhookRequest<Response>(\n    restApiName: string,\n    methodName: string,\n    params: {},\n    overrides?: AxiosRequestConfig\n  ): Promise<Response> {\n    return requestHttpWithBackoff(\n      this.config,\n      AlchemyApiType.WEBHOOK,\n      restApiName,\n      methodName,\n      params,\n      {\n        ...overrides,\n        headers: {\n          'X-Alchemy-Token': this.config.authToken!,\n          ...overrides?.headers\n        }\n      }\n    );\n  }\n\n  /** Resolves ENS addresses to the raw address.\n   * @internal */\n  private async resolveAddresses(\n    addresses: string[] | undefined\n  ): Promise<string[]> {\n    if (addresses === undefined) {\n      return [];\n    }\n    const resolvedAddresses: string[] = [];\n    const provider = await this.config.getProvider();\n    for (const address of addresses) {\n      const rawAddress = await provider.resolveName(address);\n      if (rawAddress === null) {\n        throw new Error(`Unable to resolve the ENS address: ${address}`);\n      }\n      resolvedAddresses.push(rawAddress);\n    }\n\n    return resolvedAddresses;\n  }\n}\n\n/**\n * Mapping of webhook network representations to the SDK's network representation.\n *\n * @internal\n */\nconst WEBHOOK_NETWORK_TO_NETWORK: { [key: string]: Network } = {\n  ETH_MAINNET: Network.ETH_MAINNET,\n  ETH_GOERLI: Network.ETH_GOERLI,\n  ETH_ROPSTEN: Network.ETH_ROPSTEN,\n  ETH_RINKEBY: Network.ETH_RINKEBY,\n  ETH_KOVAN: Network.ETH_KOVAN,\n  MATIC_MAINNET: Network.MATIC_MAINNET,\n  MATIC_MUMBAI: Network.MATIC_MUMBAI,\n  ARB_MAINNET: Network.ARB_MAINNET,\n  ARB_RINKEBY: Network.ARB_RINKEBY,\n  OPT_MAINNET: Network.OPT_MAINNET,\n  OPT_KOVAN: Network.OPT_KOVAN\n};\n\n/** Mapping of the SDK's network representation the webhook API's network representation. */\nconst NETWORK_TO_WEBHOOK_NETWORK: Map<Network, string> = Object.keys(\n  Network\n).reduce((map: Map<Network, string>, key) => {\n  if (key in WEBHOOK_NETWORK_TO_NETWORK) {\n    map.set(WEBHOOK_NETWORK_TO_NETWORK[key], key);\n  }\n  return map;\n}, new Map());\n\nfunction parseRawWebhookResponse(\n  response: RawGetAllWebhooksResponse\n): Webhook[] {\n  return response.data.map(parseRawWebhook);\n}\n\nfunction parseRawWebhook(rawWebhook: RawWebhook): Webhook {\n  return {\n    id: rawWebhook.id,\n    network: WEBHOOK_NETWORK_TO_NETWORK[rawWebhook.network],\n    type: rawWebhook.webhook_type as WebhookType,\n    url: rawWebhook.webhook_url,\n    isActive: rawWebhook.is_active,\n    timeCreated: new Date(rawWebhook.time_created).toISOString(),\n    signingKey: rawWebhook.signing_key,\n    version: rawWebhook.version as WebhookVersion,\n    // Only include the appId in the final response if it's defined\n    ...(rawWebhook.app_id !== undefined && { appId: rawWebhook.app_id })\n  };\n}\n\nfunction parseRawAddressActivityResponse(\n  response: RawAddressActivityResponse\n): AddressActivityResponse {\n  return {\n    addresses: response.data,\n    totalCount: response.pagination.total_count,\n    pageKey: response.pagination.cursors.after\n  };\n}\n\nfunction parseRawCustomGraphqlWebhookResponse(\n  response: RawCustomGraphqlWebhookConfig\n): CustomGraphqlWebhookConfig {\n  return {\n    graphqlQuery: response.data.graphql_query\n  };\n}\n\nfunction parseRawNftFiltersResponse(\n  response: RawNftFiltersResponse\n): NftFiltersResponse {\n  return {\n    filters: response.data.map(f =>\n      f.token_id\n        ? {\n            contractAddress: f.contract_address,\n            tokenId: BigNumber.from(f.token_id).toString()\n          }\n        : {\n            contractAddress: f.contract_address\n          }\n    ),\n    totalCount: response.pagination.total_count,\n    pageKey: response.pagination.cursors.after\n  };\n}\n\nfunction nftFilterToParam(filter: NftFilter): RawNftFilterParam {\n  return filter.tokenId\n    ? {\n        contract_address: filter.contractAddress,\n        token_id: BigNumber.from(filter.tokenId).toString()\n      }\n    : {\n        contract_address: filter.contractAddress\n      };\n}\n","import {\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionResponse\n} from '@ethersproject/abstract-provider';\nimport type { BigNumber } from '@ethersproject/bignumber';\nimport { Deferrable } from '@ethersproject/properties';\n\nimport {\n  BlockIdentifier,\n  DebugTransaction,\n  GasOptimizedTransactionResponse,\n  GasOptimizedTransactionStatusResponse,\n  SendPrivateTransactionOptions,\n  SimulateAssetChangesResponse,\n  SimulateExecutionResponse\n} from '../types/types';\nimport { nullsToUndefined } from '../util/util';\nimport { AlchemyConfig } from './alchemy-config';\nimport { Wallet } from './alchemy-wallet';\nimport { fromHex, toHex } from './util';\n\n/**\n * Multiples to increment fee per gas when using\n * {@link TransactNamespace.sendGasOptimizedTransaction}.\n *\n * @internal\n */\nexport const GAS_OPTIMIZED_TX_FEE_MULTIPLES = [0.9, 1, 1.1, 1.2, 1.3];\n\n/**\n * The Transact namespace contains methods used for sending transactions and\n * checking on the state of submitted transactions.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the transact\n * namespace via `alchemy.transact`.\n */\nexport class TransactNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Used to send a single transaction to Flashbots. Flashbots will attempt to\n   * send the transaction to miners for the next 25 blocks.\n   *\n   * Returns the transaction hash of the submitted transaction.\n   *\n   * @param signedTransaction The raw, signed transaction as a hash.\n   * @param maxBlockNumber Optional highest block number in which the\n   *   transaction should be included.\n   * @param options Options to configure the request.\n   */\n  async sendPrivateTransaction(\n    signedTransaction: string,\n    maxBlockNumber?: number,\n    options?: SendPrivateTransactionOptions\n  ): Promise<string> {\n    const provider = await this.config.getProvider();\n    const hexBlockNumber = maxBlockNumber ? toHex(maxBlockNumber) : undefined;\n    return provider._send(\n      'eth_sendPrivateTransaction',\n      [\n        {\n          tx: signedTransaction,\n          maxBlockNumber: hexBlockNumber,\n          preferences: options\n        }\n      ],\n      'sendPrivateTransaction'\n    );\n  }\n\n  /**\n   * Stops the provided private transaction from being submitted for future\n   * blocks. A transaction can only be cancelled if the request is signed by the\n   * same key as the {@link sendPrivateTransaction} call submitting the\n   * transaction in first place.\n   *\n   * Please note that fast mode transactions cannot be cancelled using this method.\n   *\n   * Returns a boolean indicating whether the cancellation was successful.\n   *\n   * @param transactionHash Transaction hash of private tx to be cancelled\n   */\n  async cancelPrivateTransaction(transactionHash: string): Promise<boolean> {\n    const provider = await this.config.getProvider();\n    return provider._send(\n      'eth_cancelPrivateTransaction',\n      [\n        {\n          txHash: transactionHash\n        }\n      ],\n      'cancelPrivateTransaction'\n    );\n  }\n\n  /**\n   * Simulates the asset changes resulting from a list of transactions simulated\n   * in sequence.\n   *\n   * Returns a list of asset changes for each transaction during simulation.\n   *\n   * @param transactions Transactions list of max 3 transactions to simulate.\n   * @param blockIdentifier Optional block identifier to simulate the\n   * transaction in.\n   */\n  async simulateAssetChangesBundle(\n    transactions: DebugTransaction[],\n    blockIdentifier?: BlockIdentifier\n  ): Promise<SimulateAssetChangesResponse[]> {\n    const provider = await this.config.getProvider();\n    const params =\n      blockIdentifier !== undefined\n        ? [transactions, blockIdentifier]\n        : [transactions];\n    const res = await provider._send(\n      'alchemy_simulateAssetChangesBundle',\n      params,\n      'simulateAssetChangesBundle'\n    );\n    return nullsToUndefined(res);\n  }\n\n  /**\n   * Simulates the asset changes resulting from a single transaction.\n   *\n   * Returns list of asset changes that occurred during the transaction\n   * simulation. Note that this method does not run the transaction on the\n   * blockchain.\n   *\n   * @param transaction The transaction to simulate.\n   * @param blockIdentifier Optional block identifier to simulate the\n   * transaction in.\n   */\n  async simulateAssetChanges(\n    transaction: DebugTransaction,\n    blockIdentifier?: BlockIdentifier\n  ): Promise<SimulateAssetChangesResponse> {\n    const provider = await this.config.getProvider();\n    const params =\n      blockIdentifier !== undefined\n        ? [transaction, blockIdentifier]\n        : [transaction];\n    const res = await provider._send(\n      'alchemy_simulateAssetChanges',\n      params,\n      'simulateAssetChanges'\n    );\n    return nullsToUndefined(res);\n  }\n\n  /**\n   * Simulates a list of transactions in sequence and returns list of decoded\n   * traces and logs that occurred for each transaction during simulation.\n   *\n   * Note that this method does not run any transactions on the blockchain.\n   *\n   * @param transactions Transactions list of max 3 transactions to simulate.\n   * @param blockIdentifier Optional block identifier to simulate the\n   * transaction in.\n   */\n  async simulateExecutionBundle(\n    transactions: DebugTransaction[],\n    blockIdentifier?: BlockIdentifier\n  ): Promise<SimulateExecutionResponse[]> {\n    const provider = await this.config.getProvider();\n    const params =\n      blockIdentifier !== undefined\n        ? [transactions, blockIdentifier]\n        : [transactions];\n    const res = provider._send(\n      'alchemy_simulateExecutionBundle',\n      params,\n      'simulateExecutionBundle'\n    );\n    return nullsToUndefined(res);\n  }\n\n  /**\n   * Simulates a single transaction and the resulting and returns list of\n   * decoded traces and logs that occurred during the transaction simulation.\n   *\n   * Note that this method does not run the transaction on the blockchain.\n   *\n   * @param transaction The transaction to simulate.\n   * @param blockIdentifier Optional block identifier to simulate the\n   * transaction in.\n   */\n  async simulateExecution(\n    transaction: DebugTransaction,\n    blockIdentifier?: BlockIdentifier\n  ): Promise<SimulateExecutionResponse> {\n    const provider = await this.config.getProvider();\n    const params =\n      blockIdentifier !== undefined\n        ? [transaction, blockIdentifier]\n        : [transaction];\n    const res = provider._send(\n      'alchemy_simulateExecution',\n      params,\n      'simulateExecution'\n    );\n    return nullsToUndefined(res);\n  }\n\n  /**\n   * Returns the transaction with hash or null if the transaction is unknown.\n   *\n   * If a transaction has not been mined, this method will search the\n   * transaction pool. Various backends may have more restrictive transaction\n   * pool access (e.g. if the gas price is too low or the transaction was only\n   * recently sent and not yet indexed) in which case this method may also return null.\n   *\n   * NOTE: This is an alias for {@link CoreNamespace.getTransaction}.\n   *\n   * @param transactionHash The hash of the transaction to get.\n   * @public\n   */\n  async getTransaction(\n    transactionHash: string | Promise<string>\n  ): Promise<TransactionResponse | null> {\n    const provider = await this.config.getProvider();\n    return provider.getTransaction(transactionHash);\n  }\n\n  /**\n   * Submits transaction to the network to be mined. The transaction must be\n   * signed, and be valid (i.e. the nonce is correct and the account has\n   * sufficient balance to pay for the transaction).\n   *\n   * NOTE: This is an alias for {@link CoreNamespace.sendTransaction}.\n   *\n   * @param signedTransaction The signed transaction to send.\n   * @public\n   */\n  async sendTransaction(\n    signedTransaction: string | Promise<string>\n  ): Promise<TransactionResponse> {\n    const provider = await this.config.getProvider();\n    return provider.sendTransaction(signedTransaction);\n  }\n\n  /**\n   * Returns an estimate of the amount of gas that would be required to submit\n   * transaction to the network.\n   *\n   * An estimate may not be accurate since there could be another transaction on\n   * the network that was not accounted for, but after being mined affects the\n   * relevant state.\n   *\n   * This is an alias for {@link CoreNamespace.estimateGas}.\n   *\n   * @param transaction The transaction to estimate gas for.\n   * @public\n   */\n  async estimateGas(\n    transaction: Deferrable<TransactionRequest>\n  ): Promise<BigNumber> {\n    const provider = await this.config.getProvider();\n    return provider.estimateGas(transaction);\n  }\n\n  /**\n   * Returns a fee per gas (in wei) that is an estimate of how much you can pay\n   * as a priority fee, or \"tip\", to get a transaction included in the current block.\n   *\n   * This number is generally used to set the `maxPriorityFeePerGas` field in a\n   * transaction request.\n   *\n   * @public\n   */\n  async getMaxPriorityFeePerGas(): Promise<number> {\n    const provider = await this.config.getProvider();\n    const feeHex = await provider._send(\n      'eth_maxPriorityFeePerGas',\n      [],\n      'getMaxPriorityFeePerGas'\n    );\n    return fromHex(feeHex);\n  }\n\n  /**\n   * Returns a promise which will not resolve until specified transaction hash is mined.\n   *\n   * If {@link confirmations} is 0, this method is non-blocking and if the\n   * transaction has not been mined returns null. Otherwise, this method will\n   * block until the transaction has confirmed blocks mined on top of the block\n   * in which it was mined.\n   *\n   * NOTE: This is an alias for {@link CoreNamespace.waitForTransaction}.\n   *\n   * @param transactionHash The hash of the transaction to wait for.\n   * @param confirmations The number of blocks to wait for.\n   * @param timeout The maximum time to wait for the transaction to confirm.\n   * @public\n   */\n  async waitForTransaction(\n    transactionHash: string,\n    confirmations?: number,\n    timeout?: number\n  ): Promise<TransactionReceipt | null> {\n    const provider = await this.config.getProvider();\n    return provider.waitForTransaction(transactionHash, confirmations, timeout);\n  }\n\n  /**\n   * Instead of sending a single transaction that might not get mined, this\n   * method allows you to send the same transaction multiple times, with\n   * different gas prices and gas limits. This should result in lower fees paid.\n   *\n   * Alchemy will submit the cheapest transaction, and if it does not get mined,\n   * the next cheapest transaction will be submitted. This process will continue\n   * until one of the transactions is mined, or until all transactions are rejected.\n   *\n   * To have Alchemy automatically generate a fee and gas spread, pass in a\n   * {@link TransactionRequest} object and a {@link Wallet} as a signer.\n   *\n   * This method returns a response object containing the transaction hash for\n   * each of the signed transactions and a transaction job id that can be used\n   * to track the state of the transaction job.\n   *\n   * @param signedTransactions An array of signed transactions to send. Each\n   *   transaction in the array must have the same values, but with different\n   *   gas and fee values.\n   * @internal\n   */\n  // TODO(txjob): Remove internal tag once this feature is released.\n  async sendGasOptimizedTransaction(\n    signedTransactions: string[]\n  ): Promise<GasOptimizedTransactionResponse>;\n\n  /**\n   * Instead of sending a single transaction that might not get mined, this\n   * method will generate a series of five EIP-1559 transactions with different\n   * gas prices in order to minimize the final fees paid.\n   *\n   * Alchemy will submit the cheapest transaction, and if it does not get mined,\n   * the next cheapest transaction will be submitted. This process will continue\n   * until one of the transactions is mined, or until all transactions are rejected.\n   *\n   * To calculate the fee, gas, and gas spread for each transaction, this method\n   * first calculates the base fee from the latest block, estimates the gas for\n   * the transaction, and then calculates the fee and gas spread for the\n   * transaction. The five transactions will have 90%, 100%, 110%, 120%, and\n   * 130% of the max priority fee per gas.\n   *\n   * Note that you can also pass in an array of pre-signed transactions with set\n   * gas levels for more granular control over gas.\n   *\n   * This method returns a response object containing the transaction hash for\n   * each of the signed transactions and a transaction job id that can be used\n   * to track the state of the transaction job.\n   *\n   * @param transaction The raw transaction to send.\n   * @param wallet A wallet to use to sign the transaction.\n   * @internal\n   */\n  // TODO(txjob): Remove internal tag once this feature is released.\n  async sendGasOptimizedTransaction(\n    transaction: TransactionRequest,\n    wallet: Wallet\n  ): Promise<GasOptimizedTransactionResponse>;\n  async sendGasOptimizedTransaction(\n    transactionOrSignedTxs: TransactionRequest | string[],\n    wallet?: Wallet\n  ): Promise<GasOptimizedTransactionResponse> {\n    if (Array.isArray(transactionOrSignedTxs)) {\n      return this._sendGasOptimizedTransaction(\n        transactionOrSignedTxs,\n        'sendGasOptimizedTransactionPreSigned'\n      );\n    }\n\n    let gasLimit;\n    let priorityFee;\n    let baseFee;\n    const provider = await this.config.getProvider();\n    try {\n      gasLimit = await this.estimateGas(transactionOrSignedTxs);\n      priorityFee = await this.getMaxPriorityFeePerGas();\n      const currentBlock = await provider.getBlock('latest');\n      baseFee = currentBlock.baseFeePerGas!.toNumber();\n    } catch (e) {\n      throw new Error(`Failed to estimate gas for transaction: ${e}`);\n    }\n\n    const gasSpreadTransactions = generateGasSpreadTransactions(\n      transactionOrSignedTxs,\n      gasLimit.toNumber(),\n      baseFee,\n      priorityFee\n    );\n    const signedTransactions = await Promise.all(\n      gasSpreadTransactions.map(tx => wallet!.signTransaction(tx))\n    );\n\n    return this._sendGasOptimizedTransaction(\n      signedTransactions,\n      'sendGasOptimizedTransactionGenerated'\n    );\n  }\n\n  /**\n   * Returns the state of the transaction job returned by the\n   * {@link sendGasOptimizedTransaction}.\n   *\n   * @param trackingId The tracking id from the response of the sent gas optimized transaction.\n   * @internal\n   */\n  // TODO(txjob): Remove internal tag once this feature is released.\n  async getGasOptimizedTransactionStatus(\n    trackingId: string\n  ): Promise<GasOptimizedTransactionStatusResponse> {\n    const provider = await this.config.getProvider();\n    return provider._send(\n      'alchemy_getGasOptimizedTransactionStatus',\n      [trackingId],\n      'getGasOptimizedTransactionStatus'\n    );\n  }\n\n  /** @internal */\n  private async _sendGasOptimizedTransaction(\n    signedTransactions: string[],\n    methodName: string\n  ): Promise<GasOptimizedTransactionResponse> {\n    const provider = await this.config.getProvider();\n    return provider._send(\n      'alchemy_sendGasOptimizedTransaction',\n      [\n        {\n          rawTransactions: signedTransactions\n        }\n      ],\n      methodName\n    );\n  }\n}\n\n/**\n * Helper method to generate the raw transaction with the given gas limit and\n * priority fee across a spread of different gas prices.\n *\n * @internal\n */\n// Visible for testing\nexport function generateGasSpreadTransactions(\n  transaction: TransactionRequest,\n  gasLimit: number,\n  baseFee: number,\n  priorityFee: number\n): TransactionRequest[] {\n  return GAS_OPTIMIZED_TX_FEE_MULTIPLES.map(feeMultiplier => {\n    return {\n      ...transaction,\n      gasLimit,\n      maxFeePerGas: Math.round(\n        baseFee * feeMultiplier + priorityFee * feeMultiplier\n      ),\n      maxPriorityFeePerGas: Math.round(feeMultiplier * priorityFee)\n    };\n  });\n}\n","/** This file contains internal types used by the SDK and are not exposed to the end user. */\n\ntype JsonRpcId = string | number | null;\n\n/**\n * Prefix for `alchemy_pendingTransactions` subscriptions when serializing to\n * ethers events.\n *\n * This tag is used internally by ethers to track different event filters.\n */\nexport const ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE =\n  'alchemy-pending-transactions';\n\n/**\n * Prefix for `alchemy_minedTransactions` subscriptions when serializing to ethers events.\n *\n * This tag is used internally by ethers to track different event filters.\n */\nexport const ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE =\n  'alchemy-mined-transactions';\n\n/**\n * Array containing all the custom event tags used internally by ethers to track\n * event filters.\n */\nexport const ALCHEMY_EVENT_TYPES = [\n  ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE,\n  ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE\n];\n\nexport interface JsonRpcRequest {\n  jsonrpc: '2.0';\n  method: string;\n  params?: any[];\n  id?: JsonRpcId;\n}\n\nexport interface JsonRpcResponse<T = any> {\n  jsonrpc: '2.0';\n  result?: T;\n  error?: JsonRpcError;\n  id: JsonRpcId;\n}\n\ninterface JsonRpcError<T = any> {\n  code: number;\n  message: string;\n  data?: T;\n}\n\nexport type WebSocketMessage = SingleOrBatchResponse | SubscriptionEvent;\nexport type SingleOrBatchResponse = JsonRpcResponse | JsonRpcResponse[];\nexport interface SubscriptionEvent<T = any> {\n  jsonrpc: '2.0';\n  method: 'eth_subscription';\n  params: {\n    subscription: string;\n    result: T;\n  };\n}\n","import { EventType, Filter, Listener } from '@ethersproject/abstract-provider';\n\nimport {\n  AlchemyEventFilter,\n  AlchemyEventType,\n  AlchemyMinedTransactionsAddress,\n  AlchemyMinedTransactionsEventFilter,\n  AlchemyPendingTransactionsEventFilter,\n  AlchemySubscription,\n  NonEmptyArray\n} from '../types/types';\nimport {\n  ALCHEMY_EVENT_TYPES,\n  ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE,\n  ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE\n} from './internal-types';\n\n/**\n * DO NOT MODIFY.\n *\n * Event class copied directly over from ethers.js's `BaseProvider` class.\n *\n * This class is used to represent events and their corresponding listeners. The\n * SDK needs to extend this class in order to support Alchemy's custom\n * Subscription API types. The original class is not exported by ethers. Minimal\n * changes have been made in order to get TS to compile.\n */\nclass Event {\n  readonly listener: Listener;\n  readonly once: boolean;\n  readonly tag: string;\n\n  _lastBlockNumber: number;\n  _inflight: boolean;\n\n  constructor(tag: string, listener: Listener, once: boolean) {\n    this.listener = listener;\n    this.tag = tag;\n    this.once = once;\n    this._lastBlockNumber = -2;\n    this._inflight = false;\n  }\n\n  get event(): EventType {\n    switch (this.type) {\n      case 'tx':\n        return this.hash!;\n      case 'filter':\n        return this.filter!;\n      default:\n        return this.tag;\n    }\n  }\n\n  get type(): string {\n    return this.tag.split(':')[0];\n  }\n\n  get hash(): string {\n    const comps = this.tag.split(':');\n    if (comps[0] !== 'tx') {\n      throw new Error('Not a transaction event');\n    }\n    return comps[1];\n  }\n\n  get filter(): Filter {\n    const comps = this.tag.split(':');\n    if (comps[0] !== 'filter') {\n      throw new Error('Not a transaction event');\n    }\n    const address = comps[1];\n\n    const topics = deserializeTopics(comps[2]);\n    const filter: Filter = {};\n\n    if (topics.length > 0) {\n      filter.topics = topics;\n    }\n    if (address && address !== '*') {\n      filter.address = address;\n    }\n\n    return filter;\n  }\n\n  pollable(): boolean {\n    const PollableEvents = ['block', 'network', 'pending', 'poll'];\n    return this.tag.indexOf(':') >= 0 || PollableEvents.indexOf(this.tag) >= 0;\n  }\n}\n\n/**\n * Wrapper class around the ethers `Event` class in order to add support for\n * Alchemy's custom subscriptions types.\n *\n * The serialization and deserialization mechanism requires the order of the\n * fields to be the same across different {@link ALCHEMY_EVENT_TYPES}. Before\n * using a getter on a new event filter, make sure that the position of the\n * field in serialization is correct.\n *\n * The getters on this class deserialize the event tag generated by\n * {@link getAlchemyEventTag} into the original fields passed into the event.\n */\nexport class EthersEvent extends Event {\n  /**\n   * Converts the event tag into the original `fromAddress` field in\n   * {@link AlchemyPendingTransactionsEventFilter}.\n   */\n  get fromAddress(): string | string[] | undefined {\n    const comps = this.tag.split(':');\n    if (comps[0] !== ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE) {\n      return undefined;\n    }\n    if (comps[1] && comps[1] !== '*') {\n      return deserializeAddressField(comps[1]);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Converts the event tag into the original `toAddress` field in\n   * {@link AlchemyPendingTransactionsEventFilter}.\n   */\n  get toAddress(): string | string[] | undefined {\n    const comps = this.tag.split(':');\n    if (comps[0] !== ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE) {\n      return undefined;\n    }\n    if (comps[2] && comps[2] !== '*') {\n      return deserializeAddressField(comps[2]);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Converts the event tag into the original `hashesOnly` field in\n   * {@link AlchemyPendingTransactionsEventFilter} and {@link AlchemyMinedTransactionsEventFilter}.\n   */\n  get hashesOnly(): boolean | undefined {\n    const comps = this.tag.split(':');\n    if (!ALCHEMY_EVENT_TYPES.includes(comps[0])) {\n      return undefined;\n    }\n    if (comps[3] && comps[3] !== '*') {\n      return comps[3] === 'true';\n    } else {\n      return undefined;\n    }\n  }\n\n  get includeRemoved(): boolean | undefined {\n    const comps = this.tag.split(':');\n    if (comps[0] !== ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE) {\n      return undefined;\n    }\n    if (comps[2] && comps[2] !== '*') {\n      return comps[2] === 'true';\n    } else {\n      return undefined;\n    }\n  }\n\n  get addresses(): NonEmptyArray<AlchemyMinedTransactionsAddress> | undefined {\n    const comps = this.tag.split(':');\n    if (comps[0] !== ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE) {\n      return undefined;\n    }\n    if (comps[1] && comps[1] !== '*') {\n      return deserializeAddressesField(comps[1]);\n    } else {\n      return undefined;\n    }\n  }\n}\n\nexport function isAlchemyEvent(\n  event: AlchemyEventType\n): event is\n  | AlchemyMinedTransactionsEventFilter\n  | AlchemyPendingTransactionsEventFilter {\n  return typeof event === 'object' && 'method' in event;\n}\n\n/**\n * Creates a string representation of an `alchemy_pendingTransaction`\n * subscription filter that is compatible with the ethers implementation of\n * `getEventTag()`. The method is not an exported function in ethers, which is\n * why the SDK has its own implementation.\n *\n * The event tag is then deserialized by the SDK's {@link EthersEvent} getters.\n *\n * @example\n *   ```js\n *   // Returns 'alchemy-pending-transactions:0xABC:0xDEF|0xGHI:true'\n *   const eventTag =  getAlchemyEventTag(\n *   {\n *     \"method\": \"alchemy_pendingTransactions\",\n *     \"fromAddress\": \"0xABC\",\n *     \"toAddress\": [\"0xDEF\", \"0xGHI\"],\n *     \"hashesOnly: true\n *   });\n *   ```;\n *\n * @param event\n * @internal\n */\nexport function getAlchemyEventTag(event: AlchemyEventType): string {\n  if (!isAlchemyEvent(event)) {\n    throw new Error('Event tag requires AlchemyEventType');\n  }\n\n  if (event.method === AlchemySubscription.PENDING_TRANSACTIONS) {\n    return serializePendingTransactionsEvent(event);\n  } else if (event.method === AlchemySubscription.MINED_TRANSACTIONS) {\n    return serializeMinedTransactionsEvent(event);\n  } else {\n    throw new Error(`Unrecognized AlchemyFilterEvent: ${event}`);\n  }\n}\n\nexport function verifyAlchemyEventName(eventName: AlchemyEventFilter): void {\n  if (!Object.values(AlchemySubscription).includes(eventName.method)) {\n    throw new Error(\n      `Invalid method name ${\n        eventName.method\n      }. Accepted method names: ${Object.values(AlchemySubscription)}`\n    );\n  }\n}\n\n/**\n * Serializes the provided {@link AlchemyPendingTransactionsEventFilter} into an ethers\n * compatible event tag.\n *\n * For the example event:\n * ```\n *  {\n *     \"method\": \"alchemy_pendingTransactions\",\n *     \"fromAddress\": \"0xABC\",\n *     \"toAddress\": [\"0xDEF\", \"0xGHI\"],\n *     \"hashesOnly: true\n *   }\n * ```\n *\n * The resulting serialization is:\n * `alchemy_pendingTransactions:0xABC:0xDEF|0xGHI:true`\n *\n * If a field is omitted, it is replaced with a `*`.\n */\nfunction serializePendingTransactionsEvent(\n  event: AlchemyPendingTransactionsEventFilter\n): string {\n  const fromAddress = serializeAddressField(event.fromAddress);\n  const toAddress = serializeAddressField(event.toAddress);\n  const hashesOnly = serializeBooleanField(event.hashesOnly);\n  return (\n    ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE +\n    ':' +\n    fromAddress +\n    ':' +\n    toAddress +\n    ':' +\n    hashesOnly\n  );\n}\n\n/**\n * Serializes the provided {@link AlchemyPendingTransactionsEventFilter} into an ethers\n * compatible event tag.\n *\n * For the example event:\n * ```\n *  {\n *     \"method\": \"alchemy_minedTransactions\",\n *     \"addresses\": [\n *       {\n *         from: \"0xABC\"\n *       },\n *       {\n *         to: \"0xDEF\",\n *         from: \"0x123\"\n *       }\n *     ]\n *     \"includeRemoved\": false\n *     \"hashesOnly: true\n *   }\n * ```\n *\n * The resulting serialization is:\n * `alchemy_minedTransactions:*,0xABC|0xDEF,0x123:false:true`\n *\n * If a field is omitted, it is replaced with a `*`.\n *\n * The `addresses` array is split by the '|' character, and each to/from address\n * pair is separated by a ',' character.\n *\n */\nfunction serializeMinedTransactionsEvent(\n  event: AlchemyMinedTransactionsEventFilter\n): string {\n  const addresses = serializeAddressesField(event.addresses);\n  const includeRemoved = serializeBooleanField(event.includeRemoved);\n  const hashesOnly = serializeBooleanField(event.hashesOnly);\n  return (\n    ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE +\n    ':' +\n    addresses +\n    ':' +\n    includeRemoved +\n    ':' +\n    hashesOnly\n  );\n}\n\nfunction serializeAddressesField(\n  addresses: AlchemyMinedTransactionsAddress[] | undefined\n): string {\n  if (addresses === undefined) {\n    return '*';\n  }\n\n  return addresses\n    .map(\n      filter =>\n        serializeAddressField(filter.to) +\n        ',' +\n        serializeAddressField(filter.from)\n    )\n    .join('|');\n}\n\nfunction serializeAddressField(\n  field: string | Array<string> | undefined\n): string {\n  if (field === undefined) {\n    return '*';\n  } else if (Array.isArray(field)) {\n    return field.join('|');\n  } else {\n    return field;\n  }\n}\n\nfunction serializeBooleanField(field: boolean | undefined): string | undefined {\n  if (field === undefined) {\n    return '*';\n  } else {\n    return field.toString();\n  }\n}\n\nexport function deserializeTopics(data: string): any {\n  if (data === '') {\n    return [];\n  }\n\n  return data.split(/&/g).map(topic => {\n    if (topic === '') {\n      return [];\n    }\n\n    const comps = topic.split('|').map(topic => {\n      return topic === 'null' ? null : topic;\n    });\n\n    return comps.length === 1 ? comps[0] : comps;\n  });\n}\n\nfunction deserializeAddressField(data: string): string | string[] | undefined {\n  if (data === '') {\n    return undefined;\n  }\n\n  const addresses = data.split('|');\n  return addresses.length === 1 ? addresses[0] : addresses;\n}\n\nfunction deserializeAddressesField(\n  data: string\n): NonEmptyArray<AlchemyMinedTransactionsAddress> | undefined {\n  if (data === '') {\n    return undefined;\n  }\n\n  // Perform a cast here since TS doesn't know we're guaranteed a non-empty\n  // array from deserializing.\n  return data\n    .split('|')\n    .map(addressStr => addressStr.split(','))\n    .map(addressPair => ({\n      ...(addressPair[0] !== '*' && { to: addressPair[0] }),\n      ...(addressPair[1] !== '*' && { from: addressPair[1] })\n    })) as NonEmptyArray<AlchemyMinedTransactionsAddress>;\n}\n","import type { Listener } from '@ethersproject/abstract-provider';\n\nimport { isAlchemyEvent } from '../internal/ethers-event';\nimport {\n  AlchemyEventType,\n  AlchemyMinedTransactionsAddress,\n  AlchemySubscription,\n  NonEmptyArray\n} from '../types/types';\nimport { AlchemyConfig } from './alchemy-config';\n\n/**\n * The Websocket namespace contains all subscription related functions that\n * allow you to subscribe to events and receive updates as they occur. The\n * underlying WebSocket provider has additional logic to handle reconnections\n * and automatically backfills missed events.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the core namespace\n * via `alchemy.ws`.\n */\nexport class WebSocketNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Adds a listener to be triggered for each {@link eventName} event. Also\n   * includes Alchemy's Subscription API events. See {@link AlchemyEventType} for\n   * how to use them.\n   *\n   * @param eventName The event to listen for.\n   * @param listener The listener to call when the event is triggered.\n   * @public\n   */\n  on(eventName: AlchemyEventType, listener: Listener): this {\n    void (async () => {\n      const provider = await this.config.getWebSocketProvider();\n      const processedEvent = await this._resolveEnsAlchemyEvent(eventName);\n      provider.on(processedEvent, listener);\n    })();\n    return this;\n  }\n\n  /**\n   * Adds a listener to be triggered for only the next {@link eventName} event,\n   * after which it will be removed. Also includes Alchemy's Subscription API\n   * events. See {@link AlchemyEventType} for how to use them.\n   *\n   * @param eventName The event to listen for.\n   * @param listener The listener to call when the event is triggered.\n   * @public\n   */\n  once(eventName: AlchemyEventType, listener: Listener): this {\n    void (async () => {\n      const provider = await this.config.getWebSocketProvider();\n      const processedEvent = await this._resolveEnsAlchemyEvent(eventName);\n      provider.once(processedEvent, listener);\n    })();\n    return this;\n  }\n\n  /**\n   * Removes the provided {@link listener} for the {@link eventName} event. If no\n   * listener is provided, all listeners for the event will be removed.\n   *\n   * @param eventName The event to unlisten to.\n   * @param listener The listener to remove.\n   * @public\n   */\n  off(eventName: AlchemyEventType, listener?: Listener): this {\n    void (async () => {\n      const provider = await this.config.getWebSocketProvider();\n      const processedEvent = await this._resolveEnsAlchemyEvent(eventName);\n      return provider.off(processedEvent, listener);\n    })();\n    return this;\n  }\n\n  /**\n   * Remove all listeners for the provided {@link eventName} event. If no event\n   * is provided, all events and their listeners are removed.\n   *\n   * @param eventName The event to remove all listeners for.\n   * @public\n   */\n  removeAllListeners(eventName?: AlchemyEventType): this {\n    void (async () => {\n      const provider = await this.config.getWebSocketProvider();\n      const processedEvent = eventName\n        ? await this._resolveEnsAlchemyEvent(eventName)\n        : undefined;\n      provider.removeAllListeners(processedEvent);\n    })();\n    return this;\n  }\n\n  /**\n   * Returns the number of listeners for the provided {@link eventName} event. If\n   * no event is provided, the total number of listeners for all events is returned.\n   *\n   * @param eventName The event to get the number of listeners for.\n   * @public\n   */\n  async listenerCount(eventName?: AlchemyEventType): Promise<number> {\n    const provider = await this.config.getWebSocketProvider();\n    const processedEvent = eventName\n      ? await this._resolveEnsAlchemyEvent(eventName)\n      : undefined;\n    return provider.listenerCount(processedEvent);\n  }\n\n  /**\n   * Returns an array of listeners for the provided {@link eventName} event. If\n   * no event is provided, all listeners will be included.\n   *\n   * @param eventName The event to get the listeners for.\n   */\n  async listeners(eventName?: AlchemyEventType): Promise<Listener[]> {\n    const provider = await this.config.getWebSocketProvider();\n    const processedEvent = eventName\n      ? await this._resolveEnsAlchemyEvent(eventName)\n      : undefined;\n    return provider.listeners(processedEvent);\n  }\n\n  /**\n   * Converts ENS addresses in an Alchemy Event to the underlying resolved\n   * address.\n   *\n   * VISIBLE ONLY FOR TESTING.\n   *\n   * @internal\n   */\n  async _resolveEnsAlchemyEvent(\n    eventName: AlchemyEventType\n  ): Promise<AlchemyEventType> {\n    if (!isAlchemyEvent(eventName)) {\n      return eventName;\n    }\n\n    if (\n      eventName.method === AlchemySubscription.MINED_TRANSACTIONS &&\n      eventName.addresses\n    ) {\n      const processedAddresses: AlchemyMinedTransactionsAddress[] = [];\n      for (const address of eventName.addresses) {\n        if (address.to) {\n          address.to = await this._resolveNameOrError(address.to);\n        }\n        if (address.from) {\n          address.from = await this._resolveNameOrError(address.from);\n        }\n        processedAddresses.push(address);\n      }\n      eventName.addresses =\n        processedAddresses as NonEmptyArray<AlchemyMinedTransactionsAddress>;\n    } else if (eventName.method === AlchemySubscription.PENDING_TRANSACTIONS) {\n      if (eventName.fromAddress) {\n        if (typeof eventName.fromAddress === 'string') {\n          eventName.fromAddress = await this._resolveNameOrError(\n            eventName.fromAddress\n          );\n        } else {\n          eventName.fromAddress = await Promise.all(\n            eventName.fromAddress.map(address =>\n              this._resolveNameOrError(address)\n            )\n          );\n        }\n      }\n      if (eventName.toAddress) {\n        if (typeof eventName.toAddress === 'string') {\n          eventName.toAddress = await this._resolveNameOrError(\n            eventName.toAddress\n          );\n        } else {\n          eventName.toAddress = await Promise.all(\n            eventName.toAddress.map(address =>\n              this._resolveNameOrError(address)\n            )\n          );\n        }\n      }\n    }\n\n    return eventName;\n  }\n\n  /**\n   * Converts the provided ENS address or throws an error. This improves code\n   * readability and type safety in other methods.\n   *\n   * VISIBLE ONLY FOR TESTING.\n   *\n   * @internal\n   */\n  async _resolveNameOrError(name: string): Promise<string> {\n    const provider = await this.config.getProvider();\n    const resolved = await provider.resolveName(name);\n    if (resolved === null) {\n      throw new Error(`Unable to resolve the ENS address: ${name}`);\n    }\n    return resolved;\n  }\n}\n","import { AlchemySettings } from '../types/types';\nimport { AlchemyConfig } from './alchemy-config';\nimport { CoreNamespace } from './core-namespace';\nimport { DebugNamespace } from './debug-namespace';\nimport { NftNamespace } from './nft-namespace';\nimport { NotifyNamespace } from './notify-namespace';\nimport { TransactNamespace } from './transact-namespace';\nimport { WebSocketNamespace } from './websocket-namespace';\n\n/**\n * The Alchemy SDK client. This class is the main entry point into Alchemy's\n * APIs and separates functionality into different namespaces.\n *\n * Each SDK instance is associated with a specific network and API key. To use a\n * different network or API key, create a new instance of {@link Alchemy}.\n *\n * @public\n */\nexport class Alchemy {\n  /**\n   * The `core` namespace contains the core eth json-rpc calls and Alchemy's\n   * Enhanced APIs.\n   */\n  readonly core: CoreNamespace;\n\n  /** The `nft` namespace contains methods for Alchemy's NFT API. */\n  readonly nft: NftNamespace;\n\n  /** The `ws` namespace contains methods for using WebSockets and creating subscriptions. */\n  readonly ws: WebSocketNamespace;\n\n  /**\n   * The `transact` namespace contains methods for sending transactions and\n   * checking on the state of submitted transasctions.\n   */\n  readonly transact: TransactNamespace;\n\n  /**\n   * Holds the setting information for the instance of the Alchemy SDK client\n   * and allows access to the underlying providers.\n   */\n  readonly config: AlchemyConfig;\n\n  /**\n   * The `notify` namespace contains methods for creating and managing webhooks\n   * as part of the Notify API.\n   */\n  readonly notify: NotifyNamespace;\n\n  /**\n   * The `debug` namespace contains methods for inspecting and debugging\n   * transactions.\n   */\n  readonly debug: DebugNamespace;\n\n  /**\n   * @param {string} [settings.apiKey] - The API key to use for Alchemy\n   * @param {Network} [settings.network] - The network to use for Alchemy\n   * @param {number} [settings.maxRetries] - The maximum number of retries to attempt\n   * @param {number} [settings.requestTimeout] - The timeout after which request should fail\n   * @public\n   */\n  constructor(settings?: AlchemySettings) {\n    this.config = new AlchemyConfig(settings);\n\n    this.core = new CoreNamespace(this.config);\n    this.nft = new NftNamespace(this.config);\n    this.ws = new WebSocketNamespace(this.config);\n    this.transact = new TransactNamespace(this.config);\n    this.notify = new NotifyNamespace(this.config);\n    this.debug = new DebugNamespace(this.config);\n  }\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('./transitional');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.26.1\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MessagePack\"] = factory();\n\telse\n\t\troot[\"MessagePack\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const TEXT_ENCODING_AVAILABLE =\n  typeof process !== \"undefined\" &&\n  process.env.TEXT_ENCODING !== \"never\" &&\n  typeof TextEncoder !== \"undefined\" &&\n  typeof TextDecoder !== \"undefined\";\n\nexport function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\nconst sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport const TEXT_ENCODER_THRESHOLD = typeof process !== \"undefined\" && process.env.TEXT_ENCODING !== \"force\" ? 200 : 0;\n\nfunction utf8EncodeTEencode(str: string, output: Uint8Array, outputOffset: number): void {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  output.set(sharedTextEncoder!.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str: string, output: Uint8Array, outputOffset: number): void {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  sharedTextEncoder!.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport const utf8EncodeTE = sharedTextEncoder?.encodeInto ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++];\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++] & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++] & 0x3f;\n      const byte3 = bytes[offset++] & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++] & 0x3f;\n      const byte3 = bytes[offset++] & 0x3f;\n      const byte4 = bytes[offset++] & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport const TEXT_DECODER_THRESHOLD = typeof process !== \"undefined\" && process.env.TEXT_DECODER !== \"force\" ? 200 : 0;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return sharedTextDecoder!.decode(stringBytes);\n}\n","/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  constructor(readonly type: number, readonly data: Uint8Array) {}\n}\n","// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setBigInt64(view: DataView, offset: number, value: bigint): void {\n  let high = Number(value / BigInt(0x1_0000_0000));\n  const low = Number(value % BigInt(0x1_0000_0000));\n  if (high < 0 && low !== 0) {\n    // simulate Math.floor for negative high\n    high -= 1;\n  }\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number) {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n\n  const exceeds_min_safe_int =\n    high < Math.floor(Number.MIN_SAFE_INTEGER / 0x1_0000_0000) ||\n    (high === Math.floor(Number.MIN_SAFE_INTEGER / 0x1_0000_0000) && low === 0);\n\n  const exceeds_max_safe_int = high > Math.floor(Number.MAX_SAFE_INTEGER / 0x1_0000_0000);\n\n  if (exceeds_min_safe_int || exceeds_max_safe_int) {\n    return BigInt(high) * BigInt(0x1_0000_0000) + BigInt(low);\n  }\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number) {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n\n  const exceeds_max_safe_int = high > Math.floor(Number.MAX_SAFE_INTEGER / 0x1_0000_0000);\n\n  if (exceeds_max_safe_int) {\n    return BigInt(high) * BigInt(0x1_0000_0000) + BigInt(low);\n  }\n  return high * 0x1_0000_0000 + low;\n}\n","// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { getInt64, setInt64 } from \"./utils/int\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4) as number;\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new Error(`Unrecognized data size for timestamp: ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n","// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData\";\nimport { timestampExtension } from \"./timestamp\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (input: unknown, context: ContextType) => Uint8Array | null;\n\n// immutable interfce to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = 1 + type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encoder = this.builtInEncoders[i];\n      if (encoder != null) {\n        const data = encoder(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encoder = this.encoders[i];\n      if (encoder != null) {\n        const data = encoder(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decoder = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decoder) {\n      return decoder(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n","export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer) {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n","import { utf8EncodeJs, utf8Count, TEXT_ENCODING_AVAILABLE, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { setInt64, setUint64, setBigInt64 } from \"./utils/int\";\nimport { ensureUint8Array } from \"./utils/typedArrays\";\nimport { ExtData } from \"./ExtData\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport class Encoder<ContextType> {\n  private pos = 0;\n  private view = new DataView(new ArrayBuffer(this.initialBufferSize));\n  private bytes = new Uint8Array(this.view.buffer);\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxDepth = DEFAULT_MAX_DEPTH,\n    private readonly initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE,\n    private readonly sortKeys = false,\n    private readonly forceFloat32 = false,\n    private readonly ignoreUndefined = false,\n    private readonly forceIntegerToFloat = false,\n  ) {}\n\n  private getUint8Array(): Uint8Array {\n    return this.bytes.subarray(0, this.pos);\n  }\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  public encode(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.getUint8Array();\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      this.encodeNumber(object);\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else if (typeof object === \"bigint\") {\n      this.encodebigint(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n  private encodeNumber(object: number) {\n    if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // nagative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        }\n      }\n    } else {\n      // non-integer numbers\n      if (this.forceFloat32) {\n        // float 32\n        this.writeU8(0xca);\n        this.writeF32(object);\n      } else {\n        // float 64\n        this.writeU8(0xcb);\n        this.writeF64(object);\n      }\n    }\n  }\n\n  private encodebigint(object: bigint) {\n    if (object >= BigInt(0)) {\n      if (object < BigInt(0x80)) {\n        // positive fixint\n        this.writeU8(Number(object));\n      } else if (object < BigInt(0x100)) {\n        // uint 8\n        this.writeU8(0xcc);\n        this.writeU8(Number(object));\n      } else if (object < BigInt(0x10000)) {\n        // uint 16\n        this.writeU8(0xcd);\n        this.writeU16(Number(object));\n      } else if (object < BigInt(0x100000000)) {\n        // uint 32\n        this.writeU8(0xce);\n        this.writeU32(Number(object));\n      } else {\n        // uint 64\n        this.writeU8(0xcf);\n        this.writeBig64(object);\n      }\n    } else {\n      if (object >= BigInt(-0x20)) {\n        // nagative fixint\n        this.writeU8(0xe0 | (Number(object) + 0x20));\n      } else if (object >= BigInt(-0x80)) {\n        // int 8\n        this.writeU8(0xd0);\n        this.writeI8(Number(object));\n      } else if (object >= BigInt(-0x8000)) {\n        // int 16\n        this.writeU8(0xd1);\n        this.writeI16(Number(object));\n      } else if (object >= BigInt(-0x80000000)) {\n        // int 32\n        this.writeU8(0xd2);\n        this.writeI32(Number(object));\n      } else {\n        // int 64\n        this.writeU8(0xd3);\n        this.writeBig64(object);\n      }\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n    const strLength = object.length;\n\n    if (TEXT_ENCODING_AVAILABLE && strLength > TEXT_ENCODER_THRESHOLD) {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeTE(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    } else {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeJs(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    }\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeBig64(value: bigint) {\n    this.ensureBufferSizeToWrite(8);\n\n    setBigInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n}\n","import { ExtensionCodecType } from \"./ExtensionCodec\";\nimport { Encoder } from \"./Encoder\";\nimport { ContextOf, SplitUndefined } from \"./context\";\n\nexport type EncodeOptions<ContextType = undefined> = Partial<\n  Readonly<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n    maxDepth: number;\n    initialBufferSize: number;\n    sortKeys: boolean;\n\n    /**\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\n     *\n     * Only use it if precisions don't matter.\n     */\n    forceFloat32: boolean;\n\n    /**\n     * If `true`, an object property with `undefined` value are ignored.\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\n     *\n     * The default is `false`. Note that it needs more time to encode.\n     */\n    ignoreUndefined: boolean;\n\n    /**\n     * If `true`, integer numbers are encoded as floating point,\n     * with the `forceFloat32` option taken into account.\n     *\n     * The default is `false`.\n     */\n    forceIntegerToFloat: boolean;\n  }>\n> &\n  ContextOf<ContextType>;\n\nconst defaultEncodeOptions: EncodeOptions = {};\n\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode<ContextType>(\n  value: unknown,\n  options: EncodeOptions<SplitUndefined<ContextType>> = defaultEncodeOptions as any,\n): Uint8Array {\n  const encoder = new Encoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxDepth,\n    options.initialBufferSize,\n    options.sortKeys,\n    options.forceFloat32,\n    options.ignoreUndefined,\n    options.forceIntegerToFloat,\n  );\n  return encoder.encode(value);\n}\n","export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n","import { utf8DecodeJs } from \"./utils/utf8\";\n\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly value: string;\n}\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n\n  constructor(readonly maxKeyLength = DEFAULT_MAX_KEY_LENGTH, readonly maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    // avoid `new Array(N)` to create a non-sparse array for performance.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number) {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private get(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1];\n    const recordsLength = records.length;\n\n    FIND_CHUNK: for (let i = 0; i < recordsLength; i++) {\n      const record = records[i];\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.value;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1];\n    const record: KeyCacheRecord = { bytes, value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to a randomized position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.get(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const value = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, value);\n    return value;\n  }\n}\n","import { prettyByte } from \"./utils/prettyByte\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { getInt64, getUint64 } from \"./utils/int\";\nimport { utf8DecodeJs, TEXT_ENCODING_AVAILABLE, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\n\nconst enum State {\n  ARRAY,\n  MAP_KEY,\n  MAP_VALUE,\n}\n\ntype MapKeyType = string | number;\n\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\n  const keyType = typeof key;\n\n  return keyType === \"string\" || keyType === \"number\";\n};\n\ntype StackMapState = {\n  type: State.MAP_KEY | State.MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: State.ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport const DataViewIndexOutOfBoundsError: typeof Error = (() => {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n})();\n\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\n\nconst DEFAULT_MAX_LENGTH = 0xffff_ffff; // uint32_max\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType> {\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack: Array<StackState> = [];\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxStrLength = DEFAULT_MAX_LENGTH,\n    private readonly maxBinLength = DEFAULT_MAX_LENGTH,\n    private readonly maxArrayLength = DEFAULT_MAX_LENGTH,\n    private readonly maxMapLength = DEFAULT_MAX_LENGTH,\n    private readonly maxExtLength = DEFAULT_MAX_LENGTH,\n    private readonly keyDecoder: KeyDecoder | null = sharedCachedKeyDecoder,\n  ) {}\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | ArrayBuffer): void {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number>) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining()) {\n      this.setBuffer(buffer);\n    } else {\n      // retried because data is insufficient\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n      const concated = new Uint8Array(remainingData.length + newData.length);\n      concated.set(remainingData);\n      concated.set(newData, remainingData.length);\n      this.setBuffer(concated);\n    }\n  }\n\n  private hasRemaining(size = 1) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createNoExtraBytesError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  public decode(buffer: ArrayLike<number> | ArrayBuffer): unknown {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n    return this.doDecodeSingleSync();\n  }\n\n  private doDecodeSingleSync(): unknown {\n    const object = this.doDecodeSync();\n    if (this.hasRemaining()) {\n      throw this.createNoExtraBytesError(this.pos);\n    }\n    return object;\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number>>): Promise<unknown> {\n    let decoded = false;\n    let object: unknown;\n    for await (const buffer of stream) {\n      if (decoded) {\n        throw this.createNoExtraBytesError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      try {\n        object = this.doDecodeSync();\n        decoded = true;\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n\n    if (decoded) {\n      if (this.hasRemaining()) {\n        throw this.createNoExtraBytesError(this.totalPos);\n      }\n      return object;\n    }\n\n    const { headByte, pos, totalPos } = this;\n    throw new RangeError(\n      `Insufficient data in parcing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n    );\n  }\n\n  public decodeArrayStream(stream: AsyncIterable<ArrayLike<number>>) {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number>>) {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number>>, isArray: boolean) {\n    let isArrayHeaderRequired = isArray;\n    let arrayItemsLeft = -1;\n\n    for await (const buffer of stream) {\n      if (isArray && arrayItemsLeft === 0) {\n        throw this.createNoExtraBytesError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      if (isArrayHeaderRequired) {\n        arrayItemsLeft = this.readArraySize();\n        isArrayHeaderRequired = false;\n        this.complete();\n      }\n\n      try {\n        while (true) {\n          yield this.doDecodeSync();\n          if (--arrayItemsLeft === 0) {\n            break;\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new Error(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack[stack.length - 1];\n        if (state.type === State.ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === State.MAP_KEY) {\n          if (!isValidMapKeyType(object)) {\n            throw new Error(\"The type of key must be string or number but \" + typeof object);\n          }\n\n          state.key = object;\n          state.type = State.MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = State.MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new Error(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new Error(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.push({\n      type: State.MAP_KEY,\n      size,\n      key: null,\n      readCount: 0,\n      map: {},\n    });\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new Error(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.push({\n      type: State.ARRAY,\n      size,\n      array: new Array<unknown>(size),\n      position: 0,\n    });\n  }\n\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new Error(`Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`);\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (TEXT_ENCODING_AVAILABLE && byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack[this.stack.length - 1];\n      return state.type === State.MAP_KEY;\n    }\n    return false;\n  }\n\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new Error(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new Error(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): bigint | number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): bigint | number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n","import { ExtensionCodecType } from \"./ExtensionCodec\";\nimport { Decoder } from \"./Decoder\";\nimport { ContextOf, SplitUndefined } from \"./context\";\n\nexport type DecodeOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Maximum string length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport const defaultDecodeOptions: DecodeOptions = {};\n\n/**\n * It decodes a MessagePack-encoded buffer.\n *\n * This is a synchronous decoding function. See other variants for asynchronous decoding: `decodeAsync()`, `decodeStream()`, `decodeArrayStream()`.\n */\nexport function decode<ContextType>(\n  buffer: ArrayLike<number> | ArrayBuffer,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): unknown {\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decode(buffer);\n}\n","// utility for whatwg streams\n\n// The living standard of whatwg streams says\n// ReadableStream is also AsyncIterable, but\n// as of June 2019, no browser implements it.\n// See https://streams.spec.whatwg.org/ for details\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\n\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\n  return (object as any)[Symbol.asyncIterator] != null;\n}\n\nfunction assertNonNull<T>(value: T | null | undefined): asserts value is T {\n  if (value == null) {\n    throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n  }\n}\n\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n      assertNonNull(value);\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function ensureAsyncIterabe<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\n  if (isAsyncIterable(streamLike)) {\n    return streamLike;\n  } else {\n    return asyncIterableFromStream(streamLike);\n  }\n}\n","import { Decoder } from \"./Decoder\";\nimport { defaultDecodeOptions, DecodeOptions } from \"./decode\";\nimport { ensureAsyncIterabe, ReadableStreamLike } from \"./utils/stream\";\nimport { SplitUndefined } from \"./context\";\n\nexport async function decodeAsync<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number>>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Promise<unknown> {\n  const stream = ensureAsyncIterabe(streamLike);\n\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeAsync(stream);\n}\n\nexport function decodeArrayStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number>>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n) {\n  const stream = ensureAsyncIterabe(streamLike);\n\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeArrayStream(stream);\n}\n\nexport function decodeStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number>>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n) {\n  const stream = ensureAsyncIterabe(streamLike);\n\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeStream(stream);\n}\n","/* eslint-disable no-bitwise */\n/* eslint-disable no-use-before-define */\n/* eslint-disable class-methods-use-this */\n\n/**\n    //ABI-Types: uint<N>: An N-bit unsigned integer (8 <= N <= 512 and N % 8 = 0).\n    // | byte (alias for uint8)\n    // | ufixed <N> x <M> (8 <= N <= 512, N % 8 = 0, and 0 < M <= 160)\n    // | bool\n    // | address (alias for byte[32])\n    // | <type> [<N>]\n    // | <type> []\n    // | string\n    // | (T1, ..., Tn)\n*/\nimport { encodeAddress, decodeAddress } from '../encoding/address';\nimport { bigIntToBytes, bytesToBigInt } from '../encoding/bigint';\nimport { concatArrays } from '../utils/utils';\n\nexport const MAX_LEN = 2 ** 16 - 1;\nexport const ADDR_BYTE_SIZE = 32;\nexport const SINGLE_BYTE_SIZE = 1;\nexport const SINGLE_BOOL_SIZE = 1;\nexport const LENGTH_ENCODE_BYTE_SIZE = 2;\n\ninterface Segment {\n  left: number;\n  right: number;\n}\n\nconst staticArrayRegexp = /^([a-z\\d[\\](),]+)\\[(0|[1-9][\\d]*)]$/;\nconst ufixedRegexp = /^ufixed([1-9][\\d]*)x([1-9][\\d]*)$/;\n\nexport type ABIValue =\n  | boolean\n  | number\n  | bigint\n  | string\n  | Uint8Array\n  | ABIValue[];\n\nexport abstract class ABIType {\n  // Converts a ABIType object to a string\n  abstract toString(): string;\n  // Checks if two ABIType objects are equal in value\n  abstract equals(other: ABIType): boolean;\n  // Checks if the ABIType object (or any of its child types) have dynamic length\n  abstract isDynamic(): boolean;\n  // Returns the size of the ABIType object in bytes\n  abstract byteLen(): number;\n  // Encodes a value for the ABIType object using the ABI specs\n  abstract encode(value: ABIValue): Uint8Array;\n  // Decodes a value for the ABIType object using the ABI specs\n  abstract decode(byteString: Uint8Array): ABIValue;\n  // De-serializes the ABI type from a string using the ABI specs\n  static from(str: string): ABIType {\n    if (str.endsWith('[]')) {\n      const arrayArgType = ABIType.from(str.slice(0, str.length - 2));\n      return new ABIArrayDynamicType(arrayArgType);\n    }\n    if (str.endsWith(']')) {\n      const stringMatches = str.match(staticArrayRegexp);\n      // Match the string itself, array element type, then array length\n      if (stringMatches.length !== 3) {\n        throw new Error(`malformed static array string: ${str}`);\n      }\n      // Parse static array using regex\n      const arrayLengthStr = stringMatches[2];\n      const arrayLength = parseInt(arrayLengthStr, 10);\n      if (arrayLength > MAX_LEN) {\n        throw new Error(`array length exceeds limit ${MAX_LEN}`);\n      }\n      // Parse the array element type\n      const arrayType = ABIType.from(stringMatches[1]);\n      return new ABIArrayStaticType(arrayType, arrayLength);\n    }\n    if (str.startsWith('uint')) {\n      // Checks if the parsed number contains only digits, no whitespaces\n      const digitsOnly = (string) =>\n        [...string].every((c) => '0123456789'.includes(c));\n      const typeSizeStr = str.slice(4, str.length);\n      if (!digitsOnly(typeSizeStr)) {\n        throw new Error(`malformed uint string: ${typeSizeStr}`);\n      }\n      const typeSize = parseInt(typeSizeStr, 10);\n      if (typeSize > MAX_LEN) {\n        throw new Error(`malformed uint string: ${typeSize}`);\n      }\n      return new ABIUintType(typeSize);\n    }\n    if (str === 'byte') {\n      return new ABIByteType();\n    }\n    if (str.startsWith('ufixed')) {\n      const stringMatches = str.match(ufixedRegexp);\n      if (stringMatches.length !== 3) {\n        throw new Error(`malformed ufixed type: ${str}`);\n      }\n      const ufixedSize = parseInt(stringMatches[1], 10);\n      const ufixedPrecision = parseInt(stringMatches[2], 10);\n      return new ABIUfixedType(ufixedSize, ufixedPrecision);\n    }\n    if (str === 'bool') {\n      return new ABIBoolType();\n    }\n    if (str === 'address') {\n      return new ABIAddressType();\n    }\n    if (str === 'string') {\n      return new ABIStringType();\n    }\n    if (str.length >= 2 && str[0] === '(' && str[str.length - 1] === ')') {\n      const tupleContent = ABITupleType.parseTupleContent(\n        str.slice(1, str.length - 1)\n      );\n      const tupleTypes: ABIType[] = [];\n      for (let i = 0; i < tupleContent.length; i++) {\n        const ti = ABIType.from(tupleContent[i]);\n        tupleTypes.push(ti);\n      }\n      return new ABITupleType(tupleTypes);\n    }\n    throw new Error(`cannot convert a string ${str} to an ABI type`);\n  }\n}\n\nexport class ABIUintType extends ABIType {\n  bitSize: number;\n\n  constructor(size: number) {\n    super();\n    if (size % 8 !== 0 || size < 8 || size > 512) {\n      throw new Error(`unsupported uint type bitSize: ${size}`);\n    }\n    this.bitSize = size;\n  }\n\n  toString() {\n    return `uint${this.bitSize}`;\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIUintType && this.bitSize === other.bitSize;\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return this.bitSize / 8;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'bigint' && typeof value !== 'number') {\n      throw new Error(`Cannot encode value as uint${this.bitSize}: ${value}`);\n    }\n    if (value >= BigInt(2 ** this.bitSize) || value < BigInt(0)) {\n      throw new Error(\n        `${value} is not a non-negative int or too big to fit in size uint${this.bitSize}`\n      );\n    }\n    if (typeof value === 'number' && !Number.isSafeInteger(value)) {\n      throw new Error(\n        `${value} should be converted into a BigInt before it is encoded`\n      );\n    }\n    return bigIntToBytes(value, this.bitSize / 8);\n  }\n\n  decode(byteString: Uint8Array): bigint {\n    if (byteString.length !== this.bitSize / 8) {\n      throw new Error(`byte string must correspond to a uint${this.bitSize}`);\n    }\n    return bytesToBigInt(byteString);\n  }\n}\n\nexport class ABIUfixedType extends ABIType {\n  bitSize: number;\n  precision: number;\n\n  constructor(size: number, denominator: number) {\n    super();\n    if (size % 8 !== 0 || size < 8 || size > 512) {\n      throw new Error(`unsupported ufixed type bitSize: ${size}`);\n    }\n    if (denominator > 160 || denominator < 1) {\n      throw new Error(`unsupported ufixed type precision: ${denominator}`);\n    }\n    this.bitSize = size;\n    this.precision = denominator;\n  }\n\n  toString() {\n    return `ufixed${this.bitSize}x${this.precision}`;\n  }\n\n  equals(other: ABIType) {\n    return (\n      other instanceof ABIUfixedType &&\n      this.bitSize === other.bitSize &&\n      this.precision === other.precision\n    );\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return this.bitSize / 8;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'bigint' && typeof value !== 'number') {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    if (value >= BigInt(2 ** this.bitSize) || value < BigInt(0)) {\n      throw new Error(\n        `${value} is not a non-negative int or too big to fit in size ${this.toString()}`\n      );\n    }\n    if (typeof value === 'number' && !Number.isSafeInteger(value)) {\n      throw new Error(\n        `${value} should be converted into a BigInt before it is encoded`\n      );\n    }\n    return bigIntToBytes(value, this.bitSize / 8);\n  }\n\n  decode(byteString: Uint8Array): bigint {\n    if (byteString.length !== this.bitSize / 8) {\n      throw new Error(`byte string must correspond to a ${this.toString()}`);\n    }\n    return bytesToBigInt(byteString);\n  }\n}\n\nexport class ABIAddressType extends ABIType {\n  toString() {\n    return 'address';\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIAddressType;\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return ADDR_BYTE_SIZE;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'string' && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    if (typeof value === 'string') {\n      const decodedAddress = decodeAddress(value);\n      return decodedAddress.publicKey;\n    }\n    // Return the address if it is already in bytes\n    if (value.byteLength !== 32) {\n      throw new Error(`byte string must be 32 bytes long for an address`);\n    }\n    return value;\n  }\n\n  decode(byteString: Uint8Array): string {\n    if (byteString.byteLength !== 32) {\n      throw new Error(`byte string must be 32 bytes long for an address`);\n    }\n    return encodeAddress(byteString);\n  }\n}\n\nexport class ABIBoolType extends ABIType {\n  toString() {\n    return 'bool';\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIBoolType;\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return SINGLE_BOOL_SIZE;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'boolean') {\n      throw new Error(`Cannot encode value as bool: ${value}`);\n    }\n    if (value) {\n      return new Uint8Array([128]);\n    }\n    return new Uint8Array([0]);\n  }\n\n  decode(byteString: Uint8Array): boolean {\n    if (byteString.byteLength !== 1) {\n      throw new Error(`bool string must be 1 byte long`);\n    }\n    const value = byteString[0];\n    if (value === 128) {\n      return true;\n    }\n    if (value === 0) {\n      return false;\n    }\n    throw new Error(`boolean could not be decoded from the byte string`);\n  }\n}\n\nexport class ABIByteType extends ABIType {\n  toString() {\n    return 'byte';\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIByteType;\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return SINGLE_BYTE_SIZE;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'number' && typeof value !== 'bigint') {\n      throw new Error(`Cannot encode value as byte: ${value}`);\n    }\n    if (typeof value === 'bigint') {\n      // eslint-disable-next-line no-param-reassign\n      value = Number(value);\n    }\n    if (value < 0 || value > 255) {\n      throw new Error(`${value} cannot be encoded into a byte`);\n    }\n    return new Uint8Array([value]);\n  }\n\n  decode(byteString: Uint8Array): number {\n    if (byteString.byteLength !== 1) {\n      throw new Error(`byte string must be 1 byte long`);\n    }\n    return byteString[0];\n  }\n}\n\nexport class ABIStringType extends ABIType {\n  toString() {\n    return 'string';\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIStringType;\n  }\n\n  isDynamic() {\n    return true;\n  }\n\n  byteLen(): never {\n    throw new Error(`${this.toString()} is a dynamic type`);\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'string' && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as string: ${value}`);\n    }\n    const encodedBytes = Buffer.from(value);\n    const encodedLength = bigIntToBytes(\n      encodedBytes.length,\n      LENGTH_ENCODE_BYTE_SIZE\n    );\n    const mergedBytes = new Uint8Array(\n      encodedBytes.length + LENGTH_ENCODE_BYTE_SIZE\n    );\n    mergedBytes.set(encodedLength);\n    mergedBytes.set(encodedBytes, LENGTH_ENCODE_BYTE_SIZE);\n    return mergedBytes;\n  }\n\n  decode(byteString: Uint8Array): string {\n    if (byteString.length < LENGTH_ENCODE_BYTE_SIZE) {\n      throw new Error(\n        `byte string is too short to be decoded. Actual length is ${byteString.length}, but expected at least ${LENGTH_ENCODE_BYTE_SIZE}`\n      );\n    }\n    const buf = Buffer.from(byteString);\n    const byteLength = buf.readUIntBE(0, LENGTH_ENCODE_BYTE_SIZE);\n    const byteValue = byteString.slice(\n      LENGTH_ENCODE_BYTE_SIZE,\n      byteString.length\n    );\n    if (byteLength !== byteValue.length) {\n      throw new Error(\n        `string length bytes do not match the actual length of string. Expected ${byteLength}, got ${byteValue.length}`\n      );\n    }\n    return Buffer.from(byteValue).toString('utf-8');\n  }\n}\n\nexport class ABIArrayStaticType extends ABIType {\n  childType: ABIType;\n  staticLength: number;\n\n  constructor(argType: ABIType, arrayLength: number) {\n    super();\n    if (arrayLength < 0) {\n      throw new Error(\n        `static array must have a non negative length: ${arrayLength}`\n      );\n    }\n    this.childType = argType;\n    this.staticLength = arrayLength;\n  }\n\n  toString() {\n    return `${this.childType.toString()}[${this.staticLength}]`;\n  }\n\n  equals(other: ABIType) {\n    return (\n      other instanceof ABIArrayStaticType &&\n      this.staticLength === other.staticLength &&\n      this.childType.equals(other.childType)\n    );\n  }\n\n  isDynamic() {\n    return this.childType.isDynamic();\n  }\n\n  byteLen() {\n    if (this.childType.constructor === ABIBoolType) {\n      return Math.ceil(this.staticLength / 8);\n    }\n    return this.staticLength * this.childType.byteLen();\n  }\n\n  encode(value: ABIValue) {\n    if (!Array.isArray(value) && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    if (value.length !== this.staticLength) {\n      throw new Error(\n        `Value array does not match static array length. Expected ${this.staticLength}, got ${value.length}`\n      );\n    }\n    const convertedTuple = this.toABITupleType();\n    return convertedTuple.encode(value);\n  }\n\n  decode(byteString: Uint8Array): ABIValue[] {\n    const convertedTuple = this.toABITupleType();\n    return convertedTuple.decode(byteString);\n  }\n\n  toABITupleType() {\n    return new ABITupleType(Array(this.staticLength).fill(this.childType));\n  }\n}\n\nexport class ABIArrayDynamicType extends ABIType {\n  childType: ABIType;\n\n  constructor(argType: ABIType) {\n    super();\n    this.childType = argType;\n  }\n\n  toString() {\n    return `${this.childType.toString()}[]`;\n  }\n\n  equals(other: ABIType) {\n    return (\n      other instanceof ABIArrayDynamicType &&\n      this.childType.equals(other.childType)\n    );\n  }\n\n  isDynamic() {\n    return true;\n  }\n\n  byteLen(): never {\n    throw new Error(`${this.toString()} is a dynamic type`);\n  }\n\n  encode(value: ABIValue) {\n    if (!Array.isArray(value) && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    const convertedTuple = this.toABITupleType(value.length);\n    const encodedTuple = convertedTuple.encode(value);\n    const encodedLength = bigIntToBytes(\n      convertedTuple.childTypes.length,\n      LENGTH_ENCODE_BYTE_SIZE\n    );\n    const mergedBytes = concatArrays(encodedLength, encodedTuple);\n    return mergedBytes;\n  }\n\n  decode(byteString: Uint8Array): ABIValue[] {\n    const buf = Buffer.from(byteString);\n    const byteLength = buf.readUIntBE(0, LENGTH_ENCODE_BYTE_SIZE);\n    const convertedTuple = this.toABITupleType(byteLength);\n    return convertedTuple.decode(\n      byteString.slice(LENGTH_ENCODE_BYTE_SIZE, byteString.length)\n    );\n  }\n\n  toABITupleType(length: number) {\n    return new ABITupleType(Array(length).fill(this.childType));\n  }\n}\n\nexport class ABITupleType extends ABIType {\n  childTypes: ABIType[];\n\n  constructor(argTypes: ABIType[]) {\n    super();\n    if (argTypes.length >= MAX_LEN) {\n      throw new Error(\n        'tuple type child type number larger than maximum uint16 error'\n      );\n    }\n    this.childTypes = argTypes;\n  }\n\n  toString() {\n    const typeStrings: string[] = [];\n    for (let i = 0; i < this.childTypes.length; i++) {\n      typeStrings[i] = this.childTypes[i].toString();\n    }\n    return `(${typeStrings.join(',')})`;\n  }\n\n  equals(other: ABIType) {\n    return (\n      other instanceof ABITupleType &&\n      this.childTypes.length === other.childTypes.length &&\n      this.childTypes.every((child, index) =>\n        child.equals(other.childTypes[index])\n      )\n    );\n  }\n\n  isDynamic() {\n    const isDynamic = (child: ABIType) => child.isDynamic();\n    return this.childTypes.some(isDynamic);\n  }\n\n  byteLen() {\n    let size = 0;\n    for (let i = 0; i < this.childTypes.length; i++) {\n      if (this.childTypes[i].constructor === ABIBoolType) {\n        const after = findBoolLR(this.childTypes, i, 1);\n        const boolNum = after + 1;\n        i += after;\n        size += Math.trunc((boolNum + 7) / 8);\n      } else {\n        const childByteSize = this.childTypes[i].byteLen();\n        size += childByteSize;\n      }\n    }\n    return size;\n  }\n\n  encode(value: ABIValue) {\n    if (!Array.isArray(value) && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    const values = Array.from(value);\n    if (value.length > MAX_LEN) {\n      throw new Error('length of tuple array should not exceed a uint16');\n    }\n    const tupleTypes = this.childTypes;\n    const heads: Uint8Array[] = [];\n    const tails: Uint8Array[] = [];\n    const isDynamicIndex = new Map<number, boolean>();\n    let i = 0;\n\n    while (i < tupleTypes.length) {\n      const tupleType = tupleTypes[i];\n      if (tupleType.isDynamic()) {\n        // Head is not pre-determined for dynamic types; store a placeholder for now\n        isDynamicIndex.set(heads.length, true);\n        heads.push(new Uint8Array([0, 0]));\n        tails.push(tupleType.encode(values[i]));\n      } else {\n        if (tupleType.constructor === ABIBoolType) {\n          const before = findBoolLR(tupleTypes, i, -1);\n          let after = findBoolLR(tupleTypes, i, 1);\n\n          // Pack bytes to heads and tails\n          if (before % 8 !== 0) {\n            throw new Error(\n              'expected before index should have number of bool mod 8 equal 0'\n            );\n          }\n          after = Math.min(7, after);\n          const compressedInt = compressMultipleBool(\n            values.slice(i, i + after + 1)\n          );\n          heads.push(bigIntToBytes(compressedInt, 1));\n          i += after;\n        } else {\n          const encodedTupleValue = tupleType.encode(values[i]);\n          heads.push(encodedTupleValue);\n        }\n        isDynamicIndex.set(i, false);\n        tails.push(new Uint8Array());\n      }\n      i += 1;\n    }\n\n    // Adjust head lengths for dynamic types\n    let headLength = 0;\n    for (const headElement of heads) {\n      headLength += headElement.length;\n    }\n\n    // encode any placeholders for dynamic types\n    let tailLength = 0;\n    for (let j = 0; j < heads.length; j++) {\n      if (isDynamicIndex.get(j)) {\n        const headValue = headLength + tailLength;\n        if (headValue > MAX_LEN) {\n          throw new Error(\n            `byte length of ${headValue} should not exceed a uint16`\n          );\n        }\n        heads[j] = bigIntToBytes(headValue, LENGTH_ENCODE_BYTE_SIZE);\n      }\n      tailLength += tails[j].length;\n    }\n\n    return concatArrays(...heads, ...tails);\n  }\n\n  decode(byteString: Uint8Array): ABIValue[] {\n    const tupleTypes = this.childTypes;\n    const dynamicSegments: Segment[] = [];\n    const valuePartition: Uint8Array[] = [];\n    let i = 0;\n    let iterIndex = 0;\n    const buf = Buffer.from(byteString);\n\n    while (i < tupleTypes.length) {\n      const tupleType = tupleTypes[i];\n      if (tupleType.isDynamic()) {\n        if (\n          byteString.slice(iterIndex, byteString.length).length <\n          LENGTH_ENCODE_BYTE_SIZE\n        ) {\n          throw new Error('dynamic type in tuple is too short to be decoded');\n        }\n        const dynamicIndex = buf.readUIntBE(iterIndex, LENGTH_ENCODE_BYTE_SIZE);\n        if (dynamicSegments.length > 0) {\n          dynamicSegments[dynamicSegments.length - 1].right = dynamicIndex;\n          // Check that right side of segment is greater than the left side\n          if (dynamicIndex < dynamicSegments[dynamicSegments.length - 1].left) {\n            throw new Error(\n              'dynamic index segment miscalculation: left is greater than right index'\n            );\n          }\n        }\n        // Since we do not know where the current dynamic element ends, put a placeholder and update later\n        const seg: Segment = {\n          left: dynamicIndex,\n          right: -1,\n        };\n        dynamicSegments.push(seg);\n        valuePartition.push(null);\n        iterIndex += LENGTH_ENCODE_BYTE_SIZE;\n      } else {\n        // eslint-disable-next-line no-lonely-if\n        if (tupleType.constructor === ABIBoolType) {\n          const before = findBoolLR(this.childTypes, i, -1);\n          let after = findBoolLR(this.childTypes, i, 1);\n\n          if (before % 8 !== 0) {\n            throw new Error('expected before bool number mod 8 === 0');\n          }\n          after = Math.min(7, after);\n          // Parse bool in a byte to multiple byte strings\n          for (let boolIndex = 0; boolIndex <= after; boolIndex++) {\n            const boolMask = 0x80 >> boolIndex;\n            if ((byteString[iterIndex] & boolMask) > 0) {\n              valuePartition.push(new Uint8Array([128]));\n            } else {\n              valuePartition.push(new Uint8Array([0]));\n            }\n          }\n          i += after;\n          iterIndex += 1;\n        } else {\n          const currLen = tupleType.byteLen();\n          valuePartition.push(byteString.slice(iterIndex, iterIndex + currLen));\n          iterIndex += currLen;\n        }\n      }\n      if (i !== tupleTypes.length - 1 && iterIndex >= byteString.length) {\n        throw new Error('input byte not enough to decode');\n      }\n      i += 1;\n    }\n    if (dynamicSegments.length > 0) {\n      dynamicSegments[dynamicSegments.length - 1].right = byteString.length;\n      iterIndex = byteString.length;\n    }\n    if (iterIndex < byteString.length) {\n      throw new Error('input byte not fully consumed');\n    }\n\n    // Check segment indices are valid\n    // If the dynamic segment are not consecutive and well-ordered, we return error\n    for (let j = 0; j < dynamicSegments.length; j++) {\n      const seg = dynamicSegments[j];\n      if (seg.left > seg.right) {\n        throw new Error(\n          'dynamic segment should display a [l, r] space with l <= r'\n        );\n      }\n      if (\n        j !== dynamicSegments.length - 1 &&\n        seg.right !== dynamicSegments[j + 1].left\n      ) {\n        throw new Error('dynamic segment should be consecutive');\n      }\n    }\n\n    // Check dynamic element partitions\n    let segIndex = 0;\n    for (let j = 0; j < tupleTypes.length; j++) {\n      if (tupleTypes[j].isDynamic()) {\n        valuePartition[j] = byteString.slice(\n          dynamicSegments[segIndex].left,\n          dynamicSegments[segIndex].right\n        );\n        segIndex += 1;\n      }\n    }\n\n    // Decode each tuple element\n    const returnValues: ABIValue[] = [];\n    for (let j = 0; j < tupleTypes.length; j++) {\n      const valueTi = tupleTypes[j].decode(valuePartition[j]);\n      returnValues.push(valueTi);\n    }\n    return returnValues;\n  }\n\n  static parseTupleContent(str: string): string[] {\n    if (str.length === 0) {\n      return [];\n    }\n    if (str.endsWith(',') || str.startsWith(',')) {\n      throw new Error('tuple string should not start with comma');\n    }\n    if (str.includes(',,')) {\n      throw new Error('tuple string should not have consecutive commas');\n    }\n\n    const tupleStrings: string[] = [];\n    let depth = 0;\n    let word = '';\n\n    for (const char of str) {\n      word += char;\n      if (char === '(') {\n        depth += 1;\n      } else if (char === ')') {\n        depth -= 1;\n      } else if (char === ',') {\n        // If the comma is at depth 0, then append the word as token.\n        if (depth === 0) {\n          tupleStrings.push(word.slice(0, word.length - 1));\n          word = '';\n        }\n      }\n    }\n    if (word.length !== 0) {\n      tupleStrings.push(word);\n    }\n    if (depth !== 0) {\n      throw new Error('tuple string has mismatched parentheses');\n    }\n    return tupleStrings;\n  }\n}\n\n// compressMultipleBool compresses consecutive bool values into a byte in ABI tuple / array value.\nfunction compressMultipleBool(valueList: ABIValue[]): number {\n  let res = 0;\n  if (valueList.length > 8) {\n    throw new Error('value list passed in should be no greater than length 8');\n  }\n  for (let i = 0; i < valueList.length; i++) {\n    const boolVal = valueList[i];\n    if (typeof boolVal !== 'boolean') {\n      throw new Error('non-boolean values cannot be compressed into a byte');\n    }\n    if (boolVal) {\n      res |= 1 << (7 - i);\n    }\n  }\n  return res;\n}\n\n// Assume that the current index on the list of type is an ABI bool type.\n// It returns the difference between the current index and the index of the furthest consecutive Bool type.\nfunction findBoolLR(typeList: ABIType[], index: number, delta: -1 | 1): number {\n  let until = 0;\n  while (true) {\n    const curr = index + delta * until;\n    if (typeList[curr].constructor === ABIBoolType) {\n      if (curr !== typeList.length - 1 && delta === 1) {\n        until += 1;\n      } else if (curr > 0 && delta === -1) {\n        until += 1;\n      } else {\n        break;\n      }\n    } else {\n      until -= 1;\n      break;\n    }\n  }\n  return until;\n}\n","import { Transaction } from '../transaction';\n\nexport enum ABITransactionType {\n  /**\n   * Any transaction type\n   */\n  any = 'txn',\n\n  /**\n   * Payment transaction type\n   */\n  pay = 'pay',\n\n  /**\n   * Key registration transaction type\n   */\n  keyreg = 'keyreg',\n\n  /**\n   * Asset configuration transaction type\n   */\n  acfg = 'acfg',\n\n  /**\n   * Asset transfer transaction type\n   */\n  axfer = 'axfer',\n\n  /**\n   * Asset freeze transaction type\n   */\n  afrz = 'afrz',\n\n  /**\n   * Application transaction type\n   */\n  appl = 'appl',\n}\n\nexport function abiTypeIsTransaction(type: any): type is ABITransactionType {\n  return (\n    type === ABITransactionType.any ||\n    type === ABITransactionType.pay ||\n    type === ABITransactionType.keyreg ||\n    type === ABITransactionType.acfg ||\n    type === ABITransactionType.axfer ||\n    type === ABITransactionType.afrz ||\n    type === ABITransactionType.appl\n  );\n}\n\nexport function abiCheckTransactionType(\n  type: ABITransactionType,\n  txn: Transaction\n): boolean {\n  if (type === ABITransactionType.any) {\n    return true;\n  }\n\n  return txn.type && txn.type.toString() === type.toString();\n}\n","export enum ABIReferenceType {\n  /**\n   * Account reference type\n   */\n  account = 'account',\n\n  /**\n   * Application reference type\n   */\n  application = 'application',\n\n  /**\n   * Asset reference type\n   */\n  asset = 'asset',\n}\n\nexport function abiTypeIsReference(type: any): type is ABIReferenceType {\n  return (\n    type === ABIReferenceType.account ||\n    type === ABIReferenceType.application ||\n    type === ABIReferenceType.asset\n  );\n}\n","import { genericHash } from '../nacl/naclWrappers';\nimport { ABIType, ABITupleType } from './abi_type';\nimport { ABITransactionType, abiTypeIsTransaction } from './transaction';\nimport { ABIReferenceType, abiTypeIsReference } from './reference';\n\nfunction parseMethodSignature(\n  signature: string\n): { name: string; args: string[]; returns: string } {\n  const argsStart = signature.indexOf('(');\n  if (argsStart === -1) {\n    throw new Error(`Invalid method signature: ${signature}`);\n  }\n\n  let argsEnd = -1;\n  let depth = 0;\n  for (let i = argsStart; i < signature.length; i++) {\n    const char = signature[i];\n\n    if (char === '(') {\n      depth += 1;\n    } else if (char === ')') {\n      if (depth === 0) {\n        // unpaired parenthesis\n        break;\n      }\n\n      depth -= 1;\n      if (depth === 0) {\n        argsEnd = i;\n        break;\n      }\n    }\n  }\n\n  if (argsEnd === -1) {\n    throw new Error(`Invalid method signature: ${signature}`);\n  }\n\n  return {\n    name: signature.slice(0, argsStart),\n    args: ABITupleType.parseTupleContent(\n      signature.slice(argsStart + 1, argsEnd)\n    ),\n    returns: signature.slice(argsEnd + 1),\n  };\n}\n\nexport interface ABIMethodArgParams {\n  type: string;\n  name?: string;\n  desc?: string;\n}\n\nexport interface ABIMethodReturnParams {\n  type: string;\n  desc?: string;\n}\n\nexport interface ABIMethodParams {\n  name: string;\n  desc?: string;\n  args: ABIMethodArgParams[];\n  returns: ABIMethodReturnParams;\n}\n\nexport type ABIArgumentType = ABIType | ABITransactionType | ABIReferenceType;\n\nexport type ABIReturnType = ABIType | 'void';\n\nexport class ABIMethod {\n  public readonly name: string;\n  public readonly description?: string;\n  public readonly args: Array<{\n    type: ABIArgumentType;\n    name?: string;\n    description?: string;\n  }>;\n\n  public readonly returns: { type: ABIReturnType; description?: string };\n\n  constructor(params: ABIMethodParams) {\n    if (\n      typeof params.name !== 'string' ||\n      typeof params.returns !== 'object' ||\n      !Array.isArray(params.args)\n    ) {\n      throw new Error('Invalid ABIMethod parameters');\n    }\n\n    this.name = params.name;\n    this.description = params.desc;\n    this.args = params.args.map(({ type, name, desc }) => {\n      if (abiTypeIsTransaction(type) || abiTypeIsReference(type)) {\n        return {\n          type,\n          name,\n          description: desc,\n        };\n      }\n\n      return {\n        type: ABIType.from(type),\n        name,\n        description: desc,\n      };\n    });\n    this.returns = {\n      type:\n        params.returns.type === 'void'\n          ? params.returns.type\n          : ABIType.from(params.returns.type),\n      description: params.returns.desc,\n    };\n  }\n\n  getSignature(): string {\n    const args = this.args.map((arg) => arg.type.toString()).join(',');\n    const returns = this.returns.type.toString();\n    return `${this.name}(${args})${returns}`;\n  }\n\n  getSelector(): Uint8Array {\n    const hash = genericHash(this.getSignature());\n    return new Uint8Array(hash.slice(0, 4));\n  }\n\n  txnCount(): number {\n    let count = 1;\n    for (const arg of this.args) {\n      if (typeof arg.type === 'string' && abiTypeIsTransaction(arg.type)) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  toJSON(): ABIMethodParams {\n    return {\n      name: this.name,\n      desc: this.description,\n      args: this.args.map(({ type, name, description }) => ({\n        type: type.toString(),\n        name,\n        desc: description,\n      })),\n      returns: {\n        type: this.returns.type.toString(),\n        desc: this.returns.description,\n      },\n    };\n  }\n\n  static fromSignature(signature: string): ABIMethod {\n    const { name, args, returns } = parseMethodSignature(signature);\n\n    return new ABIMethod({\n      name,\n      args: args.map((arg) => ({ type: arg })),\n      returns: { type: returns },\n    });\n  }\n}\n\nexport function getMethodByName(methods: ABIMethod[], name: string): ABIMethod {\n  if (\n    methods === null ||\n    !Array.isArray(methods) ||\n    !methods.every((item) => item instanceof ABIMethod)\n  )\n    throw new Error('Methods list provided is null or not the correct type');\n\n  const filteredMethods = methods.filter((m: ABIMethod) => m.name === name);\n  if (filteredMethods.length > 1)\n    throw new Error(\n      `found ${\n        filteredMethods.length\n      } methods with the same name ${filteredMethods\n        .map((m: ABIMethod) => m.getSignature())\n        .join(',')}`\n    );\n\n  if (filteredMethods.length === 0)\n    throw new Error(`found 0 methods with the name ${name}`);\n\n  return filteredMethods[0];\n}\n","import { ABIMethod, ABIMethodParams, getMethodByName } from './method';\n\nexport interface ABIContractNetworkInfo {\n  appID: number;\n}\n\nexport interface ABIContractNetworks {\n  [network: string]: ABIContractNetworkInfo;\n}\n\nexport interface ABIContractParams {\n  name: string;\n  desc?: string;\n  networks?: ABIContractNetworks;\n  methods: ABIMethodParams[];\n}\n\nexport class ABIContract {\n  public readonly name: string;\n  public readonly description?: string;\n  public readonly networks: ABIContractNetworks;\n  public readonly methods: ABIMethod[];\n\n  constructor(params: ABIContractParams) {\n    if (\n      typeof params.name !== 'string' ||\n      !Array.isArray(params.methods) ||\n      (params.networks && typeof params.networks !== 'object')\n    ) {\n      throw new Error('Invalid ABIContract parameters');\n    }\n\n    this.name = params.name;\n    this.description = params.desc;\n    this.networks = params.networks ? { ...params.networks } : {};\n    this.methods = params.methods.map((method) => new ABIMethod(method));\n  }\n\n  toJSON(): ABIContractParams {\n    return {\n      name: this.name,\n      desc: this.description,\n      networks: this.networks,\n      methods: this.methods.map((method) => method.toJSON()),\n    };\n  }\n\n  getMethodByName(name: string): ABIMethod {\n    return getMethodByName(this.methods, name);\n  }\n}\n","import { ABIMethod, ABIMethodParams, getMethodByName } from './method';\n\nexport interface ABIInterfaceParams {\n  name: string;\n  desc?: string;\n  methods: ABIMethodParams[];\n}\n\nexport class ABIInterface {\n  public readonly name: string;\n  public readonly description?: string;\n  public readonly methods: ABIMethod[];\n\n  constructor(params: ABIInterfaceParams) {\n    if (typeof params.name !== 'string' || !Array.isArray(params.methods)) {\n      throw new Error('Invalid ABIInterface parameters');\n    }\n\n    this.name = params.name;\n    this.description = params.desc;\n    this.methods = params.methods.map((method) => new ABIMethod(method));\n  }\n\n  toJSON(): ABIInterfaceParams {\n    return {\n      name: this.name,\n      desc: this.description,\n      methods: this.methods.map((method) => method.toJSON()),\n    };\n  }\n\n  getMethodByName(name: string): ABIMethod {\n    return getMethodByName(this.methods, name);\n  }\n}\n","import * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\nimport Account from './types/account';\n\n/**\n * generateAccount returns a new Algorand address and its corresponding secret key\n */\nexport default function generateAccount(): Account {\n  const keys = nacl.keyPair();\n  const encodedPk = address.encodeAddress(keys.publicKey);\n  return { addr: encodedPk, sk: keys.secretKey };\n}\n","import * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport * as nacl from './nacl/naclWrappers';\nimport * as utils from './utils/utils';\nimport { Address } from './types/address';\n\ninterface BidStorageStructure {\n  bidderKey: Address;\n  bidAmount: number;\n  bidID: number;\n  auctionKey: Address;\n  auctionID: number;\n  maxPrice: number;\n}\n\nexport type BidOptions = Omit<\n  BidStorageStructure,\n  'bidderKey' | 'auctionKey'\n> & {\n  bidderKey: string;\n  auctionKey: string;\n};\n\n/**\n * Bid enables construction of Algorand Auctions Bids\n * */\nexport default class Bid implements BidStorageStructure {\n  name = 'Bid';\n  tag = Buffer.from([97, 66]); // \"aB\"\n\n  bidderKey: Address;\n  bidAmount: number;\n  bidID: number;\n  auctionKey: Address;\n  auctionID: number;\n  maxPrice: number;\n\n  constructor({\n    bidderKey,\n    bidAmount,\n    bidID,\n    auctionKey,\n    auctionID,\n    maxPrice,\n  }: BidOptions) {\n    const decodedBidderKey = address.decodeAddress(bidderKey);\n    const decodedAuctionKey = address.decodeAddress(auctionKey);\n\n    if (!Number.isSafeInteger(bidAmount) || bidAmount < 0)\n      throw Error('Bid amount must be positive and 2^53-1');\n    if (!Number.isSafeInteger(bidID) || bidID < 0)\n      throw Error('BidID must be positive and 2^53-1');\n    if (!Number.isSafeInteger(auctionID) || auctionID < 0)\n      throw Error('auctionID must be positive');\n\n    Object.assign(this, {\n      bidderKey: decodedBidderKey,\n      bidAmount,\n      bidID,\n      auctionKey: decodedAuctionKey,\n      auctionID,\n      maxPrice,\n    });\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    return {\n      bidder: Buffer.from(this.bidderKey.publicKey),\n      cur: this.bidAmount,\n      price: this.maxPrice,\n      id: this.bidID,\n      auc: Buffer.from(this.auctionKey.publicKey),\n      aid: this.auctionID,\n    };\n  }\n\n  signBid(sk: Uint8Array) {\n    const encodedMsg = encoding.encode(this.get_obj_for_encoding());\n    const toBeSigned = Buffer.from(utils.concatArrays(this.tag, encodedMsg));\n    const sig = nacl.sign(toBeSigned, sk);\n\n    // construct signed message\n    const sBid = {\n      sig: Buffer.from(sig),\n      bid: this.get_obj_for_encoding(),\n    };\n\n    const note = {\n      t: 'b',\n      b: sBid,\n    };\n    return new Uint8Array(encoding.encode(note));\n  }\n}\n","const { default: HTTPClient } = require('./client');\nconst { setSendTransactionHeaders } = require('./v2/algod/sendRawTransaction');\n\n/** @deprecated v1 algod APIs are deprecated, please use the v2 client */\nfunction Algod(\n  token = '',\n  baseServer = 'http://r2.algorand.network',\n  port = 4180,\n  headers = {}\n) {\n  // workaround to allow backwards compatibility for multiple headers\n  let tokenHeader = token;\n  if (typeof tokenHeader === 'string') {\n    tokenHeader = { 'X-Algo-API-Token': tokenHeader };\n  }\n\n  // Get client\n  const c = new HTTPClient(tokenHeader, baseServer, port, headers);\n\n  /**\n   * Takes an object and convert its note field to Buffer, if exist.\n   * @param o\n   * @returns {*}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  function noteb64ToNote(o) {\n    if (!(o.noteb64 === undefined || o.noteb64 === null)) {\n      // eslint-disable-next-line no-param-reassign\n      o.note = Buffer.from(o.noteb64, 'base64');\n    }\n    return o;\n  }\n\n  /**\n   * status retrieves the StatusResponse from the running node\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.status = async (headerObj = {}) => {\n    const res = await c.get('/v1/status', {}, headerObj);\n    return res.body;\n  };\n\n  /**\n   * healthCheck returns an empty object iff the node is running\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.healthCheck = async (headerObj = {}) => {\n    const res = await c.get('/health', {}, headerObj);\n    if (!res.ok) {\n      throw new Error(`Health response: ${res.status}`);\n    }\n    return {};\n  };\n\n  /**\n   * statusAfterBlock waits for round roundNumber to occur then returns the StatusResponse for this round.\n   * This call blocks\n   * @param roundNumber\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.statusAfterBlock = async (roundNumber, headerObj = {}) => {\n    if (!Number.isInteger(roundNumber))\n      throw Error('roundNumber should be an integer');\n    const res = await c.get(\n      `/v1/status/wait-for-block-after/${roundNumber}`,\n      {},\n      headerObj\n    );\n    return res.body;\n  };\n\n  /**\n   * pendingTransactions asks algod for a snapshot of current pending txns on the node, bounded by maxTxns.\n   * If maxTxns = 0, fetches as many transactions as possible.\n   * @param maxTxns - number\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.pendingTransactions = async (maxTxns, headerObj = {}) => {\n    if (!Number.isInteger(maxTxns)) throw Error('maxTxns should be an integer');\n    const res = await c.get(\n      '/v1/transactions/pending',\n      { max: maxTxns },\n      headerObj\n    );\n    if (\n      res.statusCode === 200 &&\n      res.body.truncatedTxns.transactions !== undefined\n    ) {\n      for (let i = 0; i < res.body.truncatedTxns.transactions.length; i++) {\n        res.body.truncatedTxns.transactions[i] = noteb64ToNote(\n          res.body.truncatedTxns.transactions[i]\n        );\n      }\n    }\n    return res.body;\n  };\n\n  /**\n   * versions retrieves the VersionResponse from the running node\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.versions = async (headerObj = {}) => {\n    const res = await c.get('/versions', {}, headerObj);\n    return res.body;\n  };\n\n  /**\n   * LedgerSupply gets the supply details for the specified node's Ledger\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.ledgerSupply = async (headerObj = {}) => {\n    const res = await c.get('/v1/ledger/supply', {}, headerObj);\n    return res.body;\n  };\n\n  /**\n   * transactionsByAddress returns all transactions for a PK [addr] in the [first, last] rounds range.\n   * @param addr - string\n   * @param first - number, optional\n   * @param last - number, optional\n   * @param maxTxns - number, optional\n   * @param headers, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.transactionByAddress = async (\n    addr,\n    first = null,\n    last = null,\n    maxTxns = null,\n    headerObj = {}\n  ) => {\n    if (first !== null && !Number.isInteger(first)) {\n      throw Error('first round should be an integer');\n    }\n    if (last !== null && !Number.isInteger(last)) {\n      throw Error('last round should be an integer');\n    }\n    const res = await c.get(\n      `/v1/account/${addr}/transactions`,\n      { firstRound: first, lastRound: last, max: maxTxns },\n      headerObj\n    );\n    if (res.statusCode === 200 && res.body.transactions !== undefined) {\n      for (let i = 0; i < res.body.transactions.length; i++) {\n        res.body.transactions[i] = noteb64ToNote(res.body.transactions[i]);\n      }\n    }\n    return res.body;\n  };\n\n  /**\n   * transactionsByAddressAndDate returns all transactions for a PK [addr] in the [fromDate, toDate] date range.\n   * The date is a string in the YYYY-MM-DD format.\n   * @param addr - string\n   * @param fromDate - string\n   * @param toDate - string\n   * @param maxTxns - number, optional\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.transactionByAddressAndDate = async (\n    addr,\n    fromDate,\n    toDate,\n    maxTxns = null,\n    headerObj = {}\n  ) => {\n    const res = await c.get(\n      `/v1/account/${addr}/transactions`,\n      { fromDate, toDate, max: maxTxns },\n      headerObj\n    );\n    if (res.statusCode === 200 && res.body.transactions !== undefined) {\n      for (let i = 0; i < res.body.transactions.length; i++) {\n        res.body.transactions[i] = noteb64ToNote(res.body.transactions[i]);\n      }\n    }\n    return res.body;\n  };\n\n  /**\n   * transactionById returns the a transaction information of a specific txid [txId]\n   * Note - This method is allowed only when Indexer is enabled.\n   * @param txid\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.transactionById = async (txid, headerObj = {}) => {\n    const res = await c.get(`/v1/transaction/${txid}`, {}, headerObj);\n    if (res.statusCode === 200) {\n      res.body = noteb64ToNote(res.body);\n    }\n    return res.body;\n  };\n\n  /**\n   * transactionInformation returns the transaction information of a specific txid and an address\n   * @param addr\n   * @param txid\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.transactionInformation = async (addr, txid, headerObj = {}) => {\n    const res = await c.get(\n      `/v1/account/${addr}/transaction/${txid}`,\n      {},\n      headerObj\n    );\n    if (res.statusCode === 200) {\n      res.body = noteb64ToNote(res.body);\n    }\n    return res.body;\n  };\n\n  /**\n   * pendingTransactionInformation returns the transaction information for a specific txid of a pending transaction\n   * @param txid\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.pendingTransactionInformation = async (txid, headerObj = {}) => {\n    const res = await c.get(`/v1/transactions/pending/${txid}`, {}, headerObj);\n    if (res.statusCode === 200) {\n      res.body = noteb64ToNote(res.body);\n    }\n    return res.body;\n  };\n\n  /**\n   * accountInformation returns the passed account's information\n   * @param addr - string\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.accountInformation = async (addr, headerObj = {}) => {\n    const res = await c.get(`/v1/account/${addr}`, {}, headerObj);\n    return res.body;\n  };\n\n  /**\n   * assetInformation returns the information for the asset with the passed creator and index\n   * @param index - number\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.assetInformation = async (index, headerObj = {}) => {\n    const res = await c.get(`/v1/asset/${index}`, {}, headerObj);\n    return res.body;\n  };\n\n  /**\n   * suggestedFee gets the recommended transaction fee from the node\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.suggestedFee = async (headerObj = {}) => {\n    const res = await c.get('/v1/transactions/fee', {}, headerObj);\n    return res.body;\n  };\n\n  /**\n   * sendRawTransaction gets an encoded SignedTxn and broadcasts it to the network\n   * @param txn - Uin8Array\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.sendRawTransaction = async (txn, headerObj = {}) => {\n    const txHeaders = setSendTransactionHeaders(headerObj);\n    const res = await c.post('/v1/transactions', Buffer.from(txn), txHeaders);\n    return res.body;\n  };\n\n  /**\n   * sendRawTransactions gets a list of encoded SignedTxns and broadcasts it to the network\n   * @param txn - Array of Uin8Array\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.sendRawTransactions = async (txns, headerObj = {}) => {\n    const txHeaders = setSendTransactionHeaders(headerObj);\n    const merged = Array.prototype.concat(\n      ...txns.map((arr) => Array.from(arr))\n    );\n    const res = await c.post(\n      '/v1/transactions',\n      Buffer.from(merged),\n      txHeaders\n    );\n    return res.body;\n  };\n\n  /**\n   * getTransactionParams returns to common needed parameters for a new transaction\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.getTransactionParams = async (headerObj = {}) => {\n    const res = await c.get('/v1/transactions/params', {}, headerObj);\n    return res.body;\n  };\n\n  /**\n   * suggestParams returns to common needed parameters for a new transaction, in a format the transaction builder expects\n   * @param headerObj, optional\n   * @returns {Object}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.suggestParams = async (headerObj = {}) => {\n    const result = await this.getTransactionParams(headerObj);\n    return {\n      flatFee: false,\n      fee: result.fee,\n      firstRound: result.lastRound,\n      lastRound: result.lastRound + 1000,\n      genesisID: result.genesisID,\n      genesisHash: result.genesishashb64,\n    };\n  };\n\n  /**\n   * block gets the block info for the given round This call blocks\n   * @param roundNumber\n   * @param headerObj, optional\n   * @returns {Promise<*>}\n   * @deprecated v1 algod APIs are deprecated, please use the v2 client\n   */\n  this.block = async (roundNumber, headerObj = {}) => {\n    if (!Number.isInteger(roundNumber))\n      throw Error('roundNumber should be an integer');\n    const res = await c.get(`/v1/block/${roundNumber}`, {}, headerObj);\n    if (res.statusCode === 200 && res.body.txns.transactions !== undefined) {\n      for (let i = 0; i < res.body.txns.transactions.length; i++) {\n        res.body.txns.transactions[i] = noteb64ToNote(\n          res.body.txns.transactions[i]\n        );\n      }\n    }\n    return res.body;\n  };\n}\n\nmodule.exports = { Algod };\n","import { fetch, Response, Headers } from 'cross-fetch';\nimport {\n  BaseHTTPClient,\n  BaseHTTPClientResponse,\n  BaseHTTPClientError,\n  Query,\n} from './baseHTTPClient';\n\nexport interface AlgodTokenHeader {\n  'X-Algo-API-Token': string;\n}\n\nexport interface IndexerTokenHeader {\n  'X-Indexer-API-Token': string;\n}\n\nexport interface KMDTokenHeader {\n  'X-KMD-API-Token': string;\n}\n\nexport interface CustomTokenHeader {\n  [headerName: string]: string;\n}\n\nclass URLTokenBaseHTTPError extends Error implements BaseHTTPClientError {\n  constructor(message: string, public response: BaseHTTPClientResponse) {\n    super(message);\n    this.name = 'URLTokenBaseHTTPError';\n    this.response = response;\n  }\n}\n\nexport type TokenHeader =\n  | AlgodTokenHeader\n  | IndexerTokenHeader\n  | KMDTokenHeader\n  | CustomTokenHeader;\n\n/**\n * Implementation of BaseHTTPClient that uses a URL and a token\n * and make the REST queries using fetch.\n * This is the default implementation of BaseHTTPClient.\n */\nexport class URLTokenBaseHTTPClient implements BaseHTTPClient {\n  private readonly baseURL: URL;\n  private readonly tokenHeader: TokenHeader;\n\n  constructor(\n    tokenHeader: TokenHeader,\n    baseServer: string,\n    port?: string | number,\n    private defaultHeaders: Record<string, any> = {}\n  ) {\n    // Append a trailing slash so we can use relative paths. Without the trailing\n    // slash, the last path segment will be replaced by the relative path. See\n    // usage in `addressWithPath`.\n    const fixedBaseServer = baseServer.endsWith('/')\n      ? baseServer\n      : `${baseServer}/`;\n    const baseServerURL = new URL(fixedBaseServer);\n    if (typeof port !== 'undefined') {\n      baseServerURL.port = port.toString();\n    }\n\n    if (baseServerURL.protocol.length === 0) {\n      throw new Error('Invalid base server URL, protocol must be defined.');\n    }\n\n    this.baseURL = baseServerURL;\n    this.tokenHeader = tokenHeader;\n  }\n\n  /**\n   * Compute the URL for a path relative to the instance's address\n   * @param relativePath - A path string\n   * @param query - An optional key-value object of query parameters to add to the URL. If the\n   *   relativePath already has query parameters on it, the additional parameters defined here will\n   *   be added to the URL without modifying those (unless a key collision occurs).\n   * @returns A URL string\n   */\n  private getURL(relativePath: string, query?: Query<string>): string {\n    let fixedRelativePath: string;\n    if (relativePath.startsWith('./')) {\n      fixedRelativePath = relativePath;\n    } else if (relativePath.startsWith('/')) {\n      fixedRelativePath = `.${relativePath}`;\n    } else {\n      fixedRelativePath = `./${relativePath}`;\n    }\n    const address = new URL(fixedRelativePath, this.baseURL);\n    if (query) {\n      for (const [key, value] of Object.entries(query)) {\n        address.searchParams.set(key, value);\n      }\n    }\n    return address.toString();\n  }\n\n  private static formatFetchResponseHeaders(\n    headers: Headers\n  ): Record<string, string> {\n    const headersObj: Record<string, string> = {};\n    headers.forEach((key, value) => {\n      headersObj[key] = value;\n    });\n    return headersObj;\n  }\n\n  private static async checkHttpError(res: Response) {\n    if (res.ok) {\n      return;\n    }\n\n    let body: Uint8Array | null = null;\n    let bodyErrorMessage: string | null = null;\n\n    try {\n      body = new Uint8Array(await res.arrayBuffer());\n      const decoded: Record<string, any> = JSON.parse(\n        Buffer.from(body).toString()\n      );\n      if (decoded.message) {\n        bodyErrorMessage = decoded.message;\n      }\n    } catch (_) {\n      // ignore any error that happened while we are parsing the error response\n    }\n\n    let message = `Network request error. Received status ${res.status} (${res.statusText})`;\n    if (bodyErrorMessage) {\n      message += `: ${bodyErrorMessage}`;\n    }\n\n    throw new URLTokenBaseHTTPError(message, {\n      body,\n      status: res.status,\n      headers: URLTokenBaseHTTPClient.formatFetchResponseHeaders(res.headers),\n    });\n  }\n\n  private static async formatFetchResponse(\n    res: Response\n  ): Promise<BaseHTTPClientResponse> {\n    await this.checkHttpError(res);\n    return {\n      body: new Uint8Array(await res.arrayBuffer()),\n      status: res.status,\n      headers: URLTokenBaseHTTPClient.formatFetchResponseHeaders(res.headers),\n    };\n  }\n\n  async get(\n    relativePath: string,\n    query?: Query<string>,\n    requestHeaders: Record<string, string> = {}\n  ): Promise<BaseHTTPClientResponse> {\n    // Expand headers for use in fetch\n    const headers = {\n      ...this.tokenHeader,\n      ...this.defaultHeaders,\n      ...requestHeaders,\n    };\n\n    const res = await fetch(this.getURL(relativePath, query), {\n      mode: 'cors',\n      headers,\n    });\n\n    return URLTokenBaseHTTPClient.formatFetchResponse(res);\n  }\n\n  async post(\n    relativePath: string,\n    data: Uint8Array,\n    query?: Query<string>,\n    requestHeaders: Record<string, string> = {}\n  ): Promise<BaseHTTPClientResponse> {\n    // Expand headers for use in fetch\n    const headers = {\n      ...this.tokenHeader,\n      ...this.defaultHeaders,\n      ...requestHeaders,\n    };\n\n    const res = await fetch(this.getURL(relativePath, query), {\n      method: 'POST',\n      mode: 'cors',\n      body: data,\n      headers,\n    });\n\n    return URLTokenBaseHTTPClient.formatFetchResponse(res);\n  }\n\n  async delete(\n    relativePath: string,\n    data: Uint8Array,\n    query?: Query<string>,\n    requestHeaders: Record<string, string> = {}\n  ): Promise<BaseHTTPClientResponse> {\n    // Expand headers for use in fetch\n    const headers = {\n      ...this.tokenHeader,\n      ...this.defaultHeaders,\n      ...requestHeaders,\n    };\n\n    const res = await fetch(this.getURL(relativePath, query), {\n      method: 'DELETE',\n      mode: 'cors',\n      body: data,\n      headers,\n    });\n\n    return URLTokenBaseHTTPClient.formatFetchResponse(res);\n  }\n}\n","import * as utils from '../utils/utils';\nimport {\n  BaseHTTPClient,\n  BaseHTTPClientResponse,\n  Query,\n} from './baseHTTPClient';\nimport { TokenHeader, URLTokenBaseHTTPClient } from './urlTokenBaseHTTPClient';\n\ninterface ErrorWithAdditionalInfo extends Error {\n  rawResponse: string | null;\n  statusCode: number;\n}\n\nexport interface HTTPClientResponse {\n  body: Uint8Array | any; // when content-type=JSON, body is a JSON object, otherwise it's a Uint8Array\n  text?: string;\n  headers: Record<string, string>;\n  status: number;\n  ok: boolean;\n}\n\n/**\n * Remove falsy values or values with a length of 0 from an object.\n */\nfunction removeFalsyOrEmpty(obj: Record<string, any>) {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      // eslint-disable-next-line no-param-reassign\n      if (!obj[key] || obj[key].length === 0) delete obj[key];\n    }\n  }\n  return obj;\n}\n\n/**\n * Create a new object with lower-case keys\n * See https://codereview.stackexchange.com/a/162418\n * Used to ensure all headers are lower-case and to work more easily with them\n */\nfunction tolowerCaseKeys(o: object): object {\n  /* eslint-disable no-param-reassign,no-return-assign,no-sequences */\n  return Object.keys(o).reduce((c, k) => ((c[k.toLowerCase()] = o[k]), c), {});\n  /* eslint-enable no-param-reassign,no-return-assign,no-sequences */\n}\n\n/**\n * getAcceptFormat returns the correct Accept header depending on the\n * requested format.\n */\nfunction getAcceptFormat(\n  query?: Query<'msgpack' | 'json'>\n): 'application/msgpack' | 'application/json' {\n  if (\n    query !== undefined &&\n    Object.prototype.hasOwnProperty.call(query, 'format')\n  ) {\n    switch (query.format) {\n      case 'msgpack':\n        return 'application/msgpack';\n      case 'json':\n      default:\n        return 'application/json';\n    }\n  } else return 'application/json';\n}\n\n/**\n * HTTPClient is a wrapper around a BaseHTTPClient\n * It takes care of setting the proper \"Accept\" header and of\n * decoding the JSON outputs.\n */\nexport default class HTTPClient {\n  private bc: BaseHTTPClient;\n\n  /**\n   * Construct an HTTPClient from a BaseHTTPClient\n   * @param bc - the BaseHTTPClient used\n   */\n  constructor(bc: BaseHTTPClient);\n  /**\n   * Construct an HTTPClient from a URL (baseServer+port) and a token\n   */\n  constructor(\n    tokenHeader: TokenHeader,\n    baseServer: string,\n    port?: string | number,\n    defaultHeaders?: Record<string, string>\n  );\n\n  constructor(\n    bcOrTokenHeader: BaseHTTPClient | TokenHeader,\n    baseServer?: string,\n    port?: string | number,\n    defaultHeaders: Record<string, string> = {}\n  ) {\n    if (baseServer !== undefined) {\n      this.bc = new URLTokenBaseHTTPClient(\n        bcOrTokenHeader as TokenHeader,\n        baseServer,\n        port,\n        defaultHeaders\n      );\n    } else {\n      this.bc = bcOrTokenHeader as BaseHTTPClient;\n    }\n  }\n\n  /**\n   * Parse JSON using either the built-in JSON.parse or utils.parseJSON\n   * depending on whether jsonOptions are provided or not\n   *\n   * @param text - JSON data\n   * @param status - Status of the response (used in case parseJSON fails)\n   * @param jsonOptions - Options object to use to decode JSON responses. See\n   *   utils.parseJSON for the options available.\n   */\n  public static parseJSON(\n    text: string,\n    status: number,\n    jsonOptions: utils.JSONOptions = {}\n  ) {\n    try {\n      if (Object.keys(jsonOptions).length === 0) {\n        return text && JSON.parse(text);\n      }\n      return text && utils.parseJSON(text, jsonOptions);\n    } catch (err_) {\n      const err: ErrorWithAdditionalInfo = err_;\n      // return the raw response if the response parsing fails\n      err.rawResponse = text || null;\n      // return the http status code if the response parsing fails\n      err.statusCode = status;\n      throw err;\n    }\n  }\n\n  /**\n   * Serialize the data according to the requestHeaders\n   * Assumes that requestHeaders contain a key \"content-type\"\n   * If the content-type is \"application/json\", data is JSON serialized\n   * Otherwise, data needs to be either an UTF-8 string that is converted to an Uint8Array\n   * or an Uint8Array\n   * @private\n   */\n  private static serializeData(\n    data: object,\n    requestHeaders: Record<string, string>\n  ): Uint8Array {\n    if (!data) {\n      return new Uint8Array(0); // empty Uint8Array\n    }\n    if (requestHeaders['content-type'] === 'application/json') {\n      return new Uint8Array(Buffer.from(JSON.stringify(data)));\n    }\n    if (typeof data === 'string') {\n      return new Uint8Array(Buffer.from(data));\n    }\n    if (data instanceof Uint8Array) {\n      return data;\n    }\n    throw new Error(\n      'provided data is neither a string nor a Uint8Array and content-type is not application/json'\n    );\n  }\n\n  /**\n   * Convert a BaseHTTPClientResponse into a full HTTPClientResponse\n   * Parse the body in\n   * Modifies in place res and return the result\n   */\n  private static prepareResponse(\n    res: BaseHTTPClientResponse,\n    format: 'application/msgpack' | 'application/json',\n    parseBody: boolean,\n    jsonOptions: utils.JSONOptions = {}\n  ): HTTPClientResponse {\n    let { body } = res;\n    let text;\n\n    if (format !== 'application/msgpack') {\n      text = (body && Buffer.from(body).toString()) || '';\n    }\n\n    if (parseBody && format === 'application/json') {\n      body = HTTPClient.parseJSON(text, res.status, jsonOptions);\n    }\n\n    return {\n      ...res,\n      body,\n      text,\n      ok: Math.trunc(res.status / 100) === 2,\n    };\n  }\n\n  /**\n   * Prepare an error with a response\n   * (the type of errors BaseHTTPClient are supposed to throw)\n   * by adding the status and preparing the internal response\n   * @private\n   */\n  private static prepareResponseError(err) {\n    if (err.response) {\n      // eslint-disable-next-line no-param-reassign\n      err.response = HTTPClient.prepareResponse(\n        err.response,\n        'application/json',\n        true\n      );\n      // eslint-disable-next-line no-param-reassign\n      err.status = err.response.status;\n    }\n    return err;\n  }\n\n  /**\n   * Send a GET request.\n   * @param relativePath - The path of the request.\n   * @param query - An object containing the query parameters of the request.\n   * @param requestHeaders - An object containing additional request headers to use.\n   * @param jsonOptions - Options object to use to decode JSON responses. See\n   *   utils.parseJSON for the options available.\n   * @param parseBody - An optional boolean indicating whether the response body should be parsed\n   *   or not.\n   * @returns Response object.\n   */\n  async get(\n    relativePath: string,\n    query?: Query<any>,\n    requestHeaders: Record<string, string> = {},\n    jsonOptions: utils.JSONOptions = {},\n    parseBody: boolean = true\n  ): Promise<HTTPClientResponse> {\n    const format = getAcceptFormat(query);\n    const fullHeaders = { ...requestHeaders, accept: format };\n\n    try {\n      const res = await this.bc.get(\n        relativePath,\n        removeFalsyOrEmpty(query),\n        fullHeaders\n      );\n\n      return HTTPClient.prepareResponse(res, format, parseBody, jsonOptions);\n    } catch (err) {\n      throw HTTPClient.prepareResponseError(err);\n    }\n  }\n\n  /**\n   * Send a POST request.\n   * If no content-type present, adds the header \"content-type: application/json\"\n   * and data is serialized in JSON (if not empty)\n   */\n  async post(\n    relativePath: string,\n    data: any,\n    requestHeaders: Record<string, string> = {},\n    query?: Query<any>,\n    parseBody: boolean = true\n  ): Promise<HTTPClientResponse> {\n    const fullHeaders = {\n      'content-type': 'application/json',\n      ...tolowerCaseKeys(requestHeaders),\n    };\n\n    try {\n      const res = await this.bc.post(\n        relativePath,\n        HTTPClient.serializeData(data, fullHeaders),\n        query,\n        fullHeaders\n      );\n\n      return HTTPClient.prepareResponse(res, 'application/json', parseBody);\n    } catch (err) {\n      throw HTTPClient.prepareResponseError(err);\n    }\n  }\n\n  /**\n   * Send a DELETE request.\n   * If no content-type present, adds the header \"content-type: application/json\"\n   * and data is serialized in JSON (if not empty)\n   */\n  async delete(\n    relativePath: string,\n    data: any,\n    requestHeaders: Record<string, string> = {},\n    parseBody: boolean = true\n  ) {\n    const fullHeaders = {\n      'content-type': 'application/json',\n      ...tolowerCaseKeys(requestHeaders),\n    };\n\n    const res = await this.bc.delete(\n      relativePath,\n      HTTPClient.serializeData(data, fullHeaders),\n      undefined,\n      fullHeaders\n    );\n\n    return HTTPClient.prepareResponse(res, 'application/json', parseBody);\n  }\n}\n","import ServiceClient from './v2/serviceClient';\nimport * as txn from '../transaction';\nimport { CustomTokenHeader, KMDTokenHeader } from './urlTokenBaseHTTPClient';\n\nexport default class Kmd extends ServiceClient {\n  constructor(\n    token: string | KMDTokenHeader | CustomTokenHeader,\n    baseServer = 'http://127.0.0.1',\n    port: string | number = 7833,\n    headers = {}\n  ) {\n    super('X-KMD-API-Token', token, baseServer, port, headers);\n  }\n\n  /**\n   * version returns a VersionResponse containing a list of kmd API versions supported by this running kmd instance.\n   */\n  async versions() {\n    const res = await this.c.get('/versions');\n    return res.body;\n  }\n\n  /**\n   * listWallets returns a ListWalletsResponse containing the list of wallets known to kmd. Using a wallet ID\n   * returned from this endpoint, you can initialize a wallet handle with client.InitWalletHandle\n   */\n  async listWallets() {\n    const res = await this.c.get('/v1/wallets');\n    return res.body;\n  }\n\n  /**\n   * createWallet creates a wallet with the specified name, password, driver,\n   * and master derivation key. If the master derivation key is blank, one is\n   * generated internally to kmd. CreateWallet returns a CreateWalletResponse\n   * containing information about the new wallet.\n   * @param walletName\n   * @param walletPassword\n   * @param walletDriverName\n   * @param walletMDK\n   */\n  async createWallet(\n    walletName: string,\n    walletPassword: string,\n    walletMDK: Uint8Array = new Uint8Array(),\n    walletDriverName = 'sqlite'\n  ) {\n    const req = {\n      wallet_name: walletName,\n      wallet_driver_name: walletDriverName,\n      wallet_password: walletPassword,\n      master_derivation_key: Buffer.from(walletMDK).toString('base64'),\n    };\n    const res = await this.c.post('/v1/wallet', req);\n    return res.body;\n  }\n\n  /**\n   * initWalletHandle accepts a wallet ID and a wallet password, and returns an\n   * initWalletHandleResponse containing a wallet handle token. This wallet\n   * handle token can be used for subsequent operations on this wallet, like key\n   * generation, transaction signing, etc.. WalletHandleTokens expire after a\n   * configurable number of seconds, and must be renewed periodically with\n   * RenewWalletHandle. It is good practice to call ReleaseWalletHandle when\n   * you're done interacting with this wallet.\n   * @param walletID\n   * @param walletPassword\n   */\n  async initWalletHandle(walletID: string, walletPassword: string) {\n    const req = {\n      wallet_id: walletID,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.post('/v1/wallet/init', req);\n    return res.body;\n  }\n\n  /**\n   * releaseWalletHandle invalidates the passed wallet handle token, making\n   * it unusuable for subsequent wallet operations.\n   * @param walletHandle\n   */\n  async releaseWalletHandle(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/wallet/release', req);\n    return res.body;\n  }\n\n  /**\n   * renewWalletHandle accepts a wallet handle and attempts to renew it, moving\n   * the expiration time to some number of seconds in the future. It returns a\n   * RenewWalletHandleResponse containing the walletHandle and the number of\n   * seconds until expiration\n   * @param walletHandle\n   */\n  async renewWalletHandle(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/wallet/renew', req);\n    return res.body;\n  }\n\n  /**\n   * renameWallet accepts a wallet ID, wallet password, and a new wallet name,\n   * and renames the underlying wallet.\n   * @param walletID\n   * @param walletPassword\n   * @param newWalletName\n   */\n  async renameWallet(\n    walletID: string,\n    walletPassword: string,\n    newWalletName: string\n  ) {\n    const req = {\n      wallet_id: walletID,\n      wallet_password: walletPassword,\n      wallet_name: newWalletName,\n    };\n    const res = await this.c.post('/v1/wallet/rename', req);\n    return res.body;\n  }\n\n  /**\n   * getWallet accepts a wallet handle and returns high level information about\n   * this wallet in a GetWalletResponse.\n   * @param walletHandle\n   */\n  async getWallet(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/wallet/info', req);\n    return res.body;\n  }\n\n  /**\n   * exportMasterDerivationKey accepts a wallet handle and a wallet password, and\n   * returns an ExportMasterDerivationKeyResponse containing the master\n   * derivation key. This key can be used as an argument to CreateWallet in\n   * order to recover the keys generated by this wallet. The master derivation\n   * key can be encoded as a sequence of words using the mnemonic library, and\n   * @param walletHandle\n   * @param walletPassword\n   */\n  async exportMasterDerivationKey(\n    walletHandle: string,\n    walletPassword: string\n  ) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.post('/v1/master-key/export', req);\n    return {\n      master_derivation_key: Buffer.from(\n        res.body.master_derivation_key,\n        'base64'\n      ),\n    };\n  }\n\n  /**\n   * importKey accepts a wallet handle and an ed25519 private key, and imports\n   * the key into the wallet. It returns an ImportKeyResponse containing the\n   * address corresponding to this private key.\n   * @param walletHandle\n   * @param secretKey\n   */\n  async importKey(walletHandle: string, secretKey: Uint8Array) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      private_key: Buffer.from(secretKey).toString('base64'),\n    };\n    const res = await this.c.post('/v1/key/import', req);\n    return res.body;\n  }\n\n  /**\n   * exportKey accepts a wallet handle, wallet password, and address, and returns\n   * an ExportKeyResponse containing the ed25519 private key corresponding to the\n   * address stored in the wallet.\n   * @param walletHandle\n   * @param walletPassword\n   * @param addr\n   */\n  async exportKey(walletHandle: string, walletPassword: string, addr: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      address: addr,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.post('/v1/key/export', req);\n    return { private_key: Buffer.from(res.body.private_key, 'base64') };\n  }\n\n  /**\n   * generateKey accepts a wallet handle, and then generates the next key in the\n   * wallet using its internal master derivation key. Two wallets with the same\n   * master derivation key will generate the same sequence of keys.\n   * @param walletHandle\n   */\n  async generateKey(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      display_mnemonic: false,\n    };\n    const res = await this.c.post('/v1/key', req);\n    return res.body;\n  }\n\n  /**\n   * deleteKey accepts a wallet handle, wallet password, and address, and deletes\n   * the information about this address from the wallet (including address and\n   * secret key). If DeleteKey is called on a key generated using GenerateKey,\n   * the same key will not be generated again. However, if a wallet is recovered\n   * using the master derivation key, a key generated in this way can be\n   * recovered.\n   * @param walletHandle\n   * @param walletPassword\n   * @param addr\n   */\n  async deleteKey(walletHandle: string, walletPassword: string, addr: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      address: addr,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.delete('/v1/key', req);\n    return res.body;\n  }\n\n  /**\n   * ListKeys accepts a wallet handle and returns a ListKeysResponse containing\n   * all of the addresses for which this wallet contains secret keys.\n   * @param walletHandle\n   */\n  async listKeys(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/key/list', req);\n    return res.body;\n  }\n\n  /**\n   * signTransaction accepts a wallet handle, wallet password, and a transaction,\n   * and returns and SignTransactionResponse containing an encoded, signed\n   * transaction. The transaction is signed using the key corresponding to the\n   * Sender field.\n   * @param walletHandle\n   * @param walletPassword\n   * @param transaction\n   */\n  async signTransaction(\n    walletHandle: string,\n    walletPassword: string,\n    transaction: txn.TransactionLike\n  ) {\n    const tx = txn.instantiateTxnIfNeeded(transaction);\n\n    const req = {\n      wallet_handle_token: walletHandle,\n      wallet_password: walletPassword,\n      transaction: Buffer.from(tx.toByte()).toString('base64'),\n    };\n    const res = await this.c.post('/v1/transaction/sign', req);\n\n    if (res.status === 200) {\n      return Buffer.from(res.body.signed_transaction, 'base64');\n    }\n    return res.body;\n  }\n\n  /**\n   * signTransactionWithSpecificPublicKey accepts a wallet handle, wallet password, a transaction, and a public key,\n   * and returns and SignTransactionResponse containing an encoded, signed\n   * transaction. The transaction is signed using the key corresponding to the\n   * publicKey arg.\n   * @param walletHandle\n   * @param walletPassword\n   * @param transaction\n   * @param publicKey - sign the txn with the key corresponding to publicKey (used for working with a rekeyed addr)\n   */\n  async signTransactionWithSpecificPublicKey(\n    walletHandle: string,\n    walletPassword: string,\n    transaction: txn.TransactionLike,\n    publicKey: Uint8Array | string\n  ) {\n    const tx = txn.instantiateTxnIfNeeded(transaction);\n\n    const req = {\n      wallet_handle_token: walletHandle,\n      wallet_password: walletPassword,\n      transaction: Buffer.from(tx.toByte()).toString('base64'),\n      public_key: Buffer.from(publicKey).toString('base64'),\n    };\n    const res = await this.c.post('/v1/transaction/sign', req);\n\n    if (res.status === 200) {\n      return Buffer.from(res.body.signed_transaction, 'base64');\n    }\n    return res.body;\n  }\n\n  /**\n   * listMultisig accepts a wallet handle and returns a ListMultisigResponse\n   * containing the multisig addresses whose preimages are stored in this wallet.\n   * A preimage is the information needed to reconstruct this multisig address,\n   * including multisig version information, threshold information, and a list\n   * of public keys.\n   * @param walletHandle\n   */\n  async listMultisig(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/multisig/list', req);\n    return res.body;\n  }\n\n  /**\n   * importMultisig accepts a wallet handle and the information required to\n   * generate a multisig address. It derives this address, and stores all of the\n   * information within the wallet. It returns a ImportMultisigResponse with the\n   * derived address.\n   * @param walletHandle\n   * @param version\n   * @param threshold\n   * @param pks\n   */\n  async importMultisig(\n    walletHandle: string,\n    version: number,\n    threshold: number,\n    pks: string[]\n  ) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      multisig_version: version,\n      threshold,\n      pks,\n    };\n    const res = await this.c.post('/v1/multisig/import', req);\n    return res.body;\n  }\n\n  /**\n   * exportMultisig accepts a wallet handle, wallet password, and multisig\n   * address, and returns an ExportMultisigResponse containing the stored\n   * multisig preimage. The preimage contains all of the information necessary\n   * to derive the multisig address, including version, threshold, and a list of\n   * public keys.\n   * @param walletHandle\n   * @param walletPassword\n   * @param addr\n   */\n  async exportMultisig(walletHandle: string, addr: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      address: addr,\n    };\n    const res = await this.c.post('/v1/multisig/export', req);\n    return res.body;\n  }\n\n  /**\n   * signMultisigTransaction accepts a wallet handle, wallet password,\n   * transaction, public key (*not* an address), and an optional partial\n   * MultisigSig. It looks up the secret key corresponding to the public key, and\n   * returns a SignMultisigTransactionResponse containing a MultisigSig with a\n   * signature by the secret key included.\n   * @param walletHandle\n   * @param pw\n   * @param tx\n   * @param pk\n   * @param partial\n   */\n  async signMultisigTransaction(\n    walletHandle: string,\n    pw: string,\n    transaction: txn.TransactionLike,\n    pk: Uint8Array | string,\n    partial: string\n  ) {\n    const tx = txn.instantiateTxnIfNeeded(transaction);\n    const req = {\n      wallet_handle_token: walletHandle,\n      transaction: Buffer.from(tx.toByte()).toString('base64'),\n      public_key: Buffer.from(pk).toString('base64'),\n      partial_multisig: partial,\n      wallet_password: pw,\n    };\n    const res = await this.c.post('/v1/multisig/sign', req);\n    return res.body;\n  }\n\n  /**\n   * deleteMultisig accepts a wallet handle, wallet password, and multisig\n   * address, and deletes the information about this multisig address from the\n   * wallet (including address and secret key).\n   * @param walletHandle\n   * @param walletPassword\n   * @param addr\n   */\n  async deleteMultisig(\n    walletHandle: string,\n    walletPassword: string,\n    addr: string\n  ) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      address: addr,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.delete('/v1/multisig', req);\n    return res.body;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class AccountInformation extends JSONRequest {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  path() {\n    return `/v2/accounts/${this.account}`;\n  }\n\n  /**\n   * Exclude assets and application data from results\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await algodClient.accountInformation(address)\n   *        .exclude('all')\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  exclude(exclude: string) {\n    this.query.exclude = exclude;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class AccountAssetInformation extends JSONRequest {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string,\n    private assetID: number\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n    this.assetID = assetID;\n  }\n\n  path() {\n    return `/v2/accounts/${this.account}/assets/${this.assetID}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class AccountApplicationInformation extends JSONRequest {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string,\n    private applicationID: number\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n    this.applicationID = applicationID;\n  }\n\n  path() {\n    return `/v2/accounts/${this.account}/applications/${this.applicationID}`;\n  }\n}\n","import * as encoding from '../../../encoding/encoding';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\n\n/**\n * block gets the block info for the given round. this call may block\n */\nexport default class Block extends JSONRequest {\n  private round: number;\n\n  constructor(c: HTTPClient, roundNumber: number) {\n    super(c);\n    if (!Number.isInteger(roundNumber))\n      throw Error('roundNumber should be an integer');\n    this.round = roundNumber;\n    this.query = { format: 'msgpack' };\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Uint8Array) {\n    if (body && body.byteLength > 0) {\n      return encoding.decode(body) as Record<string, any>;\n    }\n    return undefined;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\n\n/**\n * Sets the default header (if not previously set)\n * @param headers - A headers object\n */\nexport function setHeaders(headers = {}) {\n  let hdrs = headers;\n  if (Object.keys(hdrs).every((key) => key.toLowerCase() !== 'content-type')) {\n    hdrs = { ...headers };\n    hdrs['Content-Type'] = 'text/plain';\n  }\n  return hdrs;\n}\n\n/**\n * Executes compile\n */\nexport default class Compile extends JSONRequest {\n  constructor(c: HTTPClient, private source: string | Uint8Array) {\n    super(c);\n    this.source = source;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return `/v2/teal/compile`;\n  }\n\n  sourcemap(map: boolean = true) {\n    this.query.sourcemap = map;\n    return this;\n  }\n\n  /**\n   * Executes compile\n   * @param headers - A headers object\n   */\n  async do(headers = {}) {\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.source),\n      txHeaders,\n      this.query\n    );\n    return res.body;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as modelsv2 from './models/types';\nimport * as encoding from '../../../encoding/encoding';\nimport { setHeaders } from './compile';\n\nexport default class Dryrun extends JSONRequest {\n  private blob: Uint8Array;\n\n  constructor(c: HTTPClient, dr: modelsv2.DryrunRequest) {\n    super(c);\n    this.blob = encoding.encode(dr.get_obj_for_encoding(true));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/teal/dryrun';\n  }\n\n  /**\n   * Executes dryrun\n   * @param headers - A headers object\n   */\n  async do(headers = {}) {\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.blob),\n      txHeaders\n    );\n    return res.body;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\nexport default class Genesis extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/genesis';\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetAssetByID extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  path() {\n    return `/v2/assets/${this.index}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetApplicationByID extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  path() {\n    return `/v2/applications/${this.index}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetBlockHash extends JSONRequest {\n  round: number;\n\n  constructor(c: HTTPClient, intDecoding: IntDecoding, roundNumber: number) {\n    super(c, intDecoding);\n    if (!Number.isInteger(roundNumber))\n      throw Error('roundNumber should be an integer');\n    this.round = roundNumber;\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}/hash`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { Box } from './models/types';\n\n/**\n * Given an application ID and the box name (key), return the value stored in the box.\n *\n * #### Example\n * ```typescript\n * const index = 60553466;\n * const boxName = Buffer.from(\"foo\");\n * const boxResponse = await algodClient.getApplicationBoxByName(index, boxName).do();\n * const boxValue = boxResponse.value;\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2applicationsapplication-idbox)\n * @param index - The application ID to look up.\n * @category GET\n */\nexport default class GetApplicationBoxByName extends JSONRequest<\n  Box,\n  Record<string, any>\n> {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private index: number,\n    name: Uint8Array\n  ) {\n    super(c, intDecoding);\n    this.index = index;\n    // Encode name in base64 format and append the encoding prefix.\n    const encodedName = Buffer.from(name).toString('base64');\n    this.query.name = encodeURI(`b64:${encodedName}`);\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/box`\n   */\n  path() {\n    return `/v2/applications/${this.index}/box`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): Box {\n    return Box.from_obj_for_encoding(body);\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { BoxesResponse } from './models/types';\n\n/**\n * Given an application ID, return all the box names associated with the app.\n *\n * #### Example\n * ```typescript\n * const index = 60553466;\n * const boxesResponse = await algodClient.getApplicationBoxes(index).max(3).do();\n * const boxNames = boxesResponse.boxes.map(box => box.name);\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2applicationsapplication-idboxes)\n * @param index - The application ID to look up.\n * @category GET\n */\nexport default class GetApplicationBoxes extends JSONRequest<\n  BoxesResponse,\n  Record<string, any>\n> {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n    this.query.max = 0;\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/boxes`\n   */\n  path() {\n    return `/v2/applications/${this.index}/boxes`;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const boxesResult = await algodClient\n   *        .GetApplicationBoxes(1234)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): BoxesResponse {\n    return BoxesResponse.from_obj_for_encoding(body);\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * healthCheck returns an empty object iff the node is running\n */\nexport default class HealthCheck extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/health';\n  }\n\n  async do(headers = {}) {\n    const res = await this.c.get(this.path(), {}, headers);\n    if (!res.ok) {\n      throw new Error(`Health response: ${res.status}`);\n    }\n    return {};\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as encoding from '../../../encoding/encoding';\n\n/**\n * returns the transaction information for a specific txid of a pending transaction\n */\nexport default class PendingTransactionInformation extends JSONRequest {\n  constructor(c: HTTPClient, private txid: string) {\n    super(c);\n    this.txid = txid;\n    this.query.format = 'msgpack';\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Uint8Array) {\n    if (body && body.byteLength > 0) {\n      return encoding.decode(body) as Record<string, any>;\n    }\n    return undefined;\n  }\n\n  path() {\n    return `/v2/transactions/pending/${this.txid}`;\n  }\n\n  // max sets the maximum number of txs to return\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as encoding from '../../../encoding/encoding';\n\n/**\n * pendingTransactionsInformation returns transactions that are pending in the pool\n */\nexport default class PendingTransactions extends JSONRequest {\n  constructor(c: HTTPClient) {\n    super(c);\n    this.query.format = 'msgpack';\n  }\n\n  /* eslint-disable class-methods-use-this */\n  path() {\n    return '/v2/transactions/pending';\n  }\n\n  prepare(body: Uint8Array) {\n    if (body && body.byteLength > 0) {\n      return encoding.decode(body) as Record<string, any>;\n    }\n    return undefined;\n  }\n  /* eslint-enable class-methods-use-this */\n\n  // max sets the maximum number of txs to return\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as encoding from '../../../encoding/encoding';\n\n/**\n * returns all transactions for a PK [addr] in the [first, last] rounds range.\n */\nexport default class PendingTransactionsByAddress extends JSONRequest {\n  constructor(c: HTTPClient, private address: string) {\n    super(c);\n    this.address = address;\n    this.query.format = 'msgpack';\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Uint8Array): Record<string, any> {\n    if (body && body.byteLength > 0) {\n      return encoding.decode(body) as Record<string, any>;\n    }\n    return undefined;\n  }\n\n  path() {\n    return `/v2/accounts/${this.address}/transactions/pending`;\n  }\n\n  // max sets the maximum number of txs to return\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetTransactionProof extends JSONRequest {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private round: number,\n    private txID: string\n  ) {\n    super(c, intDecoding);\n\n    this.round = round;\n    this.txID = txID;\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}/transactions/${this.txID}/proof`;\n  }\n\n  /**\n   * Exclude assets and application data from results\n   * The type of hash function used to create the proof, must be one of: \"sha512_256\", \"sha256\"\n   *\n   * #### Example\n   * ```typescript\n   * const hashType = \"sha256\";\n   * const round = 123456;\n   * const txId = \"abc123;\n   * const txProof = await algodClient.getTransactionProof(round, txId)\n   *        .hashType(hashType)\n   *        .do();\n   * ```\n   *\n   * @param hashType\n   * @category query\n   */\n  hashType(hashType: string) {\n    this.query.hashtype = hashType;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\nexport default class Status extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/status';\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class StatusAfterBlock extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n    if (!Number.isInteger(round)) throw Error('round should be an integer');\n    this.round = round;\n  }\n\n  path() {\n    return `/v2/status/wait-for-block-after/${this.round}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport { SuggestedParams } from '../../../types/transactions/base';\n\n/**\n * Returns the common needed parameters for a new transaction, in a format the transaction builder expects\n */\nexport default class SuggestedParamsRequest extends JSONRequest<SuggestedParams> {\n  /* eslint-disable class-methods-use-this */\n  path() {\n    return '/v2/transactions/params';\n  }\n\n  prepare(body: Record<string, any>): SuggestedParams {\n    return {\n      flatFee: false,\n      fee: body.fee,\n      firstRound: body['last-round'],\n      lastRound: body['last-round'] + 1000,\n      genesisID: body['genesis-id'],\n      genesisHash: body['genesis-hash'],\n    };\n  }\n  /* eslint-enable class-methods-use-this */\n}\n","import JSONRequest from '../jsonrequest';\n\nexport default class Supply extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/ledger/supply';\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * retrieves the VersionResponse from the running node\n */\nexport default class Versions extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/versions';\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LightBlockHeaderProof extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n\n    this.round = round;\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}/lightheader/proof`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class StateProof extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n\n    this.round = round;\n  }\n\n  path() {\n    return `/v2/stateproofs/${this.round}`;\n  }\n}\n","import ServiceClient from '../serviceClient';\nimport * as modelsv2 from './models/types';\nimport AccountInformation from './accountInformation';\nimport AccountAssetInformation from './accountAssetInformation';\nimport AccountApplicationInformation from './accountApplicationInformation';\nimport Block from './block';\nimport Compile from './compile';\nimport Dryrun from './dryrun';\nimport Genesis from './genesis';\nimport GetAssetByID from './getAssetByID';\nimport GetApplicationByID from './getApplicationByID';\nimport GetBlockHash from './getBlockHash';\nimport GetApplicationBoxByName from './getApplicationBoxByName';\nimport GetApplicationBoxes from './getApplicationBoxes';\nimport HealthCheck from './healthCheck';\nimport PendingTransactionInformation from './pendingTransactionInformation';\nimport PendingTransactions from './pendingTransactions';\nimport PendingTransactionsByAddress from './pendingTransactionsByAddress';\nimport GetTransactionProof from './getTransactionProof';\nimport SendRawTransaction from './sendRawTransaction';\nimport Status from './status';\nimport StatusAfterBlock from './statusAfterBlock';\nimport SuggestedParams from './suggestedParams';\nimport Supply from './supply';\nimport Versions from './versions';\nimport { BaseHTTPClient } from '../../baseHTTPClient';\nimport {\n  AlgodTokenHeader,\n  CustomTokenHeader,\n} from '../../urlTokenBaseHTTPClient';\nimport LightBlockHeaderProof from './lightBlockHeaderProof';\nimport StateProof from './stateproof';\n\n/**\n * Algod client connects an application to the Algorand blockchain. The algod client requires a valid algod REST endpoint IP address and algod token from an Algorand node that is connected to the network you plan to interact with.\n *\n * Algod is the main Algorand process for handling the blockchain. Messages between nodes are processed, the protocol steps are executed, and the blocks are written to disk. The algod process also exposes a REST API server that developers can use to communicate with the node and the network. Algod uses the data directory for storage and configuration information.\n *\n * #### Relevant Information\n * [How do I obtain an algod address and token?](https://developer.algorand.org/docs/archive/build-apps/setup/?from_query=algod#how-do-i-obtain-an-algod-address-and-token)\n *\n * [Run Algod in Postman OAS3](https://developer.algorand.org/docs/rest-apis/restendpoints/?from_query=algod#algod-indexer-and-kmd-rest-endpoints)\n */\nexport default class AlgodClient extends ServiceClient {\n  /**\n   * Create an AlgodClient from\n   * * either a token, baseServer, port, and optional headers\n   * * or a base client server for interoperability with external dApp wallets\n   *\n   * #### Example\n   * ```typescript\n   * const token  = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n   * const server = \"http://localhost\";\n   * const port   = 4001;\n   * const algodClient = new algosdk.Algodv2(token, server, port);\n   * ```\n   * @remarks\n   * The above configuration is for a sandbox private network.\n   * For applications on production, you are encouraged to run your own node, or use an Algorand REST API provider with a dedicated API key.\n   *\n   * @param tokenOrBaseClient - The algod token from the Algorand node you are interacting with\n   * @param baseServer - REST endpoint\n   * @param port - Port number if specifically configured by the server\n   * @param headers - Optional headers\n   */\n  constructor(\n    tokenOrBaseClient:\n      | string\n      | AlgodTokenHeader\n      | CustomTokenHeader\n      | BaseHTTPClient,\n    baseServer = 'http://r2.algorand.network',\n    port: string | number = 4180,\n    headers: Record<string, string> = {}\n  ) {\n    super('X-Algo-API-Token', tokenOrBaseClient, baseServer, port, headers);\n  }\n\n  /**\n   * Returns OK if healthy.\n   *\n   * #### Example\n   * ```typescript\n   * const health = await algodClient.healthCheck().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-health)\n   * @category GET\n   */\n  healthCheck() {\n    return new HealthCheck(this.c);\n  }\n\n  /**\n   * Retrieves the supported API versions, binary build versions, and genesis information.\n   *\n   * #### Example\n   * ```typescript\n   * const versionsDetails = await algodClient.versionsCheck().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-versions)\n   * @category GET\n   */\n  versionsCheck() {\n    return new Versions(this.c);\n  }\n\n  /**\n   * Broadcasts a raw transaction to the network.\n   *\n   * #### Example\n   * ```typescript\n   * const { txId } = await algodClient.sendRawTransaction(signedTxns).do();\n   * const result = await waitForConfirmation(algodClient, txid, 3);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#post-v2transactions)\n   *\n   * @remarks\n   * Often used with {@linkcode waitForConfirmation}\n   * @param stxOrStxs - Signed transactions\n   * @category POST\n   */\n  sendRawTransaction(stxOrStxs: Uint8Array | Uint8Array[]) {\n    return new SendRawTransaction(this.c, stxOrStxs);\n  }\n\n  /**\n   * Returns the given account's status, balance and spendable amounts.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await algodClient.accountInformation(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2accountsaddress)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  accountInformation(account: string) {\n    return new AccountInformation(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns the given account's asset information for a specific asset.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const index = 60553466;\n   * const accountAssetInfo = await algodClient.accountAssetInformation(address, index).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2accountsaddress)\n   * @param account - The address of the account to look up.\n   * @param index - The asset ID to look up.\n   * @category GET\n   */\n  accountAssetInformation(account: string, index: number) {\n    return new AccountAssetInformation(\n      this.c,\n      this.intDecoding,\n      account,\n      index\n    );\n  }\n\n  /**\n   * Returns the given account's application information for a specific application.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const index = 60553466;\n   * const accountInfo = await algodClient.accountApplicationInformation(address, index).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2accountsaddress)\n   * @param account - The address of the account to look up.\n   * @param index - The application ID to look up.\n   * @category GET\n   */\n  accountApplicationInformation(account: string, index: number) {\n    return new AccountApplicationInformation(\n      this.c,\n      this.intDecoding,\n      account,\n      index\n    );\n  }\n\n  /**\n   * Gets the block info for the given round.\n   *\n   * #### Example\n   * ```typescript\n   * const roundNumber = 18038133;\n   * const block = await algodClient.block(roundNumber).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2blocksround)\n   * @param roundNumber - The round number of the block to get.\n   * @category GET\n   */\n  block(roundNumber: number) {\n    return new Block(this.c, roundNumber);\n  }\n\n  /**\n   * Get the block hash for the block on the given round.\n   *\n   * #### Example\n   * ```typescript\n   * const roundNumber = 18038133;\n   * const block = await algodClient.getBlockHash(roundNumber).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2blocksroundhash)\n   * @param roundNumber - The round number of the block to get.\n   * @category GET\n   */\n  getBlockHash(roundNumber: number) {\n    return new GetBlockHash(this.c, this.intDecoding, roundNumber);\n  }\n\n  /**\n   * Returns the transaction information for a specific pending transaction.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"DRJS6R745A7GFVMXEXWP4TGVDGKW7VILFTA7HC2BR2GRLHNY5CTA\";\n   * const pending = await algodClient.pendingTransactionInformation(txId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2transactionspendingtxid)\n   *\n   * @remarks\n   * <br><br>\n   * There are several cases when this might succeed:\n   * - transaction committed (committed round > 0)\n   * - transaction still in the pool (committed round = 0, pool error = \"\")\n   * - transaction removed from pool due to error (committed round = 0, pool error != \"\")\n   *\n   * Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error.\n   *\n   * @param txid - The TxID string of the pending transaction to look up.\n   * @category GET\n   */\n  pendingTransactionInformation(txid: string) {\n    return new PendingTransactionInformation(this.c, txid);\n  }\n\n  /**\n   * Returns the list of pending transactions in the pool, sorted by priority, in decreasing order, truncated at the end at MAX.\n   * If MAX = 0, returns all pending transactions.\n   *\n   * #### Example 1\n   * ```typescript\n   * const pendingTxns = await algodClient.pendingTransactionsInformation().do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const maxTxns = 5;\n   * const pendingTxns = await algodClient\n   *     .pendingTransactionsInformation()\n   *     .max(maxTxns)\n   *     .do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2transactionspending)\n   * @category GET\n   */\n  pendingTransactionsInformation() {\n    return new PendingTransactions(this.c);\n  }\n\n  /**\n   * Returns the list of pending transactions sent by the address, sorted by priority, in decreasing order, truncated at the end at MAX.\n   * If MAX = 0, returns all pending transactions.\n   *\n   * #### Example 1\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const pendingTxnsByAddr = await algodClient.pendingTransactionByAddress(address).do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const maxTxns = 5;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const pendingTxns = await algodClient\n   *     .pendingTransactionByAddress(address)\n   *     .max(maxTxns)\n   *     .do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2accountsaddresstransactionspending)\n   * @param address - The address of the sender.\n   * @category GET\n   */\n  pendingTransactionByAddress(address: string) {\n    return new PendingTransactionsByAddress(this.c, address);\n  }\n\n  /**\n   * Retrieves the StatusResponse from the running node.\n   *\n   * #### Example\n   * ```typescript\n   * const status = await algodClient.status().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2status)\n   * @category GET\n   */\n  status() {\n    return new Status(this.c, this.intDecoding);\n  }\n\n  /**\n   * Waits for a specific round to occur then returns the `StatusResponse` for that round.\n   *\n   * #### Example\n   * ```typescript\n   * const round = 18038133;\n   * const statusAfterBlock = await algodClient.statusAfterBlock(round).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2statuswait-for-block-afterround)\n   * @param round - The number of the round to wait for.\n   * @category GET\n   */\n  statusAfterBlock(round: number) {\n    return new StatusAfterBlock(this.c, this.intDecoding, round);\n  }\n\n  /**\n   * Returns the common needed parameters for a new transaction.\n   *\n   * #### Example\n   * ```typescript\n   * const suggestedParams = await algodClient.getTransactionParams().do();\n   * const amountInMicroAlgos = algosdk.algosToMicroalgos(2); // 2 Algos\n   * const unsignedTxn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n   *   from: senderAddress,\n   *   to: receiverAddress,\n   *   amount: amountInMicroAlgos,\n   *   suggestedParams: suggestedParams,\n   * });\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2transactionsparams)\n   *\n   * @remarks\n   * Often used with\n   * {@linkcode makePaymentTxnWithSuggestedParamsFromObject}, {@linkcode algosToMicroalgos}\n   * @category GET\n   */\n  getTransactionParams() {\n    return new SuggestedParams(this.c);\n  }\n\n  /**\n   * Returns the supply details for the specified node's ledger.\n   *\n   * #### Example\n   * ```typescript\n   * const supplyDetails = await algodClient.supply().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2ledgersupply)\n   * @category GET\n   */\n  supply() {\n    return new Supply(this.c, this.intDecoding);\n  }\n\n  /**\n   * Compiles TEAL source code to binary, returns base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style).\n   *\n   * #### Example\n   * ```typescript\n   * const source = \"TEAL SOURCE CODE\";\n   * const compiledSmartContract = await algodClient.compile(source).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#post-v2tealcompile)\n   * @remarks\n   * This endpoint is only enabled when a node's configuration file sets `EnableDeveloperAPI` to true.\n   * @param source\n   * @category POST\n   */\n  compile(source: string | Uint8Array) {\n    return new Compile(this.c, source);\n  }\n\n  /**\n   * Provides debugging information for a transaction (or group).\n   *\n   * Executes TEAL program(s) in context and returns debugging information about the execution. This endpoint is only enabled when a node's configureation file sets `EnableDeveloperAPI` to true.\n   *\n   * #### Example\n   * ```typescript\n   * const dryRunResult = await algodClient.dryrun(dr).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#post-v2tealdryrun)\n   * @param dr\n   * @category POST\n   */\n  dryrun(dr: modelsv2.DryrunRequest) {\n    return new Dryrun(this.c, dr);\n  }\n\n  /**\n   * Given an asset ID, return asset information including creator, name, total supply and\n   * special addresses.\n   *\n   * #### Example\n   * ```typescript\n   * const asset_id = 163650;\n   * const asset = await algodClient.getAssetByID(asset_id).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2assetsasset-id)\n   * @param index - The asset ID to look up.\n   * @category GET\n   */\n  getAssetByID(index: number) {\n    return new GetAssetByID(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Given an application ID, return the application information including creator, approval\n   * and clear programs, global and local schemas, and global state.\n   *\n   * #### Example\n   * ```typescript\n   * const index = 60553466;\n   * const app = await algodClient.getApplicationByID(index).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2applicationsapplication-id)\n   * @param index - The application ID to look up.\n   * @category GET\n   */\n  getApplicationByID(index: number) {\n    return new GetApplicationByID(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Given an application ID and the box name (key), return the value stored in the box.\n   *\n   * #### Example\n   * ```typescript\n   * const index = 60553466;\n   * const boxName = Buffer.from(\"foo\");\n   * const boxResponse = await algodClient.getApplicationBoxByName(index, boxName).do();\n   * const boxValue = boxResponse.value;\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2applicationsapplication-idbox)\n   * @param index - The application ID to look up.\n   * @category GET\n   */\n  getApplicationBoxByName(index: number, boxName: Uint8Array) {\n    return new GetApplicationBoxByName(\n      this.c,\n      this.intDecoding,\n      index,\n      boxName\n    );\n  }\n\n  /**\n   * Given an application ID, return all the box names associated with the app.\n   *\n   * #### Example\n   * ```typescript\n   * const index = 60553466;\n   * const boxesResponse = await algodClient.getApplicationBoxes(index).max(3).do();\n   * const boxNames = boxesResponse.boxes.map(box => box.name);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2applicationsapplication-idboxes)\n   * @param index - The application ID to look up.\n   * @category GET\n   */\n  getApplicationBoxes(index: number) {\n    return new GetApplicationBoxes(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns the entire genesis file.\n   *\n   * #### Example\n   * ```typescript\n   * const genesis = await algodClient.genesis().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-genesis)\n   * @category GET\n   */\n  genesis() {\n    return new Genesis(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns a Merkle proof for a given transaction in a block.\n   *\n   * #### Example\n   * ```typescript\n   * const round = 18038133;\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const proof = await algodClient.getTransactionProof(round, txId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2/#get-v2blocksroundtransactionstxidproof)\n   * @param round - The round in which the transaction appears.\n   * @param txID - The transaction ID for which to generate a proof.\n   * @category GET\n   */\n  getTransactionProof(round: number, txID: string) {\n    return new GetTransactionProof(this.c, this.intDecoding, round, txID);\n  }\n\n  /**\n   * Gets a proof for a given light block header inside a state proof commitment.\n   *\n   * #### Example\n   * ```typescript\n   * const round = 11111111;\n   * const lightBlockHeaderProof = await algodClient.getLightBlockHeaderProof(round).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2#get-v2blocksroundlightheaderproof)\n   * @param round\n   */\n  getLightBlockHeaderProof(round: number) {\n    return new LightBlockHeaderProof(this.c, this.intDecoding, round);\n  }\n\n  /**\n   * Gets a state proof that covers a given round.\n   *\n   * #### Example\n   * ```typescript\n   * const round = 11111111;\n   * const stateProof = await algodClient.getStateProof(round).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2#get-v2stateproofsround)\n   * @param round\n   */\n  getStateProof(round: number) {\n    return new StateProof(this.c, this.intDecoding, round);\n  }\n}\n","/**\n * NOTICE: This file was generated. Editing this file manually is not recommended.\n */\n\n/* eslint-disable no-use-before-define */\nimport BaseModel from '../../basemodel';\nimport { EncodedSignedTransaction } from '../../../../types/transactions/encoded';\nimport BlockHeader from '../../../../types/blockHeader';\n\n/**\n * Account information at a given round.\n * Definition:\n * data/basics/userBalance.go : AccountData\n */\nexport class Account extends BaseModel {\n  /**\n   * the account public key\n   */\n  public address: string;\n\n  /**\n   * (algo) total number of MicroAlgos in the account\n   */\n  public amount: number | bigint;\n\n  /**\n   * specifies the amount of MicroAlgos in the account, without the pending rewards.\n   */\n  public amountWithoutPendingRewards: number | bigint;\n\n  /**\n   * MicroAlgo balance required by the account.\n   * The requirement grows based on asset and application usage.\n   */\n  public minBalance: number | bigint;\n\n  /**\n   * amount of MicroAlgos of pending rewards in this account.\n   */\n  public pendingRewards: number | bigint;\n\n  /**\n   * (ern) total rewards of MicroAlgos the account has received, including pending\n   * rewards.\n   */\n  public rewards: number | bigint;\n\n  /**\n   * The round for which this information is relevant.\n   */\n  public round: number | bigint;\n\n  /**\n   * (onl) delegation status of the account's MicroAlgos\n   * * Offline - indicates that the associated account is delegated.\n   * * Online - indicates that the associated account used as part of the delegation\n   * pool.\n   * * NotParticipating - indicates that the associated account is neither a\n   * delegator nor a delegate.\n   */\n  public status: string;\n\n  /**\n   * The count of all applications that have been opted in, equivalent to the count\n   * of application local data (AppLocalState objects) stored in this account.\n   */\n  public totalAppsOptedIn: number | bigint;\n\n  /**\n   * The count of all assets that have been opted in, equivalent to the count of\n   * AssetHolding objects held by this account.\n   */\n  public totalAssetsOptedIn: number | bigint;\n\n  /**\n   * The count of all apps (AppParams objects) created by this account.\n   */\n  public totalCreatedApps: number | bigint;\n\n  /**\n   * The count of all assets (AssetParams objects) created by this account.\n   */\n  public totalCreatedAssets: number | bigint;\n\n  /**\n   * (appl) applications local data stored in this account.\n   * Note the raw object uses `map[int] -> AppLocalState` for this type.\n   */\n  public appsLocalState?: ApplicationLocalState[];\n\n  /**\n   * (teap) the sum of all extra application program pages for this account.\n   */\n  public appsTotalExtraPages?: number | bigint;\n\n  /**\n   * (tsch) stores the sum of all of the local schemas and global schemas in this\n   * account.\n   * Note: the raw account uses `StateSchema` for this type.\n   */\n  public appsTotalSchema?: ApplicationStateSchema;\n\n  /**\n   * (asset) assets held by this account.\n   * Note the raw object uses `map[int] -> AssetHolding` for this type.\n   */\n  public assets?: AssetHolding[];\n\n  /**\n   * (spend) the address against which signing should be checked. If empty, the\n   * address of the current account is used. This field can be updated in any\n   * transaction by setting the RekeyTo field.\n   */\n  public authAddr?: string;\n\n  /**\n   * (appp) parameters of applications created by this account including app global\n   * data.\n   * Note: the raw account uses `map[int] -> AppParams` for this type.\n   */\n  public createdApps?: Application[];\n\n  /**\n   * (apar) parameters of assets created by this account.\n   * Note: the raw account uses `map[int] -> Asset` for this type.\n   */\n  public createdAssets?: Asset[];\n\n  /**\n   * AccountParticipation describes the parameters used by this account in consensus\n   * protocol.\n   */\n  public participation?: AccountParticipation;\n\n  /**\n   * (ebase) used as part of the rewards computation. Only applicable to accounts\n   * which are participating.\n   */\n  public rewardBase?: number | bigint;\n\n  /**\n   * Indicates what type of signature is used by this account, must be one of:\n   * * sig\n   * * msig\n   * * lsig\n   */\n  public sigType?: string;\n\n  /**\n   * (tbxb) The total number of bytes used by this account's app's box keys and\n   * values.\n   */\n  public totalBoxBytes?: number | bigint;\n\n  /**\n   * (tbx) The number of existing boxes created by this account's app.\n   */\n  public totalBoxes?: number | bigint;\n\n  /**\n   * Creates a new `Account` object.\n   * @param address - the account public key\n   * @param amount - (algo) total number of MicroAlgos in the account\n   * @param amountWithoutPendingRewards - specifies the amount of MicroAlgos in the account, without the pending rewards.\n   * @param minBalance - MicroAlgo balance required by the account.\n   * The requirement grows based on asset and application usage.\n   * @param pendingRewards - amount of MicroAlgos of pending rewards in this account.\n   * @param rewards - (ern) total rewards of MicroAlgos the account has received, including pending\n   * rewards.\n   * @param round - The round for which this information is relevant.\n   * @param status - (onl) delegation status of the account's MicroAlgos\n   * * Offline - indicates that the associated account is delegated.\n   * * Online - indicates that the associated account used as part of the delegation\n   * pool.\n   * * NotParticipating - indicates that the associated account is neither a\n   * delegator nor a delegate.\n   * @param totalAppsOptedIn - The count of all applications that have been opted in, equivalent to the count\n   * of application local data (AppLocalState objects) stored in this account.\n   * @param totalAssetsOptedIn - The count of all assets that have been opted in, equivalent to the count of\n   * AssetHolding objects held by this account.\n   * @param totalCreatedApps - The count of all apps (AppParams objects) created by this account.\n   * @param totalCreatedAssets - The count of all assets (AssetParams objects) created by this account.\n   * @param appsLocalState - (appl) applications local data stored in this account.\n   * Note the raw object uses `map[int] -> AppLocalState` for this type.\n   * @param appsTotalExtraPages - (teap) the sum of all extra application program pages for this account.\n   * @param appsTotalSchema - (tsch) stores the sum of all of the local schemas and global schemas in this\n   * account.\n   * Note: the raw account uses `StateSchema` for this type.\n   * @param assets - (asset) assets held by this account.\n   * Note the raw object uses `map[int] -> AssetHolding` for this type.\n   * @param authAddr - (spend) the address against which signing should be checked. If empty, the\n   * address of the current account is used. This field can be updated in any\n   * transaction by setting the RekeyTo field.\n   * @param createdApps - (appp) parameters of applications created by this account including app global\n   * data.\n   * Note: the raw account uses `map[int] -> AppParams` for this type.\n   * @param createdAssets - (apar) parameters of assets created by this account.\n   * Note: the raw account uses `map[int] -> Asset` for this type.\n   * @param participation - AccountParticipation describes the parameters used by this account in consensus\n   * protocol.\n   * @param rewardBase - (ebase) used as part of the rewards computation. Only applicable to accounts\n   * which are participating.\n   * @param sigType - Indicates what type of signature is used by this account, must be one of:\n   * * sig\n   * * msig\n   * * lsig\n   * @param totalBoxBytes - (tbxb) The total number of bytes used by this account's app's box keys and\n   * values.\n   * @param totalBoxes - (tbx) The number of existing boxes created by this account's app.\n   */\n  constructor({\n    address,\n    amount,\n    amountWithoutPendingRewards,\n    minBalance,\n    pendingRewards,\n    rewards,\n    round,\n    status,\n    totalAppsOptedIn,\n    totalAssetsOptedIn,\n    totalCreatedApps,\n    totalCreatedAssets,\n    appsLocalState,\n    appsTotalExtraPages,\n    appsTotalSchema,\n    assets,\n    authAddr,\n    createdApps,\n    createdAssets,\n    participation,\n    rewardBase,\n    sigType,\n    totalBoxBytes,\n    totalBoxes,\n  }: {\n    address: string;\n    amount: number | bigint;\n    amountWithoutPendingRewards: number | bigint;\n    minBalance: number | bigint;\n    pendingRewards: number | bigint;\n    rewards: number | bigint;\n    round: number | bigint;\n    status: string;\n    totalAppsOptedIn: number | bigint;\n    totalAssetsOptedIn: number | bigint;\n    totalCreatedApps: number | bigint;\n    totalCreatedAssets: number | bigint;\n    appsLocalState?: ApplicationLocalState[];\n    appsTotalExtraPages?: number | bigint;\n    appsTotalSchema?: ApplicationStateSchema;\n    assets?: AssetHolding[];\n    authAddr?: string;\n    createdApps?: Application[];\n    createdAssets?: Asset[];\n    participation?: AccountParticipation;\n    rewardBase?: number | bigint;\n    sigType?: string;\n    totalBoxBytes?: number | bigint;\n    totalBoxes?: number | bigint;\n  }) {\n    super();\n    this.address = address;\n    this.amount = amount;\n    this.amountWithoutPendingRewards = amountWithoutPendingRewards;\n    this.minBalance = minBalance;\n    this.pendingRewards = pendingRewards;\n    this.rewards = rewards;\n    this.round = round;\n    this.status = status;\n    this.totalAppsOptedIn = totalAppsOptedIn;\n    this.totalAssetsOptedIn = totalAssetsOptedIn;\n    this.totalCreatedApps = totalCreatedApps;\n    this.totalCreatedAssets = totalCreatedAssets;\n    this.appsLocalState = appsLocalState;\n    this.appsTotalExtraPages = appsTotalExtraPages;\n    this.appsTotalSchema = appsTotalSchema;\n    this.assets = assets;\n    this.authAddr = authAddr;\n    this.createdApps = createdApps;\n    this.createdAssets = createdAssets;\n    this.participation = participation;\n    this.rewardBase = rewardBase;\n    this.sigType = sigType;\n    this.totalBoxBytes = totalBoxBytes;\n    this.totalBoxes = totalBoxes;\n\n    this.attribute_map = {\n      address: 'address',\n      amount: 'amount',\n      amountWithoutPendingRewards: 'amount-without-pending-rewards',\n      minBalance: 'min-balance',\n      pendingRewards: 'pending-rewards',\n      rewards: 'rewards',\n      round: 'round',\n      status: 'status',\n      totalAppsOptedIn: 'total-apps-opted-in',\n      totalAssetsOptedIn: 'total-assets-opted-in',\n      totalCreatedApps: 'total-created-apps',\n      totalCreatedAssets: 'total-created-assets',\n      appsLocalState: 'apps-local-state',\n      appsTotalExtraPages: 'apps-total-extra-pages',\n      appsTotalSchema: 'apps-total-schema',\n      assets: 'assets',\n      authAddr: 'auth-addr',\n      createdApps: 'created-apps',\n      createdAssets: 'created-assets',\n      participation: 'participation',\n      rewardBase: 'reward-base',\n      sigType: 'sig-type',\n      totalBoxBytes: 'total-box-bytes',\n      totalBoxes: 'total-boxes',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Account {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['amount-without-pending-rewards'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'amount-without-pending-rewards': ${data}`\n      );\n    if (typeof data['min-balance'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'min-balance': ${data}`\n      );\n    if (typeof data['pending-rewards'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'pending-rewards': ${data}`\n      );\n    if (typeof data['rewards'] === 'undefined')\n      throw new Error(`Response is missing required field 'rewards': ${data}`);\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (typeof data['status'] === 'undefined')\n      throw new Error(`Response is missing required field 'status': ${data}`);\n    if (typeof data['total-apps-opted-in'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-apps-opted-in': ${data}`\n      );\n    if (typeof data['total-assets-opted-in'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-assets-opted-in': ${data}`\n      );\n    if (typeof data['total-created-apps'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-created-apps': ${data}`\n      );\n    if (typeof data['total-created-assets'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-created-assets': ${data}`\n      );\n    return new Account({\n      address: data['address'],\n      amount: data['amount'],\n      amountWithoutPendingRewards: data['amount-without-pending-rewards'],\n      minBalance: data['min-balance'],\n      pendingRewards: data['pending-rewards'],\n      rewards: data['rewards'],\n      round: data['round'],\n      status: data['status'],\n      totalAppsOptedIn: data['total-apps-opted-in'],\n      totalAssetsOptedIn: data['total-assets-opted-in'],\n      totalCreatedApps: data['total-created-apps'],\n      totalCreatedAssets: data['total-created-assets'],\n      appsLocalState:\n        typeof data['apps-local-state'] !== 'undefined'\n          ? data['apps-local-state'].map(\n              ApplicationLocalState.from_obj_for_encoding\n            )\n          : undefined,\n      appsTotalExtraPages: data['apps-total-extra-pages'],\n      appsTotalSchema:\n        typeof data['apps-total-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['apps-total-schema']\n            )\n          : undefined,\n      assets:\n        typeof data['assets'] !== 'undefined'\n          ? data['assets'].map(AssetHolding.from_obj_for_encoding)\n          : undefined,\n      authAddr: data['auth-addr'],\n      createdApps:\n        typeof data['created-apps'] !== 'undefined'\n          ? data['created-apps'].map(Application.from_obj_for_encoding)\n          : undefined,\n      createdAssets:\n        typeof data['created-assets'] !== 'undefined'\n          ? data['created-assets'].map(Asset.from_obj_for_encoding)\n          : undefined,\n      participation:\n        typeof data['participation'] !== 'undefined'\n          ? AccountParticipation.from_obj_for_encoding(data['participation'])\n          : undefined,\n      rewardBase: data['reward-base'],\n      sigType: data['sig-type'],\n      totalBoxBytes: data['total-box-bytes'],\n      totalBoxes: data['total-boxes'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AccountApplicationResponse describes the account's application local state and\n * global state (AppLocalState and AppParams, if either exists) for a specific\n * application ID. Global state will only be returned if the provided address is\n * the application's creator.\n */\nexport class AccountApplicationResponse extends BaseModel {\n  /**\n   * The round for which this information is relevant.\n   */\n  public round: number | bigint;\n\n  /**\n   * (appl) the application local data stored in this account.\n   * The raw account uses `AppLocalState` for this type.\n   */\n  public appLocalState?: ApplicationLocalState;\n\n  /**\n   * (appp) parameters of the application created by this account including app\n   * global data.\n   * The raw account uses `AppParams` for this type.\n   */\n  public createdApp?: ApplicationParams;\n\n  /**\n   * Creates a new `AccountApplicationResponse` object.\n   * @param round - The round for which this information is relevant.\n   * @param appLocalState - (appl) the application local data stored in this account.\n   * The raw account uses `AppLocalState` for this type.\n   * @param createdApp - (appp) parameters of the application created by this account including app\n   * global data.\n   * The raw account uses `AppParams` for this type.\n   */\n  constructor(\n    round: number | bigint,\n    appLocalState?: ApplicationLocalState,\n    createdApp?: ApplicationParams\n  ) {\n    super();\n    this.round = round;\n    this.appLocalState = appLocalState;\n    this.createdApp = createdApp;\n\n    this.attribute_map = {\n      round: 'round',\n      appLocalState: 'app-local-state',\n      createdApp: 'created-app',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AccountApplicationResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    return new AccountApplicationResponse(\n      data['round'],\n      typeof data['app-local-state'] !== 'undefined'\n        ? ApplicationLocalState.from_obj_for_encoding(data['app-local-state'])\n        : undefined,\n      typeof data['created-app'] !== 'undefined'\n        ? ApplicationParams.from_obj_for_encoding(data['created-app'])\n        : undefined\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AccountAssetResponse describes the account's asset holding and asset parameters\n * (if either exist) for a specific asset ID. Asset parameters will only be\n * returned if the provided address is the asset's creator.\n */\nexport class AccountAssetResponse extends BaseModel {\n  /**\n   * The round for which this information is relevant.\n   */\n  public round: number | bigint;\n\n  /**\n   * (asset) Details about the asset held by this account.\n   * The raw account uses `AssetHolding` for this type.\n   */\n  public assetHolding?: AssetHolding;\n\n  /**\n   * (apar) parameters of the asset created by this account.\n   * The raw account uses `AssetParams` for this type.\n   */\n  public createdAsset?: AssetParams;\n\n  /**\n   * Creates a new `AccountAssetResponse` object.\n   * @param round - The round for which this information is relevant.\n   * @param assetHolding - (asset) Details about the asset held by this account.\n   * The raw account uses `AssetHolding` for this type.\n   * @param createdAsset - (apar) parameters of the asset created by this account.\n   * The raw account uses `AssetParams` for this type.\n   */\n  constructor(\n    round: number | bigint,\n    assetHolding?: AssetHolding,\n    createdAsset?: AssetParams\n  ) {\n    super();\n    this.round = round;\n    this.assetHolding = assetHolding;\n    this.createdAsset = createdAsset;\n\n    this.attribute_map = {\n      round: 'round',\n      assetHolding: 'asset-holding',\n      createdAsset: 'created-asset',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AccountAssetResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    return new AccountAssetResponse(\n      data['round'],\n      typeof data['asset-holding'] !== 'undefined'\n        ? AssetHolding.from_obj_for_encoding(data['asset-holding'])\n        : undefined,\n      typeof data['created-asset'] !== 'undefined'\n        ? AssetParams.from_obj_for_encoding(data['created-asset'])\n        : undefined\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AccountParticipation describes the parameters used by this account in consensus\n * protocol.\n */\nexport class AccountParticipation extends BaseModel {\n  /**\n   * (sel) Selection public key (if any) currently registered for this round.\n   */\n  public selectionParticipationKey: Uint8Array;\n\n  /**\n   * (voteFst) First round for which this participation is valid.\n   */\n  public voteFirstValid: number | bigint;\n\n  /**\n   * (voteKD) Number of subkeys in each batch of participation keys.\n   */\n  public voteKeyDilution: number | bigint;\n\n  /**\n   * (voteLst) Last round for which this participation is valid.\n   */\n  public voteLastValid: number | bigint;\n\n  /**\n   * (vote) root participation public key (if any) currently registered for this\n   * round.\n   */\n  public voteParticipationKey: Uint8Array;\n\n  /**\n   * (stprf) Root of the state proof key (if any)\n   */\n  public stateProofKey?: Uint8Array;\n\n  /**\n   * Creates a new `AccountParticipation` object.\n   * @param selectionParticipationKey - (sel) Selection public key (if any) currently registered for this round.\n   * @param voteFirstValid - (voteFst) First round for which this participation is valid.\n   * @param voteKeyDilution - (voteKD) Number of subkeys in each batch of participation keys.\n   * @param voteLastValid - (voteLst) Last round for which this participation is valid.\n   * @param voteParticipationKey - (vote) root participation public key (if any) currently registered for this\n   * round.\n   * @param stateProofKey - (stprf) Root of the state proof key (if any)\n   */\n  constructor({\n    selectionParticipationKey,\n    voteFirstValid,\n    voteKeyDilution,\n    voteLastValid,\n    voteParticipationKey,\n    stateProofKey,\n  }: {\n    selectionParticipationKey: string | Uint8Array;\n    voteFirstValid: number | bigint;\n    voteKeyDilution: number | bigint;\n    voteLastValid: number | bigint;\n    voteParticipationKey: string | Uint8Array;\n    stateProofKey?: string | Uint8Array;\n  }) {\n    super();\n    this.selectionParticipationKey =\n      typeof selectionParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(selectionParticipationKey, 'base64'))\n        : selectionParticipationKey;\n    this.voteFirstValid = voteFirstValid;\n    this.voteKeyDilution = voteKeyDilution;\n    this.voteLastValid = voteLastValid;\n    this.voteParticipationKey =\n      typeof voteParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(voteParticipationKey, 'base64'))\n        : voteParticipationKey;\n    this.stateProofKey =\n      typeof stateProofKey === 'string'\n        ? new Uint8Array(Buffer.from(stateProofKey, 'base64'))\n        : stateProofKey;\n\n    this.attribute_map = {\n      selectionParticipationKey: 'selection-participation-key',\n      voteFirstValid: 'vote-first-valid',\n      voteKeyDilution: 'vote-key-dilution',\n      voteLastValid: 'vote-last-valid',\n      voteParticipationKey: 'vote-participation-key',\n      stateProofKey: 'state-proof-key',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AccountParticipation {\n    /* eslint-disable dot-notation */\n    if (typeof data['selection-participation-key'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'selection-participation-key': ${data}`\n      );\n    if (typeof data['vote-first-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-first-valid': ${data}`\n      );\n    if (typeof data['vote-key-dilution'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-key-dilution': ${data}`\n      );\n    if (typeof data['vote-last-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-last-valid': ${data}`\n      );\n    if (typeof data['vote-participation-key'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-participation-key': ${data}`\n      );\n    return new AccountParticipation({\n      selectionParticipationKey: data['selection-participation-key'],\n      voteFirstValid: data['vote-first-valid'],\n      voteKeyDilution: data['vote-key-dilution'],\n      voteLastValid: data['vote-last-valid'],\n      voteParticipationKey: data['vote-participation-key'],\n      stateProofKey: data['state-proof-key'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Application state delta.\n */\nexport class AccountStateDelta extends BaseModel {\n  public address: string;\n\n  /**\n   * Application state delta.\n   */\n  public delta: EvalDeltaKeyValue[];\n\n  /**\n   * Creates a new `AccountStateDelta` object.\n   * @param address -\n   * @param delta - Application state delta.\n   */\n  constructor(address: string, delta: EvalDeltaKeyValue[]) {\n    super();\n    this.address = address;\n    this.delta = delta;\n\n    this.attribute_map = {\n      address: 'address',\n      delta: 'delta',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AccountStateDelta {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (!Array.isArray(data['delta']))\n      throw new Error(\n        `Response is missing required array field 'delta': ${data}`\n      );\n    return new AccountStateDelta(\n      data['address'],\n      data['delta'].map(EvalDeltaKeyValue.from_obj_for_encoding)\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Application index and its parameters\n */\nexport class Application extends BaseModel {\n  /**\n   * (appidx) application index.\n   */\n  public id: number | bigint;\n\n  /**\n   * (appparams) application parameters.\n   */\n  public params: ApplicationParams;\n\n  /**\n   * Creates a new `Application` object.\n   * @param id - (appidx) application index.\n   * @param params - (appparams) application parameters.\n   */\n  constructor(id: number | bigint, params: ApplicationParams) {\n    super();\n    this.id = id;\n    this.params = params;\n\n    this.attribute_map = {\n      id: 'id',\n      params: 'params',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Application {\n    /* eslint-disable dot-notation */\n    if (typeof data['id'] === 'undefined')\n      throw new Error(`Response is missing required field 'id': ${data}`);\n    if (typeof data['params'] === 'undefined')\n      throw new Error(`Response is missing required field 'params': ${data}`);\n    return new Application(\n      data['id'],\n      ApplicationParams.from_obj_for_encoding(data['params'])\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores local state associated with an application.\n */\nexport class ApplicationLocalState extends BaseModel {\n  /**\n   * The application which this local state is for.\n   */\n  public id: number | bigint;\n\n  /**\n   * (hsch) schema.\n   */\n  public schema: ApplicationStateSchema;\n\n  /**\n   * (tkv) storage.\n   */\n  public keyValue?: TealKeyValue[];\n\n  /**\n   * Creates a new `ApplicationLocalState` object.\n   * @param id - The application which this local state is for.\n   * @param schema - (hsch) schema.\n   * @param keyValue - (tkv) storage.\n   */\n  constructor(\n    id: number | bigint,\n    schema: ApplicationStateSchema,\n    keyValue?: TealKeyValue[]\n  ) {\n    super();\n    this.id = id;\n    this.schema = schema;\n    this.keyValue = keyValue;\n\n    this.attribute_map = {\n      id: 'id',\n      schema: 'schema',\n      keyValue: 'key-value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationLocalState {\n    /* eslint-disable dot-notation */\n    if (typeof data['id'] === 'undefined')\n      throw new Error(`Response is missing required field 'id': ${data}`);\n    if (typeof data['schema'] === 'undefined')\n      throw new Error(`Response is missing required field 'schema': ${data}`);\n    return new ApplicationLocalState(\n      data['id'],\n      ApplicationStateSchema.from_obj_for_encoding(data['schema']),\n      typeof data['key-value'] !== 'undefined'\n        ? data['key-value'].map(TealKeyValue.from_obj_for_encoding)\n        : undefined\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores the global information associated with an application.\n */\nexport class ApplicationParams extends BaseModel {\n  /**\n   * (approv) approval program.\n   */\n  public approvalProgram: Uint8Array;\n\n  /**\n   * (clearp) approval program.\n   */\n  public clearStateProgram: Uint8Array;\n\n  /**\n   * The address that created this application. This is the address where the\n   * parameters and global state for this application can be found.\n   */\n  public creator: string;\n\n  /**\n   * (epp) the amount of extra program pages available to this app.\n   */\n  public extraProgramPages?: number | bigint;\n\n  /**\n   * [\\gs) global schema\n   */\n  public globalState?: TealKeyValue[];\n\n  /**\n   * [\\gsch) global schema\n   */\n  public globalStateSchema?: ApplicationStateSchema;\n\n  /**\n   * [\\lsch) local schema\n   */\n  public localStateSchema?: ApplicationStateSchema;\n\n  /**\n   * Creates a new `ApplicationParams` object.\n   * @param approvalProgram - (approv) approval program.\n   * @param clearStateProgram - (clearp) approval program.\n   * @param creator - The address that created this application. This is the address where the\n   * parameters and global state for this application can be found.\n   * @param extraProgramPages - (epp) the amount of extra program pages available to this app.\n   * @param globalState - [\\gs) global schema\n   * @param globalStateSchema - [\\gsch) global schema\n   * @param localStateSchema - [\\lsch) local schema\n   */\n  constructor({\n    approvalProgram,\n    clearStateProgram,\n    creator,\n    extraProgramPages,\n    globalState,\n    globalStateSchema,\n    localStateSchema,\n  }: {\n    approvalProgram: string | Uint8Array;\n    clearStateProgram: string | Uint8Array;\n    creator: string;\n    extraProgramPages?: number | bigint;\n    globalState?: TealKeyValue[];\n    globalStateSchema?: ApplicationStateSchema;\n    localStateSchema?: ApplicationStateSchema;\n  }) {\n    super();\n    this.approvalProgram =\n      typeof approvalProgram === 'string'\n        ? new Uint8Array(Buffer.from(approvalProgram, 'base64'))\n        : approvalProgram;\n    this.clearStateProgram =\n      typeof clearStateProgram === 'string'\n        ? new Uint8Array(Buffer.from(clearStateProgram, 'base64'))\n        : clearStateProgram;\n    this.creator = creator;\n    this.extraProgramPages = extraProgramPages;\n    this.globalState = globalState;\n    this.globalStateSchema = globalStateSchema;\n    this.localStateSchema = localStateSchema;\n\n    this.attribute_map = {\n      approvalProgram: 'approval-program',\n      clearStateProgram: 'clear-state-program',\n      creator: 'creator',\n      extraProgramPages: 'extra-program-pages',\n      globalState: 'global-state',\n      globalStateSchema: 'global-state-schema',\n      localStateSchema: 'local-state-schema',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ApplicationParams {\n    /* eslint-disable dot-notation */\n    if (typeof data['approval-program'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'approval-program': ${data}`\n      );\n    if (typeof data['clear-state-program'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'clear-state-program': ${data}`\n      );\n    if (typeof data['creator'] === 'undefined')\n      throw new Error(`Response is missing required field 'creator': ${data}`);\n    return new ApplicationParams({\n      approvalProgram: data['approval-program'],\n      clearStateProgram: data['clear-state-program'],\n      creator: data['creator'],\n      extraProgramPages: data['extra-program-pages'],\n      globalState:\n        typeof data['global-state'] !== 'undefined'\n          ? data['global-state'].map(TealKeyValue.from_obj_for_encoding)\n          : undefined,\n      globalStateSchema:\n        typeof data['global-state-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['global-state-schema']\n            )\n          : undefined,\n      localStateSchema:\n        typeof data['local-state-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['local-state-schema']\n            )\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Specifies maximums on the number of each type that may be stored.\n */\nexport class ApplicationStateSchema extends BaseModel {\n  /**\n   * (nui) num of uints.\n   */\n  public numUint: number | bigint;\n\n  /**\n   * (nbs) num of byte slices.\n   */\n  public numByteSlice: number | bigint;\n\n  /**\n   * Creates a new `ApplicationStateSchema` object.\n   * @param numUint - (nui) num of uints.\n   * @param numByteSlice - (nbs) num of byte slices.\n   */\n  constructor(numUint: number | bigint, numByteSlice: number | bigint) {\n    super();\n    this.numUint = numUint;\n    this.numByteSlice = numByteSlice;\n\n    this.attribute_map = {\n      numUint: 'num-uint',\n      numByteSlice: 'num-byte-slice',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationStateSchema {\n    /* eslint-disable dot-notation */\n    if (typeof data['num-uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'num-uint': ${data}`);\n    if (typeof data['num-byte-slice'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'num-byte-slice': ${data}`\n      );\n    return new ApplicationStateSchema(data['num-uint'], data['num-byte-slice']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Specifies both the unique identifier and the parameters for an asset\n */\nexport class Asset extends BaseModel {\n  /**\n   * unique asset identifier\n   */\n  public index: number | bigint;\n\n  /**\n   * AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  public params: AssetParams;\n\n  /**\n   * Creates a new `Asset` object.\n   * @param index - unique asset identifier\n   * @param params - AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  constructor(index: number | bigint, params: AssetParams) {\n    super();\n    this.index = index;\n    this.params = params;\n\n    this.attribute_map = {\n      index: 'index',\n      params: 'params',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Asset {\n    /* eslint-disable dot-notation */\n    if (typeof data['index'] === 'undefined')\n      throw new Error(`Response is missing required field 'index': ${data}`);\n    if (typeof data['params'] === 'undefined')\n      throw new Error(`Response is missing required field 'params': ${data}`);\n    return new Asset(\n      data['index'],\n      AssetParams.from_obj_for_encoding(data['params'])\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Describes an asset held by an account.\n * Definition:\n * data/basics/userBalance.go : AssetHolding\n */\nexport class AssetHolding extends BaseModel {\n  /**\n   * (a) number of units held.\n   */\n  public amount: number | bigint;\n\n  /**\n   * Asset ID of the holding.\n   */\n  public assetId: number | bigint;\n\n  /**\n   * (f) whether or not the holding is frozen.\n   */\n  public isFrozen: boolean;\n\n  /**\n   * Creates a new `AssetHolding` object.\n   * @param amount - (a) number of units held.\n   * @param assetId - Asset ID of the holding.\n   * @param isFrozen - (f) whether or not the holding is frozen.\n   */\n  constructor(\n    amount: number | bigint,\n    assetId: number | bigint,\n    isFrozen: boolean\n  ) {\n    super();\n    this.amount = amount;\n    this.assetId = assetId;\n    this.isFrozen = isFrozen;\n\n    this.attribute_map = {\n      amount: 'amount',\n      assetId: 'asset-id',\n      isFrozen: 'is-frozen',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetHolding {\n    /* eslint-disable dot-notation */\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['asset-id'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset-id': ${data}`);\n    if (typeof data['is-frozen'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'is-frozen': ${data}`\n      );\n    return new AssetHolding(\n      data['amount'],\n      data['asset-id'],\n      data['is-frozen']\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AssetParams specifies the parameters for an asset.\n * (apar) when part of an AssetConfig transaction.\n * Definition:\n * data/transactions/asset.go : AssetParams\n */\nexport class AssetParams extends BaseModel {\n  /**\n   * The address that created this asset. This is the address where the parameters\n   * for this asset can be found, and also the address where unwanted asset units can\n   * be sent in the worst case.\n   */\n  public creator: string;\n\n  /**\n   * (dc) The number of digits to use after the decimal point when displaying this\n   * asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in\n   * tenths. If 2, the base unit of the asset is in hundredths, and so on. This value\n   * must be between 0 and 19 (inclusive).\n   */\n  public decimals: number | bigint;\n\n  /**\n   * (t) The total number of units of this asset.\n   */\n  public total: number | bigint;\n\n  /**\n   * (c) Address of account used to clawback holdings of this asset. If empty,\n   * clawback is not permitted.\n   */\n  public clawback?: string;\n\n  /**\n   * (df) Whether holdings of this asset are frozen by default.\n   */\n  public defaultFrozen?: boolean;\n\n  /**\n   * (f) Address of account used to freeze holdings of this asset. If empty, freezing\n   * is not permitted.\n   */\n  public freeze?: string;\n\n  /**\n   * (m) Address of account used to manage the keys of this asset and to destroy it.\n   */\n  public manager?: string;\n\n  /**\n   * (am) A commitment to some unspecified asset metadata. The format of this\n   * metadata is up to the application.\n   */\n  public metadataHash?: Uint8Array;\n\n  /**\n   * (an) Name of this asset, as supplied by the creator. Included only when the\n   * asset name is composed of printable utf-8 characters.\n   */\n  public name?: string;\n\n  /**\n   * Base64 encoded name of this asset, as supplied by the creator.\n   */\n  public nameB64?: Uint8Array;\n\n  /**\n   * (r) Address of account holding reserve (non-minted) units of this asset.\n   */\n  public reserve?: string;\n\n  /**\n   * (un) Name of a unit of this asset, as supplied by the creator. Included only\n   * when the name of a unit of this asset is composed of printable utf-8 characters.\n   */\n  public unitName?: string;\n\n  /**\n   * Base64 encoded name of a unit of this asset, as supplied by the creator.\n   */\n  public unitNameB64?: Uint8Array;\n\n  /**\n   * (au) URL where more information about the asset can be retrieved. Included only\n   * when the URL is composed of printable utf-8 characters.\n   */\n  public url?: string;\n\n  /**\n   * Base64 encoded URL where more information about the asset can be retrieved.\n   */\n  public urlB64?: Uint8Array;\n\n  /**\n   * Creates a new `AssetParams` object.\n   * @param creator - The address that created this asset. This is the address where the parameters\n   * for this asset can be found, and also the address where unwanted asset units can\n   * be sent in the worst case.\n   * @param decimals - (dc) The number of digits to use after the decimal point when displaying this\n   * asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in\n   * tenths. If 2, the base unit of the asset is in hundredths, and so on. This value\n   * must be between 0 and 19 (inclusive).\n   * @param total - (t) The total number of units of this asset.\n   * @param clawback - (c) Address of account used to clawback holdings of this asset. If empty,\n   * clawback is not permitted.\n   * @param defaultFrozen - (df) Whether holdings of this asset are frozen by default.\n   * @param freeze - (f) Address of account used to freeze holdings of this asset. If empty, freezing\n   * is not permitted.\n   * @param manager - (m) Address of account used to manage the keys of this asset and to destroy it.\n   * @param metadataHash - (am) A commitment to some unspecified asset metadata. The format of this\n   * metadata is up to the application.\n   * @param name - (an) Name of this asset, as supplied by the creator. Included only when the\n   * asset name is composed of printable utf-8 characters.\n   * @param nameB64 - Base64 encoded name of this asset, as supplied by the creator.\n   * @param reserve - (r) Address of account holding reserve (non-minted) units of this asset.\n   * @param unitName - (un) Name of a unit of this asset, as supplied by the creator. Included only\n   * when the name of a unit of this asset is composed of printable utf-8 characters.\n   * @param unitNameB64 - Base64 encoded name of a unit of this asset, as supplied by the creator.\n   * @param url - (au) URL where more information about the asset can be retrieved. Included only\n   * when the URL is composed of printable utf-8 characters.\n   * @param urlB64 - Base64 encoded URL where more information about the asset can be retrieved.\n   */\n  constructor({\n    creator,\n    decimals,\n    total,\n    clawback,\n    defaultFrozen,\n    freeze,\n    manager,\n    metadataHash,\n    name,\n    nameB64,\n    reserve,\n    unitName,\n    unitNameB64,\n    url,\n    urlB64,\n  }: {\n    creator: string;\n    decimals: number | bigint;\n    total: number | bigint;\n    clawback?: string;\n    defaultFrozen?: boolean;\n    freeze?: string;\n    manager?: string;\n    metadataHash?: string | Uint8Array;\n    name?: string;\n    nameB64?: string | Uint8Array;\n    reserve?: string;\n    unitName?: string;\n    unitNameB64?: string | Uint8Array;\n    url?: string;\n    urlB64?: string | Uint8Array;\n  }) {\n    super();\n    this.creator = creator;\n    this.decimals = decimals;\n    this.total = total;\n    this.clawback = clawback;\n    this.defaultFrozen = defaultFrozen;\n    this.freeze = freeze;\n    this.manager = manager;\n    this.metadataHash =\n      typeof metadataHash === 'string'\n        ? new Uint8Array(Buffer.from(metadataHash, 'base64'))\n        : metadataHash;\n    this.name = name;\n    this.nameB64 =\n      typeof nameB64 === 'string'\n        ? new Uint8Array(Buffer.from(nameB64, 'base64'))\n        : nameB64;\n    this.reserve = reserve;\n    this.unitName = unitName;\n    this.unitNameB64 =\n      typeof unitNameB64 === 'string'\n        ? new Uint8Array(Buffer.from(unitNameB64, 'base64'))\n        : unitNameB64;\n    this.url = url;\n    this.urlB64 =\n      typeof urlB64 === 'string'\n        ? new Uint8Array(Buffer.from(urlB64, 'base64'))\n        : urlB64;\n\n    this.attribute_map = {\n      creator: 'creator',\n      decimals: 'decimals',\n      total: 'total',\n      clawback: 'clawback',\n      defaultFrozen: 'default-frozen',\n      freeze: 'freeze',\n      manager: 'manager',\n      metadataHash: 'metadata-hash',\n      name: 'name',\n      nameB64: 'name-b64',\n      reserve: 'reserve',\n      unitName: 'unit-name',\n      unitNameB64: 'unit-name-b64',\n      url: 'url',\n      urlB64: 'url-b64',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetParams {\n    /* eslint-disable dot-notation */\n    if (typeof data['creator'] === 'undefined')\n      throw new Error(`Response is missing required field 'creator': ${data}`);\n    if (typeof data['decimals'] === 'undefined')\n      throw new Error(`Response is missing required field 'decimals': ${data}`);\n    if (typeof data['total'] === 'undefined')\n      throw new Error(`Response is missing required field 'total': ${data}`);\n    return new AssetParams({\n      creator: data['creator'],\n      decimals: data['decimals'],\n      total: data['total'],\n      clawback: data['clawback'],\n      defaultFrozen: data['default-frozen'],\n      freeze: data['freeze'],\n      manager: data['manager'],\n      metadataHash: data['metadata-hash'],\n      name: data['name'],\n      nameB64: data['name-b64'],\n      reserve: data['reserve'],\n      unitName: data['unit-name'],\n      unitNameB64: data['unit-name-b64'],\n      url: data['url'],\n      urlB64: data['url-b64'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Hash of a block header.\n */\nexport class BlockHashResponse extends BaseModel {\n  /**\n   * Block header hash.\n   */\n  public blockhash: string;\n\n  /**\n   * Creates a new `BlockHashResponse` object.\n   * @param blockhash - Block header hash.\n   */\n  constructor(blockhash: string) {\n    super();\n    this.blockhash = blockhash;\n\n    this.attribute_map = {\n      blockhash: 'blockHash',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockHashResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['blockHash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'blockHash': ${data}`\n      );\n    return new BlockHashResponse(data['blockHash']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Encoded block object.\n */\nexport class BlockResponse extends BaseModel {\n  /**\n   * Block header data.\n   */\n  public block: BlockHeader;\n\n  /**\n   * Optional certificate object. This is only included when the format is set to\n   * message pack.\n   */\n  public cert?: Record<string, any>;\n\n  /**\n   * Creates a new `BlockResponse` object.\n   * @param block - Block header data.\n   * @param cert - Optional certificate object. This is only included when the format is set to\n   * message pack.\n   */\n  constructor(block: BlockHeader, cert?: Record<string, any>) {\n    super();\n    this.block = block;\n    this.cert = cert;\n\n    this.attribute_map = {\n      block: 'block',\n      cert: 'cert',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['block'] === 'undefined')\n      throw new Error(`Response is missing required field 'block': ${data}`);\n    return new BlockResponse(data['block'], data['cert']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box name and its content.\n */\nexport class Box extends BaseModel {\n  /**\n   * (name) box name, base64 encoded\n   */\n  public name: Uint8Array;\n\n  /**\n   * (value) box value, base64 encoded.\n   */\n  public value: Uint8Array;\n\n  /**\n   * Creates a new `Box` object.\n   * @param name - (name) box name, base64 encoded\n   * @param value - (value) box value, base64 encoded.\n   */\n  constructor(name: string | Uint8Array, value: string | Uint8Array) {\n    super();\n    this.name =\n      typeof name === 'string'\n        ? new Uint8Array(Buffer.from(name, 'base64'))\n        : name;\n    this.value =\n      typeof value === 'string'\n        ? new Uint8Array(Buffer.from(value, 'base64'))\n        : value;\n\n    this.attribute_map = {\n      name: 'name',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Box {\n    /* eslint-disable dot-notation */\n    if (typeof data['name'] === 'undefined')\n      throw new Error(`Response is missing required field 'name': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new Box(data['name'], data['value']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box descriptor describes a Box.\n */\nexport class BoxDescriptor extends BaseModel {\n  /**\n   * Base64 encoded box name\n   */\n  public name: Uint8Array;\n\n  /**\n   * Creates a new `BoxDescriptor` object.\n   * @param name - Base64 encoded box name\n   */\n  constructor(name: string | Uint8Array) {\n    super();\n    this.name =\n      typeof name === 'string'\n        ? new Uint8Array(Buffer.from(name, 'base64'))\n        : name;\n\n    this.attribute_map = {\n      name: 'name',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BoxDescriptor {\n    /* eslint-disable dot-notation */\n    if (typeof data['name'] === 'undefined')\n      throw new Error(`Response is missing required field 'name': ${data}`);\n    return new BoxDescriptor(data['name']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box names of an application\n */\nexport class BoxesResponse extends BaseModel {\n  public boxes: BoxDescriptor[];\n\n  /**\n   * Creates a new `BoxesResponse` object.\n   * @param boxes -\n   */\n  constructor(boxes: BoxDescriptor[]) {\n    super();\n    this.boxes = boxes;\n\n    this.attribute_map = {\n      boxes: 'boxes',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BoxesResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['boxes']))\n      throw new Error(\n        `Response is missing required array field 'boxes': ${data}`\n      );\n    return new BoxesResponse(\n      data['boxes'].map(BoxDescriptor.from_obj_for_encoding)\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class BuildVersion extends BaseModel {\n  public branch: string;\n\n  public buildNumber: number | bigint;\n\n  public channel: string;\n\n  public commitHash: string;\n\n  public major: number | bigint;\n\n  public minor: number | bigint;\n\n  /**\n   * Creates a new `BuildVersion` object.\n   * @param branch -\n   * @param buildNumber -\n   * @param channel -\n   * @param commitHash -\n   * @param major -\n   * @param minor -\n   */\n  constructor({\n    branch,\n    buildNumber,\n    channel,\n    commitHash,\n    major,\n    minor,\n  }: {\n    branch: string;\n    buildNumber: number | bigint;\n    channel: string;\n    commitHash: string;\n    major: number | bigint;\n    minor: number | bigint;\n  }) {\n    super();\n    this.branch = branch;\n    this.buildNumber = buildNumber;\n    this.channel = channel;\n    this.commitHash = commitHash;\n    this.major = major;\n    this.minor = minor;\n\n    this.attribute_map = {\n      branch: 'branch',\n      buildNumber: 'build_number',\n      channel: 'channel',\n      commitHash: 'commit_hash',\n      major: 'major',\n      minor: 'minor',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BuildVersion {\n    /* eslint-disable dot-notation */\n    if (typeof data['branch'] === 'undefined')\n      throw new Error(`Response is missing required field 'branch': ${data}`);\n    if (typeof data['build_number'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'build_number': ${data}`\n      );\n    if (typeof data['channel'] === 'undefined')\n      throw new Error(`Response is missing required field 'channel': ${data}`);\n    if (typeof data['commit_hash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'commit_hash': ${data}`\n      );\n    if (typeof data['major'] === 'undefined')\n      throw new Error(`Response is missing required field 'major': ${data}`);\n    if (typeof data['minor'] === 'undefined')\n      throw new Error(`Response is missing required field 'minor': ${data}`);\n    return new BuildVersion({\n      branch: data['branch'],\n      buildNumber: data['build_number'],\n      channel: data['channel'],\n      commitHash: data['commit_hash'],\n      major: data['major'],\n      minor: data['minor'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class CatchpointAbortResponse extends BaseModel {\n  /**\n   * Catchup abort response string\n   */\n  public catchupMessage: string;\n\n  /**\n   * Creates a new `CatchpointAbortResponse` object.\n   * @param catchupMessage - Catchup abort response string\n   */\n  constructor(catchupMessage: string) {\n    super();\n    this.catchupMessage = catchupMessage;\n\n    this.attribute_map = {\n      catchupMessage: 'catchup-message',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): CatchpointAbortResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['catchup-message'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'catchup-message': ${data}`\n      );\n    return new CatchpointAbortResponse(data['catchup-message']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class CatchpointStartResponse extends BaseModel {\n  /**\n   * Catchup start response string\n   */\n  public catchupMessage: string;\n\n  /**\n   * Creates a new `CatchpointStartResponse` object.\n   * @param catchupMessage - Catchup start response string\n   */\n  constructor(catchupMessage: string) {\n    super();\n    this.catchupMessage = catchupMessage;\n\n    this.attribute_map = {\n      catchupMessage: 'catchup-message',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): CatchpointStartResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['catchup-message'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'catchup-message': ${data}`\n      );\n    return new CatchpointStartResponse(data['catchup-message']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Teal compile Result\n */\nexport class CompileResponse extends BaseModel {\n  /**\n   * base32 SHA512_256 of program bytes (Address style)\n   */\n  public hash: string;\n\n  /**\n   * base64 encoded program bytes\n   */\n  public result: string;\n\n  /**\n   * JSON of the source map\n   */\n  public sourcemap?: Record<string, any>;\n\n  /**\n   * Creates a new `CompileResponse` object.\n   * @param hash - base32 SHA512_256 of program bytes (Address style)\n   * @param result - base64 encoded program bytes\n   * @param sourcemap - JSON of the source map\n   */\n  constructor(hash: string, result: string, sourcemap?: Record<string, any>) {\n    super();\n    this.hash = hash;\n    this.result = result;\n    this.sourcemap = sourcemap;\n\n    this.attribute_map = {\n      hash: 'hash',\n      result: 'result',\n      sourcemap: 'sourcemap',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): CompileResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['hash'] === 'undefined')\n      throw new Error(`Response is missing required field 'hash': ${data}`);\n    if (typeof data['result'] === 'undefined')\n      throw new Error(`Response is missing required field 'result': ${data}`);\n    return new CompileResponse(data['hash'], data['result'], data['sourcemap']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Teal disassembly Result\n */\nexport class DisassembleResponse extends BaseModel {\n  /**\n   * disassembled Teal code\n   */\n  public result: string;\n\n  /**\n   * Creates a new `DisassembleResponse` object.\n   * @param result - disassembled Teal code\n   */\n  constructor(result: string) {\n    super();\n    this.result = result;\n\n    this.attribute_map = {\n      result: 'result',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DisassembleResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['result'] === 'undefined')\n      throw new Error(`Response is missing required field 'result': ${data}`);\n    return new DisassembleResponse(data['result']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Request data type for dryrun endpoint. Given the Transactions and simulated\n * ledger state upload, run TEAL scripts and return debugging information.\n */\nexport class DryrunRequest extends BaseModel {\n  public accounts: Account[];\n\n  public apps: Application[];\n\n  /**\n   * LatestTimestamp is available to some TEAL scripts. Defaults to the latest\n   * confirmed timestamp this algod is attached to.\n   */\n  public latestTimestamp: number | bigint;\n\n  /**\n   * ProtocolVersion specifies a specific version string to operate under, otherwise\n   * whatever the current protocol of the network this algod is running in.\n   */\n  public protocolVersion: string;\n\n  /**\n   * Round is available to some TEAL scripts. Defaults to the current round on the\n   * network this algod is attached to.\n   */\n  public round: number | bigint;\n\n  public sources: DryrunSource[];\n\n  public txns: EncodedSignedTransaction[];\n\n  /**\n   * Creates a new `DryrunRequest` object.\n   * @param accounts -\n   * @param apps -\n   * @param latestTimestamp - LatestTimestamp is available to some TEAL scripts. Defaults to the latest\n   * confirmed timestamp this algod is attached to.\n   * @param protocolVersion - ProtocolVersion specifies a specific version string to operate under, otherwise\n   * whatever the current protocol of the network this algod is running in.\n   * @param round - Round is available to some TEAL scripts. Defaults to the current round on the\n   * network this algod is attached to.\n   * @param sources -\n   * @param txns -\n   */\n  constructor({\n    accounts,\n    apps,\n    latestTimestamp,\n    protocolVersion,\n    round,\n    sources,\n    txns,\n  }: {\n    accounts: Account[];\n    apps: Application[];\n    latestTimestamp: number | bigint;\n    protocolVersion: string;\n    round: number | bigint;\n    sources: DryrunSource[];\n    txns: EncodedSignedTransaction[];\n  }) {\n    super();\n    this.accounts = accounts;\n    this.apps = apps;\n    this.latestTimestamp = latestTimestamp;\n    this.protocolVersion = protocolVersion;\n    this.round = round;\n    this.sources = sources;\n    this.txns = txns;\n\n    this.attribute_map = {\n      accounts: 'accounts',\n      apps: 'apps',\n      latestTimestamp: 'latest-timestamp',\n      protocolVersion: 'protocol-version',\n      round: 'round',\n      sources: 'sources',\n      txns: 'txns',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunRequest {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['accounts']))\n      throw new Error(\n        `Response is missing required array field 'accounts': ${data}`\n      );\n    if (!Array.isArray(data['apps']))\n      throw new Error(\n        `Response is missing required array field 'apps': ${data}`\n      );\n    if (typeof data['latest-timestamp'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'latest-timestamp': ${data}`\n      );\n    if (typeof data['protocol-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'protocol-version': ${data}`\n      );\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (!Array.isArray(data['sources']))\n      throw new Error(\n        `Response is missing required array field 'sources': ${data}`\n      );\n    if (!Array.isArray(data['txns']))\n      throw new Error(\n        `Response is missing required array field 'txns': ${data}`\n      );\n    return new DryrunRequest({\n      accounts: data['accounts'].map(Account.from_obj_for_encoding),\n      apps: data['apps'].map(Application.from_obj_for_encoding),\n      latestTimestamp: data['latest-timestamp'],\n      protocolVersion: data['protocol-version'],\n      round: data['round'],\n      sources: data['sources'].map(DryrunSource.from_obj_for_encoding),\n      txns: data['txns'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * DryrunResponse contains per-txn debug information from a dryrun.\n */\nexport class DryrunResponse extends BaseModel {\n  public error: string;\n\n  /**\n   * Protocol version is the protocol version Dryrun was operated under.\n   */\n  public protocolVersion: string;\n\n  public txns: DryrunTxnResult[];\n\n  /**\n   * Creates a new `DryrunResponse` object.\n   * @param error -\n   * @param protocolVersion - Protocol version is the protocol version Dryrun was operated under.\n   * @param txns -\n   */\n  constructor(error: string, protocolVersion: string, txns: DryrunTxnResult[]) {\n    super();\n    this.error = error;\n    this.protocolVersion = protocolVersion;\n    this.txns = txns;\n\n    this.attribute_map = {\n      error: 'error',\n      protocolVersion: 'protocol-version',\n      txns: 'txns',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['error'] === 'undefined')\n      throw new Error(`Response is missing required field 'error': ${data}`);\n    if (typeof data['protocol-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'protocol-version': ${data}`\n      );\n    if (!Array.isArray(data['txns']))\n      throw new Error(\n        `Response is missing required array field 'txns': ${data}`\n      );\n    return new DryrunResponse(\n      data['error'],\n      data['protocol-version'],\n      data['txns'].map(DryrunTxnResult.from_obj_for_encoding)\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into\n * transactions or application state.\n */\nexport class DryrunSource extends BaseModel {\n  /**\n   * FieldName is what kind of sources this is. If lsig then it goes into the\n   * transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the\n   * Approval Program or Clear State Program of application[this.AppIndex].\n   */\n  public fieldName: string;\n\n  public source: string;\n\n  public txnIndex: number | bigint;\n\n  public appIndex: number | bigint;\n\n  /**\n   * Creates a new `DryrunSource` object.\n   * @param fieldName - FieldName is what kind of sources this is. If lsig then it goes into the\n   * transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the\n   * Approval Program or Clear State Program of application[this.AppIndex].\n   * @param source -\n   * @param txnIndex -\n   * @param appIndex -\n   */\n  constructor(\n    fieldName: string,\n    source: string,\n    txnIndex: number | bigint,\n    appIndex: number | bigint\n  ) {\n    super();\n    this.fieldName = fieldName;\n    this.source = source;\n    this.txnIndex = txnIndex;\n    this.appIndex = appIndex;\n\n    this.attribute_map = {\n      fieldName: 'field-name',\n      source: 'source',\n      txnIndex: 'txn-index',\n      appIndex: 'app-index',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunSource {\n    /* eslint-disable dot-notation */\n    if (typeof data['field-name'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'field-name': ${data}`\n      );\n    if (typeof data['source'] === 'undefined')\n      throw new Error(`Response is missing required field 'source': ${data}`);\n    if (typeof data['txn-index'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'txn-index': ${data}`\n      );\n    if (typeof data['app-index'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'app-index': ${data}`\n      );\n    return new DryrunSource(\n      data['field-name'],\n      data['source'],\n      data['txn-index'],\n      data['app-index']\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores the TEAL eval step data\n */\nexport class DryrunState extends BaseModel {\n  /**\n   * Line number\n   */\n  public line: number | bigint;\n\n  /**\n   * Program counter\n   */\n  public pc: number | bigint;\n\n  public stack: TealValue[];\n\n  /**\n   * Evaluation error if any\n   */\n  public error?: string;\n\n  public scratch?: TealValue[];\n\n  /**\n   * Creates a new `DryrunState` object.\n   * @param line - Line number\n   * @param pc - Program counter\n   * @param stack -\n   * @param error - Evaluation error if any\n   * @param scratch -\n   */\n  constructor({\n    line,\n    pc,\n    stack,\n    error,\n    scratch,\n  }: {\n    line: number | bigint;\n    pc: number | bigint;\n    stack: TealValue[];\n    error?: string;\n    scratch?: TealValue[];\n  }) {\n    super();\n    this.line = line;\n    this.pc = pc;\n    this.stack = stack;\n    this.error = error;\n    this.scratch = scratch;\n\n    this.attribute_map = {\n      line: 'line',\n      pc: 'pc',\n      stack: 'stack',\n      error: 'error',\n      scratch: 'scratch',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunState {\n    /* eslint-disable dot-notation */\n    if (typeof data['line'] === 'undefined')\n      throw new Error(`Response is missing required field 'line': ${data}`);\n    if (typeof data['pc'] === 'undefined')\n      throw new Error(`Response is missing required field 'pc': ${data}`);\n    if (!Array.isArray(data['stack']))\n      throw new Error(\n        `Response is missing required array field 'stack': ${data}`\n      );\n    return new DryrunState({\n      line: data['line'],\n      pc: data['pc'],\n      stack: data['stack'].map(TealValue.from_obj_for_encoding),\n      error: data['error'],\n      scratch:\n        typeof data['scratch'] !== 'undefined'\n          ? data['scratch'].map(TealValue.from_obj_for_encoding)\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * DryrunTxnResult contains any LogicSig or ApplicationCall program debug\n * information and state updates from a dryrun.\n */\nexport class DryrunTxnResult extends BaseModel {\n  /**\n   * Disassembled program line by line.\n   */\n  public disassembly: string[];\n\n  public appCallMessages?: string[];\n\n  public appCallTrace?: DryrunState[];\n\n  /**\n   * Budget added during execution of app call transaction.\n   */\n  public budgetAdded?: number | bigint;\n\n  /**\n   * Budget consumed during execution of app call transaction.\n   */\n  public budgetConsumed?: number | bigint;\n\n  /**\n   * Net cost of app execution. Field is DEPRECATED and is subject for removal.\n   * Instead, use `budget-added` and `budget-consumed.\n   */\n  public cost?: number | bigint;\n\n  /**\n   * Application state delta.\n   */\n  public globalDelta?: EvalDeltaKeyValue[];\n\n  public localDeltas?: AccountStateDelta[];\n\n  /**\n   * Disassembled lsig program line by line.\n   */\n  public logicSigDisassembly?: string[];\n\n  public logicSigMessages?: string[];\n\n  public logicSigTrace?: DryrunState[];\n\n  public logs?: Uint8Array[];\n\n  /**\n   * Creates a new `DryrunTxnResult` object.\n   * @param disassembly - Disassembled program line by line.\n   * @param appCallMessages -\n   * @param appCallTrace -\n   * @param budgetAdded - Budget added during execution of app call transaction.\n   * @param budgetConsumed - Budget consumed during execution of app call transaction.\n   * @param cost - Net cost of app execution. Field is DEPRECATED and is subject for removal.\n   * Instead, use `budget-added` and `budget-consumed.\n   * @param globalDelta - Application state delta.\n   * @param localDeltas -\n   * @param logicSigDisassembly - Disassembled lsig program line by line.\n   * @param logicSigMessages -\n   * @param logicSigTrace -\n   * @param logs -\n   */\n  constructor({\n    disassembly,\n    appCallMessages,\n    appCallTrace,\n    budgetAdded,\n    budgetConsumed,\n    cost,\n    globalDelta,\n    localDeltas,\n    logicSigDisassembly,\n    logicSigMessages,\n    logicSigTrace,\n    logs,\n  }: {\n    disassembly: string[];\n    appCallMessages?: string[];\n    appCallTrace?: DryrunState[];\n    budgetAdded?: number | bigint;\n    budgetConsumed?: number | bigint;\n    cost?: number | bigint;\n    globalDelta?: EvalDeltaKeyValue[];\n    localDeltas?: AccountStateDelta[];\n    logicSigDisassembly?: string[];\n    logicSigMessages?: string[];\n    logicSigTrace?: DryrunState[];\n    logs?: Uint8Array[];\n  }) {\n    super();\n    this.disassembly = disassembly;\n    this.appCallMessages = appCallMessages;\n    this.appCallTrace = appCallTrace;\n    this.budgetAdded = budgetAdded;\n    this.budgetConsumed = budgetConsumed;\n    this.cost = cost;\n    this.globalDelta = globalDelta;\n    this.localDeltas = localDeltas;\n    this.logicSigDisassembly = logicSigDisassembly;\n    this.logicSigMessages = logicSigMessages;\n    this.logicSigTrace = logicSigTrace;\n    this.logs = logs;\n\n    this.attribute_map = {\n      disassembly: 'disassembly',\n      appCallMessages: 'app-call-messages',\n      appCallTrace: 'app-call-trace',\n      budgetAdded: 'budget-added',\n      budgetConsumed: 'budget-consumed',\n      cost: 'cost',\n      globalDelta: 'global-delta',\n      localDeltas: 'local-deltas',\n      logicSigDisassembly: 'logic-sig-disassembly',\n      logicSigMessages: 'logic-sig-messages',\n      logicSigTrace: 'logic-sig-trace',\n      logs: 'logs',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunTxnResult {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['disassembly']))\n      throw new Error(\n        `Response is missing required array field 'disassembly': ${data}`\n      );\n    return new DryrunTxnResult({\n      disassembly: data['disassembly'],\n      appCallMessages: data['app-call-messages'],\n      appCallTrace:\n        typeof data['app-call-trace'] !== 'undefined'\n          ? data['app-call-trace'].map(DryrunState.from_obj_for_encoding)\n          : undefined,\n      budgetAdded: data['budget-added'],\n      budgetConsumed: data['budget-consumed'],\n      cost: data['cost'],\n      globalDelta:\n        typeof data['global-delta'] !== 'undefined'\n          ? data['global-delta'].map(EvalDeltaKeyValue.from_obj_for_encoding)\n          : undefined,\n      localDeltas:\n        typeof data['local-deltas'] !== 'undefined'\n          ? data['local-deltas'].map(AccountStateDelta.from_obj_for_encoding)\n          : undefined,\n      logicSigDisassembly: data['logic-sig-disassembly'],\n      logicSigMessages: data['logic-sig-messages'],\n      logicSigTrace:\n        typeof data['logic-sig-trace'] !== 'undefined'\n          ? data['logic-sig-trace'].map(DryrunState.from_obj_for_encoding)\n          : undefined,\n      logs: data['logs'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * An error response with optional data field.\n */\nexport class ErrorResponse extends BaseModel {\n  public message: string;\n\n  public data?: Record<string, any>;\n\n  /**\n   * Creates a new `ErrorResponse` object.\n   * @param message -\n   * @param data -\n   */\n  constructor(message: string, data?: Record<string, any>) {\n    super();\n    this.message = message;\n    this.data = data;\n\n    this.attribute_map = {\n      message: 'message',\n      data: 'data',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ErrorResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['message'] === 'undefined')\n      throw new Error(`Response is missing required field 'message': ${data}`);\n    return new ErrorResponse(data['message'], data['data']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a TEAL value delta.\n */\nexport class EvalDelta extends BaseModel {\n  /**\n   * (at) delta action.\n   */\n  public action: number | bigint;\n\n  /**\n   * (bs) bytes value.\n   */\n  public bytes?: string;\n\n  /**\n   * (ui) uint value.\n   */\n  public uint?: number | bigint;\n\n  /**\n   * Creates a new `EvalDelta` object.\n   * @param action - (at) delta action.\n   * @param bytes - (bs) bytes value.\n   * @param uint - (ui) uint value.\n   */\n  constructor(action: number | bigint, bytes?: string, uint?: number | bigint) {\n    super();\n    this.action = action;\n    this.bytes = bytes;\n    this.uint = uint;\n\n    this.attribute_map = {\n      action: 'action',\n      bytes: 'bytes',\n      uint: 'uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): EvalDelta {\n    /* eslint-disable dot-notation */\n    if (typeof data['action'] === 'undefined')\n      throw new Error(`Response is missing required field 'action': ${data}`);\n    return new EvalDelta(data['action'], data['bytes'], data['uint']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Key-value pairs for StateDelta.\n */\nexport class EvalDeltaKeyValue extends BaseModel {\n  public key: string;\n\n  /**\n   * Represents a TEAL value delta.\n   */\n  public value: EvalDelta;\n\n  /**\n   * Creates a new `EvalDeltaKeyValue` object.\n   * @param key -\n   * @param value - Represents a TEAL value delta.\n   */\n  constructor(key: string, value: EvalDelta) {\n    super();\n    this.key = key;\n    this.value = value;\n\n    this.attribute_map = {\n      key: 'key',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): EvalDeltaKeyValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['key'] === 'undefined')\n      throw new Error(`Response is missing required field 'key': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new EvalDeltaKeyValue(\n      data['key'],\n      EvalDelta.from_obj_for_encoding(data['value'])\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Proof of membership and position of a light block header.\n */\nexport class LightBlockHeaderProof extends BaseModel {\n  /**\n   * The index of the light block header in the vector commitment tree\n   */\n  public index: number | bigint;\n\n  /**\n   * The encoded proof.\n   */\n  public proof: Uint8Array;\n\n  /**\n   * Represents the depth of the tree that is being proven, i.e. the number of edges\n   * from a leaf to the root.\n   */\n  public treedepth: number | bigint;\n\n  /**\n   * Creates a new `LightBlockHeaderProof` object.\n   * @param index - The index of the light block header in the vector commitment tree\n   * @param proof - The encoded proof.\n   * @param treedepth - Represents the depth of the tree that is being proven, i.e. the number of edges\n   * from a leaf to the root.\n   */\n  constructor(\n    index: number | bigint,\n    proof: string | Uint8Array,\n    treedepth: number | bigint\n  ) {\n    super();\n    this.index = index;\n    this.proof =\n      typeof proof === 'string'\n        ? new Uint8Array(Buffer.from(proof, 'base64'))\n        : proof;\n    this.treedepth = treedepth;\n\n    this.attribute_map = {\n      index: 'index',\n      proof: 'proof',\n      treedepth: 'treedepth',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): LightBlockHeaderProof {\n    /* eslint-disable dot-notation */\n    if (typeof data['index'] === 'undefined')\n      throw new Error(`Response is missing required field 'index': ${data}`);\n    if (typeof data['proof'] === 'undefined')\n      throw new Error(`Response is missing required field 'proof': ${data}`);\n    if (typeof data['treedepth'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'treedepth': ${data}`\n      );\n    return new LightBlockHeaderProof(\n      data['index'],\n      data['proof'],\n      data['treedepth']\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class NodeStatusResponse extends BaseModel {\n  /**\n   * CatchupTime in nanoseconds\n   */\n  public catchupTime: number | bigint;\n\n  /**\n   * LastRound indicates the last round seen\n   */\n  public lastRound: number | bigint;\n\n  /**\n   * LastVersion indicates the last consensus version supported\n   */\n  public lastVersion: string;\n\n  /**\n   * NextVersion of consensus protocol to use\n   */\n  public nextVersion: string;\n\n  /**\n   * NextVersionRound is the round at which the next consensus version will apply\n   */\n  public nextVersionRound: number | bigint;\n\n  /**\n   * NextVersionSupported indicates whether the next consensus version is supported\n   * by this node\n   */\n  public nextVersionSupported: boolean;\n\n  /**\n   * StoppedAtUnsupportedRound indicates that the node does not support the new\n   * rounds and has stopped making progress\n   */\n  public stoppedAtUnsupportedRound: boolean;\n\n  /**\n   * TimeSinceLastRound in nanoseconds\n   */\n  public timeSinceLastRound: number | bigint;\n\n  /**\n   * The current catchpoint that is being caught up to\n   */\n  public catchpoint?: string;\n\n  /**\n   * The number of blocks that have already been obtained by the node as part of the\n   * catchup\n   */\n  public catchpointAcquiredBlocks?: number | bigint;\n\n  /**\n   * The number of accounts from the current catchpoint that have been processed so\n   * far as part of the catchup\n   */\n  public catchpointProcessedAccounts?: number | bigint;\n\n  /**\n   * The number of key-values (KVs) from the current catchpoint that have been\n   * processed so far as part of the catchup\n   */\n  public catchpointProcessedKvs?: number | bigint;\n\n  /**\n   * The total number of accounts included in the current catchpoint\n   */\n  public catchpointTotalAccounts?: number | bigint;\n\n  /**\n   * The total number of blocks that are required to complete the current catchpoint\n   * catchup\n   */\n  public catchpointTotalBlocks?: number | bigint;\n\n  /**\n   * The total number of key-values (KVs) included in the current catchpoint\n   */\n  public catchpointTotalKvs?: number | bigint;\n\n  /**\n   * The number of accounts from the current catchpoint that have been verified so\n   * far as part of the catchup\n   */\n  public catchpointVerifiedAccounts?: number | bigint;\n\n  /**\n   * The number of key-values (KVs) from the current catchpoint that have been\n   * verified so far as part of the catchup\n   */\n  public catchpointVerifiedKvs?: number | bigint;\n\n  /**\n   * The last catchpoint seen by the node\n   */\n  public lastCatchpoint?: string;\n\n  /**\n   * Creates a new `NodeStatusResponse` object.\n   * @param catchupTime - CatchupTime in nanoseconds\n   * @param lastRound - LastRound indicates the last round seen\n   * @param lastVersion - LastVersion indicates the last consensus version supported\n   * @param nextVersion - NextVersion of consensus protocol to use\n   * @param nextVersionRound - NextVersionRound is the round at which the next consensus version will apply\n   * @param nextVersionSupported - NextVersionSupported indicates whether the next consensus version is supported\n   * by this node\n   * @param stoppedAtUnsupportedRound - StoppedAtUnsupportedRound indicates that the node does not support the new\n   * rounds and has stopped making progress\n   * @param timeSinceLastRound - TimeSinceLastRound in nanoseconds\n   * @param catchpoint - The current catchpoint that is being caught up to\n   * @param catchpointAcquiredBlocks - The number of blocks that have already been obtained by the node as part of the\n   * catchup\n   * @param catchpointProcessedAccounts - The number of accounts from the current catchpoint that have been processed so\n   * far as part of the catchup\n   * @param catchpointProcessedKvs - The number of key-values (KVs) from the current catchpoint that have been\n   * processed so far as part of the catchup\n   * @param catchpointTotalAccounts - The total number of accounts included in the current catchpoint\n   * @param catchpointTotalBlocks - The total number of blocks that are required to complete the current catchpoint\n   * catchup\n   * @param catchpointTotalKvs - The total number of key-values (KVs) included in the current catchpoint\n   * @param catchpointVerifiedAccounts - The number of accounts from the current catchpoint that have been verified so\n   * far as part of the catchup\n   * @param catchpointVerifiedKvs - The number of key-values (KVs) from the current catchpoint that have been\n   * verified so far as part of the catchup\n   * @param lastCatchpoint - The last catchpoint seen by the node\n   */\n  constructor({\n    catchupTime,\n    lastRound,\n    lastVersion,\n    nextVersion,\n    nextVersionRound,\n    nextVersionSupported,\n    stoppedAtUnsupportedRound,\n    timeSinceLastRound,\n    catchpoint,\n    catchpointAcquiredBlocks,\n    catchpointProcessedAccounts,\n    catchpointProcessedKvs,\n    catchpointTotalAccounts,\n    catchpointTotalBlocks,\n    catchpointTotalKvs,\n    catchpointVerifiedAccounts,\n    catchpointVerifiedKvs,\n    lastCatchpoint,\n  }: {\n    catchupTime: number | bigint;\n    lastRound: number | bigint;\n    lastVersion: string;\n    nextVersion: string;\n    nextVersionRound: number | bigint;\n    nextVersionSupported: boolean;\n    stoppedAtUnsupportedRound: boolean;\n    timeSinceLastRound: number | bigint;\n    catchpoint?: string;\n    catchpointAcquiredBlocks?: number | bigint;\n    catchpointProcessedAccounts?: number | bigint;\n    catchpointProcessedKvs?: number | bigint;\n    catchpointTotalAccounts?: number | bigint;\n    catchpointTotalBlocks?: number | bigint;\n    catchpointTotalKvs?: number | bigint;\n    catchpointVerifiedAccounts?: number | bigint;\n    catchpointVerifiedKvs?: number | bigint;\n    lastCatchpoint?: string;\n  }) {\n    super();\n    this.catchupTime = catchupTime;\n    this.lastRound = lastRound;\n    this.lastVersion = lastVersion;\n    this.nextVersion = nextVersion;\n    this.nextVersionRound = nextVersionRound;\n    this.nextVersionSupported = nextVersionSupported;\n    this.stoppedAtUnsupportedRound = stoppedAtUnsupportedRound;\n    this.timeSinceLastRound = timeSinceLastRound;\n    this.catchpoint = catchpoint;\n    this.catchpointAcquiredBlocks = catchpointAcquiredBlocks;\n    this.catchpointProcessedAccounts = catchpointProcessedAccounts;\n    this.catchpointProcessedKvs = catchpointProcessedKvs;\n    this.catchpointTotalAccounts = catchpointTotalAccounts;\n    this.catchpointTotalBlocks = catchpointTotalBlocks;\n    this.catchpointTotalKvs = catchpointTotalKvs;\n    this.catchpointVerifiedAccounts = catchpointVerifiedAccounts;\n    this.catchpointVerifiedKvs = catchpointVerifiedKvs;\n    this.lastCatchpoint = lastCatchpoint;\n\n    this.attribute_map = {\n      catchupTime: 'catchup-time',\n      lastRound: 'last-round',\n      lastVersion: 'last-version',\n      nextVersion: 'next-version',\n      nextVersionRound: 'next-version-round',\n      nextVersionSupported: 'next-version-supported',\n      stoppedAtUnsupportedRound: 'stopped-at-unsupported-round',\n      timeSinceLastRound: 'time-since-last-round',\n      catchpoint: 'catchpoint',\n      catchpointAcquiredBlocks: 'catchpoint-acquired-blocks',\n      catchpointProcessedAccounts: 'catchpoint-processed-accounts',\n      catchpointProcessedKvs: 'catchpoint-processed-kvs',\n      catchpointTotalAccounts: 'catchpoint-total-accounts',\n      catchpointTotalBlocks: 'catchpoint-total-blocks',\n      catchpointTotalKvs: 'catchpoint-total-kvs',\n      catchpointVerifiedAccounts: 'catchpoint-verified-accounts',\n      catchpointVerifiedKvs: 'catchpoint-verified-kvs',\n      lastCatchpoint: 'last-catchpoint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): NodeStatusResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['catchup-time'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'catchup-time': ${data}`\n      );\n    if (typeof data['last-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'last-round': ${data}`\n      );\n    if (typeof data['last-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'last-version': ${data}`\n      );\n    if (typeof data['next-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'next-version': ${data}`\n      );\n    if (typeof data['next-version-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'next-version-round': ${data}`\n      );\n    if (typeof data['next-version-supported'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'next-version-supported': ${data}`\n      );\n    if (typeof data['stopped-at-unsupported-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'stopped-at-unsupported-round': ${data}`\n      );\n    if (typeof data['time-since-last-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'time-since-last-round': ${data}`\n      );\n    return new NodeStatusResponse({\n      catchupTime: data['catchup-time'],\n      lastRound: data['last-round'],\n      lastVersion: data['last-version'],\n      nextVersion: data['next-version'],\n      nextVersionRound: data['next-version-round'],\n      nextVersionSupported: data['next-version-supported'],\n      stoppedAtUnsupportedRound: data['stopped-at-unsupported-round'],\n      timeSinceLastRound: data['time-since-last-round'],\n      catchpoint: data['catchpoint'],\n      catchpointAcquiredBlocks: data['catchpoint-acquired-blocks'],\n      catchpointProcessedAccounts: data['catchpoint-processed-accounts'],\n      catchpointProcessedKvs: data['catchpoint-processed-kvs'],\n      catchpointTotalAccounts: data['catchpoint-total-accounts'],\n      catchpointTotalBlocks: data['catchpoint-total-blocks'],\n      catchpointTotalKvs: data['catchpoint-total-kvs'],\n      catchpointVerifiedAccounts: data['catchpoint-verified-accounts'],\n      catchpointVerifiedKvs: data['catchpoint-verified-kvs'],\n      lastCatchpoint: data['last-catchpoint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Details about a pending transaction. If the transaction was recently confirmed,\n * includes confirmation details like the round and reward details.\n */\nexport class PendingTransactionResponse extends BaseModel {\n  /**\n   * Indicates that the transaction was kicked out of this node's transaction pool\n   * (and specifies why that happened). An empty string indicates the transaction\n   * wasn't kicked out of this node's txpool due to an error.\n   */\n  public poolError: string;\n\n  /**\n   * The raw signed transaction.\n   */\n  public txn: EncodedSignedTransaction;\n\n  /**\n   * The application index if the transaction was found and it created an\n   * application.\n   */\n  public applicationIndex?: number | bigint;\n\n  /**\n   * The number of the asset's unit that were transferred to the close-to address.\n   */\n  public assetClosingAmount?: number | bigint;\n\n  /**\n   * The asset index if the transaction was found and it created an asset.\n   */\n  public assetIndex?: number | bigint;\n\n  /**\n   * Rewards in microalgos applied to the close remainder to account.\n   */\n  public closeRewards?: number | bigint;\n\n  /**\n   * Closing amount for the transaction.\n   */\n  public closingAmount?: number | bigint;\n\n  /**\n   * The round where this transaction was confirmed, if present.\n   */\n  public confirmedRound?: number | bigint;\n\n  /**\n   * (gd) Global state key/value changes for the application being executed by this\n   * transaction.\n   */\n  public globalStateDelta?: EvalDeltaKeyValue[];\n\n  /**\n   * Inner transactions produced by application execution.\n   */\n  public innerTxns?: PendingTransactionResponse[];\n\n  /**\n   * (ld) Local state key/value changes for the application being executed by this\n   * transaction.\n   */\n  public localStateDelta?: AccountStateDelta[];\n\n  /**\n   * (lg) Logs for the application being executed by this transaction.\n   */\n  public logs?: Uint8Array[];\n\n  /**\n   * Rewards in microalgos applied to the receiver account.\n   */\n  public receiverRewards?: number | bigint;\n\n  /**\n   * Rewards in microalgos applied to the sender account.\n   */\n  public senderRewards?: number | bigint;\n\n  /**\n   * Creates a new `PendingTransactionResponse` object.\n   * @param poolError - Indicates that the transaction was kicked out of this node's transaction pool\n   * (and specifies why that happened). An empty string indicates the transaction\n   * wasn't kicked out of this node's txpool due to an error.\n   * @param txn - The raw signed transaction.\n   * @param applicationIndex - The application index if the transaction was found and it created an\n   * application.\n   * @param assetClosingAmount - The number of the asset's unit that were transferred to the close-to address.\n   * @param assetIndex - The asset index if the transaction was found and it created an asset.\n   * @param closeRewards - Rewards in microalgos applied to the close remainder to account.\n   * @param closingAmount - Closing amount for the transaction.\n   * @param confirmedRound - The round where this transaction was confirmed, if present.\n   * @param globalStateDelta - (gd) Global state key/value changes for the application being executed by this\n   * transaction.\n   * @param innerTxns - Inner transactions produced by application execution.\n   * @param localStateDelta - (ld) Local state key/value changes for the application being executed by this\n   * transaction.\n   * @param logs - (lg) Logs for the application being executed by this transaction.\n   * @param receiverRewards - Rewards in microalgos applied to the receiver account.\n   * @param senderRewards - Rewards in microalgos applied to the sender account.\n   */\n  constructor({\n    poolError,\n    txn,\n    applicationIndex,\n    assetClosingAmount,\n    assetIndex,\n    closeRewards,\n    closingAmount,\n    confirmedRound,\n    globalStateDelta,\n    innerTxns,\n    localStateDelta,\n    logs,\n    receiverRewards,\n    senderRewards,\n  }: {\n    poolError: string;\n    txn: EncodedSignedTransaction;\n    applicationIndex?: number | bigint;\n    assetClosingAmount?: number | bigint;\n    assetIndex?: number | bigint;\n    closeRewards?: number | bigint;\n    closingAmount?: number | bigint;\n    confirmedRound?: number | bigint;\n    globalStateDelta?: EvalDeltaKeyValue[];\n    innerTxns?: PendingTransactionResponse[];\n    localStateDelta?: AccountStateDelta[];\n    logs?: Uint8Array[];\n    receiverRewards?: number | bigint;\n    senderRewards?: number | bigint;\n  }) {\n    super();\n    this.poolError = poolError;\n    this.txn = txn;\n    this.applicationIndex = applicationIndex;\n    this.assetClosingAmount = assetClosingAmount;\n    this.assetIndex = assetIndex;\n    this.closeRewards = closeRewards;\n    this.closingAmount = closingAmount;\n    this.confirmedRound = confirmedRound;\n    this.globalStateDelta = globalStateDelta;\n    this.innerTxns = innerTxns;\n    this.localStateDelta = localStateDelta;\n    this.logs = logs;\n    this.receiverRewards = receiverRewards;\n    this.senderRewards = senderRewards;\n\n    this.attribute_map = {\n      poolError: 'pool-error',\n      txn: 'txn',\n      applicationIndex: 'application-index',\n      assetClosingAmount: 'asset-closing-amount',\n      assetIndex: 'asset-index',\n      closeRewards: 'close-rewards',\n      closingAmount: 'closing-amount',\n      confirmedRound: 'confirmed-round',\n      globalStateDelta: 'global-state-delta',\n      innerTxns: 'inner-txns',\n      localStateDelta: 'local-state-delta',\n      logs: 'logs',\n      receiverRewards: 'receiver-rewards',\n      senderRewards: 'sender-rewards',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): PendingTransactionResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['pool-error'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'pool-error': ${data}`\n      );\n    if (typeof data['txn'] === 'undefined')\n      throw new Error(`Response is missing required field 'txn': ${data}`);\n    return new PendingTransactionResponse({\n      poolError: data['pool-error'],\n      txn: data['txn'],\n      applicationIndex: data['application-index'],\n      assetClosingAmount: data['asset-closing-amount'],\n      assetIndex: data['asset-index'],\n      closeRewards: data['close-rewards'],\n      closingAmount: data['closing-amount'],\n      confirmedRound: data['confirmed-round'],\n      globalStateDelta:\n        typeof data['global-state-delta'] !== 'undefined'\n          ? data['global-state-delta'].map(\n              EvalDeltaKeyValue.from_obj_for_encoding\n            )\n          : undefined,\n      innerTxns:\n        typeof data['inner-txns'] !== 'undefined'\n          ? data['inner-txns'].map(\n              PendingTransactionResponse.from_obj_for_encoding\n            )\n          : undefined,\n      localStateDelta:\n        typeof data['local-state-delta'] !== 'undefined'\n          ? data['local-state-delta'].map(\n              AccountStateDelta.from_obj_for_encoding\n            )\n          : undefined,\n      logs: data['logs'],\n      receiverRewards: data['receiver-rewards'],\n      senderRewards: data['sender-rewards'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * A potentially truncated list of transactions currently in the node's transaction\n * pool. You can compute whether or not the list is truncated if the number of\n * elements in the **top-transactions** array is fewer than **total-transactions**.\n */\nexport class PendingTransactionsResponse extends BaseModel {\n  /**\n   * An array of signed transaction objects.\n   */\n  public topTransactions: EncodedSignedTransaction[];\n\n  /**\n   * Total number of transactions in the pool.\n   */\n  public totalTransactions: number | bigint;\n\n  /**\n   * Creates a new `PendingTransactionsResponse` object.\n   * @param topTransactions - An array of signed transaction objects.\n   * @param totalTransactions - Total number of transactions in the pool.\n   */\n  constructor(\n    topTransactions: EncodedSignedTransaction[],\n    totalTransactions: number | bigint\n  ) {\n    super();\n    this.topTransactions = topTransactions;\n    this.totalTransactions = totalTransactions;\n\n    this.attribute_map = {\n      topTransactions: 'top-transactions',\n      totalTransactions: 'total-transactions',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): PendingTransactionsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['top-transactions']))\n      throw new Error(\n        `Response is missing required array field 'top-transactions': ${data}`\n      );\n    if (typeof data['total-transactions'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-transactions': ${data}`\n      );\n    return new PendingTransactionsResponse(\n      data['top-transactions'],\n      data['total-transactions']\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Transaction ID of the submission.\n */\nexport class PostTransactionsResponse extends BaseModel {\n  /**\n   * encoding of the transaction hash.\n   */\n  public txid: string;\n\n  /**\n   * Creates a new `PostTransactionsResponse` object.\n   * @param txid - encoding of the transaction hash.\n   */\n  constructor(txid: string) {\n    super();\n    this.txid = txid;\n\n    this.attribute_map = {\n      txid: 'txId',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): PostTransactionsResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['txId'] === 'undefined')\n      throw new Error(`Response is missing required field 'txId': ${data}`);\n    return new PostTransactionsResponse(data['txId']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a state proof and its corresponding message\n */\nexport class StateProof extends BaseModel {\n  /**\n   * Represents the message that the state proofs are attesting to.\n   */\n  public message: StateProofMessage;\n\n  /**\n   * The encoded StateProof for the message.\n   */\n  public stateproof: Uint8Array;\n\n  /**\n   * Creates a new `StateProof` object.\n   * @param message - Represents the message that the state proofs are attesting to.\n   * @param stateproof - The encoded StateProof for the message.\n   */\n  constructor(message: StateProofMessage, stateproof: string | Uint8Array) {\n    super();\n    this.message = message;\n    this.stateproof =\n      typeof stateproof === 'string'\n        ? new Uint8Array(Buffer.from(stateproof, 'base64'))\n        : stateproof;\n\n    this.attribute_map = {\n      message: 'Message',\n      stateproof: 'StateProof',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProof {\n    /* eslint-disable dot-notation */\n    if (typeof data['Message'] === 'undefined')\n      throw new Error(`Response is missing required field 'Message': ${data}`);\n    if (typeof data['StateProof'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'StateProof': ${data}`\n      );\n    return new StateProof(\n      StateProofMessage.from_obj_for_encoding(data['Message']),\n      data['StateProof']\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents the message that the state proofs are attesting to.\n */\nexport class StateProofMessage extends BaseModel {\n  /**\n   * The vector commitment root on all light block headers within a state proof\n   * interval.\n   */\n  public blockheaderscommitment: Uint8Array;\n\n  /**\n   * The first round the message attests to.\n   */\n  public firstattestedround: number | bigint;\n\n  /**\n   * The last round the message attests to.\n   */\n  public lastattestedround: number | bigint;\n\n  /**\n   * An integer value representing the natural log of the proven weight with 16 bits\n   * of precision. This value would be used to verify the next state proof.\n   */\n  public lnprovenweight: number | bigint;\n\n  /**\n   * The vector commitment root of the top N accounts to sign the next StateProof.\n   */\n  public voterscommitment: Uint8Array;\n\n  /**\n   * Creates a new `StateProofMessage` object.\n   * @param blockheaderscommitment - The vector commitment root on all light block headers within a state proof\n   * interval.\n   * @param firstattestedround - The first round the message attests to.\n   * @param lastattestedround - The last round the message attests to.\n   * @param lnprovenweight - An integer value representing the natural log of the proven weight with 16 bits\n   * of precision. This value would be used to verify the next state proof.\n   * @param voterscommitment - The vector commitment root of the top N accounts to sign the next StateProof.\n   */\n  constructor({\n    blockheaderscommitment,\n    firstattestedround,\n    lastattestedround,\n    lnprovenweight,\n    voterscommitment,\n  }: {\n    blockheaderscommitment: string | Uint8Array;\n    firstattestedround: number | bigint;\n    lastattestedround: number | bigint;\n    lnprovenweight: number | bigint;\n    voterscommitment: string | Uint8Array;\n  }) {\n    super();\n    this.blockheaderscommitment =\n      typeof blockheaderscommitment === 'string'\n        ? new Uint8Array(Buffer.from(blockheaderscommitment, 'base64'))\n        : blockheaderscommitment;\n    this.firstattestedround = firstattestedround;\n    this.lastattestedround = lastattestedround;\n    this.lnprovenweight = lnprovenweight;\n    this.voterscommitment =\n      typeof voterscommitment === 'string'\n        ? new Uint8Array(Buffer.from(voterscommitment, 'base64'))\n        : voterscommitment;\n\n    this.attribute_map = {\n      blockheaderscommitment: 'BlockHeadersCommitment',\n      firstattestedround: 'FirstAttestedRound',\n      lastattestedround: 'LastAttestedRound',\n      lnprovenweight: 'LnProvenWeight',\n      voterscommitment: 'VotersCommitment',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofMessage {\n    /* eslint-disable dot-notation */\n    if (typeof data['BlockHeadersCommitment'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'BlockHeadersCommitment': ${data}`\n      );\n    if (typeof data['FirstAttestedRound'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'FirstAttestedRound': ${data}`\n      );\n    if (typeof data['LastAttestedRound'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'LastAttestedRound': ${data}`\n      );\n    if (typeof data['LnProvenWeight'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'LnProvenWeight': ${data}`\n      );\n    if (typeof data['VotersCommitment'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'VotersCommitment': ${data}`\n      );\n    return new StateProofMessage({\n      blockheaderscommitment: data['BlockHeadersCommitment'],\n      firstattestedround: data['FirstAttestedRound'],\n      lastattestedround: data['LastAttestedRound'],\n      lnprovenweight: data['LnProvenWeight'],\n      voterscommitment: data['VotersCommitment'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Supply represents the current supply of MicroAlgos in the system.\n */\nexport class SupplyResponse extends BaseModel {\n  /**\n   * Round\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * OnlineMoney\n   */\n  public onlineMoney: number | bigint;\n\n  /**\n   * TotalMoney\n   */\n  public totalMoney: number | bigint;\n\n  /**\n   * Creates a new `SupplyResponse` object.\n   * @param currentRound - Round\n   * @param onlineMoney - OnlineMoney\n   * @param totalMoney - TotalMoney\n   */\n  constructor(\n    currentRound: number | bigint,\n    onlineMoney: number | bigint,\n    totalMoney: number | bigint\n  ) {\n    super();\n    this.currentRound = currentRound;\n    this.onlineMoney = onlineMoney;\n    this.totalMoney = totalMoney;\n\n    this.attribute_map = {\n      currentRound: 'current_round',\n      onlineMoney: 'online-money',\n      totalMoney: 'total-money',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): SupplyResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['current_round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current_round': ${data}`\n      );\n    if (typeof data['online-money'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'online-money': ${data}`\n      );\n    if (typeof data['total-money'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-money': ${data}`\n      );\n    return new SupplyResponse(\n      data['current_round'],\n      data['online-money'],\n      data['total-money']\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a key-value pair in an application store.\n */\nexport class TealKeyValue extends BaseModel {\n  public key: string;\n\n  /**\n   * Represents a TEAL value.\n   */\n  public value: TealValue;\n\n  /**\n   * Creates a new `TealKeyValue` object.\n   * @param key -\n   * @param value - Represents a TEAL value.\n   */\n  constructor(key: string, value: TealValue) {\n    super();\n    this.key = key;\n    this.value = value;\n\n    this.attribute_map = {\n      key: 'key',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TealKeyValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['key'] === 'undefined')\n      throw new Error(`Response is missing required field 'key': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new TealKeyValue(\n      data['key'],\n      TealValue.from_obj_for_encoding(data['value'])\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a TEAL value.\n */\nexport class TealValue extends BaseModel {\n  /**\n   * (tt) value type. Value `1` refers to **bytes**, value `2` refers to **uint**\n   */\n  public type: number | bigint;\n\n  /**\n   * (tb) bytes value.\n   */\n  public bytes: string;\n\n  /**\n   * (ui) uint value.\n   */\n  public uint: number | bigint;\n\n  /**\n   * Creates a new `TealValue` object.\n   * @param type - (tt) value type. Value `1` refers to **bytes**, value `2` refers to **uint**\n   * @param bytes - (tb) bytes value.\n   * @param uint - (ui) uint value.\n   */\n  constructor(type: number | bigint, bytes: string, uint: number | bigint) {\n    super();\n    this.type = type;\n    this.bytes = bytes;\n    this.uint = uint;\n\n    this.attribute_map = {\n      type: 'type',\n      bytes: 'bytes',\n      uint: 'uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TealValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['type'] === 'undefined')\n      throw new Error(`Response is missing required field 'type': ${data}`);\n    if (typeof data['bytes'] === 'undefined')\n      throw new Error(`Response is missing required field 'bytes': ${data}`);\n    if (typeof data['uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'uint': ${data}`);\n    return new TealValue(data['type'], data['bytes'], data['uint']);\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * TransactionParams contains the parameters that help a client construct a new\n * transaction.\n */\nexport class TransactionParametersResponse extends BaseModel {\n  /**\n   * ConsensusVersion indicates the consensus protocol version\n   * as of LastRound.\n   */\n  public consensusVersion: string;\n\n  /**\n   * Fee is the suggested transaction fee\n   * Fee is in units of micro-Algos per byte.\n   * Fee may fall to zero but transactions must still have a fee of\n   * at least MinTxnFee for the current network protocol.\n   */\n  public fee: number | bigint;\n\n  /**\n   * GenesisHash is the hash of the genesis block.\n   */\n  public genesisHash: Uint8Array;\n\n  /**\n   * GenesisID is an ID listed in the genesis block.\n   */\n  public genesisId: string;\n\n  /**\n   * LastRound indicates the last round seen\n   */\n  public lastRound: number | bigint;\n\n  /**\n   * The minimum transaction fee (not per byte) required for the\n   * txn to validate for the current network protocol.\n   */\n  public minFee: number | bigint;\n\n  /**\n   * Creates a new `TransactionParametersResponse` object.\n   * @param consensusVersion - ConsensusVersion indicates the consensus protocol version\n   * as of LastRound.\n   * @param fee - Fee is the suggested transaction fee\n   * Fee is in units of micro-Algos per byte.\n   * Fee may fall to zero but transactions must still have a fee of\n   * at least MinTxnFee for the current network protocol.\n   * @param genesisHash - GenesisHash is the hash of the genesis block.\n   * @param genesisId - GenesisID is an ID listed in the genesis block.\n   * @param lastRound - LastRound indicates the last round seen\n   * @param minFee - The minimum transaction fee (not per byte) required for the\n   * txn to validate for the current network protocol.\n   */\n  constructor({\n    consensusVersion,\n    fee,\n    genesisHash,\n    genesisId,\n    lastRound,\n    minFee,\n  }: {\n    consensusVersion: string;\n    fee: number | bigint;\n    genesisHash: string | Uint8Array;\n    genesisId: string;\n    lastRound: number | bigint;\n    minFee: number | bigint;\n  }) {\n    super();\n    this.consensusVersion = consensusVersion;\n    this.fee = fee;\n    this.genesisHash =\n      typeof genesisHash === 'string'\n        ? new Uint8Array(Buffer.from(genesisHash, 'base64'))\n        : genesisHash;\n    this.genesisId = genesisId;\n    this.lastRound = lastRound;\n    this.minFee = minFee;\n\n    this.attribute_map = {\n      consensusVersion: 'consensus-version',\n      fee: 'fee',\n      genesisHash: 'genesis-hash',\n      genesisId: 'genesis-id',\n      lastRound: 'last-round',\n      minFee: 'min-fee',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionParametersResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['consensus-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'consensus-version': ${data}`\n      );\n    if (typeof data['fee'] === 'undefined')\n      throw new Error(`Response is missing required field 'fee': ${data}`);\n    if (typeof data['genesis-hash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis-hash': ${data}`\n      );\n    if (typeof data['genesis-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis-id': ${data}`\n      );\n    if (typeof data['last-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'last-round': ${data}`\n      );\n    if (typeof data['min-fee'] === 'undefined')\n      throw new Error(`Response is missing required field 'min-fee': ${data}`);\n    return new TransactionParametersResponse({\n      consensusVersion: data['consensus-version'],\n      fee: data['fee'],\n      genesisHash: data['genesis-hash'],\n      genesisId: data['genesis-id'],\n      lastRound: data['last-round'],\n      minFee: data['min-fee'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Proof of transaction in a block.\n */\nexport class TransactionProofResponse extends BaseModel {\n  /**\n   * Index of the transaction in the block's payset.\n   */\n  public idx: number | bigint;\n\n  /**\n   * Proof of transaction membership.\n   */\n  public proof: Uint8Array;\n\n  /**\n   * Hash of SignedTxnInBlock for verifying proof.\n   */\n  public stibhash: Uint8Array;\n\n  /**\n   * Represents the depth of the tree that is being proven, i.e. the number of edges\n   * from a leaf to the root.\n   */\n  public treedepth: number | bigint;\n\n  /**\n   * The type of hash function used to create the proof, must be one of:\n   * * sha512_256\n   * * sha256\n   */\n  public hashtype?: string;\n\n  /**\n   * Creates a new `TransactionProofResponse` object.\n   * @param idx - Index of the transaction in the block's payset.\n   * @param proof - Proof of transaction membership.\n   * @param stibhash - Hash of SignedTxnInBlock for verifying proof.\n   * @param treedepth - Represents the depth of the tree that is being proven, i.e. the number of edges\n   * from a leaf to the root.\n   * @param hashtype - The type of hash function used to create the proof, must be one of:\n   * * sha512_256\n   * * sha256\n   */\n  constructor({\n    idx,\n    proof,\n    stibhash,\n    treedepth,\n    hashtype,\n  }: {\n    idx: number | bigint;\n    proof: string | Uint8Array;\n    stibhash: string | Uint8Array;\n    treedepth: number | bigint;\n    hashtype?: string;\n  }) {\n    super();\n    this.idx = idx;\n    this.proof =\n      typeof proof === 'string'\n        ? new Uint8Array(Buffer.from(proof, 'base64'))\n        : proof;\n    this.stibhash =\n      typeof stibhash === 'string'\n        ? new Uint8Array(Buffer.from(stibhash, 'base64'))\n        : stibhash;\n    this.treedepth = treedepth;\n    this.hashtype = hashtype;\n\n    this.attribute_map = {\n      idx: 'idx',\n      proof: 'proof',\n      stibhash: 'stibhash',\n      treedepth: 'treedepth',\n      hashtype: 'hashtype',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionProofResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['idx'] === 'undefined')\n      throw new Error(`Response is missing required field 'idx': ${data}`);\n    if (typeof data['proof'] === 'undefined')\n      throw new Error(`Response is missing required field 'proof': ${data}`);\n    if (typeof data['stibhash'] === 'undefined')\n      throw new Error(`Response is missing required field 'stibhash': ${data}`);\n    if (typeof data['treedepth'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'treedepth': ${data}`\n      );\n    return new TransactionProofResponse({\n      idx: data['idx'],\n      proof: data['proof'],\n      stibhash: data['stibhash'],\n      treedepth: data['treedepth'],\n      hashtype: data['hashtype'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * algod version information.\n */\nexport class Version extends BaseModel {\n  public build: BuildVersion;\n\n  public genesisHashB64: Uint8Array;\n\n  public genesisId: string;\n\n  public versions: string[];\n\n  /**\n   * Creates a new `Version` object.\n   * @param build -\n   * @param genesisHashB64 -\n   * @param genesisId -\n   * @param versions -\n   */\n  constructor(\n    build: BuildVersion,\n    genesisHashB64: string | Uint8Array,\n    genesisId: string,\n    versions: string[]\n  ) {\n    super();\n    this.build = build;\n    this.genesisHashB64 =\n      typeof genesisHashB64 === 'string'\n        ? new Uint8Array(Buffer.from(genesisHashB64, 'base64'))\n        : genesisHashB64;\n    this.genesisId = genesisId;\n    this.versions = versions;\n\n    this.attribute_map = {\n      build: 'build',\n      genesisHashB64: 'genesis_hash_b64',\n      genesisId: 'genesis_id',\n      versions: 'versions',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Version {\n    /* eslint-disable dot-notation */\n    if (typeof data['build'] === 'undefined')\n      throw new Error(`Response is missing required field 'build': ${data}`);\n    if (typeof data['genesis_hash_b64'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis_hash_b64': ${data}`\n      );\n    if (typeof data['genesis_id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis_id': ${data}`\n      );\n    if (!Array.isArray(data['versions']))\n      throw new Error(\n        `Response is missing required array field 'versions': ${data}`\n      );\n    return new Version(\n      BuildVersion.from_obj_for_encoding(data['build']),\n      data['genesis_hash_b64'],\n      data['genesis_id'],\n      data['versions']\n    );\n    /* eslint-enable dot-notation */\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport { concatArrays } from '../../../utils/utils';\n\n/**\n * Sets the default header (if not previously set) for sending a raw\n * transaction.\n * @param headers - A headers object\n */\nexport function setSendTransactionHeaders(headers = {}) {\n  let hdrs = headers;\n  if (Object.keys(hdrs).every((key) => key.toLowerCase() !== 'content-type')) {\n    hdrs = { ...headers };\n    hdrs['Content-Type'] = 'application/x-binary';\n  }\n  return hdrs;\n}\n\nfunction isByteArray(array: any): array is Uint8Array {\n  return array && array.byteLength !== undefined;\n}\n\n/**\n * broadcasts the passed signed txns to the network\n */\nexport default class SendRawTransaction extends JSONRequest {\n  private txnBytesToPost: Uint8Array;\n\n  constructor(c: HTTPClient, stxOrStxs: Uint8Array | Uint8Array[]) {\n    super(c);\n\n    let forPosting = stxOrStxs;\n    if (Array.isArray(stxOrStxs)) {\n      if (!stxOrStxs.every(isByteArray)) {\n        throw new TypeError('Array elements must be byte arrays');\n      }\n      // Flatten into a single Uint8Array\n      forPosting = concatArrays(...stxOrStxs);\n    } else if (!isByteArray(forPosting)) {\n      throw new TypeError('Argument must be byte array');\n    }\n    this.txnBytesToPost = forPosting;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/transactions';\n  }\n\n  async do(headers = {}) {\n    const txHeaders = setSendTransactionHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.txnBytesToPost),\n      txHeaders\n    );\n    return res.body;\n  }\n}\n","/**\n * Base class for models\n */\n\n/* eslint-disable no-underscore-dangle,camelcase */\nfunction _is_primitive(val: any): val is string | boolean | number | bigint {\n  /* eslint-enable no-underscore-dangle,camelcase */\n  return (\n    val === undefined ||\n    val == null ||\n    (typeof val !== 'object' && typeof val !== 'function')\n  );\n}\n\n/* eslint-disable no-underscore-dangle,camelcase,no-redeclare,no-unused-vars */\nfunction _get_obj_for_encoding(\n  val: Function,\n  binary: boolean\n): Record<string, any>;\nfunction _get_obj_for_encoding(val: any[], binary: boolean): any[];\nfunction _get_obj_for_encoding(\n  val: Record<string, any>,\n  binary: boolean\n): Record<string, any>;\nfunction _get_obj_for_encoding(val: any, binary: boolean): any {\n  /* eslint-enable no-underscore-dangle,camelcase,no-redeclare,no-unused-vars */\n  let targetPropValue: any;\n\n  if (val instanceof Uint8Array) {\n    targetPropValue = binary ? val : Buffer.from(val).toString('base64');\n  } else if (typeof val.get_obj_for_encoding === 'function') {\n    targetPropValue = val.get_obj_for_encoding(binary);\n  } else if (Array.isArray(val)) {\n    targetPropValue = [];\n    for (const elem of val) {\n      targetPropValue.push(_get_obj_for_encoding(elem, binary));\n    }\n  } else if (typeof val === 'object') {\n    const obj = {};\n    for (const prop of Object.keys(val)) {\n      obj[prop] = _get_obj_for_encoding(val[prop], binary);\n    }\n    targetPropValue = obj;\n  } else if (_is_primitive(val)) {\n    targetPropValue = val;\n  } else {\n    throw new Error(`Unsupported value: ${String(val)}`);\n  }\n  return targetPropValue;\n}\n\nexport default class BaseModel {\n  /* eslint-disable no-underscore-dangle,camelcase */\n  attribute_map: Record<string, string>;\n\n  /**\n   * Get an object ready for encoding to either JSON or msgpack.\n   * @param binary - Use true to indicate that the encoding can handle raw binary objects\n   *   (Uint8Arrays). Use false to indicate that raw binary objects should be converted to base64\n   *   strings. True should be used for objects that will be encoded with msgpack, and false should\n   *   be used for objects that will be encoded with JSON.\n   */\n  get_obj_for_encoding(binary = false) {\n    /* eslint-enable no-underscore-dangle,camelcase */\n    const obj: Record<string, any> = {};\n\n    for (const prop of Object.keys(this.attribute_map)) {\n      const name = this.attribute_map[prop];\n      const value = this[prop];\n\n      if (typeof value !== 'undefined') {\n        obj[name] =\n          value === null ? null : _get_obj_for_encoding(value, binary);\n      }\n    }\n\n    return obj;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * Returns the health object for the service.\n * Returns 200 if healthy.\n *\n * #### Example\n * ```typescript\n * const health = await indexerClient.makeHealthCheck().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-health)\n * @category GET\n */\nexport default class MakeHealthCheck extends JSONRequest {\n  /**\n   * @returns `/health`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/health';\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAssetBalances extends JSONRequest {\n  /**\n   * Returns the list of accounts which hold the given asset and their balance.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetBalances = await indexerClient.lookupAssetBalances(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idbalances)\n   * @param index - The asset ID to look up.\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/assets/${index}/balances`\n   */\n  path() {\n    return `/v2/assets/${this.index}/balances`;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const maxResults = 20;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an asset balance greater than this value.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const minBalance = 1000000;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .currencyGreaterThan(minBalance)\n   *        .do();\n   * ```\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an asset balance less than this value.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const maxBalance = 2000000;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .currencyLessThan(maxBalance)\n   *        .do();\n   * ```\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const maxResults = 20;\n   *\n   * const assetBalancesPage1 = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const assetBalancesPage2 = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .limit(maxResults)\n   *        .nextToken(assetBalancesPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates.\n   *\n   * #### Example 1\n   * ```typescript\n   * const assetId = 163650;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetId = 163650;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\n/**\n * Accept base64 string or Uint8Array and output base64 string\n * @param data - Base64 string or Uint8Array\n * @returns The inputted base64 string, or a base64 string representation of the Uint8Array\n */\nexport function base64StringFunnel(data: Uint8Array | string) {\n  if (typeof data === 'string') {\n    return data;\n  }\n  return Buffer.from(data).toString('base64');\n}\n\nexport default class LookupAccountTransactions extends JSONRequest {\n  /**\n   * Returns transactions relating to the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient.lookupAccountTransactions(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idtransactions)\n   * @param account - The address of the account.\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/transactions`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/transactions`;\n  }\n\n  /**\n   * Specifies a prefix which must be contained in the note field.\n   *\n   * #### Example\n   * ```typescript\n   * const notePrefixBase64Encoded = \"Y3JlYXRl\";\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .notePrefix(notePrefixBase64Encoded)\n   *        .do();\n   * ```\n   *\n   * @param prefix - base64 string or uint8array\n   * @category query\n   */\n  notePrefix(prefix: Uint8Array | string) {\n    this.query['note-prefix'] = base64StringFunnel(prefix);\n    return this;\n  }\n\n  /**\n   * Type of transaction to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .txType(\"appl\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `pay`, `keyreg`, `acfg`, `axfer`, `afrz`, `appl`, `stpf`\n   * @category query\n   */\n  txType(type: string) {\n    this.query['tx-type'] = type;\n    return this;\n  }\n\n  /**\n   * Type of signature to filter with.\n   * - sig: Standard\n   * - msig: MultiSig\n   * - lsig: LogicSig\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .sigType(\"msig\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `sig`, `msig`, `lsig`\n   * @category query\n   */\n  sigType(type: string) {\n    this.query['sig-type'] = type;\n    return this;\n  }\n\n  /**\n   * Lookup the specific transaction by ID.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .txid(txId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupTransactionByID(txnId).do()`\n   * @param txid\n   * @category query\n   */\n  txid(txid: string) {\n    this.query.txid = txid;\n    return this;\n  }\n\n  /**\n   * Include results for the specified round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include results at or after the specified min-round.\n   *\n   * #### Example\n   * ```typescript\n   * const minRound = 18309917;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .minRound(minRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  minRound(round: number) {\n    this.query['min-round'] = round;\n    return this;\n  }\n\n  /**\n   * Include results at or before the specified max-round.\n   *\n   * #### Example\n   * ```typescript\n   * const maxRound = 18309917;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .maxRound(maxRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  maxRound(round: number) {\n    this.query['max-round'] = round;\n    return this;\n  }\n\n  /**\n   * Asset ID to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const assetID = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .assetID(assetID)\n   *        .do();\n   * ```\n   *\n   * @param id\n   * @category query\n   */\n  assetID(id: number) {\n    this.query['asset-id'] = id;\n    return this;\n  }\n\n  /**\n   * Maximum number of results to return.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Include results before the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const beforeTime = \"2022-02-02T20:20:22.02Z\";\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .beforeTime(beforeTime)\n   *        .do();\n   * ```\n   *\n   * @param before - rfc3339 string\n   * @category query\n   */\n  beforeTime(before: string) {\n    this.query['before-time'] = before;\n    return this;\n  }\n\n  /**\n   * Include results after the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const afterTime = \"2022-10-21T00:00:11.55Z\";\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .afterTime(afterTime)\n   *        .do();\n   * ```\n   *\n   * @param after - rfc3339 string\n   * @category query\n   */\n  afterTime(after: string) {\n    this.query['after-time'] = after;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount greater than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const minBalance = 300000;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const minBalance = 300000;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .assetID(assetID)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   * @remarks\n   * If you are looking for transactions with the currency amount greater than 0, simply construct the query without `currencyGreaterThan` because it doesn't accept `-1`, and passing the `0` `currency-greater-than` value would exclude transactions with a 0 amount.\n   *\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount less than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const maxBalance = 500000;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const maxBalance = 500000;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .assetID(assetID)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * The next page of results. Use the next token provided by the previous results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   *\n   * const accountTxnsPage1 = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountTxnsPage2 = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .limit(maxResults)\n   *        .nextToken(accountTxnsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Whether or not to include rekeying transactions.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .rekeyTo(false)\n   *        .do();\n   * ```\n   *\n   * @param rekeyTo\n   * @category query\n   */\n  rekeyTo(rekeyTo: boolean) {\n    this.query['rekey-to'] = rekeyTo;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { base64StringFunnel } from './lookupAccountTransactions';\n\nexport default class LookupAssetTransactions extends JSONRequest {\n  /**\n   * Returns transactions relating to the given asset.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient.lookupAssetTransactions(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idtransactions)\n   * @param index - The asset ID to look up.\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/assets/${index}/transactions`\n   */\n  path() {\n    return `/v2/assets/${this.index}/transactions`;\n  }\n\n  /**\n   * Specifies a prefix which must be contained in the note field.\n   *\n   * #### Example\n   * ```typescript\n   * const notePrefixBase64Encoded = \"Y3JlYXRl\";\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .notePrefix(notePrefixBase64Encoded)\n   *        .do();\n   * ```\n   *\n   * @param prefix - base64 string or uint8array\n   * @category query\n   */\n  notePrefix(prefix: Uint8Array | string) {\n    this.query['note-prefix'] = base64StringFunnel(prefix);\n    return this;\n  }\n\n  /**\n   * Type of transaction to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .txType(\"axfer\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `pay`, `keyreg`, `acfg`, `axfer`, `afrz`, `appl`\n   * @category query\n   */\n  txType(type: string) {\n    this.query['tx-type'] = type;\n    return this;\n  }\n\n  /**\n   * Type of signature to filter with.\n   * - sig: Standard\n   * - msig: MultiSig\n   * - lsig: LogicSig\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .sigType(\"lsig\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `sig`, `msig`, `lsig`\n   * @category query\n   */\n  sigType(type: string) {\n    this.query['sig-type'] = type;\n    return this;\n  }\n\n  /**\n   * Lookup the specific transaction by ID.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .txid(txId)\n   *        .do();\n   * ```\n   *\n   * @param txid\n   * @category query\n   */\n  txid(txid: string) {\n    this.query.txid = txid;\n    return this;\n  }\n\n  /**\n   * Include results for the specified round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include results at or after the specified min-round.\n   *\n   * #### Example\n   * ```typescript\n   * const minRound = 18309917;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .minRound(minRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  minRound(round: number) {\n    this.query['min-round'] = round;\n    return this;\n  }\n\n  /**\n   * Include results at or before the specified max-round.\n   *\n   * #### Example\n   * ```typescript\n   * const maxRound = 18309917;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .maxRound(maxRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  maxRound(round: number) {\n    this.query['max-round'] = round;\n    return this;\n  }\n\n  /**\n   * @deprecated Redundant query parameter. Asset ID is already passed into the method.\n   */\n  assetID(id: number) {\n    this.query['asset-id'] = id;\n    return this;\n  }\n\n  /**\n   * Maximum number of results to return.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Include results before the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const beforeTime = \"2022-02-02T20:20:22.02Z\";\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .beforeTime(beforeTime)\n   *        .do();\n   * ```\n   *\n   * @param before - rfc3339 string\n   * @category query\n   */\n  beforeTime(before: string) {\n    this.query['before-time'] = before;\n    return this;\n  }\n\n  /**\n   * Include results after the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const afterTime = \"2022-10-21T00:00:11.55Z\";\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .afterTime(afterTime)\n   *        .do();\n   * ```\n   *\n   * @param after - rfc3339 string\n   * @category query\n   */\n  afterTime(after: string) {\n    this.query['after-time'] = after;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount greater than this value, as int, representing asset units.\n   *\n   * #### Example\n   * ```typescript\n   * const minBalance = 300000;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   *\n   * @remarks\n   * If you are looking for transactions with the currency amount greater than 0, simply construct the query without `currencyGreaterThan` because it doesn't accept `-1`, and passing the `0` `currency-greater-than` value would exclude transactions with a 0 amount.\n   *\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount less than this value, as int, representing asset units.\n   *\n   * #### Example\n   * ```typescript\n   * const maxBalance = 500000;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * Combined with address, defines what address to filter on, as string.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const role = \"sender\";\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .address(address)\n   *        .addressRole(role)\n   *        .do();\n   * ```\n   *\n   * @param role - one of `sender`, `receiver`, `freeze-target`\n   * @category query\n   */\n  addressRole(role: string) {\n    this.query['address-role'] = role;\n    return this;\n  }\n\n  /**\n   * Only include transactions with this address in one of the transaction fields.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .address(address)\n   *        .do();\n   * ```\n   *\n   * @param address\n   * @category query\n   */\n  address(address: string) {\n    this.query.address = address;\n    return this;\n  }\n\n  /**\n   * Whether or not to consider the `close-to` field as a receiver when filtering transactions, as bool. Set to `true` to ignore `close-to`.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .excludeCloseTo(true)\n   *        .do();\n   * ```\n   *\n   * @param exclude\n   * @category query\n   */\n  excludeCloseTo(exclude: boolean) {\n    this.query['exclude-close-to'] = exclude;\n    return this;\n  }\n\n  /**\n   * The next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const assetId = 163650;\n   *\n   * const assetTxnsPage1 = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const assetTxnsPage2 = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .limit(maxResults)\n   *        .nextToken(assetTxnsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Whether or not to include rekeying transactions.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .rekeyTo(false)\n   *        .do();\n   * ```\n   *\n   * @param rekeyTo\n   * @category query\n   */\n  rekeyTo(rekeyTo: boolean) {\n    this.query['rekey-to'] = rekeyTo;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupBlock extends JSONRequest {\n  /**\n   * Returns the block for the passed round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const blockInfo = await indexerClient.lookupBlock(targetBlock).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2blocksround-number)\n   * @param round - The number of the round to look up.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n    this.round = round;\n  }\n\n  /**\n   * @returns `/v2/blocks/${round}`\n   */\n  path() {\n    return `/v2/blocks/${this.round}`;\n  }\n\n  /**\n   * Header only flag. When this is set to true, returned block does not contain the\n   * transactions.\n   */\n  headerOnly(headerOnly: boolean) {\n    this.query['header-only'] = headerOnly;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupTransactionByID extends JSONRequest {\n  /**\n   * Returns information about the given transaction.\n   *\n   * #### Example\n   * ```typescript\n   * const txnId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const txnInfo = await indexerClient.lookupTransactionByID(txnId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2transactionstxid)\n   * @param txID - The ID of the transaction to look up.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private txID: string) {\n    super(c, intDecoding);\n    this.txID = txID;\n  }\n\n  /**\n   * @returns `/v2/transactions/${txID}`\n   */\n  path() {\n    return `/v2/transactions/${this.txID}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountByID extends JSONRequest {\n  /**\n   * Returns information about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient.lookupAccountByID(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-id)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}`\n   */\n  path() {\n    return `/v2/accounts/${this.account}`;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates.\n   *\n   * #### Example 1\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .includeAll()\n   *        .do();\n   * ```\n   * @param value\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Exclude additional items such as asset holdings, application local data stored for this account, asset parameters created by this account, and application parameters created by this account.\n   *\n   * #### Example 1\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .exclude(\"all\")\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .exclude(\"assets,created-assets\")\n   *        .do();\n   * ```\n   * @remarks By default, it behaves as exclude=none\n   * @param exclude - Array of `all`, `assets`, `created-assets`, `apps-local-state`, `created-apps`, `none`\n   * @category query\n   */\n  exclude(exclude: string) {\n    this.query.exclude = exclude;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountAssets extends JSONRequest {\n  /**\n   * Returns asset about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient.lookupAccountAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idassets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/assets`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/assets`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an assetID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assetAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .assetId(assetId)\n   *        .do();\n   * ```\n   * @param index - the assetID\n   * @category query\n   */\n  assetId(index: number) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountCreatedAssets extends JSONRequest {\n  /**\n   * Returns asset information created by the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountCreatedAssets = await indexerClient.lookupAccountCreatedAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idcreated-assets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/created-assets`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/created-assets`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an assetID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const assetID = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assetAssets = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .assetID(assetID)\n   *        .do();\n   * ```\n   * @param index - the assetID\n   * @category query\n   */\n  assetID(index: number) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountAppLocalStates extends JSONRequest {\n  /**\n   * Returns application local state about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAppLocalStates = await indexerClient.lookupAccountAppLocalStates(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idapps-local-state)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/apps-local-state`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/apps-local-state`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an applicationID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const applicationID = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountApplications = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .applicationID(applicationID)\n   *        .do();\n   * ```\n   * @param index - the applicationID\n   * @category query\n   */\n  applicationID(index: number) {\n    this.query['application-id'] = index;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountCreatedApplications extends JSONRequest {\n  /**\n   * Returns application information created by the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountCreatedApps = await indexerClient.lookupAccountCreatedApplications(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idcreated-applications)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/created-applications`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/created-applications`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an applicationID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const applicationID = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountApplications = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .applicationID(applicationID)\n   *        .do();\n   * ```\n   * @param index - the applicationID\n   * @category query\n   */\n  applicationID(index: number) {\n    this.query['application-id'] = index;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAssetByID extends JSONRequest {\n  /**\n   * Returns asset information of the queried asset.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetInfo = await indexerClient.lookupAssetByID(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-id)\n   * @param index - The asset ID to look up.\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/assets/${index}`\n   */\n  path() {\n    return `/v2/assets/${this.index}`;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const assetId = 163650;\n   * const assetInfo = await indexerClient\n   *        .lookupAssetByID(assetId)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetId = 163650;\n   * const assetInfo = await indexerClient\n   *        .lookupAssetByID(assetId)\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupApplications extends JSONRequest {\n  /**\n   * Returns information about the passed application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient.lookupApplications(appId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-id)\n   * @param index - The ID of the application to look up.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/applications/${index}`\n   */\n  path() {\n    return `/v2/applications/${this.index}`;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient\n   *        .lookupApplications(appId)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient\n   *        .lookupApplications(appId)\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupApplicationLogs extends JSONRequest {\n  /**\n   * Returns log messages generated by the passed in application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const appLogs = await indexerClient.lookupApplicationLogs(appId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idlogs)\n   * @param appID - The ID of the application which generated the logs.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private appID: number) {\n    super(c, intDecoding);\n    this.appID = appID;\n  }\n\n  /**\n   * @returns `/v2/applications/${appID}/logs`\n   */\n  path() {\n    return `/v2/applications/${this.appID}/logs`;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Include results at or after the specified min-round.\n   *\n   * #### Example\n   * ```typescript\n   * const minRound = 18309917;\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .minRound(minRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  minRound(round: number) {\n    this.query['min-round'] = round;\n    return this;\n  }\n\n  /**\n   * Include results at or before the specified max-round.\n   *\n   * #### Example\n   * ```typescript\n   * const maxRound = 18309917;\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .maxRound(maxRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  maxRound(round: number) {\n    this.query['max-round'] = round;\n    return this;\n  }\n\n  /**\n   * The next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   *\n   * const appLogsPage1 = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const appLogsPage2 = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .limit(maxResults)\n   *        .nextToken(appLogsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Only include transactions with this sender address.\n   *\n   * #### Example\n   * ```typescript\n   * const sender = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .sender(sender)\n   *        .do();\n   * ```\n   *\n   * @param senderAddress\n   * @category query\n   */\n  sender(senderAddress: string) {\n    this.query['sender-address'] = senderAddress;\n    return this;\n  }\n\n  /**\n   * Lookup the specific transaction by ID.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .txid(txId)\n   *        .do();\n   * ```\n   *\n   * @param txid\n   * @category query\n   */\n  txid(txid: string) {\n    this.query.txid = txid;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { Box } from './models/types';\n\nexport default class LookupApplicationBoxByIDandName extends JSONRequest<\n  Box,\n  Record<string, any>\n> {\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const boxName = Buffer.from(\"foo\");\n   * const boxResponse = await indexerClient\n   *        .LookupApplicationBoxByIDandName(1234, boxName)\n   *        .do();\n   * const boxValue = boxResponse.value;\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idbox)\n   * @oaram index - application index.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private index: number,\n    boxName: Uint8Array\n  ) {\n    super(c, intDecoding);\n    this.index = index;\n    // Encode query in base64 format and append the encoding prefix.\n    const encodedName = Buffer.from(boxName).toString('base64');\n    this.query.name = encodeURI(`b64:${encodedName}`);\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/box`\n   */\n  path() {\n    return `/v2/applications/${this.index}/box`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): Box {\n    return Box.from_obj_for_encoding(body);\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * Returns information about indexed accounts.\n *\n * #### Example\n * ```typescript\n * const accounts = await indexerClient.searchAccounts().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accounts)\n * @category GET\n */\nexport default class SearchAccounts extends JSONRequest {\n  /**\n   * @returns `/v2/accounts`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/accounts';\n  }\n\n  /**\n   * Filtered results should have an amount greater than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const minBalance = 300000;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const minBalance = 300000;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .assetID(assetID)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   * @remarks\n   * If you are looking for accounts with the currency amount greater than 0, simply construct the query without `currencyGreaterThan` because it doesn't accept `-1`, and passing the `0` `currency-greater-than` value would exclude accounts with a 0 amount.\n   *\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount less than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const maxBalance = 500000;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const maxBalance = 500000;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .assetID(assetID)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * Maximum number of results to return.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Asset ID to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const assetID = 163650;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .assetID(assetID)\n   *        .do();\n   * ```\n   *\n   * @param id\n   * @category query\n   */\n  assetID(id: number) {\n    this.query['asset-id'] = id;\n    return this;\n  }\n\n  /**\n   * The next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   *\n   * const accountsPage1 = await indexerClient\n   *        .searchAccounts()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountsPage2 = await indexerClient\n   *        .searchAccounts()\n   *        .limit(maxResults)\n   *        .nextToken(accountsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include results for the specified round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @remarks For performance reasons, this parameter may be disabled on some configurations.\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include accounts that use this spending key.\n   *\n   * #### Example\n   * ```typescript\n   * const authAddr = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .authAddr(authAddr)\n   *        .do();\n   * ```\n   *\n   * @param authAddr\n   */\n  authAddr(authAddr: string) {\n    this.query['auth-addr'] = authAddr;\n    return this;\n  }\n\n  /**\n   * Filter for this application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .applicationID(appId)\n   *        .do();\n   * ```\n   *\n   * @param applicationID\n   * @category query\n   */\n  applicationID(applicationID: number) {\n    this.query['application-id'] = applicationID;\n    return this;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const assetId = 163650;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetId = 163650;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Exclude additional items such as asset holdings, application local data stored for this account, asset parameters created by this account, and application parameters created by this account.\n   *\n   * #### Example 1\n   * ```typescript\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .exclude(\"all\")\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .exclude(\"assets,created-assets\")\n   *        .do();\n   * ```\n   * @remarks By default, it behaves as exclude=none\n   * @param exclude - Array of `all`, `assets`, `created-assets`, `apps-local-state`, `created-apps`, `none`\n   * @category query\n   */\n  exclude(exclude: string) {\n    this.query.exclude = exclude;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport { base64StringFunnel } from './lookupAccountTransactions';\n\n/**\n * Returns information about indexed transactions.\n *\n * #### Example\n * ```typescript\n * const txns = await indexerClient.searchForTransactions().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2transactions)\n * @category GET\n */\nexport default class SearchForTransactions extends JSONRequest {\n  /**\n   * @returns `/v2/transactions`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/transactions';\n  }\n\n  /**\n   * Specifies a prefix which must be contained in the note field.\n   *\n   * #### Example\n   * ```typescript\n   * const notePrefixBase64Encoded = \"Y3JlYXRl\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .notePrefix(notePrefixBase64Encoded)\n   *        .do();\n   * ```\n   *\n   * @param prefix - base64 string or uint8array\n   * @category query\n   */\n  notePrefix(prefix: Uint8Array | string) {\n    this.query['note-prefix'] = base64StringFunnel(prefix);\n    return this;\n  }\n\n  /**\n   * Type of transaction to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .txType(\"keyreg\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `pay`, `keyreg`, `acfg`, `axfer`, `afrz`, `appl`, `stpf`\n   * @category query\n   */\n  txType(type: string) {\n    this.query['tx-type'] = type;\n    return this;\n  }\n\n  /**\n   * Type of signature to filter with.\n   * - sig: Standard\n   * - msig: MultiSig\n   * - lsig: LogicSig\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .sigType(\"sig\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `sig`, `msig`, `lsig`\n   * @category query\n   */\n  sigType(type: string) {\n    this.query['sig-type'] = type;\n    return this;\n  }\n\n  /**\n   * Lookup the specific transaction by ID.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .txid(txId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupTransactionByID(txnId).do()`\n   * @param txid\n   * @category query\n   */\n  txid(txid: string) {\n    this.query.txid = txid;\n    return this;\n  }\n\n  /**\n   * Include results for the specified round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupBlock(targetBlock).do()`\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include results at or after the specified min-round.\n   *\n   * #### Example\n   * ```typescript\n   * const minRound = 18309917;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .minRound(minRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  minRound(round: number) {\n    this.query['min-round'] = round;\n    return this;\n  }\n\n  /**\n   * Include results at or before the specified max-round.\n   *\n   * #### Example\n   * ```typescript\n   * const maxRound = 18309917;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .maxRound(maxRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  maxRound(round: number) {\n    this.query['max-round'] = round;\n    return this;\n  }\n\n  /**\n   * Asset ID to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const assetID = 163650;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .assetID(assetID)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupAssetTransactions(assetId).do()`\n   * @param id\n   * @category query\n   */\n  assetID(id: number) {\n    this.query['asset-id'] = id;\n    return this;\n  }\n\n  /**\n   * Maximum number of results to return.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Include results before the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const beforeTime = \"2022-02-02T20:20:22.02Z\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .beforeTime(beforeTime)\n   *        .do();\n   * ```\n   *\n   * @param before - rfc3339 string\n   * @category query\n   */\n  beforeTime(before: string) {\n    this.query['before-time'] = before;\n    return this;\n  }\n\n  /**\n   * Include results after the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const afterTime = \"2022-10-21T00:00:11.55Z\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .afterTime(afterTime)\n   *        .do();\n   * ```\n   *\n   * @param after - rfc3339 string\n   * @category query\n   */\n  afterTime(after: string) {\n    this.query['after-time'] = after;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount greater than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const minBalance = 300000;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const minBalance = 300000;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .assetID(assetID)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   * @remarks\n   * If you are looking for transactions with the currency amount greater than 0, simply construct the query without `currencyGreaterThan` because it doesn't accept `-1`, and passing the `0` `currency-greater-than` value would exclude transactions with a 0 amount.\n   *\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount less than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const maxBalance = 500000;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const maxBalance = 500000;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .assetID(assetID)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * Combined with address, defines what address to filter on, as string.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const role = \"freeze-target\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .address(address)\n   *        .addressRole(role)\n   *        .do();\n   * ```\n   *\n   * @param role - one of `sender`, `receiver`, `freeze-target`\n   * @category query\n   */\n  addressRole(role: string) {\n    this.query['address-role'] = role;\n    return this;\n  }\n\n  /**\n   * Only include transactions with this address in one of the transaction fields.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .address(address)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupAccountTransactions(address).do()`\n   * @param address\n   * @category query\n   */\n  address(address: string) {\n    this.query.address = address;\n    return this;\n  }\n\n  /**\n   * Whether or not to consider the `close-to` field as a receiver when filtering transactions, as bool. Set to `true` to ignore `close-to`.\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .excludeCloseTo(true)\n   *        .do();\n   * ```\n   *\n   * @param exclude\n   * @category query\n   */\n  excludeCloseTo(exclude: boolean) {\n    this.query['exclude-close-to'] = exclude;\n    return this;\n  }\n\n  /**\n   * The next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   *\n   * const txnsPage1 = await indexerClient\n   *        .searchForTransactions()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const txnsPage2 = await indexerClient\n   *        .searchForTransactions()\n   *        .limit(maxResults)\n   *        .nextToken(txnsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Whether or not to include rekeying transactions.\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .rekeyTo(false)\n   *        .do();\n   * ```\n   *\n   * @param rekeyTo\n   * @category query\n   */\n  rekeyTo(rekeyTo: boolean) {\n    this.query['rekey-to'] = rekeyTo;\n    return this;\n  }\n\n  /**\n   * Filter for this application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .applicationID(appId)\n   *        .do();\n   * ```\n   *\n   * @param applicationID\n   * @category query\n   */\n  applicationID(applicationID: number) {\n    this.query['application-id'] = applicationID;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * Returns information about indexed assets.\n *\n * #### Example\n * ```typescript\n * const assets = await indexerClient.searchForAssets().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assets)\n * @category GET\n */\nexport default class SearchForAssets extends JSONRequest {\n  /**\n   * @returns `/v2/assets`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/assets';\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Filter just assets with the given creator address.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .creator(address)\n   *        .do();\n   * ```\n   *\n   * @param creator\n   * @category query\n   */\n  creator(creator: string) {\n    this.query.creator = creator;\n    return this;\n  }\n\n  /**\n   * Filter just assets with the given name.\n   *\n   * #### Example\n   * ```typescript\n   * const name = \"Test Token\";\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .name(name)\n   *        .do();\n   * ```\n   *\n   * @param name\n   * @category query\n   */\n  name(name: string) {\n    this.query.name = name;\n    return this;\n  }\n\n  /**\n   * Filter just assets with the given unit.\n   *\n   * #### Example\n   * ```typescript\n   * const unit = \"test\";\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .unit(unit)\n   *        .do();\n   * ```\n   *\n   * @param unit\n   * @category query\n   */\n  unit(unit: string) {\n    this.query.unit = unit;\n    return this;\n  }\n\n  /**\n   * Asset ID for filter, as int.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .index(assetId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupAssetByID(assetId).do();`\n   * @param index\n   * @category query\n   */\n  index(index: number) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   *\n   * const assetsPage1 = await indexerClient\n   *        .searchForAssets()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const assetsPage2 = await indexerClient\n   *        .searchForAssets()\n   *        .limit(maxResults)\n   *        .nextToken(assetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * Returns information about indexed applications.\n *\n * #### Example\n * ```typescript\n * const apps = await indexerClient.searchForApplications().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applications)\n * @category GET\n */\nexport default class SearchForApplications extends JSONRequest {\n  /**\n   * @returns `/v2/applications`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/applications';\n  }\n\n  /**\n   * Application ID for filter, as int\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .index(appId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupApplications(appId).do()`\n   * @param index\n   * @category query\n   */\n  index(index: number) {\n    this.query['application-id'] = index;\n    return this;\n  }\n\n  /**\n   * Creator for filter, as string\n   *\n   * #### Example\n   * ```typescript\n   * const creator = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .creator(creator)\n   *        .do();\n   * ```\n   * @param creator\n   * @category query\n   */\n  creator(creator: string) {\n    this.query.creator = creator;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   *\n   * const appsPage1 = await indexerClient\n   *        .searchForApplications()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const appsPage2 = await indexerClient\n   *        .searchForApplications()\n   *        .limit(maxResults)\n   *        .nextToken(appsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(next: string) {\n    this.query.next = next;\n    return this;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { BoxesResponse } from './models/types';\n\nexport default class SearchForApplicationBoxes extends JSONRequest<\n  BoxesResponse,\n  Record<string, any>\n> {\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idboxes)\n   * @oaram index - application index.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/boxes`\n   */\n  path() {\n    return `/v2/applications/${this.index}/boxes`;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(next: string) {\n    this.query.next = next;\n    return this;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const boxesResponse = await indexerClient\n   *        .searchForApplicationBoxes(1234)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): BoxesResponse {\n    return BoxesResponse.from_obj_for_encoding(body);\n  }\n}\n","import ServiceClient from '../serviceClient';\nimport MakeHealthCheck from './makeHealthCheck';\nimport LookupAssetBalances from './lookupAssetBalances';\nimport LookupAssetTransactions from './lookupAssetTransactions';\nimport LookupAccountTransactions from './lookupAccountTransactions';\nimport LookupBlock from './lookupBlock';\nimport LookupTransactionByID from './lookupTransactionByID';\nimport LookupAccountByID from './lookupAccountByID';\nimport LookupAccountAssets from './lookupAccountAssets';\nimport LookupAccountCreatedAssets from './lookupAccountCreatedAssets';\nimport LookupAccountAppLocalStates from './lookupAccountAppLocalStates';\nimport LookupAccountCreatedApplications from './lookupAccountCreatedApplications';\nimport LookupAssetByID from './lookupAssetByID';\nimport LookupApplications from './lookupApplications';\nimport LookupApplicationLogs from './lookupApplicationLogs';\nimport LookupApplicationBoxByIDandName from './lookupApplicationBoxByIDandName';\nimport SearchAccounts from './searchAccounts';\nimport SearchForTransactions from './searchForTransactions';\nimport SearchForAssets from './searchForAssets';\nimport SearchForApplications from './searchForApplications';\nimport SearchForApplicationBoxes from './searchForApplicationBoxes';\nimport { BaseHTTPClient } from '../../baseHTTPClient';\nimport {\n  CustomTokenHeader,\n  IndexerTokenHeader,\n} from '../../urlTokenBaseHTTPClient';\n\n/**\n * The Indexer provides a REST API interface of API calls to support searching the Algorand Blockchain.\n *\n * The Indexer REST APIs retrieve the blockchain data from a PostgreSQL compatible database that must be populated.\n *\n * This database is populated using the same indexer instance or a separate instance of the indexer which must connect to the algod process of a running Algorand node to read block data.\n *\n * This node must also be an Archival node to make searching the entire blockchain possible.\n *\n * #### Relevant Information\n * [Learn more about Indexer](https://developer.algorand.org/docs/get-details/indexer/)\n *\n * [Run Indexer in Postman OAS3](https://developer.algorand.org/docs/rest-apis/restendpoints/#algod-indexer-and-kmd-rest-endpoints)\n */\nexport default class IndexerClient extends ServiceClient {\n  /**\n   * Create an IndexerClient from\n   * * either a token, baseServer, port, and optional headers\n   * * or a base client server for interoperability with external dApp wallets\n   *\n   * #### Example\n   * ```typescript\n   * const token  = \"\";\n   * const server = \"http://localhost\";\n   * const port   = 8980;\n   * const indexerClient = new algosdk.Indexer(token, server, port);\n   * ```\n   * @remarks\n   * The above configuration is for a sandbox private network.\n   * For applications on production, you are encouraged to run your own node with indexer, or use an Algorand REST API provider with a dedicated API key.\n   *\n   * @param tokenOrBaseClient - The API token for the Indexer API\n   * @param baseServer - REST endpoint\n   * @param port - Port number if specifically configured by the server\n   * @param headers - Optional headers\n   */\n  constructor(\n    tokenOrBaseClient:\n      | string\n      | IndexerTokenHeader\n      | CustomTokenHeader\n      | BaseHTTPClient,\n    baseServer = 'http://127.0.0.1',\n    port: string | number = 8080,\n    headers: Record<string, string> = {}\n  ) {\n    super('X-Indexer-API-Token', tokenOrBaseClient, baseServer, port, headers);\n  }\n\n  /**\n   * Returns the health object for the service.\n   * Returns 200 if healthy.\n   *\n   * #### Example\n   * ```typescript\n   * const health = await indexerClient.makeHealthCheck().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-health)\n   * @category GET\n   */\n  makeHealthCheck() {\n    return new MakeHealthCheck(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns the list of accounts who hold the given asset and their balance.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetBalances = await indexerClient.lookupAssetBalances(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idbalances)\n   * @param index - The asset ID to look up.\n   * @category GET\n   */\n  lookupAssetBalances(index: number) {\n    return new LookupAssetBalances(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns transactions relating to the given asset.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient.lookupAssetTransactions(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idtransactions)\n   * @param index - The asset ID to look up.\n   * @category GET\n   */\n  lookupAssetTransactions(index: number) {\n    return new LookupAssetTransactions(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns transactions relating to the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient.lookupAccountTransactions(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idtransactions)\n   * @param account - The address of the account.\n   * @category GET\n   */\n  lookupAccountTransactions(account: string) {\n    return new LookupAccountTransactions(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns the block for the passed round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const blockInfo = await indexerClient.lookupBlock(targetBlock).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2blocksround-number)\n   * @param round - The number of the round to look up.\n   * @category GET\n   */\n  lookupBlock(round: number) {\n    return new LookupBlock(this.c, this.intDecoding, round);\n  }\n\n  /**\n   * Returns information about the given transaction.\n   *\n   * #### Example\n   * ```typescript\n   * const txnId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const txnInfo = await indexerClient.lookupTransactionByID(txnId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2transactionstxid)\n   * @param txID - The ID of the transaction to look up.\n   * @category GET\n   */\n  lookupTransactionByID(txID: string) {\n    return new LookupTransactionByID(this.c, this.intDecoding, txID);\n  }\n\n  /**\n   * Returns information about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient.lookupAccountByID(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-id)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountByID(account: string) {\n    return new LookupAccountByID(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns asset about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient.lookupAccountAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idassets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountAssets(account: string) {\n    return new LookupAccountAssets(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns asset information created by the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountCreatedAssets = await indexerClient.lookupAccountCreatedAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idcreated-assets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountCreatedAssets(account: string) {\n    return new LookupAccountCreatedAssets(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns application local state about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAppLocalStates = await indexerClient.lookupAccountAppLocalStates(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idapps-local-state)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountAppLocalStates(account: string) {\n    return new LookupAccountAppLocalStates(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns application information created by the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountCreatedApps = await indexerClient.lookupAccountCreatedApplications(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idcreated-applications)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountCreatedApplications(account: string) {\n    return new LookupAccountCreatedApplications(\n      this.c,\n      this.intDecoding,\n      account\n    );\n  }\n\n  /**\n   * Returns information about the passed asset.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetInfo = await indexerClient.lookupAssetByID(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-id)\n   * @param index - The ID of the asset ot look up.\n   * @category GET\n   */\n  lookupAssetByID(index: number) {\n    return new LookupAssetByID(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns information about the passed application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient.lookupApplications(appId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-id)\n   * @param index - The ID of the application to look up.\n   * @category GET\n   */\n  lookupApplications(index: number) {\n    return new LookupApplications(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns log messages generated by the passed in application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const appLogs = await indexerClient.lookupApplicationLogs(appId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idlogs)\n   * @param appID - The ID of the application which generated the logs.\n   * @category GET\n   */\n  lookupApplicationLogs(appID: number) {\n    return new LookupApplicationLogs(this.c, this.intDecoding, appID);\n  }\n\n  /**\n   * Returns information about indexed accounts.\n   *\n   * #### Example\n   * ```typescript\n   * const accounts = await indexerClient.searchAccounts().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accounts)\n   * @category GET\n   */\n  searchAccounts() {\n    return new SearchAccounts(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns information about indexed transactions.\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient.searchForTransactions().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2transactions)\n   * @category GET\n   */\n  searchForTransactions() {\n    return new SearchForTransactions(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns information about indexed assets.\n   *\n   * #### Example\n   * ```typescript\n   * const assets = await indexerClient.searchForAssets().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assets)\n   * @category GET\n   */\n  searchForAssets() {\n    return new SearchForAssets(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns information about indexed applications.\n   *\n   * #### Example\n   * ```typescript\n   * const apps = await indexerClient.searchForApplications().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applications)\n   * @category GET\n   */\n  searchForApplications() {\n    return new SearchForApplications(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idboxes)\n   * @param appID - The ID of the application with boxes.\n   * @category GET\n   */\n  searchForApplicationBoxes(appID: number) {\n    return new SearchForApplicationBoxes(this.c, this.intDecoding, appID);\n  }\n\n  /**\n   * Returns information about the application box given its name.\n   *\n   * #### Example\n   * ```typescript\n   * const boxName = Buffer.from(\"foo\");\n   * const boxResponse = await indexerClient\n   *        .LookupApplicationBoxByIDandName(1234, boxName)\n   *        .do();\n   * const boxValue = boxResponse.value;\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idbox)\n   * @param appID - The ID of the application with boxes.\n   * @category GET\n   */\n  lookupApplicationBoxByIDandName(appID: number, boxName: Uint8Array) {\n    return new LookupApplicationBoxByIDandName(\n      this.c,\n      this.intDecoding,\n      appID,\n      boxName\n    );\n  }\n}\n","/**\n * NOTICE: This file was generated. Editing this file manually is not recommended.\n */\n\n/* eslint-disable no-use-before-define */\nimport BaseModel from '../../basemodel';\n\n/**\n * Account information at a given round.\n * Definition:\n * data/basics/userBalance.go : AccountData\n */\nexport class Account extends BaseModel {\n  /**\n   * the account public key\n   */\n  public address: string;\n\n  /**\n   * (algo) total number of MicroAlgos in the account\n   */\n  public amount: number | bigint;\n\n  /**\n   * specifies the amount of MicroAlgos in the account, without the pending rewards.\n   */\n  public amountWithoutPendingRewards: number | bigint;\n\n  /**\n   * amount of MicroAlgos of pending rewards in this account.\n   */\n  public pendingRewards: number | bigint;\n\n  /**\n   * (ern) total rewards of MicroAlgos the account has received, including pending\n   * rewards.\n   */\n  public rewards: number | bigint;\n\n  /**\n   * The round for which this information is relevant.\n   */\n  public round: number | bigint;\n\n  /**\n   * (onl) delegation status of the account's MicroAlgos\n   * * Offline - indicates that the associated account is delegated.\n   * * Online - indicates that the associated account used as part of the delegation\n   * pool.\n   * * NotParticipating - indicates that the associated account is neither a\n   * delegator nor a delegate.\n   */\n  public status: string;\n\n  /**\n   * The count of all applications that have been opted in, equivalent to the count\n   * of application local data (AppLocalState objects) stored in this account.\n   */\n  public totalAppsOptedIn: number | bigint;\n\n  /**\n   * The count of all assets that have been opted in, equivalent to the count of\n   * AssetHolding objects held by this account.\n   */\n  public totalAssetsOptedIn: number | bigint;\n\n  /**\n   * For app-accounts only. The total number of bytes allocated for the keys and\n   * values of boxes which belong to the associated application.\n   */\n  public totalBoxBytes: number | bigint;\n\n  /**\n   * For app-accounts only. The total number of boxes which belong to the associated\n   * application.\n   */\n  public totalBoxes: number | bigint;\n\n  /**\n   * The count of all apps (AppParams objects) created by this account.\n   */\n  public totalCreatedApps: number | bigint;\n\n  /**\n   * The count of all assets (AssetParams objects) created by this account.\n   */\n  public totalCreatedAssets: number | bigint;\n\n  /**\n   * (appl) applications local data stored in this account.\n   * Note the raw object uses `map[int] -> AppLocalState` for this type.\n   */\n  public appsLocalState?: ApplicationLocalState[];\n\n  /**\n   * (teap) the sum of all extra application program pages for this account.\n   */\n  public appsTotalExtraPages?: number | bigint;\n\n  /**\n   * (tsch) stores the sum of all of the local schemas and global schemas in this\n   * account.\n   * Note: the raw account uses `StateSchema` for this type.\n   */\n  public appsTotalSchema?: ApplicationStateSchema;\n\n  /**\n   * (asset) assets held by this account.\n   * Note the raw object uses `map[int] -> AssetHolding` for this type.\n   */\n  public assets?: AssetHolding[];\n\n  /**\n   * (spend) the address against which signing should be checked. If empty, the\n   * address of the current account is used. This field can be updated in any\n   * transaction by setting the RekeyTo field.\n   */\n  public authAddr?: string;\n\n  /**\n   * Round during which this account was most recently closed.\n   */\n  public closedAtRound?: number | bigint;\n\n  /**\n   * (appp) parameters of applications created by this account including app global\n   * data.\n   * Note: the raw account uses `map[int] -> AppParams` for this type.\n   */\n  public createdApps?: Application[];\n\n  /**\n   * (apar) parameters of assets created by this account.\n   * Note: the raw account uses `map[int] -> Asset` for this type.\n   */\n  public createdAssets?: Asset[];\n\n  /**\n   * Round during which this account first appeared in a transaction.\n   */\n  public createdAtRound?: number | bigint;\n\n  /**\n   * Whether or not this account is currently closed.\n   */\n  public deleted?: boolean;\n\n  /**\n   * AccountParticipation describes the parameters used by this account in consensus\n   * protocol.\n   */\n  public participation?: AccountParticipation;\n\n  /**\n   * (ebase) used as part of the rewards computation. Only applicable to accounts\n   * which are participating.\n   */\n  public rewardBase?: number | bigint;\n\n  /**\n   * Indicates what type of signature is used by this account, must be one of:\n   * * sig\n   * * msig\n   * * lsig\n   * * or null if unknown\n   */\n  public sigType?: string;\n\n  /**\n   * Creates a new `Account` object.\n   * @param address - the account public key\n   * @param amount - (algo) total number of MicroAlgos in the account\n   * @param amountWithoutPendingRewards - specifies the amount of MicroAlgos in the account, without the pending rewards.\n   * @param pendingRewards - amount of MicroAlgos of pending rewards in this account.\n   * @param rewards - (ern) total rewards of MicroAlgos the account has received, including pending\n   * rewards.\n   * @param round - The round for which this information is relevant.\n   * @param status - (onl) delegation status of the account's MicroAlgos\n   * * Offline - indicates that the associated account is delegated.\n   * * Online - indicates that the associated account used as part of the delegation\n   * pool.\n   * * NotParticipating - indicates that the associated account is neither a\n   * delegator nor a delegate.\n   * @param totalAppsOptedIn - The count of all applications that have been opted in, equivalent to the count\n   * of application local data (AppLocalState objects) stored in this account.\n   * @param totalAssetsOptedIn - The count of all assets that have been opted in, equivalent to the count of\n   * AssetHolding objects held by this account.\n   * @param totalBoxBytes - For app-accounts only. The total number of bytes allocated for the keys and\n   * values of boxes which belong to the associated application.\n   * @param totalBoxes - For app-accounts only. The total number of boxes which belong to the associated\n   * application.\n   * @param totalCreatedApps - The count of all apps (AppParams objects) created by this account.\n   * @param totalCreatedAssets - The count of all assets (AssetParams objects) created by this account.\n   * @param appsLocalState - (appl) applications local data stored in this account.\n   * Note the raw object uses `map[int] -> AppLocalState` for this type.\n   * @param appsTotalExtraPages - (teap) the sum of all extra application program pages for this account.\n   * @param appsTotalSchema - (tsch) stores the sum of all of the local schemas and global schemas in this\n   * account.\n   * Note: the raw account uses `StateSchema` for this type.\n   * @param assets - (asset) assets held by this account.\n   * Note the raw object uses `map[int] -> AssetHolding` for this type.\n   * @param authAddr - (spend) the address against which signing should be checked. If empty, the\n   * address of the current account is used. This field can be updated in any\n   * transaction by setting the RekeyTo field.\n   * @param closedAtRound - Round during which this account was most recently closed.\n   * @param createdApps - (appp) parameters of applications created by this account including app global\n   * data.\n   * Note: the raw account uses `map[int] -> AppParams` for this type.\n   * @param createdAssets - (apar) parameters of assets created by this account.\n   * Note: the raw account uses `map[int] -> Asset` for this type.\n   * @param createdAtRound - Round during which this account first appeared in a transaction.\n   * @param deleted - Whether or not this account is currently closed.\n   * @param participation - AccountParticipation describes the parameters used by this account in consensus\n   * protocol.\n   * @param rewardBase - (ebase) used as part of the rewards computation. Only applicable to accounts\n   * which are participating.\n   * @param sigType - Indicates what type of signature is used by this account, must be one of:\n   * * sig\n   * * msig\n   * * lsig\n   * * or null if unknown\n   */\n  constructor({\n    address,\n    amount,\n    amountWithoutPendingRewards,\n    pendingRewards,\n    rewards,\n    round,\n    status,\n    totalAppsOptedIn,\n    totalAssetsOptedIn,\n    totalBoxBytes,\n    totalBoxes,\n    totalCreatedApps,\n    totalCreatedAssets,\n    appsLocalState,\n    appsTotalExtraPages,\n    appsTotalSchema,\n    assets,\n    authAddr,\n    closedAtRound,\n    createdApps,\n    createdAssets,\n    createdAtRound,\n    deleted,\n    participation,\n    rewardBase,\n    sigType,\n  }: {\n    address: string;\n    amount: number | bigint;\n    amountWithoutPendingRewards: number | bigint;\n    pendingRewards: number | bigint;\n    rewards: number | bigint;\n    round: number | bigint;\n    status: string;\n    totalAppsOptedIn: number | bigint;\n    totalAssetsOptedIn: number | bigint;\n    totalBoxBytes: number | bigint;\n    totalBoxes: number | bigint;\n    totalCreatedApps: number | bigint;\n    totalCreatedAssets: number | bigint;\n    appsLocalState?: ApplicationLocalState[];\n    appsTotalExtraPages?: number | bigint;\n    appsTotalSchema?: ApplicationStateSchema;\n    assets?: AssetHolding[];\n    authAddr?: string;\n    closedAtRound?: number | bigint;\n    createdApps?: Application[];\n    createdAssets?: Asset[];\n    createdAtRound?: number | bigint;\n    deleted?: boolean;\n    participation?: AccountParticipation;\n    rewardBase?: number | bigint;\n    sigType?: string;\n  }) {\n    super();\n    this.address = address;\n    this.amount = amount;\n    this.amountWithoutPendingRewards = amountWithoutPendingRewards;\n    this.pendingRewards = pendingRewards;\n    this.rewards = rewards;\n    this.round = round;\n    this.status = status;\n    this.totalAppsOptedIn = totalAppsOptedIn;\n    this.totalAssetsOptedIn = totalAssetsOptedIn;\n    this.totalBoxBytes = totalBoxBytes;\n    this.totalBoxes = totalBoxes;\n    this.totalCreatedApps = totalCreatedApps;\n    this.totalCreatedAssets = totalCreatedAssets;\n    this.appsLocalState = appsLocalState;\n    this.appsTotalExtraPages = appsTotalExtraPages;\n    this.appsTotalSchema = appsTotalSchema;\n    this.assets = assets;\n    this.authAddr = authAddr;\n    this.closedAtRound = closedAtRound;\n    this.createdApps = createdApps;\n    this.createdAssets = createdAssets;\n    this.createdAtRound = createdAtRound;\n    this.deleted = deleted;\n    this.participation = participation;\n    this.rewardBase = rewardBase;\n    this.sigType = sigType;\n\n    this.attribute_map = {\n      address: 'address',\n      amount: 'amount',\n      amountWithoutPendingRewards: 'amount-without-pending-rewards',\n      pendingRewards: 'pending-rewards',\n      rewards: 'rewards',\n      round: 'round',\n      status: 'status',\n      totalAppsOptedIn: 'total-apps-opted-in',\n      totalAssetsOptedIn: 'total-assets-opted-in',\n      totalBoxBytes: 'total-box-bytes',\n      totalBoxes: 'total-boxes',\n      totalCreatedApps: 'total-created-apps',\n      totalCreatedAssets: 'total-created-assets',\n      appsLocalState: 'apps-local-state',\n      appsTotalExtraPages: 'apps-total-extra-pages',\n      appsTotalSchema: 'apps-total-schema',\n      assets: 'assets',\n      authAddr: 'auth-addr',\n      closedAtRound: 'closed-at-round',\n      createdApps: 'created-apps',\n      createdAssets: 'created-assets',\n      createdAtRound: 'created-at-round',\n      deleted: 'deleted',\n      participation: 'participation',\n      rewardBase: 'reward-base',\n      sigType: 'sig-type',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Account {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['amount-without-pending-rewards'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'amount-without-pending-rewards': ${data}`\n      );\n    if (typeof data['pending-rewards'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'pending-rewards': ${data}`\n      );\n    if (typeof data['rewards'] === 'undefined')\n      throw new Error(`Response is missing required field 'rewards': ${data}`);\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (typeof data['status'] === 'undefined')\n      throw new Error(`Response is missing required field 'status': ${data}`);\n    if (typeof data['total-apps-opted-in'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-apps-opted-in': ${data}`\n      );\n    if (typeof data['total-assets-opted-in'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-assets-opted-in': ${data}`\n      );\n    if (typeof data['total-box-bytes'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-box-bytes': ${data}`\n      );\n    if (typeof data['total-boxes'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-boxes': ${data}`\n      );\n    if (typeof data['total-created-apps'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-created-apps': ${data}`\n      );\n    if (typeof data['total-created-assets'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-created-assets': ${data}`\n      );\n    return new Account({\n      address: data['address'],\n      amount: data['amount'],\n      amountWithoutPendingRewards: data['amount-without-pending-rewards'],\n      pendingRewards: data['pending-rewards'],\n      rewards: data['rewards'],\n      round: data['round'],\n      status: data['status'],\n      totalAppsOptedIn: data['total-apps-opted-in'],\n      totalAssetsOptedIn: data['total-assets-opted-in'],\n      totalBoxBytes: data['total-box-bytes'],\n      totalBoxes: data['total-boxes'],\n      totalCreatedApps: data['total-created-apps'],\n      totalCreatedAssets: data['total-created-assets'],\n      appsLocalState:\n        typeof data['apps-local-state'] !== 'undefined'\n          ? data['apps-local-state'].map(\n              ApplicationLocalState.from_obj_for_encoding\n            )\n          : undefined,\n      appsTotalExtraPages: data['apps-total-extra-pages'],\n      appsTotalSchema:\n        typeof data['apps-total-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['apps-total-schema']\n            )\n          : undefined,\n      assets:\n        typeof data['assets'] !== 'undefined'\n          ? data['assets'].map(AssetHolding.from_obj_for_encoding)\n          : undefined,\n      authAddr: data['auth-addr'],\n      closedAtRound: data['closed-at-round'],\n      createdApps:\n        typeof data['created-apps'] !== 'undefined'\n          ? data['created-apps'].map(Application.from_obj_for_encoding)\n          : undefined,\n      createdAssets:\n        typeof data['created-assets'] !== 'undefined'\n          ? data['created-assets'].map(Asset.from_obj_for_encoding)\n          : undefined,\n      createdAtRound: data['created-at-round'],\n      deleted: data['deleted'],\n      participation:\n        typeof data['participation'] !== 'undefined'\n          ? AccountParticipation.from_obj_for_encoding(data['participation'])\n          : undefined,\n      rewardBase: data['reward-base'],\n      sigType: data['sig-type'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AccountParticipation describes the parameters used by this account in consensus\n * protocol.\n */\nexport class AccountParticipation extends BaseModel {\n  /**\n   * (sel) Selection public key (if any) currently registered for this round.\n   */\n  public selectionParticipationKey: Uint8Array;\n\n  /**\n   * (voteFst) First round for which this participation is valid.\n   */\n  public voteFirstValid: number | bigint;\n\n  /**\n   * (voteKD) Number of subkeys in each batch of participation keys.\n   */\n  public voteKeyDilution: number | bigint;\n\n  /**\n   * (voteLst) Last round for which this participation is valid.\n   */\n  public voteLastValid: number | bigint;\n\n  /**\n   * (vote) root participation public key (if any) currently registered for this\n   * round.\n   */\n  public voteParticipationKey: Uint8Array;\n\n  /**\n   * (stprf) Root of the state proof key (if any)\n   */\n  public stateProofKey?: Uint8Array;\n\n  /**\n   * Creates a new `AccountParticipation` object.\n   * @param selectionParticipationKey - (sel) Selection public key (if any) currently registered for this round.\n   * @param voteFirstValid - (voteFst) First round for which this participation is valid.\n   * @param voteKeyDilution - (voteKD) Number of subkeys in each batch of participation keys.\n   * @param voteLastValid - (voteLst) Last round for which this participation is valid.\n   * @param voteParticipationKey - (vote) root participation public key (if any) currently registered for this\n   * round.\n   * @param stateProofKey - (stprf) Root of the state proof key (if any)\n   */\n  constructor({\n    selectionParticipationKey,\n    voteFirstValid,\n    voteKeyDilution,\n    voteLastValid,\n    voteParticipationKey,\n    stateProofKey,\n  }: {\n    selectionParticipationKey: string | Uint8Array;\n    voteFirstValid: number | bigint;\n    voteKeyDilution: number | bigint;\n    voteLastValid: number | bigint;\n    voteParticipationKey: string | Uint8Array;\n    stateProofKey?: string | Uint8Array;\n  }) {\n    super();\n    this.selectionParticipationKey =\n      typeof selectionParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(selectionParticipationKey, 'base64'))\n        : selectionParticipationKey;\n    this.voteFirstValid = voteFirstValid;\n    this.voteKeyDilution = voteKeyDilution;\n    this.voteLastValid = voteLastValid;\n    this.voteParticipationKey =\n      typeof voteParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(voteParticipationKey, 'base64'))\n        : voteParticipationKey;\n    this.stateProofKey =\n      typeof stateProofKey === 'string'\n        ? new Uint8Array(Buffer.from(stateProofKey, 'base64'))\n        : stateProofKey;\n\n    this.attribute_map = {\n      selectionParticipationKey: 'selection-participation-key',\n      voteFirstValid: 'vote-first-valid',\n      voteKeyDilution: 'vote-key-dilution',\n      voteLastValid: 'vote-last-valid',\n      voteParticipationKey: 'vote-participation-key',\n      stateProofKey: 'state-proof-key',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AccountParticipation {\n    /* eslint-disable dot-notation */\n    if (typeof data['selection-participation-key'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'selection-participation-key': ${data}`\n      );\n    if (typeof data['vote-first-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-first-valid': ${data}`\n      );\n    if (typeof data['vote-key-dilution'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-key-dilution': ${data}`\n      );\n    if (typeof data['vote-last-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-last-valid': ${data}`\n      );\n    if (typeof data['vote-participation-key'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-participation-key': ${data}`\n      );\n    return new AccountParticipation({\n      selectionParticipationKey: data['selection-participation-key'],\n      voteFirstValid: data['vote-first-valid'],\n      voteKeyDilution: data['vote-key-dilution'],\n      voteLastValid: data['vote-last-valid'],\n      voteParticipationKey: data['vote-participation-key'],\n      stateProofKey: data['state-proof-key'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AccountResponse extends BaseModel {\n  /**\n   * Account information at a given round.\n   * Definition:\n   * data/basics/userBalance.go : AccountData\n   */\n  public account: Account;\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Creates a new `AccountResponse` object.\n   * @param account - Account information at a given round.\n   * Definition:\n   * data/basics/userBalance.go : AccountData\n   * @param currentRound - Round at which the results were computed.\n   */\n  constructor({\n    account,\n    currentRound,\n  }: {\n    account: Account;\n    currentRound: number | bigint;\n  }) {\n    super();\n    this.account = account;\n    this.currentRound = currentRound;\n\n    this.attribute_map = {\n      account: 'account',\n      currentRound: 'current-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AccountResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['account'] === 'undefined')\n      throw new Error(`Response is missing required field 'account': ${data}`);\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AccountResponse({\n      account: Account.from_obj_for_encoding(data['account']),\n      currentRound: data['current-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Application state delta.\n */\nexport class AccountStateDelta extends BaseModel {\n  public address: string;\n\n  /**\n   * Application state delta.\n   */\n  public delta: EvalDeltaKeyValue[];\n\n  /**\n   * Creates a new `AccountStateDelta` object.\n   * @param address -\n   * @param delta - Application state delta.\n   */\n  constructor({\n    address,\n    delta,\n  }: {\n    address: string;\n    delta: EvalDeltaKeyValue[];\n  }) {\n    super();\n    this.address = address;\n    this.delta = delta;\n\n    this.attribute_map = {\n      address: 'address',\n      delta: 'delta',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AccountStateDelta {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (!Array.isArray(data['delta']))\n      throw new Error(\n        `Response is missing required array field 'delta': ${data}`\n      );\n    return new AccountStateDelta({\n      address: data['address'],\n      delta: data['delta'].map(EvalDeltaKeyValue.from_obj_for_encoding),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AccountsResponse extends BaseModel {\n  public accounts: Account[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `AccountsResponse` object.\n   * @param accounts -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    accounts,\n    currentRound,\n    nextToken,\n  }: {\n    accounts: Account[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.accounts = accounts;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      accounts: 'accounts',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AccountsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['accounts']))\n      throw new Error(\n        `Response is missing required array field 'accounts': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AccountsResponse({\n      accounts: data['accounts'].map(Account.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Application index and its parameters\n */\nexport class Application extends BaseModel {\n  /**\n   * (appidx) application index.\n   */\n  public id: number | bigint;\n\n  /**\n   * (appparams) application parameters.\n   */\n  public params: ApplicationParams;\n\n  /**\n   * Round when this application was created.\n   */\n  public createdAtRound?: number | bigint;\n\n  /**\n   * Whether or not this application is currently deleted.\n   */\n  public deleted?: boolean;\n\n  /**\n   * Round when this application was deleted.\n   */\n  public deletedAtRound?: number | bigint;\n\n  /**\n   * Creates a new `Application` object.\n   * @param id - (appidx) application index.\n   * @param params - (appparams) application parameters.\n   * @param createdAtRound - Round when this application was created.\n   * @param deleted - Whether or not this application is currently deleted.\n   * @param deletedAtRound - Round when this application was deleted.\n   */\n  constructor({\n    id,\n    params,\n    createdAtRound,\n    deleted,\n    deletedAtRound,\n  }: {\n    id: number | bigint;\n    params: ApplicationParams;\n    createdAtRound?: number | bigint;\n    deleted?: boolean;\n    deletedAtRound?: number | bigint;\n  }) {\n    super();\n    this.id = id;\n    this.params = params;\n    this.createdAtRound = createdAtRound;\n    this.deleted = deleted;\n    this.deletedAtRound = deletedAtRound;\n\n    this.attribute_map = {\n      id: 'id',\n      params: 'params',\n      createdAtRound: 'created-at-round',\n      deleted: 'deleted',\n      deletedAtRound: 'deleted-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Application {\n    /* eslint-disable dot-notation */\n    if (typeof data['id'] === 'undefined')\n      throw new Error(`Response is missing required field 'id': ${data}`);\n    if (typeof data['params'] === 'undefined')\n      throw new Error(`Response is missing required field 'params': ${data}`);\n    return new Application({\n      id: data['id'],\n      params: ApplicationParams.from_obj_for_encoding(data['params']),\n      createdAtRound: data['created-at-round'],\n      deleted: data['deleted'],\n      deletedAtRound: data['deleted-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores local state associated with an application.\n */\nexport class ApplicationLocalState extends BaseModel {\n  /**\n   * The application which this local state is for.\n   */\n  public id: number | bigint;\n\n  /**\n   * (hsch) schema.\n   */\n  public schema: ApplicationStateSchema;\n\n  /**\n   * Round when account closed out of the application.\n   */\n  public closedOutAtRound?: number | bigint;\n\n  /**\n   * Whether or not the application local state is currently deleted from its\n   * account.\n   */\n  public deleted?: boolean;\n\n  /**\n   * (tkv) storage.\n   */\n  public keyValue?: TealKeyValue[];\n\n  /**\n   * Round when the account opted into the application.\n   */\n  public optedInAtRound?: number | bigint;\n\n  /**\n   * Creates a new `ApplicationLocalState` object.\n   * @param id - The application which this local state is for.\n   * @param schema - (hsch) schema.\n   * @param closedOutAtRound - Round when account closed out of the application.\n   * @param deleted - Whether or not the application local state is currently deleted from its\n   * account.\n   * @param keyValue - (tkv) storage.\n   * @param optedInAtRound - Round when the account opted into the application.\n   */\n  constructor({\n    id,\n    schema,\n    closedOutAtRound,\n    deleted,\n    keyValue,\n    optedInAtRound,\n  }: {\n    id: number | bigint;\n    schema: ApplicationStateSchema;\n    closedOutAtRound?: number | bigint;\n    deleted?: boolean;\n    keyValue?: TealKeyValue[];\n    optedInAtRound?: number | bigint;\n  }) {\n    super();\n    this.id = id;\n    this.schema = schema;\n    this.closedOutAtRound = closedOutAtRound;\n    this.deleted = deleted;\n    this.keyValue = keyValue;\n    this.optedInAtRound = optedInAtRound;\n\n    this.attribute_map = {\n      id: 'id',\n      schema: 'schema',\n      closedOutAtRound: 'closed-out-at-round',\n      deleted: 'deleted',\n      keyValue: 'key-value',\n      optedInAtRound: 'opted-in-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationLocalState {\n    /* eslint-disable dot-notation */\n    if (typeof data['id'] === 'undefined')\n      throw new Error(`Response is missing required field 'id': ${data}`);\n    if (typeof data['schema'] === 'undefined')\n      throw new Error(`Response is missing required field 'schema': ${data}`);\n    return new ApplicationLocalState({\n      id: data['id'],\n      schema: ApplicationStateSchema.from_obj_for_encoding(data['schema']),\n      closedOutAtRound: data['closed-out-at-round'],\n      deleted: data['deleted'],\n      keyValue:\n        typeof data['key-value'] !== 'undefined'\n          ? data['key-value'].map(TealKeyValue.from_obj_for_encoding)\n          : undefined,\n      optedInAtRound: data['opted-in-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class ApplicationLocalStatesResponse extends BaseModel {\n  public appsLocalStates: ApplicationLocalState[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `ApplicationLocalStatesResponse` object.\n   * @param appsLocalStates -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    appsLocalStates,\n    currentRound,\n    nextToken,\n  }: {\n    appsLocalStates: ApplicationLocalState[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.appsLocalStates = appsLocalStates;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      appsLocalStates: 'apps-local-states',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationLocalStatesResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['apps-local-states']))\n      throw new Error(\n        `Response is missing required array field 'apps-local-states': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new ApplicationLocalStatesResponse({\n      appsLocalStates: data['apps-local-states'].map(\n        ApplicationLocalState.from_obj_for_encoding\n      ),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores the global information associated with an application.\n */\nexport class ApplicationLogData extends BaseModel {\n  /**\n   * (lg) Logs for the application being executed by the transaction.\n   */\n  public logs: Uint8Array[];\n\n  /**\n   * Transaction ID\n   */\n  public txid: string;\n\n  /**\n   * Creates a new `ApplicationLogData` object.\n   * @param logs - (lg) Logs for the application being executed by the transaction.\n   * @param txid - Transaction ID\n   */\n  constructor({ logs, txid }: { logs: Uint8Array[]; txid: string }) {\n    super();\n    this.logs = logs;\n    this.txid = txid;\n\n    this.attribute_map = {\n      logs: 'logs',\n      txid: 'txid',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ApplicationLogData {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['logs']))\n      throw new Error(\n        `Response is missing required array field 'logs': ${data}`\n      );\n    if (typeof data['txid'] === 'undefined')\n      throw new Error(`Response is missing required field 'txid': ${data}`);\n    return new ApplicationLogData({\n      logs: data['logs'],\n      txid: data['txid'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class ApplicationLogsResponse extends BaseModel {\n  /**\n   * (appidx) application index.\n   */\n  public applicationId: number | bigint;\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  public logData?: ApplicationLogData[];\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `ApplicationLogsResponse` object.\n   * @param applicationId - (appidx) application index.\n   * @param currentRound - Round at which the results were computed.\n   * @param logData -\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    applicationId,\n    currentRound,\n    logData,\n    nextToken,\n  }: {\n    applicationId: number | bigint;\n    currentRound: number | bigint;\n    logData?: ApplicationLogData[];\n    nextToken?: string;\n  }) {\n    super();\n    this.applicationId = applicationId;\n    this.currentRound = currentRound;\n    this.logData = logData;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      applicationId: 'application-id',\n      currentRound: 'current-round',\n      logData: 'log-data',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationLogsResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['application-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'application-id': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new ApplicationLogsResponse({\n      applicationId: data['application-id'],\n      currentRound: data['current-round'],\n      logData:\n        typeof data['log-data'] !== 'undefined'\n          ? data['log-data'].map(ApplicationLogData.from_obj_for_encoding)\n          : undefined,\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores the global information associated with an application.\n */\nexport class ApplicationParams extends BaseModel {\n  /**\n   * (approv) approval program.\n   */\n  public approvalProgram: Uint8Array;\n\n  /**\n   * (clearp) approval program.\n   */\n  public clearStateProgram: Uint8Array;\n\n  /**\n   * The address that created this application. This is the address where the\n   * parameters and global state for this application can be found.\n   */\n  public creator?: string;\n\n  /**\n   * (epp) the amount of extra program pages available to this app.\n   */\n  public extraProgramPages?: number | bigint;\n\n  /**\n   * [\\gs) global schema\n   */\n  public globalState?: TealKeyValue[];\n\n  /**\n   * [\\gsch) global schema\n   */\n  public globalStateSchema?: ApplicationStateSchema;\n\n  /**\n   * [\\lsch) local schema\n   */\n  public localStateSchema?: ApplicationStateSchema;\n\n  /**\n   * Creates a new `ApplicationParams` object.\n   * @param approvalProgram - (approv) approval program.\n   * @param clearStateProgram - (clearp) approval program.\n   * @param creator - The address that created this application. This is the address where the\n   * parameters and global state for this application can be found.\n   * @param extraProgramPages - (epp) the amount of extra program pages available to this app.\n   * @param globalState - [\\gs) global schema\n   * @param globalStateSchema - [\\gsch) global schema\n   * @param localStateSchema - [\\lsch) local schema\n   */\n  constructor({\n    approvalProgram,\n    clearStateProgram,\n    creator,\n    extraProgramPages,\n    globalState,\n    globalStateSchema,\n    localStateSchema,\n  }: {\n    approvalProgram: string | Uint8Array;\n    clearStateProgram: string | Uint8Array;\n    creator?: string;\n    extraProgramPages?: number | bigint;\n    globalState?: TealKeyValue[];\n    globalStateSchema?: ApplicationStateSchema;\n    localStateSchema?: ApplicationStateSchema;\n  }) {\n    super();\n    this.approvalProgram =\n      typeof approvalProgram === 'string'\n        ? new Uint8Array(Buffer.from(approvalProgram, 'base64'))\n        : approvalProgram;\n    this.clearStateProgram =\n      typeof clearStateProgram === 'string'\n        ? new Uint8Array(Buffer.from(clearStateProgram, 'base64'))\n        : clearStateProgram;\n    this.creator = creator;\n    this.extraProgramPages = extraProgramPages;\n    this.globalState = globalState;\n    this.globalStateSchema = globalStateSchema;\n    this.localStateSchema = localStateSchema;\n\n    this.attribute_map = {\n      approvalProgram: 'approval-program',\n      clearStateProgram: 'clear-state-program',\n      creator: 'creator',\n      extraProgramPages: 'extra-program-pages',\n      globalState: 'global-state',\n      globalStateSchema: 'global-state-schema',\n      localStateSchema: 'local-state-schema',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ApplicationParams {\n    /* eslint-disable dot-notation */\n    if (typeof data['approval-program'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'approval-program': ${data}`\n      );\n    if (typeof data['clear-state-program'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'clear-state-program': ${data}`\n      );\n    return new ApplicationParams({\n      approvalProgram: data['approval-program'],\n      clearStateProgram: data['clear-state-program'],\n      creator: data['creator'],\n      extraProgramPages: data['extra-program-pages'],\n      globalState:\n        typeof data['global-state'] !== 'undefined'\n          ? data['global-state'].map(TealKeyValue.from_obj_for_encoding)\n          : undefined,\n      globalStateSchema:\n        typeof data['global-state-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['global-state-schema']\n            )\n          : undefined,\n      localStateSchema:\n        typeof data['local-state-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['local-state-schema']\n            )\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class ApplicationResponse extends BaseModel {\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Application index and its parameters\n   */\n  public application?: Application;\n\n  /**\n   * Creates a new `ApplicationResponse` object.\n   * @param currentRound - Round at which the results were computed.\n   * @param application - Application index and its parameters\n   */\n  constructor({\n    currentRound,\n    application,\n  }: {\n    currentRound: number | bigint;\n    application?: Application;\n  }) {\n    super();\n    this.currentRound = currentRound;\n    this.application = application;\n\n    this.attribute_map = {\n      currentRound: 'current-round',\n      application: 'application',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ApplicationResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new ApplicationResponse({\n      currentRound: data['current-round'],\n      application:\n        typeof data['application'] !== 'undefined'\n          ? Application.from_obj_for_encoding(data['application'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Specifies maximums on the number of each type that may be stored.\n */\nexport class ApplicationStateSchema extends BaseModel {\n  /**\n   * (nbs) num of byte slices.\n   */\n  public numByteSlice: number | bigint;\n\n  /**\n   * (nui) num of uints.\n   */\n  public numUint: number | bigint;\n\n  /**\n   * Creates a new `ApplicationStateSchema` object.\n   * @param numByteSlice - (nbs) num of byte slices.\n   * @param numUint - (nui) num of uints.\n   */\n  constructor({\n    numByteSlice,\n    numUint,\n  }: {\n    numByteSlice: number | bigint;\n    numUint: number | bigint;\n  }) {\n    super();\n    this.numByteSlice = numByteSlice;\n    this.numUint = numUint;\n\n    this.attribute_map = {\n      numByteSlice: 'num-byte-slice',\n      numUint: 'num-uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationStateSchema {\n    /* eslint-disable dot-notation */\n    if (typeof data['num-byte-slice'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'num-byte-slice': ${data}`\n      );\n    if (typeof data['num-uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'num-uint': ${data}`);\n    return new ApplicationStateSchema({\n      numByteSlice: data['num-byte-slice'],\n      numUint: data['num-uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class ApplicationsResponse extends BaseModel {\n  public applications: Application[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `ApplicationsResponse` object.\n   * @param applications -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    applications,\n    currentRound,\n    nextToken,\n  }: {\n    applications: Application[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.applications = applications;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      applications: 'applications',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['applications']))\n      throw new Error(\n        `Response is missing required array field 'applications': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new ApplicationsResponse({\n      applications: data['applications'].map(Application.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Specifies both the unique identifier and the parameters for an asset\n */\nexport class Asset extends BaseModel {\n  /**\n   * unique asset identifier\n   */\n  public index: number | bigint;\n\n  /**\n   * AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  public params: AssetParams;\n\n  /**\n   * Round during which this asset was created.\n   */\n  public createdAtRound?: number | bigint;\n\n  /**\n   * Whether or not this asset is currently deleted.\n   */\n  public deleted?: boolean;\n\n  /**\n   * Round during which this asset was destroyed.\n   */\n  public destroyedAtRound?: number | bigint;\n\n  /**\n   * Creates a new `Asset` object.\n   * @param index - unique asset identifier\n   * @param params - AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   * @param createdAtRound - Round during which this asset was created.\n   * @param deleted - Whether or not this asset is currently deleted.\n   * @param destroyedAtRound - Round during which this asset was destroyed.\n   */\n  constructor({\n    index,\n    params,\n    createdAtRound,\n    deleted,\n    destroyedAtRound,\n  }: {\n    index: number | bigint;\n    params: AssetParams;\n    createdAtRound?: number | bigint;\n    deleted?: boolean;\n    destroyedAtRound?: number | bigint;\n  }) {\n    super();\n    this.index = index;\n    this.params = params;\n    this.createdAtRound = createdAtRound;\n    this.deleted = deleted;\n    this.destroyedAtRound = destroyedAtRound;\n\n    this.attribute_map = {\n      index: 'index',\n      params: 'params',\n      createdAtRound: 'created-at-round',\n      deleted: 'deleted',\n      destroyedAtRound: 'destroyed-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Asset {\n    /* eslint-disable dot-notation */\n    if (typeof data['index'] === 'undefined')\n      throw new Error(`Response is missing required field 'index': ${data}`);\n    if (typeof data['params'] === 'undefined')\n      throw new Error(`Response is missing required field 'params': ${data}`);\n    return new Asset({\n      index: data['index'],\n      params: AssetParams.from_obj_for_encoding(data['params']),\n      createdAtRound: data['created-at-round'],\n      deleted: data['deleted'],\n      destroyedAtRound: data['destroyed-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AssetBalancesResponse extends BaseModel {\n  public balances: MiniAssetHolding[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `AssetBalancesResponse` object.\n   * @param balances -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    balances,\n    currentRound,\n    nextToken,\n  }: {\n    balances: MiniAssetHolding[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.balances = balances;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      balances: 'balances',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AssetBalancesResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['balances']))\n      throw new Error(\n        `Response is missing required array field 'balances': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AssetBalancesResponse({\n      balances: data['balances'].map(MiniAssetHolding.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Describes an asset held by an account.\n * Definition:\n * data/basics/userBalance.go : AssetHolding\n */\nexport class AssetHolding extends BaseModel {\n  /**\n   * (a) number of units held.\n   */\n  public amount: number | bigint;\n\n  /**\n   * Asset ID of the holding.\n   */\n  public assetId: number | bigint;\n\n  /**\n   * (f) whether or not the holding is frozen.\n   */\n  public isFrozen: boolean;\n\n  /**\n   * Whether or not the asset holding is currently deleted from its account.\n   */\n  public deleted?: boolean;\n\n  /**\n   * Round during which the account opted into this asset holding.\n   */\n  public optedInAtRound?: number | bigint;\n\n  /**\n   * Round during which the account opted out of this asset holding.\n   */\n  public optedOutAtRound?: number | bigint;\n\n  /**\n   * Creates a new `AssetHolding` object.\n   * @param amount - (a) number of units held.\n   * @param assetId - Asset ID of the holding.\n   * @param isFrozen - (f) whether or not the holding is frozen.\n   * @param deleted - Whether or not the asset holding is currently deleted from its account.\n   * @param optedInAtRound - Round during which the account opted into this asset holding.\n   * @param optedOutAtRound - Round during which the account opted out of this asset holding.\n   */\n  constructor({\n    amount,\n    assetId,\n    isFrozen,\n    deleted,\n    optedInAtRound,\n    optedOutAtRound,\n  }: {\n    amount: number | bigint;\n    assetId: number | bigint;\n    isFrozen: boolean;\n    deleted?: boolean;\n    optedInAtRound?: number | bigint;\n    optedOutAtRound?: number | bigint;\n  }) {\n    super();\n    this.amount = amount;\n    this.assetId = assetId;\n    this.isFrozen = isFrozen;\n    this.deleted = deleted;\n    this.optedInAtRound = optedInAtRound;\n    this.optedOutAtRound = optedOutAtRound;\n\n    this.attribute_map = {\n      amount: 'amount',\n      assetId: 'asset-id',\n      isFrozen: 'is-frozen',\n      deleted: 'deleted',\n      optedInAtRound: 'opted-in-at-round',\n      optedOutAtRound: 'opted-out-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetHolding {\n    /* eslint-disable dot-notation */\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['asset-id'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset-id': ${data}`);\n    if (typeof data['is-frozen'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'is-frozen': ${data}`\n      );\n    return new AssetHolding({\n      amount: data['amount'],\n      assetId: data['asset-id'],\n      isFrozen: data['is-frozen'],\n      deleted: data['deleted'],\n      optedInAtRound: data['opted-in-at-round'],\n      optedOutAtRound: data['opted-out-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AssetHoldingsResponse extends BaseModel {\n  public assets: AssetHolding[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `AssetHoldingsResponse` object.\n   * @param assets -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    assets,\n    currentRound,\n    nextToken,\n  }: {\n    assets: AssetHolding[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.assets = assets;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      assets: 'assets',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AssetHoldingsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['assets']))\n      throw new Error(\n        `Response is missing required array field 'assets': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AssetHoldingsResponse({\n      assets: data['assets'].map(AssetHolding.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AssetParams specifies the parameters for an asset.\n * (apar) when part of an AssetConfig transaction.\n * Definition:\n * data/transactions/asset.go : AssetParams\n */\nexport class AssetParams extends BaseModel {\n  /**\n   * The address that created this asset. This is the address where the parameters\n   * for this asset can be found, and also the address where unwanted asset units can\n   * be sent in the worst case.\n   */\n  public creator: string;\n\n  /**\n   * (dc) The number of digits to use after the decimal point when displaying this\n   * asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in\n   * tenths. If 2, the base unit of the asset is in hundredths, and so on. This value\n   * must be between 0 and 19 (inclusive).\n   */\n  public decimals: number | bigint;\n\n  /**\n   * (t) The total number of units of this asset.\n   */\n  public total: number | bigint;\n\n  /**\n   * (c) Address of account used to clawback holdings of this asset. If empty,\n   * clawback is not permitted.\n   */\n  public clawback?: string;\n\n  /**\n   * (df) Whether holdings of this asset are frozen by default.\n   */\n  public defaultFrozen?: boolean;\n\n  /**\n   * (f) Address of account used to freeze holdings of this asset. If empty, freezing\n   * is not permitted.\n   */\n  public freeze?: string;\n\n  /**\n   * (m) Address of account used to manage the keys of this asset and to destroy it.\n   */\n  public manager?: string;\n\n  /**\n   * (am) A commitment to some unspecified asset metadata. The format of this\n   * metadata is up to the application.\n   */\n  public metadataHash?: Uint8Array;\n\n  /**\n   * (an) Name of this asset, as supplied by the creator. Included only when the\n   * asset name is composed of printable utf-8 characters.\n   */\n  public name?: string;\n\n  /**\n   * Base64 encoded name of this asset, as supplied by the creator.\n   */\n  public nameB64?: Uint8Array;\n\n  /**\n   * (r) Address of account holding reserve (non-minted) units of this asset.\n   */\n  public reserve?: string;\n\n  /**\n   * (un) Name of a unit of this asset, as supplied by the creator. Included only\n   * when the name of a unit of this asset is composed of printable utf-8 characters.\n   */\n  public unitName?: string;\n\n  /**\n   * Base64 encoded name of a unit of this asset, as supplied by the creator.\n   */\n  public unitNameB64?: Uint8Array;\n\n  /**\n   * (au) URL where more information about the asset can be retrieved. Included only\n   * when the URL is composed of printable utf-8 characters.\n   */\n  public url?: string;\n\n  /**\n   * Base64 encoded URL where more information about the asset can be retrieved.\n   */\n  public urlB64?: Uint8Array;\n\n  /**\n   * Creates a new `AssetParams` object.\n   * @param creator - The address that created this asset. This is the address where the parameters\n   * for this asset can be found, and also the address where unwanted asset units can\n   * be sent in the worst case.\n   * @param decimals - (dc) The number of digits to use after the decimal point when displaying this\n   * asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in\n   * tenths. If 2, the base unit of the asset is in hundredths, and so on. This value\n   * must be between 0 and 19 (inclusive).\n   * @param total - (t) The total number of units of this asset.\n   * @param clawback - (c) Address of account used to clawback holdings of this asset. If empty,\n   * clawback is not permitted.\n   * @param defaultFrozen - (df) Whether holdings of this asset are frozen by default.\n   * @param freeze - (f) Address of account used to freeze holdings of this asset. If empty, freezing\n   * is not permitted.\n   * @param manager - (m) Address of account used to manage the keys of this asset and to destroy it.\n   * @param metadataHash - (am) A commitment to some unspecified asset metadata. The format of this\n   * metadata is up to the application.\n   * @param name - (an) Name of this asset, as supplied by the creator. Included only when the\n   * asset name is composed of printable utf-8 characters.\n   * @param nameB64 - Base64 encoded name of this asset, as supplied by the creator.\n   * @param reserve - (r) Address of account holding reserve (non-minted) units of this asset.\n   * @param unitName - (un) Name of a unit of this asset, as supplied by the creator. Included only\n   * when the name of a unit of this asset is composed of printable utf-8 characters.\n   * @param unitNameB64 - Base64 encoded name of a unit of this asset, as supplied by the creator.\n   * @param url - (au) URL where more information about the asset can be retrieved. Included only\n   * when the URL is composed of printable utf-8 characters.\n   * @param urlB64 - Base64 encoded URL where more information about the asset can be retrieved.\n   */\n  constructor({\n    creator,\n    decimals,\n    total,\n    clawback,\n    defaultFrozen,\n    freeze,\n    manager,\n    metadataHash,\n    name,\n    nameB64,\n    reserve,\n    unitName,\n    unitNameB64,\n    url,\n    urlB64,\n  }: {\n    creator: string;\n    decimals: number | bigint;\n    total: number | bigint;\n    clawback?: string;\n    defaultFrozen?: boolean;\n    freeze?: string;\n    manager?: string;\n    metadataHash?: string | Uint8Array;\n    name?: string;\n    nameB64?: string | Uint8Array;\n    reserve?: string;\n    unitName?: string;\n    unitNameB64?: string | Uint8Array;\n    url?: string;\n    urlB64?: string | Uint8Array;\n  }) {\n    super();\n    this.creator = creator;\n    this.decimals = decimals;\n    this.total = total;\n    this.clawback = clawback;\n    this.defaultFrozen = defaultFrozen;\n    this.freeze = freeze;\n    this.manager = manager;\n    this.metadataHash =\n      typeof metadataHash === 'string'\n        ? new Uint8Array(Buffer.from(metadataHash, 'base64'))\n        : metadataHash;\n    this.name = name;\n    this.nameB64 =\n      typeof nameB64 === 'string'\n        ? new Uint8Array(Buffer.from(nameB64, 'base64'))\n        : nameB64;\n    this.reserve = reserve;\n    this.unitName = unitName;\n    this.unitNameB64 =\n      typeof unitNameB64 === 'string'\n        ? new Uint8Array(Buffer.from(unitNameB64, 'base64'))\n        : unitNameB64;\n    this.url = url;\n    this.urlB64 =\n      typeof urlB64 === 'string'\n        ? new Uint8Array(Buffer.from(urlB64, 'base64'))\n        : urlB64;\n\n    this.attribute_map = {\n      creator: 'creator',\n      decimals: 'decimals',\n      total: 'total',\n      clawback: 'clawback',\n      defaultFrozen: 'default-frozen',\n      freeze: 'freeze',\n      manager: 'manager',\n      metadataHash: 'metadata-hash',\n      name: 'name',\n      nameB64: 'name-b64',\n      reserve: 'reserve',\n      unitName: 'unit-name',\n      unitNameB64: 'unit-name-b64',\n      url: 'url',\n      urlB64: 'url-b64',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetParams {\n    /* eslint-disable dot-notation */\n    if (typeof data['creator'] === 'undefined')\n      throw new Error(`Response is missing required field 'creator': ${data}`);\n    if (typeof data['decimals'] === 'undefined')\n      throw new Error(`Response is missing required field 'decimals': ${data}`);\n    if (typeof data['total'] === 'undefined')\n      throw new Error(`Response is missing required field 'total': ${data}`);\n    return new AssetParams({\n      creator: data['creator'],\n      decimals: data['decimals'],\n      total: data['total'],\n      clawback: data['clawback'],\n      defaultFrozen: data['default-frozen'],\n      freeze: data['freeze'],\n      manager: data['manager'],\n      metadataHash: data['metadata-hash'],\n      name: data['name'],\n      nameB64: data['name-b64'],\n      reserve: data['reserve'],\n      unitName: data['unit-name'],\n      unitNameB64: data['unit-name-b64'],\n      url: data['url'],\n      urlB64: data['url-b64'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AssetResponse extends BaseModel {\n  /**\n   * Specifies both the unique identifier and the parameters for an asset\n   */\n  public asset: Asset;\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Creates a new `AssetResponse` object.\n   * @param asset - Specifies both the unique identifier and the parameters for an asset\n   * @param currentRound - Round at which the results were computed.\n   */\n  constructor({\n    asset,\n    currentRound,\n  }: {\n    asset: Asset;\n    currentRound: number | bigint;\n  }) {\n    super();\n    this.asset = asset;\n    this.currentRound = currentRound;\n\n    this.attribute_map = {\n      asset: 'asset',\n      currentRound: 'current-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['asset'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset': ${data}`);\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AssetResponse({\n      asset: Asset.from_obj_for_encoding(data['asset']),\n      currentRound: data['current-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AssetsResponse extends BaseModel {\n  public assets: Asset[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `AssetsResponse` object.\n   * @param assets -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    assets,\n    currentRound,\n    nextToken,\n  }: {\n    assets: Asset[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.assets = assets;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      assets: 'assets',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['assets']))\n      throw new Error(\n        `Response is missing required array field 'assets': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AssetsResponse({\n      assets: data['assets'].map(Asset.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Block information.\n * Definition:\n * data/bookkeeping/block.go : Block\n */\nexport class Block extends BaseModel {\n  /**\n   * (gh) hash to which this block belongs.\n   */\n  public genesisHash: Uint8Array;\n\n  /**\n   * (gen) ID to which this block belongs.\n   */\n  public genesisId: string;\n\n  /**\n   * (prev) Previous block hash.\n   */\n  public previousBlockHash: Uint8Array;\n\n  /**\n   * (rnd) Current round on which this block was appended to the chain.\n   */\n  public round: number | bigint;\n\n  /**\n   * (seed) Sortition seed.\n   */\n  public seed: Uint8Array;\n\n  /**\n   * (ts) Block creation timestamp in seconds since eposh\n   */\n  public timestamp: number | bigint;\n\n  /**\n   * (txn) TransactionsRoot authenticates the set of transactions appearing in the\n   * block. More specifically, it's the root of a merkle tree whose leaves are the\n   * block's Txids, in lexicographic order. For the empty block, it's 0. Note that\n   * the TxnRoot does not authenticate the signatures on the transactions, only the\n   * transactions themselves. Two blocks with the same transactions but in a\n   * different order and with different signatures will have the same TxnRoot.\n   */\n  public transactionsRoot: Uint8Array;\n\n  /**\n   * (txn256) TransactionsRootSHA256 is an auxiliary TransactionRoot, built using a\n   * vector commitment instead of a merkle tree, and SHA256 hash function instead of\n   * the default SHA512_256. This commitment can be used on environments where only\n   * the SHA256 function exists.\n   */\n  public transactionsRootSha256: Uint8Array;\n\n  /**\n   * Participation account data that needs to be checked/acted on by the network.\n   */\n  public participationUpdates?: ParticipationUpdates;\n\n  /**\n   * Fields relating to rewards,\n   */\n  public rewards?: BlockRewards;\n\n  /**\n   * Tracks the status of state proofs.\n   */\n  public stateProofTracking?: StateProofTracking[];\n\n  /**\n   * (txns) list of transactions corresponding to a given round.\n   */\n  public transactions?: Transaction[];\n\n  /**\n   * (tc) TxnCounter counts the number of transactions committed in the ledger, from\n   * the time at which support for this feature was introduced.\n   * Specifically, TxnCounter is the number of the next transaction that will be\n   * committed after this block. It is 0 when no transactions have ever been\n   * committed (since TxnCounter started being supported).\n   */\n  public txnCounter?: number | bigint;\n\n  /**\n   * Fields relating to a protocol upgrade.\n   */\n  public upgradeState?: BlockUpgradeState;\n\n  /**\n   * Fields relating to voting for a protocol upgrade.\n   */\n  public upgradeVote?: BlockUpgradeVote;\n\n  /**\n   * Creates a new `Block` object.\n   * @param genesisHash - (gh) hash to which this block belongs.\n   * @param genesisId - (gen) ID to which this block belongs.\n   * @param previousBlockHash - (prev) Previous block hash.\n   * @param round - (rnd) Current round on which this block was appended to the chain.\n   * @param seed - (seed) Sortition seed.\n   * @param timestamp - (ts) Block creation timestamp in seconds since eposh\n   * @param transactionsRoot - (txn) TransactionsRoot authenticates the set of transactions appearing in the\n   * block. More specifically, it's the root of a merkle tree whose leaves are the\n   * block's Txids, in lexicographic order. For the empty block, it's 0. Note that\n   * the TxnRoot does not authenticate the signatures on the transactions, only the\n   * transactions themselves. Two blocks with the same transactions but in a\n   * different order and with different signatures will have the same TxnRoot.\n   * @param transactionsRootSha256 - (txn256) TransactionsRootSHA256 is an auxiliary TransactionRoot, built using a\n   * vector commitment instead of a merkle tree, and SHA256 hash function instead of\n   * the default SHA512_256. This commitment can be used on environments where only\n   * the SHA256 function exists.\n   * @param participationUpdates - Participation account data that needs to be checked/acted on by the network.\n   * @param rewards - Fields relating to rewards,\n   * @param stateProofTracking - Tracks the status of state proofs.\n   * @param transactions - (txns) list of transactions corresponding to a given round.\n   * @param txnCounter - (tc) TxnCounter counts the number of transactions committed in the ledger, from\n   * the time at which support for this feature was introduced.\n   * Specifically, TxnCounter is the number of the next transaction that will be\n   * committed after this block. It is 0 when no transactions have ever been\n   * committed (since TxnCounter started being supported).\n   * @param upgradeState - Fields relating to a protocol upgrade.\n   * @param upgradeVote - Fields relating to voting for a protocol upgrade.\n   */\n  constructor({\n    genesisHash,\n    genesisId,\n    previousBlockHash,\n    round,\n    seed,\n    timestamp,\n    transactionsRoot,\n    transactionsRootSha256,\n    participationUpdates,\n    rewards,\n    stateProofTracking,\n    transactions,\n    txnCounter,\n    upgradeState,\n    upgradeVote,\n  }: {\n    genesisHash: string | Uint8Array;\n    genesisId: string;\n    previousBlockHash: string | Uint8Array;\n    round: number | bigint;\n    seed: string | Uint8Array;\n    timestamp: number | bigint;\n    transactionsRoot: string | Uint8Array;\n    transactionsRootSha256: string | Uint8Array;\n    participationUpdates?: ParticipationUpdates;\n    rewards?: BlockRewards;\n    stateProofTracking?: StateProofTracking[];\n    transactions?: Transaction[];\n    txnCounter?: number | bigint;\n    upgradeState?: BlockUpgradeState;\n    upgradeVote?: BlockUpgradeVote;\n  }) {\n    super();\n    this.genesisHash =\n      typeof genesisHash === 'string'\n        ? new Uint8Array(Buffer.from(genesisHash, 'base64'))\n        : genesisHash;\n    this.genesisId = genesisId;\n    this.previousBlockHash =\n      typeof previousBlockHash === 'string'\n        ? new Uint8Array(Buffer.from(previousBlockHash, 'base64'))\n        : previousBlockHash;\n    this.round = round;\n    this.seed =\n      typeof seed === 'string'\n        ? new Uint8Array(Buffer.from(seed, 'base64'))\n        : seed;\n    this.timestamp = timestamp;\n    this.transactionsRoot =\n      typeof transactionsRoot === 'string'\n        ? new Uint8Array(Buffer.from(transactionsRoot, 'base64'))\n        : transactionsRoot;\n    this.transactionsRootSha256 =\n      typeof transactionsRootSha256 === 'string'\n        ? new Uint8Array(Buffer.from(transactionsRootSha256, 'base64'))\n        : transactionsRootSha256;\n    this.participationUpdates = participationUpdates;\n    this.rewards = rewards;\n    this.stateProofTracking = stateProofTracking;\n    this.transactions = transactions;\n    this.txnCounter = txnCounter;\n    this.upgradeState = upgradeState;\n    this.upgradeVote = upgradeVote;\n\n    this.attribute_map = {\n      genesisHash: 'genesis-hash',\n      genesisId: 'genesis-id',\n      previousBlockHash: 'previous-block-hash',\n      round: 'round',\n      seed: 'seed',\n      timestamp: 'timestamp',\n      transactionsRoot: 'transactions-root',\n      transactionsRootSha256: 'transactions-root-sha256',\n      participationUpdates: 'participation-updates',\n      rewards: 'rewards',\n      stateProofTracking: 'state-proof-tracking',\n      transactions: 'transactions',\n      txnCounter: 'txn-counter',\n      upgradeState: 'upgrade-state',\n      upgradeVote: 'upgrade-vote',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Block {\n    /* eslint-disable dot-notation */\n    if (typeof data['genesis-hash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis-hash': ${data}`\n      );\n    if (typeof data['genesis-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis-id': ${data}`\n      );\n    if (typeof data['previous-block-hash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'previous-block-hash': ${data}`\n      );\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (typeof data['seed'] === 'undefined')\n      throw new Error(`Response is missing required field 'seed': ${data}`);\n    if (typeof data['timestamp'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'timestamp': ${data}`\n      );\n    if (typeof data['transactions-root'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'transactions-root': ${data}`\n      );\n    if (typeof data['transactions-root-sha256'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'transactions-root-sha256': ${data}`\n      );\n    return new Block({\n      genesisHash: data['genesis-hash'],\n      genesisId: data['genesis-id'],\n      previousBlockHash: data['previous-block-hash'],\n      round: data['round'],\n      seed: data['seed'],\n      timestamp: data['timestamp'],\n      transactionsRoot: data['transactions-root'],\n      transactionsRootSha256: data['transactions-root-sha256'],\n      participationUpdates:\n        typeof data['participation-updates'] !== 'undefined'\n          ? ParticipationUpdates.from_obj_for_encoding(\n              data['participation-updates']\n            )\n          : undefined,\n      rewards:\n        typeof data['rewards'] !== 'undefined'\n          ? BlockRewards.from_obj_for_encoding(data['rewards'])\n          : undefined,\n      stateProofTracking:\n        typeof data['state-proof-tracking'] !== 'undefined'\n          ? data['state-proof-tracking'].map(\n              StateProofTracking.from_obj_for_encoding\n            )\n          : undefined,\n      transactions:\n        typeof data['transactions'] !== 'undefined'\n          ? data['transactions'].map(Transaction.from_obj_for_encoding)\n          : undefined,\n      txnCounter: data['txn-counter'],\n      upgradeState:\n        typeof data['upgrade-state'] !== 'undefined'\n          ? BlockUpgradeState.from_obj_for_encoding(data['upgrade-state'])\n          : undefined,\n      upgradeVote:\n        typeof data['upgrade-vote'] !== 'undefined'\n          ? BlockUpgradeVote.from_obj_for_encoding(data['upgrade-vote'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields relating to rewards,\n */\nexport class BlockRewards extends BaseModel {\n  /**\n   * (fees) accepts transaction fees, it can only spend to the incentive pool.\n   */\n  public feeSink: string;\n\n  /**\n   * (rwcalr) number of leftover MicroAlgos after the distribution of rewards-rate\n   * MicroAlgos for every reward unit in the next round.\n   */\n  public rewardsCalculationRound: number | bigint;\n\n  /**\n   * (earn) How many rewards, in MicroAlgos, have been distributed to each RewardUnit\n   * of MicroAlgos since genesis.\n   */\n  public rewardsLevel: number | bigint;\n\n  /**\n   * (rwd) accepts periodic injections from the fee-sink and continually\n   * redistributes them as rewards.\n   */\n  public rewardsPool: string;\n\n  /**\n   * (rate) Number of new MicroAlgos added to the participation stake from rewards at\n   * the next round.\n   */\n  public rewardsRate: number | bigint;\n\n  /**\n   * (frac) Number of leftover MicroAlgos after the distribution of\n   * RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round.\n   */\n  public rewardsResidue: number | bigint;\n\n  /**\n   * Creates a new `BlockRewards` object.\n   * @param feeSink - (fees) accepts transaction fees, it can only spend to the incentive pool.\n   * @param rewardsCalculationRound - (rwcalr) number of leftover MicroAlgos after the distribution of rewards-rate\n   * MicroAlgos for every reward unit in the next round.\n   * @param rewardsLevel - (earn) How many rewards, in MicroAlgos, have been distributed to each RewardUnit\n   * of MicroAlgos since genesis.\n   * @param rewardsPool - (rwd) accepts periodic injections from the fee-sink and continually\n   * redistributes them as rewards.\n   * @param rewardsRate - (rate) Number of new MicroAlgos added to the participation stake from rewards at\n   * the next round.\n   * @param rewardsResidue - (frac) Number of leftover MicroAlgos after the distribution of\n   * RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round.\n   */\n  constructor({\n    feeSink,\n    rewardsCalculationRound,\n    rewardsLevel,\n    rewardsPool,\n    rewardsRate,\n    rewardsResidue,\n  }: {\n    feeSink: string;\n    rewardsCalculationRound: number | bigint;\n    rewardsLevel: number | bigint;\n    rewardsPool: string;\n    rewardsRate: number | bigint;\n    rewardsResidue: number | bigint;\n  }) {\n    super();\n    this.feeSink = feeSink;\n    this.rewardsCalculationRound = rewardsCalculationRound;\n    this.rewardsLevel = rewardsLevel;\n    this.rewardsPool = rewardsPool;\n    this.rewardsRate = rewardsRate;\n    this.rewardsResidue = rewardsResidue;\n\n    this.attribute_map = {\n      feeSink: 'fee-sink',\n      rewardsCalculationRound: 'rewards-calculation-round',\n      rewardsLevel: 'rewards-level',\n      rewardsPool: 'rewards-pool',\n      rewardsRate: 'rewards-rate',\n      rewardsResidue: 'rewards-residue',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockRewards {\n    /* eslint-disable dot-notation */\n    if (typeof data['fee-sink'] === 'undefined')\n      throw new Error(`Response is missing required field 'fee-sink': ${data}`);\n    if (typeof data['rewards-calculation-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-calculation-round': ${data}`\n      );\n    if (typeof data['rewards-level'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-level': ${data}`\n      );\n    if (typeof data['rewards-pool'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-pool': ${data}`\n      );\n    if (typeof data['rewards-rate'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-rate': ${data}`\n      );\n    if (typeof data['rewards-residue'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-residue': ${data}`\n      );\n    return new BlockRewards({\n      feeSink: data['fee-sink'],\n      rewardsCalculationRound: data['rewards-calculation-round'],\n      rewardsLevel: data['rewards-level'],\n      rewardsPool: data['rewards-pool'],\n      rewardsRate: data['rewards-rate'],\n      rewardsResidue: data['rewards-residue'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields relating to a protocol upgrade.\n */\nexport class BlockUpgradeState extends BaseModel {\n  /**\n   * (proto) The current protocol version.\n   */\n  public currentProtocol: string;\n\n  /**\n   * (nextproto) The next proposed protocol version.\n   */\n  public nextProtocol?: string;\n\n  /**\n   * (nextyes) Number of blocks which approved the protocol upgrade.\n   */\n  public nextProtocolApprovals?: number | bigint;\n\n  /**\n   * (nextswitch) Round on which the protocol upgrade will take effect.\n   */\n  public nextProtocolSwitchOn?: number | bigint;\n\n  /**\n   * (nextbefore) Deadline round for this protocol upgrade (No votes will be consider\n   * after this round).\n   */\n  public nextProtocolVoteBefore?: number | bigint;\n\n  /**\n   * Creates a new `BlockUpgradeState` object.\n   * @param currentProtocol - (proto) The current protocol version.\n   * @param nextProtocol - (nextproto) The next proposed protocol version.\n   * @param nextProtocolApprovals - (nextyes) Number of blocks which approved the protocol upgrade.\n   * @param nextProtocolSwitchOn - (nextswitch) Round on which the protocol upgrade will take effect.\n   * @param nextProtocolVoteBefore - (nextbefore) Deadline round for this protocol upgrade (No votes will be consider\n   * after this round).\n   */\n  constructor({\n    currentProtocol,\n    nextProtocol,\n    nextProtocolApprovals,\n    nextProtocolSwitchOn,\n    nextProtocolVoteBefore,\n  }: {\n    currentProtocol: string;\n    nextProtocol?: string;\n    nextProtocolApprovals?: number | bigint;\n    nextProtocolSwitchOn?: number | bigint;\n    nextProtocolVoteBefore?: number | bigint;\n  }) {\n    super();\n    this.currentProtocol = currentProtocol;\n    this.nextProtocol = nextProtocol;\n    this.nextProtocolApprovals = nextProtocolApprovals;\n    this.nextProtocolSwitchOn = nextProtocolSwitchOn;\n    this.nextProtocolVoteBefore = nextProtocolVoteBefore;\n\n    this.attribute_map = {\n      currentProtocol: 'current-protocol',\n      nextProtocol: 'next-protocol',\n      nextProtocolApprovals: 'next-protocol-approvals',\n      nextProtocolSwitchOn: 'next-protocol-switch-on',\n      nextProtocolVoteBefore: 'next-protocol-vote-before',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockUpgradeState {\n    /* eslint-disable dot-notation */\n    if (typeof data['current-protocol'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-protocol': ${data}`\n      );\n    return new BlockUpgradeState({\n      currentProtocol: data['current-protocol'],\n      nextProtocol: data['next-protocol'],\n      nextProtocolApprovals: data['next-protocol-approvals'],\n      nextProtocolSwitchOn: data['next-protocol-switch-on'],\n      nextProtocolVoteBefore: data['next-protocol-vote-before'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields relating to voting for a protocol upgrade.\n */\nexport class BlockUpgradeVote extends BaseModel {\n  /**\n   * (upgradeyes) Indicates a yes vote for the current proposal.\n   */\n  public upgradeApprove?: boolean;\n\n  /**\n   * (upgradedelay) Indicates the time between acceptance and execution.\n   */\n  public upgradeDelay?: number | bigint;\n\n  /**\n   * (upgradeprop) Indicates a proposed upgrade.\n   */\n  public upgradePropose?: string;\n\n  /**\n   * Creates a new `BlockUpgradeVote` object.\n   * @param upgradeApprove - (upgradeyes) Indicates a yes vote for the current proposal.\n   * @param upgradeDelay - (upgradedelay) Indicates the time between acceptance and execution.\n   * @param upgradePropose - (upgradeprop) Indicates a proposed upgrade.\n   */\n  constructor({\n    upgradeApprove,\n    upgradeDelay,\n    upgradePropose,\n  }: {\n    upgradeApprove?: boolean;\n    upgradeDelay?: number | bigint;\n    upgradePropose?: string;\n  }) {\n    super();\n    this.upgradeApprove = upgradeApprove;\n    this.upgradeDelay = upgradeDelay;\n    this.upgradePropose = upgradePropose;\n\n    this.attribute_map = {\n      upgradeApprove: 'upgrade-approve',\n      upgradeDelay: 'upgrade-delay',\n      upgradePropose: 'upgrade-propose',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockUpgradeVote {\n    /* eslint-disable dot-notation */\n    return new BlockUpgradeVote({\n      upgradeApprove: data['upgrade-approve'],\n      upgradeDelay: data['upgrade-delay'],\n      upgradePropose: data['upgrade-propose'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box name and its content.\n */\nexport class Box extends BaseModel {\n  /**\n   * (name) box name, base64 encoded\n   */\n  public name: Uint8Array;\n\n  /**\n   * (value) box value, base64 encoded.\n   */\n  public value: Uint8Array;\n\n  /**\n   * Creates a new `Box` object.\n   * @param name - (name) box name, base64 encoded\n   * @param value - (value) box value, base64 encoded.\n   */\n  constructor({\n    name,\n    value,\n  }: {\n    name: string | Uint8Array;\n    value: string | Uint8Array;\n  }) {\n    super();\n    this.name =\n      typeof name === 'string'\n        ? new Uint8Array(Buffer.from(name, 'base64'))\n        : name;\n    this.value =\n      typeof value === 'string'\n        ? new Uint8Array(Buffer.from(value, 'base64'))\n        : value;\n\n    this.attribute_map = {\n      name: 'name',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Box {\n    /* eslint-disable dot-notation */\n    if (typeof data['name'] === 'undefined')\n      throw new Error(`Response is missing required field 'name': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new Box({\n      name: data['name'],\n      value: data['value'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box descriptor describes an app box without a value.\n */\nexport class BoxDescriptor extends BaseModel {\n  /**\n   * Base64 encoded box name\n   */\n  public name: Uint8Array;\n\n  /**\n   * Creates a new `BoxDescriptor` object.\n   * @param name - Base64 encoded box name\n   */\n  constructor({ name }: { name: string | Uint8Array }) {\n    super();\n    this.name =\n      typeof name === 'string'\n        ? new Uint8Array(Buffer.from(name, 'base64'))\n        : name;\n\n    this.attribute_map = {\n      name: 'name',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BoxDescriptor {\n    /* eslint-disable dot-notation */\n    if (typeof data['name'] === 'undefined')\n      throw new Error(`Response is missing required field 'name': ${data}`);\n    return new BoxDescriptor({\n      name: data['name'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box names of an application\n */\nexport class BoxesResponse extends BaseModel {\n  /**\n   * (appidx) application index.\n   */\n  public applicationId: number | bigint;\n\n  public boxes: BoxDescriptor[];\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `BoxesResponse` object.\n   * @param applicationId - (appidx) application index.\n   * @param boxes -\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    applicationId,\n    boxes,\n    nextToken,\n  }: {\n    applicationId: number | bigint;\n    boxes: BoxDescriptor[];\n    nextToken?: string;\n  }) {\n    super();\n    this.applicationId = applicationId;\n    this.boxes = boxes;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      applicationId: 'application-id',\n      boxes: 'boxes',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BoxesResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['application-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'application-id': ${data}`\n      );\n    if (!Array.isArray(data['boxes']))\n      throw new Error(\n        `Response is missing required array field 'boxes': ${data}`\n      );\n    return new BoxesResponse({\n      applicationId: data['application-id'],\n      boxes: data['boxes'].map(BoxDescriptor.from_obj_for_encoding),\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Response for errors\n */\nexport class ErrorResponse extends BaseModel {\n  public message: string;\n\n  public data?: Record<string, any>;\n\n  /**\n   * Creates a new `ErrorResponse` object.\n   * @param message -\n   * @param data -\n   */\n  constructor({\n    message,\n    data,\n  }: {\n    message: string;\n    data?: Record<string, any>;\n  }) {\n    super();\n    this.message = message;\n    this.data = data;\n\n    this.attribute_map = {\n      message: 'message',\n      data: 'data',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ErrorResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['message'] === 'undefined')\n      throw new Error(`Response is missing required field 'message': ${data}`);\n    return new ErrorResponse({\n      message: data['message'],\n      data: data['data'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a TEAL value delta.\n */\nexport class EvalDelta extends BaseModel {\n  /**\n   * (at) delta action.\n   */\n  public action: number | bigint;\n\n  /**\n   * (bs) bytes value.\n   */\n  public bytes?: string;\n\n  /**\n   * (ui) uint value.\n   */\n  public uint?: number | bigint;\n\n  /**\n   * Creates a new `EvalDelta` object.\n   * @param action - (at) delta action.\n   * @param bytes - (bs) bytes value.\n   * @param uint - (ui) uint value.\n   */\n  constructor({\n    action,\n    bytes,\n    uint,\n  }: {\n    action: number | bigint;\n    bytes?: string;\n    uint?: number | bigint;\n  }) {\n    super();\n    this.action = action;\n    this.bytes = bytes;\n    this.uint = uint;\n\n    this.attribute_map = {\n      action: 'action',\n      bytes: 'bytes',\n      uint: 'uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): EvalDelta {\n    /* eslint-disable dot-notation */\n    if (typeof data['action'] === 'undefined')\n      throw new Error(`Response is missing required field 'action': ${data}`);\n    return new EvalDelta({\n      action: data['action'],\n      bytes: data['bytes'],\n      uint: data['uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Key-value pairs for StateDelta.\n */\nexport class EvalDeltaKeyValue extends BaseModel {\n  public key: string;\n\n  /**\n   * Represents a TEAL value delta.\n   */\n  public value: EvalDelta;\n\n  /**\n   * Creates a new `EvalDeltaKeyValue` object.\n   * @param key -\n   * @param value - Represents a TEAL value delta.\n   */\n  constructor({ key, value }: { key: string; value: EvalDelta }) {\n    super();\n    this.key = key;\n    this.value = value;\n\n    this.attribute_map = {\n      key: 'key',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): EvalDeltaKeyValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['key'] === 'undefined')\n      throw new Error(`Response is missing required field 'key': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new EvalDeltaKeyValue({\n      key: data['key'],\n      value: EvalDelta.from_obj_for_encoding(data['value']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class HashFactory extends BaseModel {\n  /**\n   * (t)\n   */\n  public hashType?: number | bigint;\n\n  /**\n   * Creates a new `HashFactory` object.\n   * @param hashType - (t)\n   */\n  constructor({ hashType }: { hashType?: number | bigint }) {\n    super();\n    this.hashType = hashType;\n\n    this.attribute_map = {\n      hashType: 'hash-type',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): HashFactory {\n    /* eslint-disable dot-notation */\n    return new HashFactory({\n      hashType: data['hash-type'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * A health check response.\n */\nexport class HealthCheck extends BaseModel {\n  public dbAvailable: boolean;\n\n  public isMigrating: boolean;\n\n  public message: string;\n\n  public round: number | bigint;\n\n  /**\n   * Current version.\n   */\n  public version: string;\n\n  public data?: Record<string, any>;\n\n  public errors?: string[];\n\n  /**\n   * Creates a new `HealthCheck` object.\n   * @param dbAvailable -\n   * @param isMigrating -\n   * @param message -\n   * @param round -\n   * @param version - Current version.\n   * @param data -\n   * @param errors -\n   */\n  constructor({\n    dbAvailable,\n    isMigrating,\n    message,\n    round,\n    version,\n    data,\n    errors,\n  }: {\n    dbAvailable: boolean;\n    isMigrating: boolean;\n    message: string;\n    round: number | bigint;\n    version: string;\n    data?: Record<string, any>;\n    errors?: string[];\n  }) {\n    super();\n    this.dbAvailable = dbAvailable;\n    this.isMigrating = isMigrating;\n    this.message = message;\n    this.round = round;\n    this.version = version;\n    this.data = data;\n    this.errors = errors;\n\n    this.attribute_map = {\n      dbAvailable: 'db-available',\n      isMigrating: 'is-migrating',\n      message: 'message',\n      round: 'round',\n      version: 'version',\n      data: 'data',\n      errors: 'errors',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): HealthCheck {\n    /* eslint-disable dot-notation */\n    if (typeof data['db-available'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'db-available': ${data}`\n      );\n    if (typeof data['is-migrating'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'is-migrating': ${data}`\n      );\n    if (typeof data['message'] === 'undefined')\n      throw new Error(`Response is missing required field 'message': ${data}`);\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (typeof data['version'] === 'undefined')\n      throw new Error(`Response is missing required field 'version': ${data}`);\n    return new HealthCheck({\n      dbAvailable: data['db-available'],\n      isMigrating: data['is-migrating'],\n      message: data['message'],\n      round: data['round'],\n      version: data['version'],\n      data: data['data'],\n      errors: data['errors'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class IndexerStateProofMessage extends BaseModel {\n  /**\n   * (b)\n   */\n  public blockHeadersCommitment?: Uint8Array;\n\n  /**\n   * (f)\n   */\n  public firstAttestedRound?: number | bigint;\n\n  /**\n   * (l)\n   */\n  public latestAttestedRound?: number | bigint;\n\n  /**\n   * (P)\n   */\n  public lnProvenWeight?: number | bigint;\n\n  /**\n   * (v)\n   */\n  public votersCommitment?: Uint8Array;\n\n  /**\n   * Creates a new `IndexerStateProofMessage` object.\n   * @param blockHeadersCommitment - (b)\n   * @param firstAttestedRound - (f)\n   * @param latestAttestedRound - (l)\n   * @param lnProvenWeight - (P)\n   * @param votersCommitment - (v)\n   */\n  constructor({\n    blockHeadersCommitment,\n    firstAttestedRound,\n    latestAttestedRound,\n    lnProvenWeight,\n    votersCommitment,\n  }: {\n    blockHeadersCommitment?: string | Uint8Array;\n    firstAttestedRound?: number | bigint;\n    latestAttestedRound?: number | bigint;\n    lnProvenWeight?: number | bigint;\n    votersCommitment?: string | Uint8Array;\n  }) {\n    super();\n    this.blockHeadersCommitment =\n      typeof blockHeadersCommitment === 'string'\n        ? new Uint8Array(Buffer.from(blockHeadersCommitment, 'base64'))\n        : blockHeadersCommitment;\n    this.firstAttestedRound = firstAttestedRound;\n    this.latestAttestedRound = latestAttestedRound;\n    this.lnProvenWeight = lnProvenWeight;\n    this.votersCommitment =\n      typeof votersCommitment === 'string'\n        ? new Uint8Array(Buffer.from(votersCommitment, 'base64'))\n        : votersCommitment;\n\n    this.attribute_map = {\n      blockHeadersCommitment: 'block-headers-commitment',\n      firstAttestedRound: 'first-attested-round',\n      latestAttestedRound: 'latest-attested-round',\n      lnProvenWeight: 'ln-proven-weight',\n      votersCommitment: 'voters-commitment',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): IndexerStateProofMessage {\n    /* eslint-disable dot-notation */\n    return new IndexerStateProofMessage({\n      blockHeadersCommitment: data['block-headers-commitment'],\n      firstAttestedRound: data['first-attested-round'],\n      latestAttestedRound: data['latest-attested-round'],\n      lnProvenWeight: data['ln-proven-weight'],\n      votersCommitment: data['voters-commitment'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class MerkleArrayProof extends BaseModel {\n  public hashFactory?: HashFactory;\n\n  /**\n   * (pth)\n   */\n  public path?: Uint8Array[];\n\n  /**\n   * (td)\n   */\n  public treeDepth?: number | bigint;\n\n  /**\n   * Creates a new `MerkleArrayProof` object.\n   * @param hashFactory -\n   * @param path - (pth)\n   * @param treeDepth - (td)\n   */\n  constructor({\n    hashFactory,\n    path,\n    treeDepth,\n  }: {\n    hashFactory?: HashFactory;\n    path?: Uint8Array[];\n    treeDepth?: number | bigint;\n  }) {\n    super();\n    this.hashFactory = hashFactory;\n    this.path = path;\n    this.treeDepth = treeDepth;\n\n    this.attribute_map = {\n      hashFactory: 'hash-factory',\n      path: 'path',\n      treeDepth: 'tree-depth',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): MerkleArrayProof {\n    /* eslint-disable dot-notation */\n    return new MerkleArrayProof({\n      hashFactory:\n        typeof data['hash-factory'] !== 'undefined'\n          ? HashFactory.from_obj_for_encoding(data['hash-factory'])\n          : undefined,\n      path: data['path'],\n      treeDepth: data['tree-depth'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * A simplified version of AssetHolding\n */\nexport class MiniAssetHolding extends BaseModel {\n  public address: string;\n\n  public amount: number | bigint;\n\n  public isFrozen: boolean;\n\n  /**\n   * Whether or not this asset holding is currently deleted from its account.\n   */\n  public deleted?: boolean;\n\n  /**\n   * Round during which the account opted into the asset.\n   */\n  public optedInAtRound?: number | bigint;\n\n  /**\n   * Round during which the account opted out of the asset.\n   */\n  public optedOutAtRound?: number | bigint;\n\n  /**\n   * Creates a new `MiniAssetHolding` object.\n   * @param address -\n   * @param amount -\n   * @param isFrozen -\n   * @param deleted - Whether or not this asset holding is currently deleted from its account.\n   * @param optedInAtRound - Round during which the account opted into the asset.\n   * @param optedOutAtRound - Round during which the account opted out of the asset.\n   */\n  constructor({\n    address,\n    amount,\n    isFrozen,\n    deleted,\n    optedInAtRound,\n    optedOutAtRound,\n  }: {\n    address: string;\n    amount: number | bigint;\n    isFrozen: boolean;\n    deleted?: boolean;\n    optedInAtRound?: number | bigint;\n    optedOutAtRound?: number | bigint;\n  }) {\n    super();\n    this.address = address;\n    this.amount = amount;\n    this.isFrozen = isFrozen;\n    this.deleted = deleted;\n    this.optedInAtRound = optedInAtRound;\n    this.optedOutAtRound = optedOutAtRound;\n\n    this.attribute_map = {\n      address: 'address',\n      amount: 'amount',\n      isFrozen: 'is-frozen',\n      deleted: 'deleted',\n      optedInAtRound: 'opted-in-at-round',\n      optedOutAtRound: 'opted-out-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): MiniAssetHolding {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['is-frozen'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'is-frozen': ${data}`\n      );\n    return new MiniAssetHolding({\n      address: data['address'],\n      amount: data['amount'],\n      isFrozen: data['is-frozen'],\n      deleted: data['deleted'],\n      optedInAtRound: data['opted-in-at-round'],\n      optedOutAtRound: data['opted-out-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Participation account data that needs to be checked/acted on by the network.\n */\nexport class ParticipationUpdates extends BaseModel {\n  /**\n   * (partupdrmv) a list of online accounts that needs to be converted to offline\n   * since their participation key expired.\n   */\n  public expiredParticipationAccounts?: string[];\n\n  /**\n   * Creates a new `ParticipationUpdates` object.\n   * @param expiredParticipationAccounts - (partupdrmv) a list of online accounts that needs to be converted to offline\n   * since their participation key expired.\n   */\n  constructor({\n    expiredParticipationAccounts,\n  }: {\n    expiredParticipationAccounts?: string[];\n  }) {\n    super();\n    this.expiredParticipationAccounts = expiredParticipationAccounts;\n\n    this.attribute_map = {\n      expiredParticipationAccounts: 'expired-participation-accounts',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ParticipationUpdates {\n    /* eslint-disable dot-notation */\n    return new ParticipationUpdates({\n      expiredParticipationAccounts: data['expired-participation-accounts'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * (sp) represents a state proof.\n * Definition:\n * crypto/stateproof/structs.go : StateProof\n */\nexport class StateProofFields extends BaseModel {\n  /**\n   * (P)\n   */\n  public partProofs?: MerkleArrayProof;\n\n  /**\n   * (pr) Sequence of reveal positions.\n   */\n  public positionsToReveal?: (number | bigint)[];\n\n  /**\n   * (r) Note that this is actually stored as a map[uint64] - Reveal in the actual\n   * msgp\n   */\n  public reveals?: StateProofReveal[];\n\n  /**\n   * (v) Salt version of the merkle signature.\n   */\n  public saltVersion?: number | bigint;\n\n  /**\n   * (c)\n   */\n  public sigCommit?: Uint8Array;\n\n  /**\n   * (S)\n   */\n  public sigProofs?: MerkleArrayProof;\n\n  /**\n   * (w)\n   */\n  public signedWeight?: number | bigint;\n\n  /**\n   * Creates a new `StateProofFields` object.\n   * @param partProofs - (P)\n   * @param positionsToReveal - (pr) Sequence of reveal positions.\n   * @param reveals - (r) Note that this is actually stored as a map[uint64] - Reveal in the actual\n   * msgp\n   * @param saltVersion - (v) Salt version of the merkle signature.\n   * @param sigCommit - (c)\n   * @param sigProofs - (S)\n   * @param signedWeight - (w)\n   */\n  constructor({\n    partProofs,\n    positionsToReveal,\n    reveals,\n    saltVersion,\n    sigCommit,\n    sigProofs,\n    signedWeight,\n  }: {\n    partProofs?: MerkleArrayProof;\n    positionsToReveal?: (number | bigint)[];\n    reveals?: StateProofReveal[];\n    saltVersion?: number | bigint;\n    sigCommit?: string | Uint8Array;\n    sigProofs?: MerkleArrayProof;\n    signedWeight?: number | bigint;\n  }) {\n    super();\n    this.partProofs = partProofs;\n    this.positionsToReveal = positionsToReveal;\n    this.reveals = reveals;\n    this.saltVersion = saltVersion;\n    this.sigCommit =\n      typeof sigCommit === 'string'\n        ? new Uint8Array(Buffer.from(sigCommit, 'base64'))\n        : sigCommit;\n    this.sigProofs = sigProofs;\n    this.signedWeight = signedWeight;\n\n    this.attribute_map = {\n      partProofs: 'part-proofs',\n      positionsToReveal: 'positions-to-reveal',\n      reveals: 'reveals',\n      saltVersion: 'salt-version',\n      sigCommit: 'sig-commit',\n      sigProofs: 'sig-proofs',\n      signedWeight: 'signed-weight',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofFields {\n    /* eslint-disable dot-notation */\n    return new StateProofFields({\n      partProofs:\n        typeof data['part-proofs'] !== 'undefined'\n          ? MerkleArrayProof.from_obj_for_encoding(data['part-proofs'])\n          : undefined,\n      positionsToReveal: data['positions-to-reveal'],\n      reveals:\n        typeof data['reveals'] !== 'undefined'\n          ? data['reveals'].map(StateProofReveal.from_obj_for_encoding)\n          : undefined,\n      saltVersion: data['salt-version'],\n      sigCommit: data['sig-commit'],\n      sigProofs:\n        typeof data['sig-proofs'] !== 'undefined'\n          ? MerkleArrayProof.from_obj_for_encoding(data['sig-proofs'])\n          : undefined,\n      signedWeight: data['signed-weight'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofParticipant extends BaseModel {\n  /**\n   * (p)\n   */\n  public verifier?: StateProofVerifier;\n\n  /**\n   * (w)\n   */\n  public weight?: number | bigint;\n\n  /**\n   * Creates a new `StateProofParticipant` object.\n   * @param verifier - (p)\n   * @param weight - (w)\n   */\n  constructor({\n    verifier,\n    weight,\n  }: {\n    verifier?: StateProofVerifier;\n    weight?: number | bigint;\n  }) {\n    super();\n    this.verifier = verifier;\n    this.weight = weight;\n\n    this.attribute_map = {\n      verifier: 'verifier',\n      weight: 'weight',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): StateProofParticipant {\n    /* eslint-disable dot-notation */\n    return new StateProofParticipant({\n      verifier:\n        typeof data['verifier'] !== 'undefined'\n          ? StateProofVerifier.from_obj_for_encoding(data['verifier'])\n          : undefined,\n      weight: data['weight'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofReveal extends BaseModel {\n  /**\n   * (p)\n   */\n  public participant?: StateProofParticipant;\n\n  /**\n   * The position in the signature and participants arrays corresponding to this\n   * entry.\n   */\n  public position?: number | bigint;\n\n  /**\n   * (s)\n   */\n  public sigSlot?: StateProofSigSlot;\n\n  /**\n   * Creates a new `StateProofReveal` object.\n   * @param participant - (p)\n   * @param position - The position in the signature and participants arrays corresponding to this\n   * entry.\n   * @param sigSlot - (s)\n   */\n  constructor({\n    participant,\n    position,\n    sigSlot,\n  }: {\n    participant?: StateProofParticipant;\n    position?: number | bigint;\n    sigSlot?: StateProofSigSlot;\n  }) {\n    super();\n    this.participant = participant;\n    this.position = position;\n    this.sigSlot = sigSlot;\n\n    this.attribute_map = {\n      participant: 'participant',\n      position: 'position',\n      sigSlot: 'sig-slot',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofReveal {\n    /* eslint-disable dot-notation */\n    return new StateProofReveal({\n      participant:\n        typeof data['participant'] !== 'undefined'\n          ? StateProofParticipant.from_obj_for_encoding(data['participant'])\n          : undefined,\n      position: data['position'],\n      sigSlot:\n        typeof data['sig-slot'] !== 'undefined'\n          ? StateProofSigSlot.from_obj_for_encoding(data['sig-slot'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofSigSlot extends BaseModel {\n  /**\n   * (l) The total weight of signatures in the lower-numbered slots.\n   */\n  public lowerSigWeight?: number | bigint;\n\n  public signature?: StateProofSignature;\n\n  /**\n   * Creates a new `StateProofSigSlot` object.\n   * @param lowerSigWeight - (l) The total weight of signatures in the lower-numbered slots.\n   * @param signature -\n   */\n  constructor({\n    lowerSigWeight,\n    signature,\n  }: {\n    lowerSigWeight?: number | bigint;\n    signature?: StateProofSignature;\n  }) {\n    super();\n    this.lowerSigWeight = lowerSigWeight;\n    this.signature = signature;\n\n    this.attribute_map = {\n      lowerSigWeight: 'lower-sig-weight',\n      signature: 'signature',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofSigSlot {\n    /* eslint-disable dot-notation */\n    return new StateProofSigSlot({\n      lowerSigWeight: data['lower-sig-weight'],\n      signature:\n        typeof data['signature'] !== 'undefined'\n          ? StateProofSignature.from_obj_for_encoding(data['signature'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofSignature extends BaseModel {\n  public falconSignature?: Uint8Array;\n\n  public merkleArrayIndex?: number | bigint;\n\n  public proof?: MerkleArrayProof;\n\n  /**\n   * (vkey)\n   */\n  public verifyingKey?: Uint8Array;\n\n  /**\n   * Creates a new `StateProofSignature` object.\n   * @param falconSignature -\n   * @param merkleArrayIndex -\n   * @param proof -\n   * @param verifyingKey - (vkey)\n   */\n  constructor({\n    falconSignature,\n    merkleArrayIndex,\n    proof,\n    verifyingKey,\n  }: {\n    falconSignature?: string | Uint8Array;\n    merkleArrayIndex?: number | bigint;\n    proof?: MerkleArrayProof;\n    verifyingKey?: string | Uint8Array;\n  }) {\n    super();\n    this.falconSignature =\n      typeof falconSignature === 'string'\n        ? new Uint8Array(Buffer.from(falconSignature, 'base64'))\n        : falconSignature;\n    this.merkleArrayIndex = merkleArrayIndex;\n    this.proof = proof;\n    this.verifyingKey =\n      typeof verifyingKey === 'string'\n        ? new Uint8Array(Buffer.from(verifyingKey, 'base64'))\n        : verifyingKey;\n\n    this.attribute_map = {\n      falconSignature: 'falcon-signature',\n      merkleArrayIndex: 'merkle-array-index',\n      proof: 'proof',\n      verifyingKey: 'verifying-key',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofSignature {\n    /* eslint-disable dot-notation */\n    return new StateProofSignature({\n      falconSignature: data['falcon-signature'],\n      merkleArrayIndex: data['merkle-array-index'],\n      proof:\n        typeof data['proof'] !== 'undefined'\n          ? MerkleArrayProof.from_obj_for_encoding(data['proof'])\n          : undefined,\n      verifyingKey: data['verifying-key'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofTracking extends BaseModel {\n  /**\n   * (n) Next round for which we will accept a state proof transaction.\n   */\n  public nextRound?: number | bigint;\n\n  /**\n   * (t) The total number of microalgos held by the online accounts during the\n   * StateProof round.\n   */\n  public onlineTotalWeight?: number | bigint;\n\n  /**\n   * State Proof Type. Note the raw object uses map with this as key.\n   */\n  public type?: number | bigint;\n\n  /**\n   * (v) Root of a vector commitment containing online accounts that will help sign\n   * the proof.\n   */\n  public votersCommitment?: Uint8Array;\n\n  /**\n   * Creates a new `StateProofTracking` object.\n   * @param nextRound - (n) Next round for which we will accept a state proof transaction.\n   * @param onlineTotalWeight - (t) The total number of microalgos held by the online accounts during the\n   * StateProof round.\n   * @param type - State Proof Type. Note the raw object uses map with this as key.\n   * @param votersCommitment - (v) Root of a vector commitment containing online accounts that will help sign\n   * the proof.\n   */\n  constructor({\n    nextRound,\n    onlineTotalWeight,\n    type,\n    votersCommitment,\n  }: {\n    nextRound?: number | bigint;\n    onlineTotalWeight?: number | bigint;\n    type?: number | bigint;\n    votersCommitment?: string | Uint8Array;\n  }) {\n    super();\n    this.nextRound = nextRound;\n    this.onlineTotalWeight = onlineTotalWeight;\n    this.type = type;\n    this.votersCommitment =\n      typeof votersCommitment === 'string'\n        ? new Uint8Array(Buffer.from(votersCommitment, 'base64'))\n        : votersCommitment;\n\n    this.attribute_map = {\n      nextRound: 'next-round',\n      onlineTotalWeight: 'online-total-weight',\n      type: 'type',\n      votersCommitment: 'voters-commitment',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofTracking {\n    /* eslint-disable dot-notation */\n    return new StateProofTracking({\n      nextRound: data['next-round'],\n      onlineTotalWeight: data['online-total-weight'],\n      type: data['type'],\n      votersCommitment: data['voters-commitment'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofVerifier extends BaseModel {\n  /**\n   * (cmt) Represents the root of the vector commitment tree.\n   */\n  public commitment?: Uint8Array;\n\n  /**\n   * (lf) Key lifetime.\n   */\n  public keyLifetime?: number | bigint;\n\n  /**\n   * Creates a new `StateProofVerifier` object.\n   * @param commitment - (cmt) Represents the root of the vector commitment tree.\n   * @param keyLifetime - (lf) Key lifetime.\n   */\n  constructor({\n    commitment,\n    keyLifetime,\n  }: {\n    commitment?: string | Uint8Array;\n    keyLifetime?: number | bigint;\n  }) {\n    super();\n    this.commitment =\n      typeof commitment === 'string'\n        ? new Uint8Array(Buffer.from(commitment, 'base64'))\n        : commitment;\n    this.keyLifetime = keyLifetime;\n\n    this.attribute_map = {\n      commitment: 'commitment',\n      keyLifetime: 'key-lifetime',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofVerifier {\n    /* eslint-disable dot-notation */\n    return new StateProofVerifier({\n      commitment: data['commitment'],\n      keyLifetime: data['key-lifetime'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a (apls) local-state or (apgs) global-state schema. These schemas\n * determine how much storage may be used in a local-state or global-state for an\n * application. The more space used, the larger minimum balance must be maintained\n * in the account holding the data.\n */\nexport class StateSchema extends BaseModel {\n  /**\n   * Maximum number of TEAL byte slices that may be stored in the key/value store.\n   */\n  public numByteSlice: number | bigint;\n\n  /**\n   * Maximum number of TEAL uints that may be stored in the key/value store.\n   */\n  public numUint: number | bigint;\n\n  /**\n   * Creates a new `StateSchema` object.\n   * @param numByteSlice - Maximum number of TEAL byte slices that may be stored in the key/value store.\n   * @param numUint - Maximum number of TEAL uints that may be stored in the key/value store.\n   */\n  constructor({\n    numByteSlice,\n    numUint,\n  }: {\n    numByteSlice: number | bigint;\n    numUint: number | bigint;\n  }) {\n    super();\n    this.numByteSlice = numByteSlice;\n    this.numUint = numUint;\n\n    this.attribute_map = {\n      numByteSlice: 'num-byte-slice',\n      numUint: 'num-uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateSchema {\n    /* eslint-disable dot-notation */\n    if (typeof data['num-byte-slice'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'num-byte-slice': ${data}`\n      );\n    if (typeof data['num-uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'num-uint': ${data}`);\n    return new StateSchema({\n      numByteSlice: data['num-byte-slice'],\n      numUint: data['num-uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a key-value pair in an application store.\n */\nexport class TealKeyValue extends BaseModel {\n  public key: string;\n\n  /**\n   * Represents a TEAL value.\n   */\n  public value: TealValue;\n\n  /**\n   * Creates a new `TealKeyValue` object.\n   * @param key -\n   * @param value - Represents a TEAL value.\n   */\n  constructor({ key, value }: { key: string; value: TealValue }) {\n    super();\n    this.key = key;\n    this.value = value;\n\n    this.attribute_map = {\n      key: 'key',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TealKeyValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['key'] === 'undefined')\n      throw new Error(`Response is missing required field 'key': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new TealKeyValue({\n      key: data['key'],\n      value: TealValue.from_obj_for_encoding(data['value']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a TEAL value.\n */\nexport class TealValue extends BaseModel {\n  /**\n   * (tb) bytes value.\n   */\n  public bytes: string;\n\n  /**\n   * (tt) value type. Value `1` refers to **bytes**, value `2` refers to **uint**\n   */\n  public type: number | bigint;\n\n  /**\n   * (ui) uint value.\n   */\n  public uint: number | bigint;\n\n  /**\n   * Creates a new `TealValue` object.\n   * @param bytes - (tb) bytes value.\n   * @param type - (tt) value type. Value `1` refers to **bytes**, value `2` refers to **uint**\n   * @param uint - (ui) uint value.\n   */\n  constructor({\n    bytes,\n    type,\n    uint,\n  }: {\n    bytes: string;\n    type: number | bigint;\n    uint: number | bigint;\n  }) {\n    super();\n    this.bytes = bytes;\n    this.type = type;\n    this.uint = uint;\n\n    this.attribute_map = {\n      bytes: 'bytes',\n      type: 'type',\n      uint: 'uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TealValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['bytes'] === 'undefined')\n      throw new Error(`Response is missing required field 'bytes': ${data}`);\n    if (typeof data['type'] === 'undefined')\n      throw new Error(`Response is missing required field 'type': ${data}`);\n    if (typeof data['uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'uint': ${data}`);\n    return new TealValue({\n      bytes: data['bytes'],\n      type: data['type'],\n      uint: data['uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Contains all fields common to all transactions and serves as an envelope to all\n * transactions type. Represents both regular and inner transactions.\n * Definition:\n * data/transactions/signedtxn.go : SignedTxn\n * data/transactions/transaction.go : Transaction\n */\nexport class Transaction extends BaseModel {\n  /**\n   * (fee) Transaction fee.\n   */\n  public fee: number | bigint;\n\n  /**\n   * (fv) First valid round for this transaction.\n   */\n  public firstValid: number | bigint;\n\n  /**\n   * (lv) Last valid round for this transaction.\n   */\n  public lastValid: number | bigint;\n\n  /**\n   * (snd) Sender's address.\n   */\n  public sender: string;\n\n  /**\n   * Fields for application transactions.\n   * Definition:\n   * data/transactions/application.go : ApplicationCallTxnFields\n   */\n  public applicationTransaction?: TransactionApplication;\n\n  /**\n   * Fields for asset allocation, re-configuration, and destruction.\n   * A zero value for asset-id indicates asset creation.\n   * A zero value for the params indicates asset destruction.\n   * Definition:\n   * data/transactions/asset.go : AssetConfigTxnFields\n   */\n  public assetConfigTransaction?: TransactionAssetConfig;\n\n  /**\n   * Fields for an asset freeze transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetFreezeTxnFields\n   */\n  public assetFreezeTransaction?: TransactionAssetFreeze;\n\n  /**\n   * Fields for an asset transfer transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetTransferTxnFields\n   */\n  public assetTransferTransaction?: TransactionAssetTransfer;\n\n  /**\n   * (sgnr) this is included with signed transactions when the signing address does\n   * not equal the sender. The backend can use this to ensure that auth addr is equal\n   * to the accounts auth addr.\n   */\n  public authAddr?: string;\n\n  /**\n   * (rc) rewards applied to close-remainder-to account.\n   */\n  public closeRewards?: number | bigint;\n\n  /**\n   * (ca) closing amount for transaction.\n   */\n  public closingAmount?: number | bigint;\n\n  /**\n   * Round when the transaction was confirmed.\n   */\n  public confirmedRound?: number | bigint;\n\n  /**\n   * Specifies an application index (ID) if an application was created with this\n   * transaction.\n   */\n  public createdApplicationIndex?: number | bigint;\n\n  /**\n   * Specifies an asset index (ID) if an asset was created with this transaction.\n   */\n  public createdAssetIndex?: number | bigint;\n\n  /**\n   * (gh) Hash of genesis block.\n   */\n  public genesisHash?: Uint8Array;\n\n  /**\n   * (gen) genesis block ID.\n   */\n  public genesisId?: string;\n\n  /**\n   * (gd) Global state key/value changes for the application being executed by this\n   * transaction.\n   */\n  public globalStateDelta?: EvalDeltaKeyValue[];\n\n  /**\n   * (grp) Base64 encoded byte array of a sha512/256 digest. When present indicates\n   * that this transaction is part of a transaction group and the value is the\n   * sha512/256 hash of the transactions in that group.\n   */\n  public group?: Uint8Array;\n\n  /**\n   * Transaction ID\n   */\n  public id?: string;\n\n  /**\n   * Inner transactions produced by application execution.\n   */\n  public innerTxns?: Transaction[];\n\n  /**\n   * Offset into the round where this transaction was confirmed.\n   */\n  public intraRoundOffset?: number | bigint;\n\n  /**\n   * Fields for a keyreg transaction.\n   * Definition:\n   * data/transactions/keyreg.go : KeyregTxnFields\n   */\n  public keyregTransaction?: TransactionKeyreg;\n\n  /**\n   * (lx) Base64 encoded 32-byte array. Lease enforces mutual exclusion of\n   * transactions. If this field is nonzero, then once the transaction is confirmed,\n   * it acquires the lease identified by the (Sender, Lease) pair of the transaction\n   * until the LastValid round passes. While this transaction possesses the lease, no\n   * other transaction specifying this lease can be confirmed.\n   */\n  public lease?: Uint8Array;\n\n  /**\n   * (ld) Local state key/value changes for the application being executed by this\n   * transaction.\n   */\n  public localStateDelta?: AccountStateDelta[];\n\n  /**\n   * (lg) Logs for the application being executed by this transaction.\n   */\n  public logs?: Uint8Array[];\n\n  /**\n   * (note) Free form data.\n   */\n  public note?: Uint8Array;\n\n  /**\n   * Fields for a payment transaction.\n   * Definition:\n   * data/transactions/payment.go : PaymentTxnFields\n   */\n  public paymentTransaction?: TransactionPayment;\n\n  /**\n   * (rr) rewards applied to receiver account.\n   */\n  public receiverRewards?: number | bigint;\n\n  /**\n   * (rekey) when included in a valid transaction, the accounts auth addr will be\n   * updated with this value and future signatures must be signed with the key\n   * represented by this address.\n   */\n  public rekeyTo?: string;\n\n  /**\n   * Time when the block this transaction is in was confirmed.\n   */\n  public roundTime?: number | bigint;\n\n  /**\n   * (rs) rewards applied to sender account.\n   */\n  public senderRewards?: number | bigint;\n\n  /**\n   * Validation signature associated with some data. Only one of the signatures\n   * should be provided.\n   */\n  public signature?: TransactionSignature;\n\n  /**\n   * Fields for a state proof transaction.\n   * Definition:\n   * data/transactions/stateproof.go : StateProofTxnFields\n   */\n  public stateProofTransaction?: TransactionStateProof;\n\n  /**\n   * (type) Indicates what type of transaction this is. Different types have\n   * different fields.\n   * Valid types, and where their fields are stored:\n   * * (pay) payment-transaction\n   * * (keyreg) keyreg-transaction\n   * * (acfg) asset-config-transaction\n   * * (axfer) asset-transfer-transaction\n   * * (afrz) asset-freeze-transaction\n   * * (appl) application-transaction\n   * * (stpf) state-proof-transaction\n   */\n  public txType?: string;\n\n  /**\n   * Creates a new `Transaction` object.\n   * @param fee - (fee) Transaction fee.\n   * @param firstValid - (fv) First valid round for this transaction.\n   * @param lastValid - (lv) Last valid round for this transaction.\n   * @param sender - (snd) Sender's address.\n   * @param applicationTransaction - Fields for application transactions.\n   * Definition:\n   * data/transactions/application.go : ApplicationCallTxnFields\n   * @param assetConfigTransaction - Fields for asset allocation, re-configuration, and destruction.\n   * A zero value for asset-id indicates asset creation.\n   * A zero value for the params indicates asset destruction.\n   * Definition:\n   * data/transactions/asset.go : AssetConfigTxnFields\n   * @param assetFreezeTransaction - Fields for an asset freeze transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetFreezeTxnFields\n   * @param assetTransferTransaction - Fields for an asset transfer transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetTransferTxnFields\n   * @param authAddr - (sgnr) this is included with signed transactions when the signing address does\n   * not equal the sender. The backend can use this to ensure that auth addr is equal\n   * to the accounts auth addr.\n   * @param closeRewards - (rc) rewards applied to close-remainder-to account.\n   * @param closingAmount - (ca) closing amount for transaction.\n   * @param confirmedRound - Round when the transaction was confirmed.\n   * @param createdApplicationIndex - Specifies an application index (ID) if an application was created with this\n   * transaction.\n   * @param createdAssetIndex - Specifies an asset index (ID) if an asset was created with this transaction.\n   * @param genesisHash - (gh) Hash of genesis block.\n   * @param genesisId - (gen) genesis block ID.\n   * @param globalStateDelta - (gd) Global state key/value changes for the application being executed by this\n   * transaction.\n   * @param group - (grp) Base64 encoded byte array of a sha512/256 digest. When present indicates\n   * that this transaction is part of a transaction group and the value is the\n   * sha512/256 hash of the transactions in that group.\n   * @param id - Transaction ID\n   * @param innerTxns - Inner transactions produced by application execution.\n   * @param intraRoundOffset - Offset into the round where this transaction was confirmed.\n   * @param keyregTransaction - Fields for a keyreg transaction.\n   * Definition:\n   * data/transactions/keyreg.go : KeyregTxnFields\n   * @param lease - (lx) Base64 encoded 32-byte array. Lease enforces mutual exclusion of\n   * transactions. If this field is nonzero, then once the transaction is confirmed,\n   * it acquires the lease identified by the (Sender, Lease) pair of the transaction\n   * until the LastValid round passes. While this transaction possesses the lease, no\n   * other transaction specifying this lease can be confirmed.\n   * @param localStateDelta - (ld) Local state key/value changes for the application being executed by this\n   * transaction.\n   * @param logs - (lg) Logs for the application being executed by this transaction.\n   * @param note - (note) Free form data.\n   * @param paymentTransaction - Fields for a payment transaction.\n   * Definition:\n   * data/transactions/payment.go : PaymentTxnFields\n   * @param receiverRewards - (rr) rewards applied to receiver account.\n   * @param rekeyTo - (rekey) when included in a valid transaction, the accounts auth addr will be\n   * updated with this value and future signatures must be signed with the key\n   * represented by this address.\n   * @param roundTime - Time when the block this transaction is in was confirmed.\n   * @param senderRewards - (rs) rewards applied to sender account.\n   * @param signature - Validation signature associated with some data. Only one of the signatures\n   * should be provided.\n   * @param stateProofTransaction - Fields for a state proof transaction.\n   * Definition:\n   * data/transactions/stateproof.go : StateProofTxnFields\n   * @param txType - (type) Indicates what type of transaction this is. Different types have\n   * different fields.\n   * Valid types, and where their fields are stored:\n   * * (pay) payment-transaction\n   * * (keyreg) keyreg-transaction\n   * * (acfg) asset-config-transaction\n   * * (axfer) asset-transfer-transaction\n   * * (afrz) asset-freeze-transaction\n   * * (appl) application-transaction\n   * * (stpf) state-proof-transaction\n   */\n  constructor({\n    fee,\n    firstValid,\n    lastValid,\n    sender,\n    applicationTransaction,\n    assetConfigTransaction,\n    assetFreezeTransaction,\n    assetTransferTransaction,\n    authAddr,\n    closeRewards,\n    closingAmount,\n    confirmedRound,\n    createdApplicationIndex,\n    createdAssetIndex,\n    genesisHash,\n    genesisId,\n    globalStateDelta,\n    group,\n    id,\n    innerTxns,\n    intraRoundOffset,\n    keyregTransaction,\n    lease,\n    localStateDelta,\n    logs,\n    note,\n    paymentTransaction,\n    receiverRewards,\n    rekeyTo,\n    roundTime,\n    senderRewards,\n    signature,\n    stateProofTransaction,\n    txType,\n  }: {\n    fee: number | bigint;\n    firstValid: number | bigint;\n    lastValid: number | bigint;\n    sender: string;\n    applicationTransaction?: TransactionApplication;\n    assetConfigTransaction?: TransactionAssetConfig;\n    assetFreezeTransaction?: TransactionAssetFreeze;\n    assetTransferTransaction?: TransactionAssetTransfer;\n    authAddr?: string;\n    closeRewards?: number | bigint;\n    closingAmount?: number | bigint;\n    confirmedRound?: number | bigint;\n    createdApplicationIndex?: number | bigint;\n    createdAssetIndex?: number | bigint;\n    genesisHash?: string | Uint8Array;\n    genesisId?: string;\n    globalStateDelta?: EvalDeltaKeyValue[];\n    group?: string | Uint8Array;\n    id?: string;\n    innerTxns?: Transaction[];\n    intraRoundOffset?: number | bigint;\n    keyregTransaction?: TransactionKeyreg;\n    lease?: string | Uint8Array;\n    localStateDelta?: AccountStateDelta[];\n    logs?: Uint8Array[];\n    note?: string | Uint8Array;\n    paymentTransaction?: TransactionPayment;\n    receiverRewards?: number | bigint;\n    rekeyTo?: string;\n    roundTime?: number | bigint;\n    senderRewards?: number | bigint;\n    signature?: TransactionSignature;\n    stateProofTransaction?: TransactionStateProof;\n    txType?: string;\n  }) {\n    super();\n    this.fee = fee;\n    this.firstValid = firstValid;\n    this.lastValid = lastValid;\n    this.sender = sender;\n    this.applicationTransaction = applicationTransaction;\n    this.assetConfigTransaction = assetConfigTransaction;\n    this.assetFreezeTransaction = assetFreezeTransaction;\n    this.assetTransferTransaction = assetTransferTransaction;\n    this.authAddr = authAddr;\n    this.closeRewards = closeRewards;\n    this.closingAmount = closingAmount;\n    this.confirmedRound = confirmedRound;\n    this.createdApplicationIndex = createdApplicationIndex;\n    this.createdAssetIndex = createdAssetIndex;\n    this.genesisHash =\n      typeof genesisHash === 'string'\n        ? new Uint8Array(Buffer.from(genesisHash, 'base64'))\n        : genesisHash;\n    this.genesisId = genesisId;\n    this.globalStateDelta = globalStateDelta;\n    this.group =\n      typeof group === 'string'\n        ? new Uint8Array(Buffer.from(group, 'base64'))\n        : group;\n    this.id = id;\n    this.innerTxns = innerTxns;\n    this.intraRoundOffset = intraRoundOffset;\n    this.keyregTransaction = keyregTransaction;\n    this.lease =\n      typeof lease === 'string'\n        ? new Uint8Array(Buffer.from(lease, 'base64'))\n        : lease;\n    this.localStateDelta = localStateDelta;\n    this.logs = logs;\n    this.note =\n      typeof note === 'string'\n        ? new Uint8Array(Buffer.from(note, 'base64'))\n        : note;\n    this.paymentTransaction = paymentTransaction;\n    this.receiverRewards = receiverRewards;\n    this.rekeyTo = rekeyTo;\n    this.roundTime = roundTime;\n    this.senderRewards = senderRewards;\n    this.signature = signature;\n    this.stateProofTransaction = stateProofTransaction;\n    this.txType = txType;\n\n    this.attribute_map = {\n      fee: 'fee',\n      firstValid: 'first-valid',\n      lastValid: 'last-valid',\n      sender: 'sender',\n      applicationTransaction: 'application-transaction',\n      assetConfigTransaction: 'asset-config-transaction',\n      assetFreezeTransaction: 'asset-freeze-transaction',\n      assetTransferTransaction: 'asset-transfer-transaction',\n      authAddr: 'auth-addr',\n      closeRewards: 'close-rewards',\n      closingAmount: 'closing-amount',\n      confirmedRound: 'confirmed-round',\n      createdApplicationIndex: 'created-application-index',\n      createdAssetIndex: 'created-asset-index',\n      genesisHash: 'genesis-hash',\n      genesisId: 'genesis-id',\n      globalStateDelta: 'global-state-delta',\n      group: 'group',\n      id: 'id',\n      innerTxns: 'inner-txns',\n      intraRoundOffset: 'intra-round-offset',\n      keyregTransaction: 'keyreg-transaction',\n      lease: 'lease',\n      localStateDelta: 'local-state-delta',\n      logs: 'logs',\n      note: 'note',\n      paymentTransaction: 'payment-transaction',\n      receiverRewards: 'receiver-rewards',\n      rekeyTo: 'rekey-to',\n      roundTime: 'round-time',\n      senderRewards: 'sender-rewards',\n      signature: 'signature',\n      stateProofTransaction: 'state-proof-transaction',\n      txType: 'tx-type',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Transaction {\n    /* eslint-disable dot-notation */\n    if (typeof data['fee'] === 'undefined')\n      throw new Error(`Response is missing required field 'fee': ${data}`);\n    if (typeof data['first-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'first-valid': ${data}`\n      );\n    if (typeof data['last-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'last-valid': ${data}`\n      );\n    if (typeof data['sender'] === 'undefined')\n      throw new Error(`Response is missing required field 'sender': ${data}`);\n    return new Transaction({\n      fee: data['fee'],\n      firstValid: data['first-valid'],\n      lastValid: data['last-valid'],\n      sender: data['sender'],\n      applicationTransaction:\n        typeof data['application-transaction'] !== 'undefined'\n          ? TransactionApplication.from_obj_for_encoding(\n              data['application-transaction']\n            )\n          : undefined,\n      assetConfigTransaction:\n        typeof data['asset-config-transaction'] !== 'undefined'\n          ? TransactionAssetConfig.from_obj_for_encoding(\n              data['asset-config-transaction']\n            )\n          : undefined,\n      assetFreezeTransaction:\n        typeof data['asset-freeze-transaction'] !== 'undefined'\n          ? TransactionAssetFreeze.from_obj_for_encoding(\n              data['asset-freeze-transaction']\n            )\n          : undefined,\n      assetTransferTransaction:\n        typeof data['asset-transfer-transaction'] !== 'undefined'\n          ? TransactionAssetTransfer.from_obj_for_encoding(\n              data['asset-transfer-transaction']\n            )\n          : undefined,\n      authAddr: data['auth-addr'],\n      closeRewards: data['close-rewards'],\n      closingAmount: data['closing-amount'],\n      confirmedRound: data['confirmed-round'],\n      createdApplicationIndex: data['created-application-index'],\n      createdAssetIndex: data['created-asset-index'],\n      genesisHash: data['genesis-hash'],\n      genesisId: data['genesis-id'],\n      globalStateDelta:\n        typeof data['global-state-delta'] !== 'undefined'\n          ? data['global-state-delta'].map(\n              EvalDeltaKeyValue.from_obj_for_encoding\n            )\n          : undefined,\n      group: data['group'],\n      id: data['id'],\n      innerTxns:\n        typeof data['inner-txns'] !== 'undefined'\n          ? data['inner-txns'].map(Transaction.from_obj_for_encoding)\n          : undefined,\n      intraRoundOffset: data['intra-round-offset'],\n      keyregTransaction:\n        typeof data['keyreg-transaction'] !== 'undefined'\n          ? TransactionKeyreg.from_obj_for_encoding(data['keyreg-transaction'])\n          : undefined,\n      lease: data['lease'],\n      localStateDelta:\n        typeof data['local-state-delta'] !== 'undefined'\n          ? data['local-state-delta'].map(\n              AccountStateDelta.from_obj_for_encoding\n            )\n          : undefined,\n      logs: data['logs'],\n      note: data['note'],\n      paymentTransaction:\n        typeof data['payment-transaction'] !== 'undefined'\n          ? TransactionPayment.from_obj_for_encoding(\n              data['payment-transaction']\n            )\n          : undefined,\n      receiverRewards: data['receiver-rewards'],\n      rekeyTo: data['rekey-to'],\n      roundTime: data['round-time'],\n      senderRewards: data['sender-rewards'],\n      signature:\n        typeof data['signature'] !== 'undefined'\n          ? TransactionSignature.from_obj_for_encoding(data['signature'])\n          : undefined,\n      stateProofTransaction:\n        typeof data['state-proof-transaction'] !== 'undefined'\n          ? TransactionStateProof.from_obj_for_encoding(\n              data['state-proof-transaction']\n            )\n          : undefined,\n      txType: data['tx-type'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for application transactions.\n * Definition:\n * data/transactions/application.go : ApplicationCallTxnFields\n */\nexport class TransactionApplication extends BaseModel {\n  /**\n   * (apid) ID of the application being configured or empty if creating.\n   */\n  public applicationId: number | bigint;\n\n  /**\n   * (apat) List of accounts in addition to the sender that may be accessed from the\n   * application's approval-program and clear-state-program.\n   */\n  public accounts?: string[];\n\n  /**\n   * (apaa) transaction specific arguments accessed from the application's\n   * approval-program and clear-state-program.\n   */\n  public applicationArgs?: Uint8Array[];\n\n  /**\n   * (apap) Logic executed for every application transaction, except when\n   * on-completion is set to \"clear\". It can read and write global state for the\n   * application, as well as account-specific local state. Approval programs may\n   * reject the transaction.\n   */\n  public approvalProgram?: Uint8Array;\n\n  /**\n   * (apsu) Logic executed for application transactions with on-completion set to\n   * \"clear\". It can read and write global state for the application, as well as\n   * account-specific local state. Clear state programs cannot reject the\n   * transaction.\n   */\n  public clearStateProgram?: Uint8Array;\n\n  /**\n   * (epp) specifies the additional app program len requested in pages.\n   */\n  public extraProgramPages?: number | bigint;\n\n  /**\n   * (apfa) Lists the applications in addition to the application-id whose global\n   * states may be accessed by this application's approval-program and\n   * clear-state-program. The access is read-only.\n   */\n  public foreignApps?: (number | bigint)[];\n\n  /**\n   * (apas) lists the assets whose parameters may be accessed by this application's\n   * ApprovalProgram and ClearStateProgram. The access is read-only.\n   */\n  public foreignAssets?: (number | bigint)[];\n\n  /**\n   * Represents a (apls) local-state or (apgs) global-state schema. These schemas\n   * determine how much storage may be used in a local-state or global-state for an\n   * application. The more space used, the larger minimum balance must be maintained\n   * in the account holding the data.\n   */\n  public globalStateSchema?: StateSchema;\n\n  /**\n   * Represents a (apls) local-state or (apgs) global-state schema. These schemas\n   * determine how much storage may be used in a local-state or global-state for an\n   * application. The more space used, the larger minimum balance must be maintained\n   * in the account holding the data.\n   */\n  public localStateSchema?: StateSchema;\n\n  /**\n   * (apan) defines the what additional actions occur with the transaction.\n   * Valid types:\n   * * noop\n   * * optin\n   * * closeout\n   * * clear\n   * * update\n   * * update\n   * * delete\n   */\n  public onCompletion?: string;\n\n  /**\n   * Creates a new `TransactionApplication` object.\n   * @param applicationId - (apid) ID of the application being configured or empty if creating.\n   * @param accounts - (apat) List of accounts in addition to the sender that may be accessed from the\n   * application's approval-program and clear-state-program.\n   * @param applicationArgs - (apaa) transaction specific arguments accessed from the application's\n   * approval-program and clear-state-program.\n   * @param approvalProgram - (apap) Logic executed for every application transaction, except when\n   * on-completion is set to \"clear\". It can read and write global state for the\n   * application, as well as account-specific local state. Approval programs may\n   * reject the transaction.\n   * @param clearStateProgram - (apsu) Logic executed for application transactions with on-completion set to\n   * \"clear\". It can read and write global state for the application, as well as\n   * account-specific local state. Clear state programs cannot reject the\n   * transaction.\n   * @param extraProgramPages - (epp) specifies the additional app program len requested in pages.\n   * @param foreignApps - (apfa) Lists the applications in addition to the application-id whose global\n   * states may be accessed by this application's approval-program and\n   * clear-state-program. The access is read-only.\n   * @param foreignAssets - (apas) lists the assets whose parameters may be accessed by this application's\n   * ApprovalProgram and ClearStateProgram. The access is read-only.\n   * @param globalStateSchema - Represents a (apls) local-state or (apgs) global-state schema. These schemas\n   * determine how much storage may be used in a local-state or global-state for an\n   * application. The more space used, the larger minimum balance must be maintained\n   * in the account holding the data.\n   * @param localStateSchema - Represents a (apls) local-state or (apgs) global-state schema. These schemas\n   * determine how much storage may be used in a local-state or global-state for an\n   * application. The more space used, the larger minimum balance must be maintained\n   * in the account holding the data.\n   * @param onCompletion - (apan) defines the what additional actions occur with the transaction.\n   * Valid types:\n   * * noop\n   * * optin\n   * * closeout\n   * * clear\n   * * update\n   * * update\n   * * delete\n   */\n  constructor({\n    applicationId,\n    accounts,\n    applicationArgs,\n    approvalProgram,\n    clearStateProgram,\n    extraProgramPages,\n    foreignApps,\n    foreignAssets,\n    globalStateSchema,\n    localStateSchema,\n    onCompletion,\n  }: {\n    applicationId: number | bigint;\n    accounts?: string[];\n    applicationArgs?: Uint8Array[];\n    approvalProgram?: string | Uint8Array;\n    clearStateProgram?: string | Uint8Array;\n    extraProgramPages?: number | bigint;\n    foreignApps?: (number | bigint)[];\n    foreignAssets?: (number | bigint)[];\n    globalStateSchema?: StateSchema;\n    localStateSchema?: StateSchema;\n    onCompletion?: string;\n  }) {\n    super();\n    this.applicationId = applicationId;\n    this.accounts = accounts;\n    this.applicationArgs = applicationArgs;\n    this.approvalProgram =\n      typeof approvalProgram === 'string'\n        ? new Uint8Array(Buffer.from(approvalProgram, 'base64'))\n        : approvalProgram;\n    this.clearStateProgram =\n      typeof clearStateProgram === 'string'\n        ? new Uint8Array(Buffer.from(clearStateProgram, 'base64'))\n        : clearStateProgram;\n    this.extraProgramPages = extraProgramPages;\n    this.foreignApps = foreignApps;\n    this.foreignAssets = foreignAssets;\n    this.globalStateSchema = globalStateSchema;\n    this.localStateSchema = localStateSchema;\n    this.onCompletion = onCompletion;\n\n    this.attribute_map = {\n      applicationId: 'application-id',\n      accounts: 'accounts',\n      applicationArgs: 'application-args',\n      approvalProgram: 'approval-program',\n      clearStateProgram: 'clear-state-program',\n      extraProgramPages: 'extra-program-pages',\n      foreignApps: 'foreign-apps',\n      foreignAssets: 'foreign-assets',\n      globalStateSchema: 'global-state-schema',\n      localStateSchema: 'local-state-schema',\n      onCompletion: 'on-completion',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionApplication {\n    /* eslint-disable dot-notation */\n    if (typeof data['application-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'application-id': ${data}`\n      );\n    return new TransactionApplication({\n      applicationId: data['application-id'],\n      accounts: data['accounts'],\n      applicationArgs: data['application-args'],\n      approvalProgram: data['approval-program'],\n      clearStateProgram: data['clear-state-program'],\n      extraProgramPages: data['extra-program-pages'],\n      foreignApps: data['foreign-apps'],\n      foreignAssets: data['foreign-assets'],\n      globalStateSchema:\n        typeof data['global-state-schema'] !== 'undefined'\n          ? StateSchema.from_obj_for_encoding(data['global-state-schema'])\n          : undefined,\n      localStateSchema:\n        typeof data['local-state-schema'] !== 'undefined'\n          ? StateSchema.from_obj_for_encoding(data['local-state-schema'])\n          : undefined,\n      onCompletion: data['on-completion'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for asset allocation, re-configuration, and destruction.\n * A zero value for asset-id indicates asset creation.\n * A zero value for the params indicates asset destruction.\n * Definition:\n * data/transactions/asset.go : AssetConfigTxnFields\n */\nexport class TransactionAssetConfig extends BaseModel {\n  /**\n   * (xaid) ID of the asset being configured or empty if creating.\n   */\n  public assetId?: number | bigint;\n\n  /**\n   * AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  public params?: AssetParams;\n\n  /**\n   * Creates a new `TransactionAssetConfig` object.\n   * @param assetId - (xaid) ID of the asset being configured or empty if creating.\n   * @param params - AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  constructor({\n    assetId,\n    params,\n  }: {\n    assetId?: number | bigint;\n    params?: AssetParams;\n  }) {\n    super();\n    this.assetId = assetId;\n    this.params = params;\n\n    this.attribute_map = {\n      assetId: 'asset-id',\n      params: 'params',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionAssetConfig {\n    /* eslint-disable dot-notation */\n    return new TransactionAssetConfig({\n      assetId: data['asset-id'],\n      params:\n        typeof data['params'] !== 'undefined'\n          ? AssetParams.from_obj_for_encoding(data['params'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for an asset freeze transaction.\n * Definition:\n * data/transactions/asset.go : AssetFreezeTxnFields\n */\nexport class TransactionAssetFreeze extends BaseModel {\n  /**\n   * (fadd) Address of the account whose asset is being frozen or thawed.\n   */\n  public address: string;\n\n  /**\n   * (faid) ID of the asset being frozen or thawed.\n   */\n  public assetId: number | bigint;\n\n  /**\n   * (afrz) The new freeze status.\n   */\n  public newFreezeStatus: boolean;\n\n  /**\n   * Creates a new `TransactionAssetFreeze` object.\n   * @param address - (fadd) Address of the account whose asset is being frozen or thawed.\n   * @param assetId - (faid) ID of the asset being frozen or thawed.\n   * @param newFreezeStatus - (afrz) The new freeze status.\n   */\n  constructor({\n    address,\n    assetId,\n    newFreezeStatus,\n  }: {\n    address: string;\n    assetId: number | bigint;\n    newFreezeStatus: boolean;\n  }) {\n    super();\n    this.address = address;\n    this.assetId = assetId;\n    this.newFreezeStatus = newFreezeStatus;\n\n    this.attribute_map = {\n      address: 'address',\n      assetId: 'asset-id',\n      newFreezeStatus: 'new-freeze-status',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionAssetFreeze {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (typeof data['asset-id'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset-id': ${data}`);\n    if (typeof data['new-freeze-status'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'new-freeze-status': ${data}`\n      );\n    return new TransactionAssetFreeze({\n      address: data['address'],\n      assetId: data['asset-id'],\n      newFreezeStatus: data['new-freeze-status'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for an asset transfer transaction.\n * Definition:\n * data/transactions/asset.go : AssetTransferTxnFields\n */\nexport class TransactionAssetTransfer extends BaseModel {\n  /**\n   * (aamt) Amount of asset to transfer. A zero amount transferred to self allocates\n   * that asset in the account's Assets map.\n   */\n  public amount: number | bigint;\n\n  /**\n   * (xaid) ID of the asset being transferred.\n   */\n  public assetId: number | bigint;\n\n  /**\n   * (arcv) Recipient address of the transfer.\n   */\n  public receiver: string;\n\n  /**\n   * Number of assets transfered to the close-to account as part of the transaction.\n   */\n  public closeAmount?: number | bigint;\n\n  /**\n   * (aclose) Indicates that the asset should be removed from the account's Assets\n   * map, and specifies where the remaining asset holdings should be transferred.\n   * It's always valid to transfer remaining asset holdings to the creator account.\n   */\n  public closeTo?: string;\n\n  /**\n   * (asnd) The effective sender during a clawback transactions. If this is not a\n   * zero value, the real transaction sender must be the Clawback address from the\n   * AssetParams.\n   */\n  public sender?: string;\n\n  /**\n   * Creates a new `TransactionAssetTransfer` object.\n   * @param amount - (aamt) Amount of asset to transfer. A zero amount transferred to self allocates\n   * that asset in the account's Assets map.\n   * @param assetId - (xaid) ID of the asset being transferred.\n   * @param receiver - (arcv) Recipient address of the transfer.\n   * @param closeAmount - Number of assets transfered to the close-to account as part of the transaction.\n   * @param closeTo - (aclose) Indicates that the asset should be removed from the account's Assets\n   * map, and specifies where the remaining asset holdings should be transferred.\n   * It's always valid to transfer remaining asset holdings to the creator account.\n   * @param sender - (asnd) The effective sender during a clawback transactions. If this is not a\n   * zero value, the real transaction sender must be the Clawback address from the\n   * AssetParams.\n   */\n  constructor({\n    amount,\n    assetId,\n    receiver,\n    closeAmount,\n    closeTo,\n    sender,\n  }: {\n    amount: number | bigint;\n    assetId: number | bigint;\n    receiver: string;\n    closeAmount?: number | bigint;\n    closeTo?: string;\n    sender?: string;\n  }) {\n    super();\n    this.amount = amount;\n    this.assetId = assetId;\n    this.receiver = receiver;\n    this.closeAmount = closeAmount;\n    this.closeTo = closeTo;\n    this.sender = sender;\n\n    this.attribute_map = {\n      amount: 'amount',\n      assetId: 'asset-id',\n      receiver: 'receiver',\n      closeAmount: 'close-amount',\n      closeTo: 'close-to',\n      sender: 'sender',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionAssetTransfer {\n    /* eslint-disable dot-notation */\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['asset-id'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset-id': ${data}`);\n    if (typeof data['receiver'] === 'undefined')\n      throw new Error(`Response is missing required field 'receiver': ${data}`);\n    return new TransactionAssetTransfer({\n      amount: data['amount'],\n      assetId: data['asset-id'],\n      receiver: data['receiver'],\n      closeAmount: data['close-amount'],\n      closeTo: data['close-to'],\n      sender: data['sender'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for a keyreg transaction.\n * Definition:\n * data/transactions/keyreg.go : KeyregTxnFields\n */\nexport class TransactionKeyreg extends BaseModel {\n  /**\n   * (nonpart) Mark the account as participating or non-participating.\n   */\n  public nonParticipation?: boolean;\n\n  /**\n   * (selkey) Public key used with the Verified Random Function (VRF) result during\n   * committee selection.\n   */\n  public selectionParticipationKey?: Uint8Array;\n\n  /**\n   * (sprfkey) State proof key used in key registration transactions.\n   */\n  public stateProofKey?: Uint8Array;\n\n  /**\n   * (votefst) First round this participation key is valid.\n   */\n  public voteFirstValid?: number | bigint;\n\n  /**\n   * (votekd) Number of subkeys in each batch of participation keys.\n   */\n  public voteKeyDilution?: number | bigint;\n\n  /**\n   * (votelst) Last round this participation key is valid.\n   */\n  public voteLastValid?: number | bigint;\n\n  /**\n   * (votekey) Participation public key used in key registration transactions.\n   */\n  public voteParticipationKey?: Uint8Array;\n\n  /**\n   * Creates a new `TransactionKeyreg` object.\n   * @param nonParticipation - (nonpart) Mark the account as participating or non-participating.\n   * @param selectionParticipationKey - (selkey) Public key used with the Verified Random Function (VRF) result during\n   * committee selection.\n   * @param stateProofKey - (sprfkey) State proof key used in key registration transactions.\n   * @param voteFirstValid - (votefst) First round this participation key is valid.\n   * @param voteKeyDilution - (votekd) Number of subkeys in each batch of participation keys.\n   * @param voteLastValid - (votelst) Last round this participation key is valid.\n   * @param voteParticipationKey - (votekey) Participation public key used in key registration transactions.\n   */\n  constructor({\n    nonParticipation,\n    selectionParticipationKey,\n    stateProofKey,\n    voteFirstValid,\n    voteKeyDilution,\n    voteLastValid,\n    voteParticipationKey,\n  }: {\n    nonParticipation?: boolean;\n    selectionParticipationKey?: string | Uint8Array;\n    stateProofKey?: string | Uint8Array;\n    voteFirstValid?: number | bigint;\n    voteKeyDilution?: number | bigint;\n    voteLastValid?: number | bigint;\n    voteParticipationKey?: string | Uint8Array;\n  }) {\n    super();\n    this.nonParticipation = nonParticipation;\n    this.selectionParticipationKey =\n      typeof selectionParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(selectionParticipationKey, 'base64'))\n        : selectionParticipationKey;\n    this.stateProofKey =\n      typeof stateProofKey === 'string'\n        ? new Uint8Array(Buffer.from(stateProofKey, 'base64'))\n        : stateProofKey;\n    this.voteFirstValid = voteFirstValid;\n    this.voteKeyDilution = voteKeyDilution;\n    this.voteLastValid = voteLastValid;\n    this.voteParticipationKey =\n      typeof voteParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(voteParticipationKey, 'base64'))\n        : voteParticipationKey;\n\n    this.attribute_map = {\n      nonParticipation: 'non-participation',\n      selectionParticipationKey: 'selection-participation-key',\n      stateProofKey: 'state-proof-key',\n      voteFirstValid: 'vote-first-valid',\n      voteKeyDilution: 'vote-key-dilution',\n      voteLastValid: 'vote-last-valid',\n      voteParticipationKey: 'vote-participation-key',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TransactionKeyreg {\n    /* eslint-disable dot-notation */\n    return new TransactionKeyreg({\n      nonParticipation: data['non-participation'],\n      selectionParticipationKey: data['selection-participation-key'],\n      stateProofKey: data['state-proof-key'],\n      voteFirstValid: data['vote-first-valid'],\n      voteKeyDilution: data['vote-key-dilution'],\n      voteLastValid: data['vote-last-valid'],\n      voteParticipationKey: data['vote-participation-key'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for a payment transaction.\n * Definition:\n * data/transactions/payment.go : PaymentTxnFields\n */\nexport class TransactionPayment extends BaseModel {\n  /**\n   * (amt) number of MicroAlgos intended to be transferred.\n   */\n  public amount: number | bigint;\n\n  /**\n   * (rcv) receiver's address.\n   */\n  public receiver: string;\n\n  /**\n   * Number of MicroAlgos that were sent to the close-remainder-to address when\n   * closing the sender account.\n   */\n  public closeAmount?: number | bigint;\n\n  /**\n   * (close) when set, indicates that the sending account should be closed and all\n   * remaining funds be transferred to this address.\n   */\n  public closeRemainderTo?: string;\n\n  /**\n   * Creates a new `TransactionPayment` object.\n   * @param amount - (amt) number of MicroAlgos intended to be transferred.\n   * @param receiver - (rcv) receiver's address.\n   * @param closeAmount - Number of MicroAlgos that were sent to the close-remainder-to address when\n   * closing the sender account.\n   * @param closeRemainderTo - (close) when set, indicates that the sending account should be closed and all\n   * remaining funds be transferred to this address.\n   */\n  constructor({\n    amount,\n    receiver,\n    closeAmount,\n    closeRemainderTo,\n  }: {\n    amount: number | bigint;\n    receiver: string;\n    closeAmount?: number | bigint;\n    closeRemainderTo?: string;\n  }) {\n    super();\n    this.amount = amount;\n    this.receiver = receiver;\n    this.closeAmount = closeAmount;\n    this.closeRemainderTo = closeRemainderTo;\n\n    this.attribute_map = {\n      amount: 'amount',\n      receiver: 'receiver',\n      closeAmount: 'close-amount',\n      closeRemainderTo: 'close-remainder-to',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TransactionPayment {\n    /* eslint-disable dot-notation */\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['receiver'] === 'undefined')\n      throw new Error(`Response is missing required field 'receiver': ${data}`);\n    return new TransactionPayment({\n      amount: data['amount'],\n      receiver: data['receiver'],\n      closeAmount: data['close-amount'],\n      closeRemainderTo: data['close-remainder-to'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class TransactionResponse extends BaseModel {\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Contains all fields common to all transactions and serves as an envelope to all\n   * transactions type. Represents both regular and inner transactions.\n   * Definition:\n   * data/transactions/signedtxn.go : SignedTxn\n   * data/transactions/transaction.go : Transaction\n   */\n  public transaction: Transaction;\n\n  /**\n   * Creates a new `TransactionResponse` object.\n   * @param currentRound - Round at which the results were computed.\n   * @param transaction - Contains all fields common to all transactions and serves as an envelope to all\n   * transactions type. Represents both regular and inner transactions.\n   * Definition:\n   * data/transactions/signedtxn.go : SignedTxn\n   * data/transactions/transaction.go : Transaction\n   */\n  constructor({\n    currentRound,\n    transaction,\n  }: {\n    currentRound: number | bigint;\n    transaction: Transaction;\n  }) {\n    super();\n    this.currentRound = currentRound;\n    this.transaction = transaction;\n\n    this.attribute_map = {\n      currentRound: 'current-round',\n      transaction: 'transaction',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TransactionResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    if (typeof data['transaction'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'transaction': ${data}`\n      );\n    return new TransactionResponse({\n      currentRound: data['current-round'],\n      transaction: Transaction.from_obj_for_encoding(data['transaction']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Validation signature associated with some data. Only one of the signatures\n * should be provided.\n */\nexport class TransactionSignature extends BaseModel {\n  /**\n   * (lsig) Programatic transaction signature.\n   * Definition:\n   * data/transactions/logicsig.go\n   */\n  public logicsig?: TransactionSignatureLogicsig;\n\n  /**\n   * (msig) structure holding multiple subsignatures.\n   * Definition:\n   * crypto/multisig.go : MultisigSig\n   */\n  public multisig?: TransactionSignatureMultisig;\n\n  /**\n   * (sig) Standard ed25519 signature.\n   */\n  public sig?: Uint8Array;\n\n  /**\n   * Creates a new `TransactionSignature` object.\n   * @param logicsig - (lsig) Programatic transaction signature.\n   * Definition:\n   * data/transactions/logicsig.go\n   * @param multisig - (msig) structure holding multiple subsignatures.\n   * Definition:\n   * crypto/multisig.go : MultisigSig\n   * @param sig - (sig) Standard ed25519 signature.\n   */\n  constructor({\n    logicsig,\n    multisig,\n    sig,\n  }: {\n    logicsig?: TransactionSignatureLogicsig;\n    multisig?: TransactionSignatureMultisig;\n    sig?: string | Uint8Array;\n  }) {\n    super();\n    this.logicsig = logicsig;\n    this.multisig = multisig;\n    this.sig =\n      typeof sig === 'string'\n        ? new Uint8Array(Buffer.from(sig, 'base64'))\n        : sig;\n\n    this.attribute_map = {\n      logicsig: 'logicsig',\n      multisig: 'multisig',\n      sig: 'sig',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionSignature {\n    /* eslint-disable dot-notation */\n    return new TransactionSignature({\n      logicsig:\n        typeof data['logicsig'] !== 'undefined'\n          ? TransactionSignatureLogicsig.from_obj_for_encoding(data['logicsig'])\n          : undefined,\n      multisig:\n        typeof data['multisig'] !== 'undefined'\n          ? TransactionSignatureMultisig.from_obj_for_encoding(data['multisig'])\n          : undefined,\n      sig: data['sig'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * (lsig) Programatic transaction signature.\n * Definition:\n * data/transactions/logicsig.go\n */\nexport class TransactionSignatureLogicsig extends BaseModel {\n  /**\n   * (l) Program signed by a signature or multi signature, or hashed to be the\n   * address of ana ccount. Base64 encoded TEAL program.\n   */\n  public logic: Uint8Array;\n\n  /**\n   * (arg) Logic arguments, base64 encoded.\n   */\n  public args?: Uint8Array[];\n\n  /**\n   * (msig) structure holding multiple subsignatures.\n   * Definition:\n   * crypto/multisig.go : MultisigSig\n   */\n  public multisigSignature?: TransactionSignatureMultisig;\n\n  /**\n   * (sig) ed25519 signature.\n   */\n  public signature?: Uint8Array;\n\n  /**\n   * Creates a new `TransactionSignatureLogicsig` object.\n   * @param logic - (l) Program signed by a signature or multi signature, or hashed to be the\n   * address of ana ccount. Base64 encoded TEAL program.\n   * @param args - (arg) Logic arguments, base64 encoded.\n   * @param multisigSignature - (msig) structure holding multiple subsignatures.\n   * Definition:\n   * crypto/multisig.go : MultisigSig\n   * @param signature - (sig) ed25519 signature.\n   */\n  constructor({\n    logic,\n    args,\n    multisigSignature,\n    signature,\n  }: {\n    logic: string | Uint8Array;\n    args?: Uint8Array[];\n    multisigSignature?: TransactionSignatureMultisig;\n    signature?: string | Uint8Array;\n  }) {\n    super();\n    this.logic =\n      typeof logic === 'string'\n        ? new Uint8Array(Buffer.from(logic, 'base64'))\n        : logic;\n    this.args = args;\n    this.multisigSignature = multisigSignature;\n    this.signature =\n      typeof signature === 'string'\n        ? new Uint8Array(Buffer.from(signature, 'base64'))\n        : signature;\n\n    this.attribute_map = {\n      logic: 'logic',\n      args: 'args',\n      multisigSignature: 'multisig-signature',\n      signature: 'signature',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionSignatureLogicsig {\n    /* eslint-disable dot-notation */\n    if (typeof data['logic'] === 'undefined')\n      throw new Error(`Response is missing required field 'logic': ${data}`);\n    return new TransactionSignatureLogicsig({\n      logic: data['logic'],\n      args: data['args'],\n      multisigSignature:\n        typeof data['multisig-signature'] !== 'undefined'\n          ? TransactionSignatureMultisig.from_obj_for_encoding(\n              data['multisig-signature']\n            )\n          : undefined,\n      signature: data['signature'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * (msig) structure holding multiple subsignatures.\n * Definition:\n * crypto/multisig.go : MultisigSig\n */\nexport class TransactionSignatureMultisig extends BaseModel {\n  /**\n   * (subsig) holds pairs of public key and signatures.\n   */\n  public subsignature?: TransactionSignatureMultisigSubsignature[];\n\n  /**\n   * (thr)\n   */\n  public threshold?: number | bigint;\n\n  /**\n   * (v)\n   */\n  public version?: number | bigint;\n\n  /**\n   * Creates a new `TransactionSignatureMultisig` object.\n   * @param subsignature - (subsig) holds pairs of public key and signatures.\n   * @param threshold - (thr)\n   * @param version - (v)\n   */\n  constructor({\n    subsignature,\n    threshold,\n    version,\n  }: {\n    subsignature?: TransactionSignatureMultisigSubsignature[];\n    threshold?: number | bigint;\n    version?: number | bigint;\n  }) {\n    super();\n    this.subsignature = subsignature;\n    this.threshold = threshold;\n    this.version = version;\n\n    this.attribute_map = {\n      subsignature: 'subsignature',\n      threshold: 'threshold',\n      version: 'version',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionSignatureMultisig {\n    /* eslint-disable dot-notation */\n    return new TransactionSignatureMultisig({\n      subsignature:\n        typeof data['subsignature'] !== 'undefined'\n          ? data['subsignature'].map(\n              TransactionSignatureMultisigSubsignature.from_obj_for_encoding\n            )\n          : undefined,\n      threshold: data['threshold'],\n      version: data['version'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class TransactionSignatureMultisigSubsignature extends BaseModel {\n  /**\n   * (pk)\n   */\n  public publicKey?: Uint8Array;\n\n  /**\n   * (s)\n   */\n  public signature?: Uint8Array;\n\n  /**\n   * Creates a new `TransactionSignatureMultisigSubsignature` object.\n   * @param publicKey - (pk)\n   * @param signature - (s)\n   */\n  constructor({\n    publicKey,\n    signature,\n  }: {\n    publicKey?: string | Uint8Array;\n    signature?: string | Uint8Array;\n  }) {\n    super();\n    this.publicKey =\n      typeof publicKey === 'string'\n        ? new Uint8Array(Buffer.from(publicKey, 'base64'))\n        : publicKey;\n    this.signature =\n      typeof signature === 'string'\n        ? new Uint8Array(Buffer.from(signature, 'base64'))\n        : signature;\n\n    this.attribute_map = {\n      publicKey: 'public-key',\n      signature: 'signature',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionSignatureMultisigSubsignature {\n    /* eslint-disable dot-notation */\n    return new TransactionSignatureMultisigSubsignature({\n      publicKey: data['public-key'],\n      signature: data['signature'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for a state proof transaction.\n * Definition:\n * data/transactions/stateproof.go : StateProofTxnFields\n */\nexport class TransactionStateProof extends BaseModel {\n  /**\n   * (spmsg)\n   */\n  public message?: IndexerStateProofMessage;\n\n  /**\n   * (sp) represents a state proof.\n   * Definition:\n   * crypto/stateproof/structs.go : StateProof\n   */\n  public stateProof?: StateProofFields;\n\n  /**\n   * (sptype) Type of the state proof. Integer representing an entry defined in\n   * protocol/stateproof.go\n   */\n  public stateProofType?: number | bigint;\n\n  /**\n   * Creates a new `TransactionStateProof` object.\n   * @param message - (spmsg)\n   * @param stateProof - (sp) represents a state proof.\n   * Definition:\n   * crypto/stateproof/structs.go : StateProof\n   * @param stateProofType - (sptype) Type of the state proof. Integer representing an entry defined in\n   * protocol/stateproof.go\n   */\n  constructor({\n    message,\n    stateProof,\n    stateProofType,\n  }: {\n    message?: IndexerStateProofMessage;\n    stateProof?: StateProofFields;\n    stateProofType?: number | bigint;\n  }) {\n    super();\n    this.message = message;\n    this.stateProof = stateProof;\n    this.stateProofType = stateProofType;\n\n    this.attribute_map = {\n      message: 'message',\n      stateProof: 'state-proof',\n      stateProofType: 'state-proof-type',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionStateProof {\n    /* eslint-disable dot-notation */\n    return new TransactionStateProof({\n      message:\n        typeof data['message'] !== 'undefined'\n          ? IndexerStateProofMessage.from_obj_for_encoding(data['message'])\n          : undefined,\n      stateProof:\n        typeof data['state-proof'] !== 'undefined'\n          ? StateProofFields.from_obj_for_encoding(data['state-proof'])\n          : undefined,\n      stateProofType: data['state-proof-type'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class TransactionsResponse extends BaseModel {\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  public transactions: Transaction[];\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `TransactionsResponse` object.\n   * @param currentRound - Round at which the results were computed.\n   * @param transactions -\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    currentRound,\n    transactions,\n    nextToken,\n  }: {\n    currentRound: number | bigint;\n    transactions: Transaction[];\n    nextToken?: string;\n  }) {\n    super();\n    this.currentRound = currentRound;\n    this.transactions = transactions;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      currentRound: 'current-round',\n      transactions: 'transactions',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionsResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    if (!Array.isArray(data['transactions']))\n      throw new Error(\n        `Response is missing required array field 'transactions': ${data}`\n      );\n    return new TransactionsResponse({\n      currentRound: data['current-round'],\n      transactions: data['transactions'].map(Transaction.from_obj_for_encoding),\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n","import HTTPClient from '../client';\nimport IntDecoding from '../../types/intDecoding';\n\n/**\n * Base abstract class for JSON requests.\n *\n * Data: The type returned from the `do()` method\n *\n * Body: The structure of the response's body\n */\nexport default abstract class JSONRequest<\n  Data = Record<string, any>,\n  Body = Data | Uint8Array\n> {\n  c: HTTPClient;\n  query: Record<string, any>;\n  intDecoding: IntDecoding;\n\n  /**\n   * @param client - HTTPClient object.\n   * @param intDecoding - The method to use\n   *   for decoding integers from this request's response. See the setIntDecoding method for more\n   *   details.\n   */\n  constructor(client: HTTPClient, intDecoding?: IntDecoding) {\n    this.c = client;\n    this.query = {};\n    this.intDecoding = intDecoding || IntDecoding.DEFAULT;\n  }\n\n  /**\n   * @returns The path of this request.\n   * @category JSONRequest\n   */\n  abstract path(): string;\n\n  /**\n   * Prepare a JSON response before returning it.\n   *\n   * Use this method to change and restructure response\n   * data as needed after receiving it from the `do()` method.\n   * @param body - Response body received\n   * @category JSONRequest\n   */\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Body): Data {\n    return (body as unknown) as Data;\n  }\n\n  /**\n   * Execute the request.\n   * @param headers - Additional headers to send in the request. Optional.\n   * @returns A promise which resolves to the parsed response data.\n   * @category JSONRequest\n   */\n  async do(headers: Record<string, any> = {}): Promise<Data> {\n    const jsonOptions: Record<string, any> = {};\n    if (this.intDecoding !== 'default') {\n      jsonOptions.intDecoding = this.intDecoding;\n    }\n    const res = await this.c.get(this.path(), this.query, headers, jsonOptions);\n    return this.prepare(res.body);\n  }\n\n  /**\n   * Execute the request, but do not process the response data in any way.\n   * @param headers - Additional headers to send in the request. Optional.\n   * @returns A promise which resolves to the raw response data, exactly as returned by the server.\n   * @category JSONRequest\n   */\n  async doRaw(headers: Record<string, any> = {}): Promise<Uint8Array> {\n    const res = await this.c.get(this.path(), this.query, headers, {}, false);\n    return res.body;\n  }\n\n  /**\n   * Configure how integers in this request's JSON response will be decoded.\n   *\n   * The options are:\n   * * \"default\": Integers will be decoded according to JSON.parse, meaning they will all be\n   *   Numbers and any values greater than Number.MAX_SAFE_INTEGER will lose precision.\n   * * \"safe\": All integers will be decoded as Numbers, but if any values are greater than\n   *   Number.MAX_SAFE_INTEGER an error will be thrown.\n   * * \"mixed\": Integers will be decoded as Numbers if they are less than or equal to\n   *   Number.MAX_SAFE_INTEGER, otherwise they will be decoded as BigInts.\n   * * \"bigint\": All integers will be decoded as BigInts.\n   *\n   * @param method - The method to use when parsing the\n   *   response for this request. Must be one of \"default\", \"safe\", \"mixed\", or \"bigint\".\n   * @category JSONRequest\n   */\n  setIntDecoding(method: IntDecoding) {\n    if (\n      method !== 'default' &&\n      method !== 'safe' &&\n      method !== 'mixed' &&\n      method !== 'bigint'\n    )\n      throw new Error(`Invalid method for int decoding: ${method}`);\n    this.intDecoding = method;\n    return this;\n  }\n}\n","import HTTPClient from '../client';\nimport IntDecoding from '../../types/intDecoding';\nimport { BaseHTTPClient } from '../baseHTTPClient';\nimport { TokenHeader } from '../urlTokenBaseHTTPClient';\n\nexport type TokenHeaderIdentifier =\n  | 'X-Indexer-API-Token'\n  | 'X-KMD-API-Token'\n  | 'X-Algo-API-Token'\n  | string;\n\n/**\n * Convert a token string to a token header\n * @param token - The token string\n * @param headerIdentifier - An identifier for the token header\n */\nfunction convertTokenStringToTokenHeader(\n  token: string = '',\n  headerIdentifier: TokenHeaderIdentifier\n): TokenHeader {\n  const tokenHeader = {};\n  tokenHeader[headerIdentifier] = token;\n  return tokenHeader as TokenHeader;\n}\n\nfunction isBaseHTTPClient(\n  tbc: string | TokenHeader | BaseHTTPClient\n): tbc is BaseHTTPClient {\n  return typeof (tbc as BaseHTTPClient).get === 'function';\n}\n\n/**\n * Abstract service client to encapsulate shared AlgodClient and IndexerClient logic\n */\nexport default abstract class ServiceClient {\n  /** @ignore */\n  c: HTTPClient;\n  /** @ignore */\n  intDecoding: IntDecoding;\n\n  constructor(\n    tokenHeaderIdentifier: TokenHeaderIdentifier,\n    tokenHeaderOrStrOrBaseClient: string | TokenHeader | BaseHTTPClient,\n    baseServer: string,\n    port?: string | number,\n    defaultHeaders: Record<string, any> = {}\n  ) {\n    if (isBaseHTTPClient(tokenHeaderOrStrOrBaseClient)) {\n      // we are using a base client\n      this.c = new HTTPClient(tokenHeaderOrStrOrBaseClient);\n    } else {\n      // Accept token header as string or object\n      // - workaround to allow backwards compatibility for multiple headers\n      let tokenHeader: TokenHeader;\n      if (typeof tokenHeaderOrStrOrBaseClient === 'string') {\n        tokenHeader = convertTokenStringToTokenHeader(\n          tokenHeaderOrStrOrBaseClient,\n          tokenHeaderIdentifier\n        );\n      } else {\n        tokenHeader = tokenHeaderOrStrOrBaseClient;\n      }\n\n      this.c = new HTTPClient(tokenHeader, baseServer, port, defaultHeaders);\n    }\n\n    this.intDecoding = IntDecoding.DEFAULT;\n  }\n\n  /**\n   * Set the default int decoding method for all JSON requests this client creates.\n   * @param method - \\{\"default\" | \"safe\" | \"mixed\" | \"bigint\"\\} method The method to use when parsing the\n   *   response for request. Must be one of \"default\", \"safe\", \"mixed\", or \"bigint\". See\n   *   JSONRequest.setIntDecoding for more details about what each method does.\n   */\n  setIntEncoding(method: IntDecoding) {\n    this.intDecoding = method;\n  }\n\n  /**\n   * Get the default int decoding method for all JSON requests this client creates.\n   */\n  getIntEncoding() {\n    return this.intDecoding;\n  }\n}\n","import {\n  ABIType,\n  ABITupleType,\n  ABIUintType,\n  ABIAddressType,\n  ABIValue,\n  ABIMethod,\n  ABIReferenceType,\n  abiTypeIsTransaction,\n  abiCheckTransactionType,\n  abiTypeIsReference,\n} from './abi';\nimport { Transaction, decodeSignedTransaction } from './transaction';\nimport { makeApplicationCallTxnFromObject } from './makeTxn';\nimport { assignGroupID } from './group';\nimport { waitForConfirmation } from './wait';\nimport Algodv2 from './client/v2/algod/algod';\nimport {\n  TransactionSigner,\n  TransactionWithSigner,\n  isTransactionWithSigner,\n} from './signer';\nimport {\n  BoxReference,\n  OnApplicationComplete,\n  SuggestedParams,\n} from './types/transactions/base';\n\n// First 4 bytes of SHA-512/256 hash of \"return\"\nconst RETURN_PREFIX = Buffer.from([21, 31, 124, 117]);\n\n// The maximum number of arguments for an application call transaction\nconst MAX_APP_ARGS = 16;\n\nexport type ABIArgument = ABIValue | TransactionWithSigner;\n\n/** Represents the output from a successful ABI method call. */\nexport interface ABIResult {\n  /** The TxID of the transaction that invoked the ABI method call. */\n  txID: string;\n  /**\n   * The raw bytes of the return value from the ABI method call. This will be empty if the method\n   * does not return a value (return type \"void\").\n   */\n  rawReturnValue: Uint8Array;\n  /**\n   * The method that was called for this result\n   */\n  method: ABIMethod;\n  /**\n   * The return value from the ABI method call. This will be undefined if the method does not return\n   * a value (return type \"void\"), or if the SDK was unable to decode the returned value.\n   */\n  returnValue?: ABIValue;\n  /** If the SDK was unable to decode a return value, the error will be here. */\n  decodeError?: Error;\n  /** The pending transaction information from the method transaction */\n  txInfo?: Record<string, any>;\n}\n\nexport enum AtomicTransactionComposerStatus {\n  /** The atomic group is still under construction. */\n  BUILDING,\n\n  /** The atomic group has been finalized, but not yet signed. */\n  BUILT,\n\n  /** The atomic group has been finalized and signed, but not yet submitted to the network. */\n  SIGNED,\n\n  /** The atomic group has been finalized, signed, and submitted to the network. */\n  SUBMITTED,\n\n  /** The atomic group has been finalized, signed, submitted, and successfully committed to a block. */\n  COMMITTED,\n}\n\n/**\n * Add a value to an application call's foreign array. The addition will be as compact as possible,\n * and this function will return an index that can be used to reference `valueToAdd` in `array`.\n *\n * @param valueToAdd - The value to add to the array. If this value is already present in the array,\n *   it will not be added again. Instead, the existing index will be returned.\n * @param array - The existing foreign array. This input may be modified to append `valueToAdd`.\n * @param zeroValue - If provided, this value indicated two things: the 0 value is special for this\n *   array, so all indexes into `array` must start at 1; additionally, if `valueToAdd` equals\n *   `zeroValue`, then `valueToAdd` will not be added to the array, and instead the 0 indexes will\n *   be returned.\n * @returns An index that can be used to reference `valueToAdd` in `array`.\n */\nfunction populateForeignArray<Type>(\n  valueToAdd: Type,\n  array: Type[],\n  zeroValue?: Type\n): number {\n  if (zeroValue != null && valueToAdd === zeroValue) {\n    return 0;\n  }\n\n  const offset = zeroValue == null ? 0 : 1;\n\n  for (let i = 0; i < array.length; i++) {\n    if (valueToAdd === array[i]) {\n      return i + offset;\n    }\n  }\n\n  array.push(valueToAdd);\n  return array.length - 1 + offset;\n}\n\n/** A class used to construct and execute atomic transaction groups */\nexport class AtomicTransactionComposer {\n  /** The maximum size of an atomic transaction group. */\n  static MAX_GROUP_SIZE: number = 16;\n\n  private status = AtomicTransactionComposerStatus.BUILDING;\n  private transactions: TransactionWithSigner[] = [];\n  private methodCalls: Map<number, ABIMethod> = new Map();\n  private signedTxns: Uint8Array[] = [];\n  private txIDs: string[] = [];\n\n  /**\n   * Get the status of this composer's transaction group.\n   */\n  getStatus(): AtomicTransactionComposerStatus {\n    return this.status;\n  }\n\n  /**\n   * Get the number of transactions currently in this atomic group.\n   */\n  count(): number {\n    return this.transactions.length;\n  }\n\n  /**\n   * Create a new composer with the same underlying transactions. The new composer's status will be\n   * BUILDING, so additional transactions may be added to it.\n   */\n  clone(): AtomicTransactionComposer {\n    const theClone = new AtomicTransactionComposer();\n\n    theClone.transactions = this.transactions.map(({ txn, signer }) => ({\n      // not quite a deep copy, but good enough for our purposes (modifying txn.group in buildGroup)\n      txn: Transaction.from_obj_for_encoding({\n        ...txn.get_obj_for_encoding(),\n        // erase the group ID\n        grp: undefined,\n      }),\n      signer,\n    }));\n    theClone.methodCalls = new Map(this.methodCalls);\n\n    return theClone;\n  }\n\n  /**\n   * Add a transaction to this atomic group.\n   *\n   * An error will be thrown if the transaction has a nonzero group ID, the composer's status is\n   * not BUILDING, or if adding this transaction causes the current group to exceed MAX_GROUP_SIZE.\n   */\n  addTransaction(txnAndSigner: TransactionWithSigner): void {\n    if (this.status !== AtomicTransactionComposerStatus.BUILDING) {\n      throw new Error(\n        'Cannot add transactions when composer status is not BUILDING'\n      );\n    }\n\n    if (this.transactions.length === AtomicTransactionComposer.MAX_GROUP_SIZE) {\n      throw new Error(\n        `Adding an additional transaction exceeds the maximum atomic group size of ${AtomicTransactionComposer.MAX_GROUP_SIZE}`\n      );\n    }\n\n    if (txnAndSigner.txn.group && txnAndSigner.txn.group.some((v) => v !== 0)) {\n      throw new Error('Cannot add a transaction with nonzero group ID');\n    }\n\n    this.transactions.push(txnAndSigner);\n  }\n\n  /**\n   * Add a smart contract method call to this atomic group.\n   *\n   * An error will be thrown if the composer's status is not BUILDING, if adding this transaction\n   * causes the current group to exceed MAX_GROUP_SIZE, or if the provided arguments are invalid\n   * for the given method.\n   */\n  addMethodCall({\n    appID,\n    method,\n    methodArgs,\n    sender,\n    suggestedParams,\n    onComplete,\n    approvalProgram,\n    clearProgram,\n    numGlobalInts,\n    numGlobalByteSlices,\n    numLocalInts,\n    numLocalByteSlices,\n    extraPages,\n    boxes,\n    note,\n    lease,\n    rekeyTo,\n    signer,\n  }: {\n    /** The ID of the smart contract to call. Set this to 0 to indicate an application creation call. */\n    appID: number;\n    /** The method to call on the smart contract */\n    method: ABIMethod;\n    /** The arguments to include in the method call. If omitted, no arguments will be passed to the method. */\n    methodArgs?: ABIArgument[];\n    /** The address of the sender of this application call */\n    sender: string;\n    /** Transactions params to use for this application call */\n    suggestedParams: SuggestedParams;\n    /** The OnComplete action to take for this application call. If omitted, OnApplicationComplete.NoOpOC will be used. */\n    onComplete?: OnApplicationComplete;\n    /** The approval program for this application call. Only set this if this is an application creation call, or if onComplete is OnApplicationComplete.UpdateApplicationOC */\n    approvalProgram?: Uint8Array;\n    /** The clear program for this application call. Only set this if this is an application creation call, or if onComplete is OnApplicationComplete.UpdateApplicationOC */\n    clearProgram?: Uint8Array;\n    /** The global integer schema size. Only set this if this is an application creation call. */\n    numGlobalInts?: number;\n    /** The global byte slice schema size. Only set this if this is an application creation call. */\n    numGlobalByteSlices?: number;\n    /** The local integer schema size. Only set this if this is an application creation call. */\n    numLocalInts?: number;\n    /** The local byte slice schema size. Only set this if this is an application creation call. */\n    numLocalByteSlices?: number;\n    /** The number of extra pages to allocate for the application's programs. Only set this if this is an application creation call. If omitted, defaults to 0. */\n    extraPages?: number;\n    /** The box references for this application call */\n    boxes?: BoxReference[];\n    /** The note value for this application call */\n    note?: Uint8Array;\n    /** The lease value for this application call */\n    lease?: Uint8Array;\n    /** If provided, the address that the sender will be rekeyed to at the conclusion of this application call */\n    rekeyTo?: string;\n    /** A transaction signer that can authorize this application call from sender */\n    signer: TransactionSigner;\n  }): void {\n    if (this.status !== AtomicTransactionComposerStatus.BUILDING) {\n      throw new Error(\n        'Cannot add transactions when composer status is not BUILDING'\n      );\n    }\n\n    if (\n      this.transactions.length + method.txnCount() >\n      AtomicTransactionComposer.MAX_GROUP_SIZE\n    ) {\n      throw new Error(\n        `Adding additional transactions exceeds the maximum atomic group size of ${AtomicTransactionComposer.MAX_GROUP_SIZE}`\n      );\n    }\n\n    if (appID === 0) {\n      if (\n        approvalProgram == null ||\n        clearProgram == null ||\n        numGlobalInts == null ||\n        numGlobalByteSlices == null ||\n        numLocalInts == null ||\n        numLocalByteSlices == null\n      ) {\n        throw new Error(\n          'One of the following required parameters for application creation is missing: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices'\n        );\n      }\n    } else if (onComplete === OnApplicationComplete.UpdateApplicationOC) {\n      if (approvalProgram == null || clearProgram == null) {\n        throw new Error(\n          'One of the following required parameters for OnApplicationComplete.UpdateApplicationOC is missing: approvalProgram, clearProgram'\n        );\n      }\n      if (\n        numGlobalInts != null ||\n        numGlobalByteSlices != null ||\n        numLocalInts != null ||\n        numLocalByteSlices != null ||\n        extraPages != null\n      ) {\n        throw new Error(\n          'One of the following application creation parameters were set on a non-creation call: numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages'\n        );\n      }\n    } else if (\n      approvalProgram != null ||\n      clearProgram != null ||\n      numGlobalInts != null ||\n      numGlobalByteSlices != null ||\n      numLocalInts != null ||\n      numLocalByteSlices != null ||\n      extraPages != null\n    ) {\n      throw new Error(\n        'One of the following application creation parameters were set on a non-creation call: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages'\n      );\n    }\n\n    if (methodArgs == null) {\n      // eslint-disable-next-line no-param-reassign\n      methodArgs = [];\n    }\n\n    if (methodArgs.length !== method.args.length) {\n      throw new Error(\n        `Incorrect number of method arguments. Expected ${method.args.length}, got ${methodArgs.length}`\n      );\n    }\n\n    let basicArgTypes: ABIType[] = [];\n    let basicArgValues: ABIValue[] = [];\n    const txnArgs: TransactionWithSigner[] = [];\n    const refArgTypes: ABIReferenceType[] = [];\n    const refArgValues: ABIValue[] = [];\n    const refArgIndexToBasicArgIndex: Map<number, number> = new Map();\n    // TODO: Box encoding for ABI\n    const boxReferences: BoxReference[] = !boxes ? [] : boxes;\n\n    for (let i = 0; i < methodArgs.length; i++) {\n      let argType = method.args[i].type;\n      const argValue = methodArgs[i];\n\n      if (abiTypeIsTransaction(argType)) {\n        if (\n          !isTransactionWithSigner(argValue) ||\n          !abiCheckTransactionType(argType, argValue.txn)\n        ) {\n          throw new Error(\n            `Expected ${argType} transaction for argument at index ${i}`\n          );\n        }\n        if (argValue.txn.group && argValue.txn.group.some((v) => v !== 0)) {\n          throw new Error('Cannot add a transaction with nonzero group ID');\n        }\n        txnArgs.push(argValue);\n        continue;\n      }\n\n      if (isTransactionWithSigner(argValue)) {\n        throw new Error(\n          `Expected non-transaction value for argument at index ${i}`\n        );\n      }\n\n      if (abiTypeIsReference(argType)) {\n        refArgIndexToBasicArgIndex.set(\n          refArgTypes.length,\n          basicArgTypes.length\n        );\n        refArgTypes.push(argType);\n        refArgValues.push(argValue);\n        // treat the reference as a uint8 for encoding purposes\n        argType = new ABIUintType(8);\n      }\n\n      if (typeof argType === 'string') {\n        throw new Error(`Unknown ABI type: ${argType}`);\n      }\n\n      basicArgTypes.push(argType);\n      basicArgValues.push(argValue);\n    }\n\n    const resolvedRefIndexes: number[] = [];\n    const foreignAccounts: string[] = [];\n    const foreignApps: number[] = [];\n    const foreignAssets: number[] = [];\n    for (let i = 0; i < refArgTypes.length; i++) {\n      const refType = refArgTypes[i];\n      const refValue = refArgValues[i];\n      let resolved = 0;\n\n      switch (refType) {\n        case ABIReferenceType.account: {\n          const addressType = new ABIAddressType();\n          const address = addressType.decode(addressType.encode(refValue));\n          resolved = populateForeignArray(address, foreignAccounts, sender);\n          break;\n        }\n        case ABIReferenceType.application: {\n          const uint64Type = new ABIUintType(64);\n          const refAppID = uint64Type.decode(uint64Type.encode(refValue));\n          if (refAppID > Number.MAX_SAFE_INTEGER) {\n            throw new Error(\n              `Expected safe integer for application value, got ${refAppID}`\n            );\n          }\n          resolved = populateForeignArray(Number(refAppID), foreignApps, appID);\n          break;\n        }\n        case ABIReferenceType.asset: {\n          const uint64Type = new ABIUintType(64);\n          const refAssetID = uint64Type.decode(uint64Type.encode(refValue));\n          if (refAssetID > Number.MAX_SAFE_INTEGER) {\n            throw new Error(\n              `Expected safe integer for asset value, got ${refAssetID}`\n            );\n          }\n          resolved = populateForeignArray(Number(refAssetID), foreignAssets);\n          break;\n        }\n        default:\n          throw new Error(`Unknown reference type: ${refType}`);\n      }\n\n      resolvedRefIndexes.push(resolved);\n    }\n\n    for (let i = 0; i < resolvedRefIndexes.length; i++) {\n      const basicArgIndex = refArgIndexToBasicArgIndex.get(i);\n      basicArgValues[basicArgIndex] = resolvedRefIndexes[i];\n    }\n\n    if (basicArgTypes.length > MAX_APP_ARGS - 1) {\n      const lastArgTupleTypes = basicArgTypes.slice(MAX_APP_ARGS - 2);\n      const lastArgTupleValues = basicArgValues.slice(MAX_APP_ARGS - 2);\n\n      basicArgTypes = basicArgTypes.slice(0, MAX_APP_ARGS - 2);\n      basicArgValues = basicArgValues.slice(0, MAX_APP_ARGS - 2);\n\n      basicArgTypes.push(new ABITupleType(lastArgTupleTypes));\n      basicArgValues.push(lastArgTupleValues);\n    }\n\n    const appArgsEncoded: Uint8Array[] = [method.getSelector()];\n    for (let i = 0; i < basicArgTypes.length; i++) {\n      appArgsEncoded.push(basicArgTypes[i].encode(basicArgValues[i]));\n    }\n\n    const appCall = {\n      txn: makeApplicationCallTxnFromObject({\n        from: sender,\n        appIndex: appID,\n        appArgs: appArgsEncoded,\n        accounts: foreignAccounts,\n        foreignApps,\n        foreignAssets,\n        boxes: boxReferences,\n        onComplete:\n          onComplete == null ? OnApplicationComplete.NoOpOC : onComplete,\n        approvalProgram,\n        clearProgram,\n        numGlobalInts,\n        numGlobalByteSlices,\n        numLocalInts,\n        numLocalByteSlices,\n        extraPages,\n        lease,\n        note,\n        rekeyTo,\n        suggestedParams,\n      }),\n      signer,\n    };\n\n    this.transactions.push(...txnArgs, appCall);\n    this.methodCalls.set(this.transactions.length - 1, method);\n  }\n\n  /**\n   * Finalize the transaction group and returned the finalized transactions.\n   *\n   * The composer's status will be at least BUILT after executing this method.\n   */\n  buildGroup(): TransactionWithSigner[] {\n    if (this.status === AtomicTransactionComposerStatus.BUILDING) {\n      if (this.transactions.length === 0) {\n        throw new Error('Cannot build a group with 0 transactions');\n      }\n      if (this.transactions.length > 1) {\n        assignGroupID(\n          this.transactions.map((txnWithSigner) => txnWithSigner.txn)\n        );\n      }\n      this.status = AtomicTransactionComposerStatus.BUILT;\n    }\n    return this.transactions;\n  }\n\n  /**\n   * Obtain signatures for each transaction in this group. If signatures have already been obtained,\n   * this method will return cached versions of the signatures.\n   *\n   * The composer's status will be at least SIGNED after executing this method.\n   *\n   * An error will be thrown if signing any of the transactions fails.\n   *\n   * @returns A promise that resolves to an array of signed transactions.\n   */\n  async gatherSignatures(): Promise<Uint8Array[]> {\n    if (this.status >= AtomicTransactionComposerStatus.SIGNED) {\n      return this.signedTxns;\n    }\n\n    // retrieve built transactions and verify status is BUILT\n    const txnsWithSigners = this.buildGroup();\n    const txnGroup = txnsWithSigners.map((txnWithSigner) => txnWithSigner.txn);\n\n    const indexesPerSigner: Map<TransactionSigner, number[]> = new Map();\n\n    for (let i = 0; i < txnsWithSigners.length; i++) {\n      const { signer } = txnsWithSigners[i];\n\n      if (!indexesPerSigner.has(signer)) {\n        indexesPerSigner.set(signer, []);\n      }\n\n      indexesPerSigner.get(signer).push(i);\n    }\n\n    const orderedSigners = Array.from(indexesPerSigner);\n\n    const batchedSigs = await Promise.all(\n      orderedSigners.map(([signer, indexes]) => signer(txnGroup, indexes))\n    );\n\n    const signedTxns: Array<Uint8Array | null> = txnsWithSigners.map(\n      () => null\n    );\n\n    for (\n      let signerIndex = 0;\n      signerIndex < orderedSigners.length;\n      signerIndex++\n    ) {\n      const indexes = orderedSigners[signerIndex][1];\n      const sigs = batchedSigs[signerIndex];\n\n      for (let i = 0; i < indexes.length; i++) {\n        signedTxns[indexes[i]] = sigs[i];\n      }\n    }\n\n    if (!signedTxns.every((sig) => sig != null)) {\n      throw new Error(`Missing signatures. Got ${signedTxns}`);\n    }\n\n    const txIDs = signedTxns.map((stxn, index) => {\n      try {\n        return decodeSignedTransaction(stxn).txn.txID();\n      } catch (err) {\n        throw new Error(\n          `Cannot decode signed transaction at index ${index}. ${err}`\n        );\n      }\n    });\n\n    this.signedTxns = signedTxns;\n    this.txIDs = txIDs;\n    this.status = AtomicTransactionComposerStatus.SIGNED;\n\n    return signedTxns;\n  }\n\n  /**\n   * Send the transaction group to the network, but don't wait for it to be committed to a block. An\n   * error will be thrown if submission fails.\n   *\n   * The composer's status must be SUBMITTED or lower before calling this method. If submission is\n   * successful, this composer's status will update to SUBMITTED.\n   *\n   * Note: a group can only be submitted again if it fails.\n   *\n   * @param client - An Algodv2 client\n   *\n   * @returns A promise that, upon success, resolves to a list of TxIDs of the submitted transactions.\n   */\n  async submit(client: Algodv2): Promise<string[]> {\n    if (this.status > AtomicTransactionComposerStatus.SUBMITTED) {\n      throw new Error('Transaction group cannot be resubmitted');\n    }\n\n    const stxns = await this.gatherSignatures();\n\n    await client.sendRawTransaction(stxns).do();\n\n    this.status = AtomicTransactionComposerStatus.SUBMITTED;\n\n    return this.txIDs;\n  }\n\n  /**\n   * Send the transaction group to the network and wait until it's committed to a block. An error\n   * will be thrown if submission or execution fails.\n   *\n   * The composer's status must be SUBMITTED or lower before calling this method, since execution is\n   * only allowed once. If submission is successful, this composer's status will update to SUBMITTED.\n   * If the execution is also successful, this composer's status will update to COMMITTED.\n   *\n   * Note: a group can only be submitted again if it fails.\n   *\n   * @param client - An Algodv2 client\n   * @param waitRounds - The maximum number of rounds to wait for transaction confirmation\n   *\n   * @returns A promise that, upon success, resolves to an object containing the confirmed round for\n   *   this transaction, the txIDs of the submitted transactions, and an array of results containing\n   *   one element for each method call transaction in this group.\n   */\n  async execute(\n    client: Algodv2,\n    waitRounds: number\n  ): Promise<{\n    confirmedRound: number;\n    txIDs: string[];\n    methodResults: ABIResult[];\n  }> {\n    if (this.status === AtomicTransactionComposerStatus.COMMITTED) {\n      throw new Error(\n        'Transaction group has already been executed successfully'\n      );\n    }\n\n    const txIDs = await this.submit(client);\n    this.status = AtomicTransactionComposerStatus.SUBMITTED;\n\n    const firstMethodCallIndex = this.transactions.findIndex((_, index) =>\n      this.methodCalls.has(index)\n    );\n    const indexToWaitFor =\n      firstMethodCallIndex === -1 ? 0 : firstMethodCallIndex;\n    const confirmedTxnInfo = await waitForConfirmation(\n      client,\n      txIDs[indexToWaitFor],\n      waitRounds\n    );\n    this.status = AtomicTransactionComposerStatus.COMMITTED;\n\n    const confirmedRound: number = confirmedTxnInfo['confirmed-round'];\n\n    const methodResults: ABIResult[] = [];\n\n    for (const [txnIndex, method] of this.methodCalls) {\n      const txID = txIDs[txnIndex];\n\n      const methodResult: ABIResult = {\n        txID,\n        rawReturnValue: new Uint8Array(),\n        method,\n      };\n\n      try {\n        const pendingInfo =\n          txnIndex === firstMethodCallIndex\n            ? confirmedTxnInfo\n            : // eslint-disable-next-line no-await-in-loop\n              await client.pendingTransactionInformation(txID).do();\n        methodResult.txInfo = pendingInfo;\n        if (method.returns.type !== 'void') {\n          const logs: string[] = pendingInfo.logs || [];\n          if (logs.length === 0) {\n            throw new Error('App call transaction did not log a return value');\n          }\n\n          const lastLog = Buffer.from(logs[logs.length - 1], 'base64');\n          if (\n            lastLog.byteLength < 4 ||\n            !lastLog.slice(0, 4).equals(RETURN_PREFIX)\n          ) {\n            throw new Error('App call transaction did not log a return value');\n          }\n\n          methodResult.rawReturnValue = new Uint8Array(lastLog.slice(4));\n          methodResult.returnValue = method.returns.type.decode(\n            methodResult.rawReturnValue\n          );\n        }\n      } catch (err) {\n        methodResult.decodeError = err;\n      }\n\n      methodResults.push(methodResult);\n    }\n\n    return {\n      confirmedRound,\n      txIDs,\n      methodResults,\n    };\n  }\n}\n","const MICROALGOS_TO_ALGOS_RATIO = 1e6;\nexport const INVALID_MICROALGOS_ERROR_MSG =\n  'Microalgos should be positive and less than 2^53 - 1.';\n\n/**\n * microalgosToAlgos converts microalgos to algos\n * @param microalgos - number\n * @returns number\n */\nexport function microalgosToAlgos(microalgos: number) {\n  if (microalgos < 0 || !Number.isSafeInteger(microalgos)) {\n    throw new Error(INVALID_MICROALGOS_ERROR_MSG);\n  }\n  return microalgos / MICROALGOS_TO_ALGOS_RATIO;\n}\n\n/**\n * algosToMicroalgos converts algos to microalgos\n * @param algos - number\n * @returns number\n */\nexport function algosToMicroalgos(algos: number) {\n  const microalgos = algos * MICROALGOS_TO_ALGOS_RATIO;\n  return Math.round(microalgos);\n}\n","import AlgodClient from './client/v2/algod/algod';\nimport {\n  AccountStateDelta,\n  Application,\n  ApplicationParams,\n  ApplicationStateSchema,\n  DryrunRequest,\n  DryrunSource,\n  EvalDeltaKeyValue,\n  TealValue,\n} from './client/v2/algod/models/types';\nimport { SignedTransaction } from './transaction';\nimport { TransactionType } from './types/transactions';\nimport { encodeAddress, getApplicationAddress } from './encoding/address';\n\nconst defaultAppId = 1380011588;\nconst defaultMaxWidth = 30;\n\n// When writing the DryrunRequest object as msgpack the output needs to be the byte arrays not b64 string\ninterface AppParamsWithPrograms {\n  ['approval-program']: string | Uint8Array;\n  ['clear-state-program']: string | Uint8Array;\n  ['creator']: string;\n}\n\ninterface AppWithAppParams {\n  ['params']: AppParamsWithPrograms;\n}\n\nfunction decodePrograms(ap: AppWithAppParams): AppWithAppParams {\n  // eslint-disable-next-line no-param-reassign\n  ap.params['approval-program'] = Buffer.from(\n    ap.params['approval-program'].toString(),\n    'base64'\n  );\n  // eslint-disable-next-line no-param-reassign\n  ap.params['clear-state-program'] = Buffer.from(\n    ap.params['clear-state-program'].toString(),\n    'base64'\n  );\n\n  return ap;\n}\n\n/**\n * createDryrun takes an Algod Client (from algod.AlgodV2Client) and an array of Signed Transactions\n * from (transaction.SignedTransaction) and creates a DryrunRequest object with relevant balances\n * @param client - the AlgodClient to make requests against\n * @param txns - the array of SignedTransaction to use for generating the DryrunRequest object\n * @param protocolVersion - the string representing the protocol version to use\n * @param latestTimestamp - the timestamp\n * @returns the DryrunRequest object constructed from the SignedTransactions passed\n */\nexport async function createDryrun({\n  client,\n  txns,\n  protocolVersion,\n  latestTimestamp,\n  round,\n  sources,\n}: {\n  client: AlgodClient;\n  txns: SignedTransaction[];\n  protocolVersion?: string;\n  latestTimestamp?: number | bigint;\n  round?: number | bigint;\n  sources?: DryrunSource[];\n}): Promise<DryrunRequest> {\n  const appInfos = [];\n  const acctInfos = [];\n\n  const apps: number[] = [];\n  const assets: number[] = [];\n  const accts: string[] = [];\n\n  for (const t of txns) {\n    if (t.txn.type === TransactionType.appl) {\n      accts.push(encodeAddress(t.txn.from.publicKey));\n\n      if (t.txn.appAccounts)\n        accts.push(...t.txn.appAccounts.map((a) => encodeAddress(a.publicKey)));\n\n      if (t.txn.appForeignApps) {\n        apps.push(...t.txn.appForeignApps);\n        accts.push(\n          ...t.txn.appForeignApps.map((aidx) => getApplicationAddress(aidx))\n        );\n      }\n\n      if (t.txn.appForeignAssets) assets.push(...t.txn.appForeignAssets);\n\n      // Create application,\n      if (t.txn.appIndex === undefined || t.txn.appIndex === 0) {\n        appInfos.push(\n          new Application(\n            defaultAppId,\n            new ApplicationParams({\n              creator: encodeAddress(t.txn.from.publicKey),\n              approvalProgram: t.txn.appApprovalProgram,\n              clearStateProgram: t.txn.appClearProgram,\n              localStateSchema: new ApplicationStateSchema(\n                t.txn.appLocalInts,\n                t.txn.appLocalByteSlices\n              ),\n              globalStateSchema: new ApplicationStateSchema(\n                t.txn.appGlobalInts,\n                t.txn.appGlobalByteSlices\n              ),\n            })\n          )\n        );\n      } else {\n        apps.push(t.txn.appIndex);\n        accts.push(getApplicationAddress(t.txn.appIndex));\n      }\n    }\n  }\n\n  // Dedupe and add creator to accts array\n  const assetPromises = [];\n  for (const assetId of [...new Set(assets)]) {\n    assetPromises.push(\n      client\n        .getAssetByID(assetId)\n        .do()\n        .then((assetInfo) => {\n          accts.push(assetInfo.params.creator);\n        })\n    );\n  }\n  // Wait for assets to finish since we append to accts array\n  await Promise.all(assetPromises);\n\n  // Dedupe and get app info for all apps\n  const appPromises = [];\n  for (const appId of [...new Set(apps)]) {\n    appPromises.push(\n      client\n        .getApplicationByID(appId)\n        .do()\n        .then((appInfo) => {\n          const ai = decodePrograms(appInfo as AppWithAppParams);\n          appInfos.push(ai);\n          accts.push(ai.params.creator);\n        })\n    );\n  }\n  await Promise.all(appPromises);\n\n  const acctPromises = [];\n  for (const acct of [...new Set(accts)]) {\n    acctPromises.push(\n      client\n        .accountInformation(acct)\n        .do()\n        .then((acctInfo) => {\n          if ('created-apps' in acctInfo) {\n            // eslint-disable-next-line no-param-reassign\n            acctInfo['created-apps'] = acctInfo['created-apps'].map((app) =>\n              decodePrograms(app)\n            );\n          }\n          acctInfos.push(acctInfo);\n        })\n    );\n  }\n  await Promise.all(acctPromises);\n\n  return new DryrunRequest({\n    txns: txns.map((st) => ({ ...st, txn: st.txn.get_obj_for_encoding() })),\n    accounts: acctInfos,\n    apps: appInfos,\n    latestTimestamp,\n    round,\n    protocolVersion,\n    sources,\n  });\n}\n\ninterface StackValueResponse {\n  type: number;\n  bytes: string;\n  uint: number;\n}\n\nclass DryrunStackValue {\n  type: number = 0;\n  bytes: string = '';\n  uint: number = 0;\n\n  constructor(sv: StackValueResponse) {\n    this.type = sv.type;\n    this.bytes = sv.bytes;\n    this.uint = sv.uint;\n  }\n\n  toString(): string {\n    if (this.type === 1) {\n      return `0x${Buffer.from(this.bytes, 'base64').toString('hex')}`;\n    }\n    return this.uint.toString();\n  }\n}\n\ninterface DryrunTraceLineResponse {\n  error: string;\n  line: number;\n  pc: number;\n  scratch: TealValue[];\n  stack: StackValueResponse[];\n}\n\nclass DryrunTraceLine {\n  error: string = '';\n  line: number = 0;\n  pc: number = 0;\n  scratch: TealValue[] = [];\n  stack: DryrunStackValue[] = [];\n\n  constructor(line: DryrunTraceLineResponse) {\n    this.error = line.error === undefined ? '' : line.error;\n    this.line = line.line;\n    this.pc = line.pc;\n    this.scratch = line.scratch;\n    this.stack = line.stack.map(\n      (sv: StackValueResponse) => new DryrunStackValue(sv)\n    );\n  }\n}\n\nclass DryrunTrace {\n  trace: DryrunTraceLine[] = [];\n  constructor(t: DryrunTraceLineResponse[]) {\n    if (t == null) return;\n    this.trace = t.map((line) => new DryrunTraceLine(line));\n  }\n}\n\ninterface DryrunTransactionResultResponse {\n  disassembly: string[];\n  appCallMessages: string[] | undefined;\n  localDeltas: AccountStateDelta[] | undefined;\n  globalDelta: EvalDeltaKeyValue[] | undefined;\n  cost: number | undefined;\n  logicSigMessages: string[] | undefined;\n  logicSigDisassembly: string[] | undefined;\n  logs: string[] | undefined;\n  appCallTrace: DryrunTrace | undefined;\n  logicSigTrace: DryrunTrace | undefined;\n}\n\ninterface StackPrinterConfig {\n  maxValueWidth: number | undefined;\n  topOfStackFirst: boolean | undefined;\n}\n\nfunction truncate(str: string, maxValueWidth: number): string {\n  if (str.length > maxValueWidth && maxValueWidth > 0) {\n    return `${str.slice(0, maxValueWidth)}...`;\n  }\n  return str;\n}\n\nfunction scratchToString(\n  prevScratch: TealValue[],\n  currScratch: TealValue[]\n): string {\n  if (currScratch.length === 0) return '';\n\n  let newScratchIdx = null;\n  for (let idx = 0; idx < currScratch.length; idx++) {\n    if (idx > prevScratch.length) {\n      newScratchIdx = idx;\n      continue;\n    }\n\n    if (JSON.stringify(prevScratch[idx]) !== JSON.stringify(currScratch[idx])) {\n      newScratchIdx = idx;\n    }\n  }\n\n  if (newScratchIdx == null) return '';\n\n  const newScratch = currScratch[newScratchIdx];\n  if (newScratch.bytes.length > 0) {\n    return `${newScratchIdx} = 0x${Buffer.from(\n      newScratch.bytes,\n      'base64'\n    ).toString('hex')}`;\n  }\n  return `${newScratchIdx} = ${newScratch.uint.toString()}`;\n}\n\nfunction stackToString(stack: DryrunStackValue[], reverse: boolean): string {\n  const svs = reverse ? stack.reverse() : stack;\n  return `[${svs\n    .map((sv: DryrunStackValue) => {\n      switch (sv.type) {\n        case 1:\n          return `0x${Buffer.from(sv.bytes, 'base64').toString('hex')}`;\n        case 2:\n          return `${sv.uint.toString()}`;\n        default:\n          return '';\n      }\n    })\n    .join(', ')}]`;\n}\n\nclass DryrunTransactionResult {\n  disassembly: string[] = [];\n  appCallMessages: string[] | undefined = [];\n  localDeltas: AccountStateDelta[] | undefined = [];\n  globalDelta: EvalDeltaKeyValue[] | undefined = [];\n  cost: number | undefined = 0;\n  logicSigMessages: string[] | undefined = [];\n  logicSigDisassembly: string[] | undefined = [];\n  logs: string[] | undefined = [];\n\n  appCallTrace: DryrunTrace | undefined = undefined;\n  logicSigTrace: DryrunTrace | undefined = undefined;\n\n  required = ['disassembly'];\n  optionals = [\n    'app-call-messages',\n    'local-deltas',\n    'global-delta',\n    'cost',\n    'logic-sig-messages',\n    'logic-sig-disassembly',\n    'logs',\n  ];\n\n  traces = ['app-call-trace', 'logic-sig-trace'];\n\n  constructor(dtr: DryrunTransactionResultResponse) {\n    this.disassembly = dtr.disassembly;\n    this.appCallMessages = dtr['app-call-messages'];\n    this.localDeltas = dtr['local-deltas'];\n    this.globalDelta = dtr['global-delta'];\n    this.cost = dtr.cost;\n    this.logicSigMessages = dtr['logic-sig-messages'];\n    this.logicSigDisassembly = dtr['logic-sig-disassembly'];\n    this.logs = dtr.logs;\n    this.appCallTrace = new DryrunTrace(dtr['app-call-trace']);\n    this.logicSigTrace = new DryrunTrace(dtr['logic-sig-trace']);\n  }\n\n  appCallRejected(): boolean {\n    return (\n      this.appCallMessages !== undefined &&\n      this.appCallMessages.includes('REJECT')\n    );\n  }\n\n  logicSigRejected(): boolean {\n    return (\n      this.logicSigMessages !== undefined &&\n      this.logicSigMessages.includes('REJECT')\n    );\n  }\n\n  static trace(\n    drt: DryrunTrace,\n    disassembly: string[],\n    spc: StackPrinterConfig\n  ): string {\n    const maxWidth = spc.maxValueWidth || defaultMaxWidth;\n\n    // Create the array of arrays, each sub array contains N columns\n    const lines = [['pc#', 'ln#', 'source', 'scratch', 'stack']];\n    for (let idx = 0; idx < drt.trace.length; idx++) {\n      const { line, error, pc, scratch, stack } = drt.trace[idx];\n\n      const currScratch = scratch !== undefined ? scratch : [];\n      const prevScratch =\n        idx > 0 && drt.trace[idx - 1].scratch !== undefined\n          ? drt.trace[idx - 1].scratch\n          : [];\n\n      const src = error === '' ? disassembly[line] : `!! ${error} !!`;\n\n      lines.push([\n        pc.toString().padEnd(3, ' '),\n        line.toString().padEnd(3, ' '),\n        truncate(src, maxWidth),\n        truncate(scratchToString(prevScratch, currScratch), maxWidth),\n        truncate(stackToString(stack, spc.topOfStackFirst), maxWidth),\n      ]);\n    }\n\n    // Get the max length for each column\n    const maxLengths = lines.reduce((prev, curr) => {\n      const newVal = new Array(lines[0].length).fill(0);\n      for (let idx = 0; idx < prev.length; idx++) {\n        newVal[idx] =\n          curr[idx].length > prev[idx] ? curr[idx].length : prev[idx];\n      }\n      return newVal;\n    }, new Array(lines[0].length).fill(0));\n\n    return `${lines\n      .map((line) =>\n        line\n          .map((v, idx) => v.padEnd(maxLengths[idx] + 1, ' '))\n          .join('|')\n          .trim()\n      )\n      .join('\\n')}\\n`;\n  }\n\n  appTrace(spc?: StackPrinterConfig): string {\n    if (this.appCallTrace === undefined || !this.disassembly) return '';\n\n    let conf = spc;\n    if (spc === undefined)\n      conf = {\n        maxValueWidth: defaultMaxWidth,\n        topOfStackFirst: false,\n      } as StackPrinterConfig;\n\n    return DryrunTransactionResult.trace(\n      this.appCallTrace,\n      this.disassembly,\n      conf\n    );\n  }\n\n  lsigTrace(spc?: StackPrinterConfig): string {\n    if (\n      this.logicSigTrace === undefined ||\n      this.logicSigDisassembly === undefined\n    )\n      return '';\n\n    let conf = spc;\n    if (spc === undefined)\n      conf = {\n        maxValueWidth: defaultMaxWidth,\n        topOfStackFirst: true,\n      } as StackPrinterConfig;\n\n    return DryrunTransactionResult.trace(\n      this.logicSigTrace,\n      this.logicSigDisassembly,\n      conf\n    );\n  }\n}\n\ninterface DryrunResultResponse {\n  ['error']: string;\n  ['protocol-version']: string;\n  ['txns']: DryrunTransactionResultResponse[];\n}\n\nexport class DryrunResult {\n  error: string = '';\n  protocolVersion: string = '';\n  txns: DryrunTransactionResult[] = [];\n  constructor(drrResp: DryrunResultResponse) {\n    this.error = drrResp.error;\n    this.protocolVersion = drrResp['protocol-version'];\n    this.txns = drrResp.txns.map(\n      (txn: DryrunTransactionResultResponse) => new DryrunTransactionResult(txn)\n    );\n  }\n}\n","import base32 from 'hi-base32';\nimport * as nacl from '../nacl/naclWrappers';\nimport * as utils from '../utils/utils';\nimport { encodeUint64 } from './uint64';\nimport { Address } from '../types/address';\nimport { MultisigMetadata } from '../types/multisig';\n\nconst ALGORAND_ADDRESS_BYTE_LENGTH = 36;\nconst ALGORAND_CHECKSUM_BYTE_LENGTH = 4;\nconst ALGORAND_ADDRESS_LENGTH = 58;\nexport const ALGORAND_ZERO_ADDRESS_STRING =\n  'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ';\n\n// Convert \"MultisigAddr\" UTF-8 to byte array\nconst MULTISIG_PREIMG2ADDR_PREFIX = new Uint8Array([\n  77,\n  117,\n  108,\n  116,\n  105,\n  115,\n  105,\n  103,\n  65,\n  100,\n  100,\n  114,\n]);\n\nconst APP_ID_PREFIX = Buffer.from('appID');\n\nexport const MALFORMED_ADDRESS_ERROR_MSG = 'address seems to be malformed';\nexport const CHECKSUM_ADDRESS_ERROR_MSG = 'wrong checksum for address';\nexport const INVALID_MSIG_VERSION_ERROR_MSG = 'invalid multisig version';\nexport const INVALID_MSIG_THRESHOLD_ERROR_MSG = 'bad multisig threshold';\nexport const INVALID_MSIG_PK_ERROR_MSG =\n  'bad multisig public key - wrong length';\nexport const UNEXPECTED_PK_LEN_ERROR_MSG =\n  'nacl public key length is not 32 bytes';\n\n/**\n * decodeAddress takes an Algorand address in string form and decodes it into a Uint8Array.\n * @param address - an Algorand address with checksum.\n * @returns the decoded form of the address's public key and checksum\n */\nexport function decodeAddress(address: string): Address {\n  if (typeof address !== 'string' || address.length !== ALGORAND_ADDRESS_LENGTH)\n    throw new Error(MALFORMED_ADDRESS_ERROR_MSG);\n\n  // try to decode\n  const decoded = base32.decode.asBytes(address.toString());\n  // Sanity check\n  if (decoded.length !== ALGORAND_ADDRESS_BYTE_LENGTH)\n    throw new Error(MALFORMED_ADDRESS_ERROR_MSG);\n\n  // Find publickey and checksum\n  const pk = new Uint8Array(\n    decoded.slice(\n      0,\n      ALGORAND_ADDRESS_BYTE_LENGTH - ALGORAND_CHECKSUM_BYTE_LENGTH\n    )\n  );\n  const cs = new Uint8Array(\n    decoded.slice(nacl.PUBLIC_KEY_LENGTH, ALGORAND_ADDRESS_BYTE_LENGTH)\n  );\n\n  // Compute checksum\n  const checksum = nacl\n    .genericHash(pk)\n    .slice(\n      nacl.HASH_BYTES_LENGTH - ALGORAND_CHECKSUM_BYTE_LENGTH,\n      nacl.HASH_BYTES_LENGTH\n    );\n\n  // Check if the checksum and the address are equal\n  if (!utils.arrayEqual(checksum, cs))\n    throw new Error(CHECKSUM_ADDRESS_ERROR_MSG);\n\n  return { publicKey: pk, checksum: cs };\n}\n\n/**\n * isValidAddress checks if a string is a valid Algorand address.\n * @param address - an Algorand address with checksum.\n * @returns true if valid, false otherwise\n */\nexport function isValidAddress(address: string) {\n  // Try to decode\n  try {\n    decodeAddress(address);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * encodeAddress takes an Algorand address as a Uint8Array and encodes it into a string with checksum.\n * @param address - a raw Algorand address\n * @returns the address and checksum encoded as a string.\n */\nexport function encodeAddress(address: Uint8Array) {\n  // compute checksum\n  const checksum = nacl\n    .genericHash(address)\n    .slice(\n      nacl.PUBLIC_KEY_LENGTH - ALGORAND_CHECKSUM_BYTE_LENGTH,\n      nacl.PUBLIC_KEY_LENGTH\n    );\n  const addr = base32.encode(utils.concatArrays(address, checksum));\n\n  return addr.toString().slice(0, ALGORAND_ADDRESS_LENGTH); // removing the extra '===='\n}\n\n/**\n * fromMultisigPreImg takes multisig parameters and returns a 32 byte typed array public key,\n * representing an address that identifies the \"exact group, version, and public keys\" that are required for signing.\n * Hash(\"MultisigAddr\" || version uint8 || threshold uint8 || PK1 || PK2 || ...)\n * Encoding this output yields a human readable address.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param pks - array of typed array public keys\n */\nexport function fromMultisigPreImg({\n  version,\n  threshold,\n  pks,\n}: Omit<MultisigMetadata, 'addrs'> & {\n  pks: Uint8Array[];\n}) {\n  if (version !== 1 || version > 255 || version < 0) {\n    // ^ a tad redundant, but in case in the future version != 1, still check for uint8\n    throw new Error(INVALID_MSIG_VERSION_ERROR_MSG);\n  }\n  if (\n    threshold === 0 ||\n    pks.length === 0 ||\n    threshold > pks.length ||\n    threshold > 255\n  ) {\n    throw new Error(INVALID_MSIG_THRESHOLD_ERROR_MSG);\n  }\n  const pkLen = ALGORAND_ADDRESS_BYTE_LENGTH - ALGORAND_CHECKSUM_BYTE_LENGTH;\n  if (pkLen !== nacl.PUBLIC_KEY_LENGTH) {\n    throw new Error(UNEXPECTED_PK_LEN_ERROR_MSG);\n  }\n  const merged = new Uint8Array(\n    MULTISIG_PREIMG2ADDR_PREFIX.length + 2 + pkLen * pks.length\n  );\n  merged.set(MULTISIG_PREIMG2ADDR_PREFIX, 0);\n  merged.set([version], MULTISIG_PREIMG2ADDR_PREFIX.length);\n  merged.set([threshold], MULTISIG_PREIMG2ADDR_PREFIX.length + 1);\n  for (let i = 0; i < pks.length; i++) {\n    if (pks[i].length !== pkLen) {\n      throw new Error(INVALID_MSIG_PK_ERROR_MSG);\n    }\n    merged.set(pks[i], MULTISIG_PREIMG2ADDR_PREFIX.length + 2 + i * pkLen);\n  }\n  return new Uint8Array(nacl.genericHash(merged));\n}\n\n/**\n * fromMultisigPreImgAddrs takes multisig parameters and returns a human readable Algorand address.\n * This is equivalent to fromMultisigPreImg, but interfaces with encoded addresses.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - array of encoded addresses\n */\nexport function fromMultisigPreImgAddrs({\n  version,\n  threshold,\n  addrs,\n}: {\n  version: number;\n  threshold: number;\n  addrs: string[];\n}) {\n  const pks = addrs.map((addr) => decodeAddress(addr).publicKey);\n  return encodeAddress(fromMultisigPreImg({ version, threshold, pks }));\n}\n\n/**\n * Get the escrow address of an application.\n * @param appID - The ID of the application.\n * @returns The address corresponding to that application's escrow account.\n */\nexport function getApplicationAddress(appID: number | bigint): string {\n  const toBeSigned = utils.concatArrays(APP_ID_PREFIX, encodeUint64(appID));\n  const hash = nacl.genericHash(toBeSigned);\n  return encodeAddress(new Uint8Array(hash));\n}\n","/**\n * bigIntToBytes converts a BigInt to a big-endian Uint8Array for encoding.\n * @param bi - The bigint to convert.\n * @param size - The size of the resulting byte array.\n * @returns A byte array containing the big-endian encoding of the input bigint\n */\nexport function bigIntToBytes(bi: bigint | number, size: number) {\n  let hex = bi.toString(16);\n  // Pad the hex with zeros so it matches the size in bytes\n  if (hex.length !== size * 2) {\n    hex = hex.padStart(size * 2, '0');\n  }\n  const byteArray = new Uint8Array(hex.length / 2);\n  for (let i = 0, j = 0; i < hex.length / 2; i++, j += 2) {\n    byteArray[i] = parseInt(hex.slice(j, j + 2), 16);\n  }\n  return byteArray;\n}\n\n/**\n * bytesToBigInt produces a bigint from a binary representation.\n *\n * @param bytes - The Uint8Array to convert.\n * @returns The bigint that was encoded in the input data.\n */\nexport function bytesToBigInt(bytes: Uint8Array) {\n  let res = BigInt(0);\n  const buf = Buffer.from(bytes);\n  for (let i = 0; i < bytes.length; i++) {\n    res = BigInt(Number(buf.readUIntBE(i, 1))) + res * BigInt(256);\n  }\n  return res;\n}\n","/**\n * This file is a wrapper of msgpack.js.\n * The wrapper was written in order to ensure correct encoding of Algorand Transaction and other formats.\n * In particular, it matches go-algorand blockchain client, written in go (https://www.github.com/algorand/go-algorand.\n * Algorand's msgpack encoding follows to following rules -\n *  1. Every integer must be encoded to the smallest type possible (0-255-\\>8bit, 256-65535-\\>16bit, etx)\n *  2. All fields names must be sorted\n *  3. All empty and 0 fields should be omitted\n *  4. Every positive number must be encoded as uint\n *  5. Binary blob should be used for binary data and string for strings\n *  */\n\nimport * as msgpack from 'algo-msgpack-with-bigint';\n\n// Errors\nexport const ERROR_CONTAINS_EMPTY_STRING =\n  'The object contains empty or 0 values. First empty or 0 value encountered during encoding: ';\n\n/**\n * containsEmpty returns true if any of the object's values are empty, false otherwise.\n * Empty arrays considered empty\n * @param obj - The object to check\n * @returns \\{true, empty key\\} if contains empty, \\{false, undefined\\} otherwise\n */\nfunction containsEmpty(obj: Record<string | number | symbol, any>) {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (!obj[key] || obj[key].length === 0) {\n        return { containsEmpty: true, firstEmptyKey: key };\n      }\n    }\n  }\n  return { containsEmpty: false, firstEmptyKey: undefined };\n}\n\n/**\n * encode encodes objects using msgpack\n * @param obj - a dictionary to be encoded. Must not contain empty or 0 values.\n * @returns msgpack representation of the object\n * @throws Error containing ERROR_CONTAINS_EMPTY_STRING if the object contains empty or zero values\n */\nexport function encode(obj: Record<string | number | symbol, any>) {\n  // Check for empty values\n  const emptyCheck = containsEmpty(obj);\n  if (emptyCheck.containsEmpty) {\n    throw new Error(ERROR_CONTAINS_EMPTY_STRING + emptyCheck.firstEmptyKey);\n  }\n\n  // enable the canonical option\n  const options = { sortKeys: true };\n  return msgpack.encode(obj, options);\n}\n\nexport function decode(buffer: ArrayLike<number>) {\n  return msgpack.decode(buffer);\n}\n","/**\n * encodeUint64 converts an integer to its binary representation.\n * @param num - The number to convert. This must be an unsigned integer less than\n *   2^64.\n * @returns An 8-byte typed array containing the big-endian encoding of the input\n *   integer.\n */\nexport function encodeUint64(num: number | bigint) {\n  const isInteger = typeof num === 'bigint' || Number.isInteger(num);\n\n  if (!isInteger || num < 0 || num > BigInt('0xffffffffffffffff')) {\n    throw new Error('Input is not a 64-bit unsigned integer');\n  }\n\n  const buf = Buffer.allocUnsafe(8);\n\n  buf.writeBigUInt64BE(BigInt(num));\n\n  return new Uint8Array(buf);\n}\n\n/**\n * decodeUint64 produces an integer from a binary representation.\n * @param data - An typed array containing the big-endian encoding of an unsigned integer\n *   less than 2^64. This array must be at most 8 bytes long.\n * @param decodingMode - Configure how the integer will be\n *   decoded.\n *\n *   The options are:\n *   * \"safe\": The integer will be decoded as a Number, but if it is greater than\n *     Number.MAX_SAFE_INTEGER an error will be thrown.\n *   * \"mixed\": The integer will be decoded as a Number if it is less than or equal to\n *     Number.MAX_SAFE_INTEGER, otherwise it will be decoded as a BigInt.\n *   * \"bigint\": The integer will always be decoded as a BigInt.\n *\n *   Defaults to \"safe\" if not included.\n * @returns The integer that was encoded in the input data. The return type will\n *   be determined by the parameter decodingMode.\n */\nexport function decodeUint64(data: Uint8Array, decodingMode: 'safe'): number;\nexport function decodeUint64(\n  data: Uint8Array,\n  decodingMode: 'mixed'\n): number | bigint;\nexport function decodeUint64(data: Uint8Array, decodingMode: 'bigint'): bigint;\nexport function decodeUint64(data: any, decodingMode: any = 'safe') {\n  if (\n    decodingMode !== 'safe' &&\n    decodingMode !== 'mixed' &&\n    decodingMode !== 'bigint'\n  ) {\n    throw new Error(`Unknown decodingMode option: ${decodingMode}`);\n  }\n\n  if (data.byteLength === 0 || data.byteLength > 8) {\n    throw new Error(\n      `Data has unacceptable length. Expected length is between 1 and 8, got ${data.byteLength}`\n    );\n  }\n\n  // insert 0s at the beginning if data is smaller than 8 bytes\n  const padding = Buffer.allocUnsafe(8 - data.byteLength);\n  padding.fill(0);\n\n  const buf = Buffer.concat([padding, Buffer.from(data)]);\n\n  const num = buf.readBigUInt64BE();\n  const isBig = num > Number.MAX_SAFE_INTEGER;\n\n  if (decodingMode === 'safe') {\n    if (isBig) {\n      throw new Error(\n        `Integer exceeds maximum safe integer: ${num.toString()}. Try decoding with \"mixed\" or \"safe\" decodingMode.`\n      );\n    }\n    return Number(num);\n  }\n\n  if (decodingMode === 'mixed' && !isBig) {\n    return Number(num);\n  }\n\n  return num;\n}\n","import * as txnBuilder from './transaction';\nimport * as nacl from './nacl/naclWrappers';\nimport * as encoding from './encoding/encoding';\nimport * as address from './encoding/address';\nimport * as utils from './utils/utils';\n\nconst ALGORAND_MAX_TX_GROUP_SIZE = 16;\n\ninterface EncodedTxGroup {\n  txlist: Buffer[];\n}\n\n/**\n * Aux class for group id calculation of a group of transactions\n */\nexport class TxGroup {\n  name = 'Transaction group';\n  tag = Buffer.from('TG');\n  txGroupHashes: Buffer[];\n\n  constructor(hashes: Buffer[]) {\n    if (hashes.length > ALGORAND_MAX_TX_GROUP_SIZE) {\n      const errorMsg = `${hashes.length.toString()} transactions grouped together but max group size is ${ALGORAND_MAX_TX_GROUP_SIZE.toString()}`;\n      throw Error(errorMsg);\n    }\n\n    this.txGroupHashes = hashes;\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    const txgroup: EncodedTxGroup = {\n      txlist: this.txGroupHashes,\n    };\n    return txgroup;\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(txgroupForEnc: EncodedTxGroup) {\n    const txn = Object.create(this.prototype);\n    txn.name = 'Transaction group';\n    txn.tag = Buffer.from('TG');\n    txn.txGroupHashes = [];\n    for (const hash of txgroupForEnc.txlist) {\n      txn.txGroupHashes.push(Buffer.from(hash));\n    }\n    return txn;\n  }\n\n  toByte() {\n    return encoding.encode(this.get_obj_for_encoding());\n  }\n}\n\n/**\n * computeGroupID returns group ID for a group of transactions\n * @param txns - array of transactions (every element is a dict or Transaction)\n * @returns Buffer\n */\nexport function computeGroupID(txns: txnBuilder.TransactionLike[]) {\n  const hashes = [];\n  for (const txn of txns) {\n    const tx = txnBuilder.instantiateTxnIfNeeded(txn);\n    hashes.push(tx.rawTxID());\n  }\n\n  const txgroup = new TxGroup(hashes);\n\n  const bytes = txgroup.toByte();\n  const toBeHashed = Buffer.from(utils.concatArrays(txgroup.tag, bytes));\n  const gid = nacl.genericHash(toBeHashed);\n  return Buffer.from(gid);\n}\n\n/**\n * assignGroupID assigns group id to a given list of unsigned transactions\n * @param txns - array of transactions (every element is a dict or Transaction)\n * @param from - optional sender address specifying which transaction return\n * @returns possible list of matching transactions\n */\nexport function assignGroupID(\n  txns: txnBuilder.TransactionLike[],\n  from?: string\n) {\n  const gid = computeGroupID(txns);\n  const result: txnBuilder.Transaction[] = [];\n  for (const txn of txns) {\n    const tx = txnBuilder.instantiateTxnIfNeeded(txn);\n    if (!from || address.encodeAddress(tx.from.publicKey) === from) {\n      tx.group = gid;\n      result.push(tx);\n    }\n  }\n  return result;\n}\n\nexport default TxGroup;\n","import * as algosdk from './main';\n\nexport * from './main';\nexport default algosdk;\n","/* eslint-disable no-bitwise */\n/**\n * Utilities for working with program bytes.\n */\n\n/** @deprecated langspec.json is deprecated aross all SDKs */\nimport langspec from './langspec.json';\n\n/**\n * Langspec Op Structure\n * @deprecated for langspec.json is deprecated aross all SDKs\n */\ninterface OpStructure {\n  Opcode: number;\n  Name: string;\n  Args?: string;\n  Returns?: string;\n  Cost: number;\n  Size: number;\n  ArgEnum?: string[];\n  ArgEnumTypes?: string;\n  Doc: string;\n  DocExtra?: string;\n  ImmediateNote?: string;\n  Groups: string[];\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nlet opcodes: {\n  [key: number]: OpStructure;\n};\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nconst maxCost = 20000;\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nconst maxLength = 1000;\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function parseUvarint(\n  array: Uint8Array\n): [numberFound: number, size: number] {\n  let x = 0;\n  let s = 0;\n  for (let i = 0; i < array.length; i++) {\n    const b = array[i];\n    if (b < 0x80) {\n      if (i > 9 || (i === 9 && b > 1)) {\n        return [0, -(i + 1)];\n      }\n      return [x | (b << s), i + 1];\n    }\n    x += (b & 0x7f) << s;\n    s += 7;\n  }\n  return [0, 0];\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nfunction readIntConstBlock(\n  program: Uint8Array,\n  pc: number\n): [size: number, ints: number[]] {\n  let size = 1;\n  const parsed = parseUvarint(program.slice(pc + size));\n  const numInts = parsed[0];\n  let bytesUsed = parsed[1];\n  if (bytesUsed <= 0) {\n    throw new Error(`could not decode int const block size at pc=${pc + size}`);\n  }\n  const ints: number[] = [];\n  size += bytesUsed;\n  for (let i = 0; i < numInts; i++) {\n    if (pc + size >= program.length) {\n      throw new Error('intcblock ran past end of program');\n    }\n    let numberFound: number;\n    [numberFound, bytesUsed] = parseUvarint(program.slice(pc + size));\n    if (bytesUsed <= 0) {\n      throw new Error(\n        `could not decode int const[${i}] block size at pc=${pc + size}`\n      );\n    }\n    ints.push(numberFound);\n    size += bytesUsed;\n  }\n  return [size, ints];\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nfunction readByteConstBlock(\n  program: Uint8Array,\n  pc: number\n): [size: number, byteArrays: Uint8Array[]] {\n  let size = 1;\n  const parsed = parseUvarint(program.slice(pc + size));\n  const numInts = parsed[0];\n  let bytesUsed = parsed[1];\n  if (bytesUsed <= 0) {\n    throw new Error(\n      `could not decode []byte const block size at pc=${pc + size}`\n    );\n  }\n  const byteArrays: Uint8Array[] = [];\n  size += bytesUsed;\n  for (let i = 0; i < numInts; i++) {\n    if (pc + size >= program.length) {\n      throw new Error('bytecblock ran past end of program');\n    }\n    let itemLen: number;\n    [itemLen, bytesUsed] = parseUvarint(program.slice(pc + size));\n    if (bytesUsed <= 0) {\n      throw new Error(\n        `could not decode []byte] const[${i}] block size at pc=${pc + size}`\n      );\n    }\n    size += bytesUsed;\n    if (pc + size + itemLen > program.length) {\n      throw new Error('bytecblock ran past end of program');\n    }\n    const byteArray = program.slice(pc + size, pc + size + itemLen);\n    byteArrays.push(byteArray);\n    size += itemLen;\n  }\n  return [size, byteArrays];\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nfunction readPushIntOp(\n  program: Uint8Array,\n  pc: number\n): [size: number, numberFound: number] {\n  let size = 1;\n  const [numberFound, bytesUsed] = parseUvarint(program.slice(pc + size));\n  if (bytesUsed <= 0) {\n    throw new Error(`could not decode push int const at pc=${pc + size}`);\n  }\n  size += bytesUsed;\n  return [size, numberFound];\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nfunction readPushByteOp(\n  program: Uint8Array,\n  pc: number\n): [size: number, byteArray: Uint8Array] {\n  let size = 1;\n  const [itemLen, bytesUsed] = parseUvarint(program.slice(pc + size));\n  if (bytesUsed <= 0) {\n    throw new Error(\n      `could not decode push []byte const size at pc=${pc + size}`\n    );\n  }\n  size += bytesUsed;\n  if (pc + size + itemLen > program.length) {\n    throw new Error('pushbytes ran past end of program');\n  }\n  const byteArray = program.slice(pc + size, pc + size + itemLen);\n  size += itemLen;\n  return [size, byteArray];\n}\n\n/** readProgram validates program for length and running cost,\n * and additionally provides the found int variables and byte blocks\n *\n * @deprecated Validation relies on metadata (`langspec.json`) that\n * does not accurately represent opcode behavior across program versions.\n * The behavior of `readProgram` relies on `langspec.json`.\n * Thus, this method is being deprecated.\n *\n * @param program - Program to check\n * @param args - Program arguments as array of Uint8Array arrays\n * @throws\n * @returns\n */\nexport function readProgram(\n  program: Uint8Array,\n  args?: Uint8Array[]\n): [ints: number[], byteArrays: Uint8Array[], valid: boolean] {\n  const intcblockOpcode = 32;\n  const bytecblockOpcode = 38;\n  const pushbytesOpcode = 128;\n  const pushintOpcode = 129;\n\n  if (!program) {\n    throw new Error('empty program');\n  }\n\n  if (typeof args === 'undefined') {\n    // eslint-disable-next-line no-param-reassign\n    args = [];\n  }\n  if (!Array.isArray(args)) {\n    throw new Error('invalid arguments');\n  }\n\n  const [version, vlen] = parseUvarint(program);\n  if (vlen <= 0) {\n    throw new Error('version parsing error');\n  }\n  if (version > langspec.EvalMaxVersion) {\n    throw new Error('unsupported version');\n  }\n\n  let cost = 0;\n  let { length } = program;\n  for (const arg of args) {\n    length += arg.length;\n  }\n  if (length > maxLength) {\n    throw new Error('program too long');\n  }\n\n  if (!opcodes) {\n    opcodes = {};\n    for (const op of langspec.Ops) {\n      opcodes[op.Opcode] = op;\n    }\n  }\n\n  let pc = vlen;\n  let ints: number[] = [];\n  let byteArrays: Uint8Array[] = [];\n  while (pc < program.length) {\n    const op = opcodes[program[pc]];\n    if (op === undefined) {\n      throw new Error('invalid instruction');\n    }\n\n    cost += op.Cost;\n    let size = op.Size;\n    if (size === 0) {\n      switch (op.Opcode) {\n        case intcblockOpcode: {\n          let foundInts: number[];\n          [size, foundInts] = readIntConstBlock(program, pc);\n          ints = ints.concat(foundInts);\n          break;\n        }\n        case bytecblockOpcode: {\n          let foundByteArrays: Uint8Array[];\n          [size, foundByteArrays] = readByteConstBlock(program, pc);\n          byteArrays = byteArrays.concat(foundByteArrays);\n          break;\n        }\n        case pushintOpcode: {\n          let foundInt: number;\n          [size, foundInt] = readPushIntOp(program, pc);\n          ints.push(foundInt);\n          break;\n        }\n        case pushbytesOpcode: {\n          let foundByteArray;\n          [size, foundByteArray] = readPushByteOp(program, pc);\n          byteArrays.push(foundByteArray);\n          break;\n        }\n        default: {\n          throw new Error('invalid instruction');\n        }\n      }\n    }\n    pc += size;\n  }\n  // costs calculated dynamically starting in v4\n  if (version < 4 && cost > maxCost) {\n    throw new Error('program too costly for version < 4. consider using v4.');\n  }\n  return [ints, byteArrays, true];\n}\n\n/**\n * checkProgram validates program for length and running cost\n *\n * @deprecated Validation relies on metadata (`langspec.json`) that\n * does not accurately represent opcode behavior across program versions.\n * The behavior of `checkProgram` relies on `langspec.json`.\n * Thus, this method is being deprecated.\n *\n * @param program - Program to check\n * @param args - Program arguments as array of Uint8Array arrays\n * @throws\n * @returns true if success\n */\nexport function checkProgram(program: Uint8Array, args?: Uint8Array[]) {\n  const [, , success] = readProgram(program, args);\n  return success;\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function checkIntConstBlock(program: Uint8Array, pc: number) {\n  const [size] = readIntConstBlock(program, pc);\n  return size;\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function checkByteConstBlock(program: Uint8Array, pc: number) {\n  const [size] = readByteConstBlock(program, pc);\n  return size;\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function checkPushIntOp(program: Uint8Array, pc: number) {\n  const [size] = readPushIntOp(program, pc);\n  return size;\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function checkPushByteOp(program: Uint8Array, pc: number) {\n  const [size] = readPushByteOp(program, pc);\n  return size;\n}\n\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport const langspecEvalMaxVersion = langspec.EvalMaxVersion;\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport const langspecLogicSigVersion = langspec.LogicSigVersion;\n","import * as vlq from 'vlq';\n\nexport class SourceMap {\n  version: number;\n  sources: string[];\n  names: string[];\n  mappings: string;\n\n  pcToLine: { [key: number]: number };\n  lineToPc: { [key: number]: number[] };\n\n  constructor({\n    version,\n    sources,\n    names,\n    mappings,\n  }: {\n    version: number;\n    sources: string[];\n    names: string[];\n    mappings: string;\n  }) {\n    this.version = version;\n    this.sources = sources;\n    this.names = names;\n    this.mappings = mappings;\n\n    if (this.version !== 3)\n      throw new Error(`Only version 3 is supported, got ${this.version}`);\n\n    if (this.mappings === undefined)\n      throw new Error(\n        'mapping undefined, cannot build source map without `mapping`'\n      );\n\n    const pcList = this.mappings.split(';').map((m) => {\n      const decoded = vlq.decode(m);\n      if (decoded.length > 2) return decoded[2];\n      return undefined;\n    });\n\n    this.pcToLine = {};\n    this.lineToPc = {};\n\n    let lastLine = 0;\n    for (const [pc, lineDelta] of pcList.entries()) {\n      // If the delta is not undefined, the lastLine should be updated with\n      // lastLine + the delta\n      if (lineDelta !== undefined) {\n        lastLine += lineDelta;\n      }\n\n      if (!(lastLine in this.lineToPc)) this.lineToPc[lastLine] = [];\n\n      this.lineToPc[lastLine].push(pc);\n      this.pcToLine[pc] = lastLine;\n    }\n  }\n\n  getLineForPc(pc: number): number | undefined {\n    return this.pcToLine[pc];\n  }\n\n  getPcsForLine(line: number): number[] | undefined {\n    return this.lineToPc[line];\n  }\n}\n","const address = require('../encoding/address');\nconst encoding = require('../encoding/encoding');\nconst group = require('../group');\nconst logic = require('../logic/logic');\nconst logicSig = require('../logicsig');\nconst nacl = require('../nacl/naclWrappers');\nconst templates = require('./templates');\nconst transaction = require('../transaction');\n\nclass DynamicFee {\n  /**\n   * DynamicFee contract allows you to create a transaction without\n   * specifying the fee. The fee will be determined at the moment of\n   * transfer.\n   *\n   * @deprecated This feature will be removed in v2.\n   *\n   * Constructor Parameters:\n   * @param {string} receiver: address to receive the assets\n   * @param {int} amount: amount of assets to transfer\n   * @param {int} firstValid: first valid round for the transaction\n   * @param {int} lastValid:  last valid round for the transaction\n   * @param {string} closeRemainder: if you would like to close the account after the transfer, specify the address that would recieve the remainder, else leave undefined\n   * @param {string} lease: leave undefined to generate a random lease, or supply a lease as base64\n   * @returns {DynamicFee}\n   */\n  constructor(receiver, amount, firstValid, lastValid, closeRemainder, lease) {\n    // don't need to validate receiver, closeremainderto - insert will handle that\n    if (!Number.isSafeInteger(amount) || amount < 0)\n      throw Error('amount must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(firstValid) || firstValid < 0)\n      throw Error(\n        'firstValid must be a positive number and smaller than 2^53-1'\n      );\n    if (!Number.isSafeInteger(lastValid) || lastValid < 0)\n      throw Error(\n        'lastValid must be a positive number and smaller than 2^53-1'\n      );\n\n    if (typeof closeRemainder === 'undefined') {\n      // eslint-disable-next-line no-param-reassign\n      closeRemainder = address.ALGORAND_ZERO_ADDRESS_STRING;\n    }\n    if (typeof lease === 'undefined') {\n      const leaseBytes = nacl.randomBytes(32);\n      // eslint-disable-next-line no-param-reassign\n      lease = Buffer.from(leaseBytes).toString('base64');\n    }\n\n    const referenceProgramB64 =\n      'ASAFAgEHBgUmAyD+vKC7FEpaTqe0OKRoGsgObKEFvLYH/FZTJclWlfaiEyDmmpYeby1feshmB5JlUr6YI17TM2PKiJGLuck4qRW2+SB/g7Flf/H8U7ktwYFIodZd/C1LH6PWdyhK3dIAEm2QaTIEIhIzABAjEhAzAAcxABIQMwAIMQESEDEWIxIQMRAjEhAxBygSEDEJKRIQMQgkEhAxAiUSEDEEIQQSEDEGKhIQ';\n    const referenceProgramBytes = Buffer.from(referenceProgramB64, 'base64');\n    const referenceOffsets = [\n      5 /* firstValid */,\n      6 /* lastValid */,\n      7 /* receiver */,\n      11 /* closeRemainder */,\n      44 /* lease */,\n      76,\n    ];\n    const injectionVector = [\n      amount,\n      firstValid,\n      lastValid,\n      receiver,\n      closeRemainder,\n      lease,\n    ];\n    const injectionTypes = [\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.ADDRESS,\n      templates.valTypes.ADDRESS,\n      templates.valTypes.BASE64,\n    ];\n    const injectedBytes = templates.inject(\n      referenceProgramBytes,\n      referenceOffsets,\n      injectionVector,\n      injectionTypes\n    );\n    this.programBytes = injectedBytes;\n    const lsig = new logicSig.LogicSig(injectedBytes, undefined);\n    this.address = lsig.address();\n  }\n\n  /**\n   * returns the program bytes\n   * @returns {Uint8Array}\n   */\n  getProgram() {\n    return this.programBytes;\n  }\n\n  /**\n   * returns the string address of the contract\n   * @returns {string}\n   */\n  getAddress() {\n    return this.address;\n  }\n}\n/**\n * signDynamicFee returns the main transaction and signed logic needed to complete the transfer.\n * These should be sent to the fee payer, who can use GetDynamicFeeTransactions\n *\n * @deprecated This feature will be removed in v2.\n *\n * @param {Uint8Array} contract: the bytearray representing the contract\n * @param {Uint8Array} secretKey: the secret key for building the logic sig\n * @param {string} genesisHash: the genesisHash to use for the txn\n * @returns {Object} object containing json of txnbuilder constructor arguments under \"txn\" and signed logicsig under \"lsig\"\n */\nfunction signDynamicFee(contract, secretKey, genesisHash) {\n  const programOutputs = logic.readProgram(contract, undefined);\n  const ints = programOutputs[0];\n  const byteArrays = programOutputs[1];\n  const keys = nacl.keyPairFromSecretKey(secretKey);\n  const from = address.encodeAddress(keys.publicKey);\n  const to = address.encodeAddress(byteArrays[0]);\n  const fee = 0;\n  const amount = ints[2];\n  const closeRemainderTo = address.encodeAddress(byteArrays[1]);\n  const firstRound = ints[3];\n  const lastRound = ints[4];\n  const lease = new Uint8Array(byteArrays[2]);\n  const txn = {\n    from,\n    to,\n    fee,\n    amount,\n    closeRemainderTo,\n    firstRound,\n    lastRound,\n    genesisHash,\n    type: 'pay',\n    lease,\n  };\n\n  const lsig = new logicSig.LogicSig(contract, undefined);\n  lsig.sign(secretKey);\n  return { txn, lsig };\n}\n\n/**\n * getDynamicFeeTransactions creates and signs the secondary dynamic fee transaction, updates\n * transaction fields, and signs as the fee payer; it returns both\n * transactions as bytes suitable for sendRaw.\n *\n * @deprecated This feature will be removed in v2.\n *\n * Parameters:\n * @param {dict} txn - main transaction from payer's signDynamicFee output (a dict of constructor arguments, NOT a transaction.Transaction)\n * @param {LogicSig} lsig - the signed logic received from the payer's signDynamicFee output\n * @param {Uint8Array} privateKey - the private key for the account that pays the fee\n * @param {int} fee - fee per byte for both transactions\n *\n * @throws on invalid lsig\n */\n/* eslint-disable no-param-reassign */\nfunction getDynamicFeeTransactions(txn, lsig, privateKey, fee) {\n  if (!lsig.verify(address.decodeAddress(txn.from).publicKey)) {\n    throw new Error('invalid signature');\n  }\n\n  txn.fee = fee;\n  if (txn.fee < transaction.ALGORAND_MIN_TX_FEE) {\n    txn.fee = transaction.ALGORAND_MIN_TX_FEE;\n  }\n\n  const keys = nacl.keyPairFromSecretKey(privateKey);\n  const from = address.encodeAddress(keys.publicKey);\n\n  // must remove lease and re-add using addLease so that fee calculation will match other SDKs\n  const { lease } = txn;\n  delete txn.lease;\n\n  const txnObj = new transaction.Transaction(txn);\n  txnObj.addLease(lease, fee);\n\n  const feePayTxn = {\n    from,\n    to: txn.from,\n    fee,\n    amount: txnObj.fee, // calculated after txnObj is built to have the correct fee\n    firstRound: txn.firstRound,\n    lastRound: txn.lastRound,\n    genesisHash: txn.genesisHash,\n    type: 'pay',\n  };\n  const feePayTxnObj = new transaction.Transaction(feePayTxn);\n  feePayTxnObj.addLease(lease, fee);\n\n  const txnGroup = group.assignGroupID([feePayTxnObj, txnObj], undefined);\n  const feePayTxnWithGroup = txnGroup[0];\n  const txnObjWithGroup = txnGroup[1];\n\n  const lstx = {\n    lsig: lsig.get_obj_for_encoding(),\n    txn: txnObjWithGroup.get_obj_for_encoding(),\n  };\n\n  const stx1 = feePayTxnWithGroup.signTxn(privateKey);\n  const stx2 = encoding.encode(lstx);\n\n  const concatStx = new Uint8Array(stx1.length + stx2.length);\n  concatStx.set(stx1);\n  concatStx.set(stx2, stx1.length);\n\n  return concatStx;\n}\n/* eslint-enable no-param-reassign */\n\nmodule.exports = {\n  DynamicFee,\n  getDynamicFeeTransactions,\n  signDynamicFee,\n};\n","const sha256 = require('js-sha256');\nconst { keccak256 } = require('js-sha3');\nconst logic = require('../logic/logic');\nconst logicSig = require('../logicsig');\nconst templates = require('./templates');\nconst transaction = require('../transaction');\n\nclass HTLC {\n  /**\n   * HTLC allows a user to receive the Algo prior to a deadline (in terms of a round) by proving a knowledge\n   * of a special value or to forfeit the ability to claim, returning it to the payer.\n   * This contract is usually used to perform cross-chained atomic swaps\n   *\n   * More formally -\n   * Algos can be transferred under only two circumstances:\n   * 1. To receiver if hash_function(arg_0) = hash_value\n   * 2. To owner if txn.FirstValid > expiry_round\n   * ...\n   *\n   * @deprecated This feature will be removed in v2.\n   *\n   *Parameters\n   *----------\n   * @param {string} owner: an address that can receive the asset after the expiry round\n   * @param {string} receiver: address to receive Algos\n   * @param {string} hashFunction: the hash function to be used (must be either sha256 or keccak256)\n   * @param {string} hashImage: the hash image in base64\n   * @param {int} expiryRound: the round on which the assets can be transferred back to owner\n   * @param {int} maxFee: the maximum fee that can be paid to the network by the account\n   * @returns {HTLC}\n   */\n  constructor(owner, receiver, hashFunction, hashImage, expiryRound, maxFee) {\n    // don't need to validate owner, receiver - they'll be validated by template.insert\n    if (!Number.isSafeInteger(expiryRound) || expiryRound < 0)\n      throw Error(\n        'expiryRound must be a positive number and smaller than 2^53-1'\n      );\n    if (!Number.isSafeInteger(maxFee) || maxFee < 0)\n      throw Error('maxFee must be a positive number and smaller than 2^53-1');\n\n    let referenceProgramB64 = '';\n    if (hashFunction === 'sha256') {\n      referenceProgramB64 =\n        'ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQEpEhAxCSoSMQIlDRAREA==';\n    } else if (hashFunction === 'keccak256') {\n      referenceProgramB64 =\n        'ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQIpEhAxCSoSMQIlDRAREA==';\n    } else {\n      throw Error('hash function unrecognized');\n    }\n    // validate hashImage length\n    const hashImageBytes = Buffer.from(hashImage, 'base64');\n    if (hashImageBytes.length !== 32)\n      throw Error('hash image must be 32 bytes');\n\n    const referenceProgramBytes = Buffer.from(referenceProgramB64, 'base64');\n    const referenceOffsets = [\n      3 /* expiryRound */,\n      6 /* receiver */,\n      10 /* hashImage */,\n      42 /* owner */,\n      76,\n    ];\n    const injectionVector = [maxFee, expiryRound, receiver, hashImage, owner];\n    const injectionTypes = [\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.ADDRESS,\n      templates.valTypes.BASE64,\n      templates.valTypes.ADDRESS,\n    ];\n    const injectedBytes = templates.inject(\n      referenceProgramBytes,\n      referenceOffsets,\n      injectionVector,\n      injectionTypes\n    );\n    this.programBytes = injectedBytes;\n    const lsig = new logicSig.LogicSig(injectedBytes, undefined);\n    this.address = lsig.address();\n  }\n\n  /**\n   * returns the program bytes\n   * @returns {Uint8Array}\n   */\n  getProgram() {\n    return this.programBytes;\n  }\n\n  /**\n   * returns the string address of the contract\n   * @returns {string}\n   */\n  getAddress() {\n    return this.address;\n  }\n}\n\n/**\n *  signTransactionWithHTLCUnlock accepts a transaction, such as a payment, and builds the HTLC-unlocking signature around that transaction\n *\n * @deprecated This feature will be removed in v2.\n *\n * @param {Uint8Array} contract : byte representation of the HTLC\n * @param {Object} txn dictionary containing constructor arguments for a transaction\n * @param {string} preImageAsBase64 : preimage of the hash as base64 string\n *\n * @returns {Object} Object containing txID and blob representing signed transaction.\n * @throws error on validation failure\n */\nfunction signTransactionWithHTLCUnlock(contract, txn, preImageAsBase64) {\n  const preImageBytes = Buffer.from(preImageAsBase64, 'base64');\n\n  // hash validation\n  const readResult = logic.readProgram(contract, undefined);\n  const ints = readResult[0];\n  const byteArrays = readResult[1];\n  const expectedHashedOutput = byteArrays[1];\n  const hashFunction = contract[contract.length - 15];\n  if (hashFunction === 1) {\n    const hash = sha256.create();\n    hash.update(preImageBytes);\n    const actualHashedOutput = Buffer.from(hash.hex(), 'hex');\n    if (!actualHashedOutput.equals(expectedHashedOutput)) {\n      throw new Error(\n        'sha256 hash of preimage did not match stored contract hash'\n      );\n    }\n  } else if (hashFunction === 2) {\n    const hash = keccak256.create();\n    hash.update(preImageBytes);\n    const actualHashedOutput = Buffer.from(hash.hex(), 'hex');\n    if (!actualHashedOutput.equals(expectedHashedOutput)) {\n      throw new Error(\n        'keccak256 hash of preimage did not match stored contract hash'\n      );\n    }\n  } else {\n    throw new Error('hash function in contract unrecognized');\n  }\n\n  const args = [preImageBytes]; // array of one element, the Uint8Array preimage\n\n  const lsig = new logicSig.LogicSig(contract, args);\n  // clear out receiver just in case\n  // eslint-disable-next-line no-param-reassign\n  delete txn.to;\n\n  const maxFee = ints[0];\n  // check fee\n  const tempTxn = new transaction.Transaction(txn);\n  if (tempTxn.fee > maxFee) {\n    throw new Error(\n      `final fee of payment transaction${tempTxn.fee.toString()}greater than transaction max fee${maxFee.toString()}`\n    );\n  }\n\n  return logicSig.signLogicSigTransaction(txn, lsig);\n}\n\nmodule.exports = {\n  HTLC,\n  signTransactionWithHTLCUnlock,\n};\n","const dynamicFeeTemplate = require('./dynamicfee');\nconst htlcTemplate = require('./htlc');\nconst limitOrderTemplate = require('./limitorder');\nconst splitTemplate = require('./split');\nconst periodicPayTemplate = require('./periodicpayment');\n\nmodule.exports = {\n  DynamicFee: dynamicFeeTemplate.DynamicFee,\n  getDynamicFeeTransactions: dynamicFeeTemplate.getDynamicFeeTransactions,\n  signDynamicFee: dynamicFeeTemplate.signDynamicFee,\n  HTLC: htlcTemplate.HTLC,\n  signTransactionWithHTLCUnlock: htlcTemplate.signTransactionWithHTLCUnlock,\n  LimitOrder: limitOrderTemplate.LimitOrder,\n  getSwapAssetsTransaction: limitOrderTemplate.getSwapAssetsTransaction,\n  Split: splitTemplate.Split,\n  getSplitFundsTransaction: splitTemplate.getSplitFundsTransaction,\n  PeriodicPayment: periodicPayTemplate.PeriodicPayment,\n  getPeriodicPaymentWithdrawalTransaction:\n    periodicPayTemplate.getPeriodicPaymentWithdrawalTransaction,\n};\n","const address = require('../encoding/address');\nconst makeTxn = require('../makeTxn');\nconst group = require('../group');\nconst logic = require('../logic/logic');\nconst logicSig = require('../logicsig');\nconst nacl = require('../nacl/naclWrappers');\nconst templates = require('./templates');\nconst utils = require('../utils/utils');\n\nclass LimitOrder {\n  /**\n   * MakeLimitOrder allows a user to exchange some number of assets for some number of algos.\n   * Fund the contract with some number of Algos to limit the maximum number of\n   * Algos you're willing to trade for some other asset.\n   *\n   * Works on two cases:\n   * * trading Algos for some other asset\n   * * closing out Algos back to the originator after a timeout\n   *\n   * trade case, a 2 transaction group:\n   * gtxn[0] (this txn) Algos from Me to Other\n   * gtxn[1] asset from Other to Me\n   *\n   * We want to get _at least_ some amount of the other asset per our Algos\n   * gtxn[1].AssetAmount / gtxn[0].Amount >= N / D\n   * ===\n   * gtxn[1].AssetAmount * D >= gtxn[0].Amount * N\n   *\n   * close-out case:\n   * txn alone, close out value after timeout\n   *\n   * @deprecated This class will be removed in v2.\n   *\n   * Constructor Parameters:\n   * @param {string} owner: the address to refund funds to on timeout\n   * @param {int} assetid: the ID of the transferred asset\n   * @param {int} ratn: exchange rate (N asset per D Algos, or better)\n   * @param {int} ratd: exchange rate (N asset per D Algos, or better)\n   * @param {int} expiryRound: the round at which the account expires\n   * @param {int} minTrade: the minimum amount (of Algos) to be traded away\n   * @param {int} maxFee: maximum fee used by the limit order transaction\n   * @returns {LimitOrder}\n   */\n  constructor(owner, assetid, ratn, ratd, expiryRound, minTrade, maxFee) {\n    // don't need to validate owner - it will be validated by template.insert\n    if (!Number.isSafeInteger(assetid) || assetid < 0)\n      throw Error('assetid must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(ratn) || ratn < 0)\n      throw Error('ratn must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(ratd) || ratd < 0)\n      throw Error('ratd must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(expiryRound) || expiryRound < 0)\n      throw Error(\n        'expiryRound must be a positive number and smaller than 2^53-1'\n      );\n    if (!Number.isSafeInteger(minTrade) || minTrade < 0)\n      throw Error('minTrade must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(maxFee) || maxFee < 0)\n      throw Error('maxFee must be a positive number and smaller than 2^53-1');\n\n    const referenceProgramB64 =\n      'ASAKAAEFAgYEBwgJCiYBIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMRYiEjEQIxIQMQEkDhAyBCMSQABVMgQlEjEIIQQNEDEJMgMSEDMBECEFEhAzAREhBhIQMwEUKBIQMwETMgMSEDMBEiEHHTUCNQExCCEIHTUENQM0ATQDDUAAJDQBNAMSNAI0BA8QQAAWADEJKBIxAiEJDRAxBzIDEhAxCCISEBA=';\n    const referenceProgramBytes = Buffer.from(referenceProgramB64, 'base64');\n    const referenceOffsets = [\n      5 /* minTrade */,\n      7 /* assetID */,\n      9 /* ratd */,\n      10 /* ratn */,\n      11 /* expiryRound */,\n      12 /* owner */,\n      16,\n    ];\n    const injectionVector = [\n      maxFee,\n      minTrade,\n      assetid,\n      ratd,\n      ratn,\n      expiryRound,\n      owner,\n    ];\n    const injectionTypes = [\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.ADDRESS,\n    ];\n    const injectedBytes = templates.inject(\n      referenceProgramBytes,\n      referenceOffsets,\n      injectionVector,\n      injectionTypes\n    );\n    this.programBytes = injectedBytes;\n    const lsig = new logicSig.LogicSig(injectedBytes, undefined);\n    this.address = lsig.address();\n    this.owner = owner;\n    this.assetid = assetid;\n  }\n\n  /**\n   * returns the program bytes\n   * @returns {Uint8Array}\n   */\n  getProgram() {\n    return this.programBytes;\n  }\n\n  /**\n   * returns the string address of the contract\n   * @returns {string}\n   */\n  getAddress() {\n    return this.address;\n  }\n}\n\n/**\n * returns a group transactions array which transfer funds according to the contract's ratio\n *\n * @deprecated This feature will be removed in v2.\n *\n * @param {Uint8Array} contract: byteform of the contract from the payer\n * @param {int} assetAmount: the amount of assets to be sent\n * @param {int} microAlgoAmount: number of microAlgos to transfer\n * @param {Uint8Array} secretKey: secret key for signing transaction\n * @param {int} fee: the fee per byte to pay in microAlgos\n * @param {int} firstRound: the first round on which these txns will be valid\n * @param {int} lastRound: the last round on which these txns will be valid\n * @param {string} genesisHash: the b64-encoded genesis hash indicating the network for this transaction\n * @returns {Uint8Array}\n * the first payment sends money (Algos) from contract to the recipient (we'll call him Buyer), closing the rest of the account to Owner\n * the second payment sends money (the asset) from Buyer to the Owner\n * these transactions will be rejected if they do not meet the restrictions set by the contract\n * @throws error if arguments fail contract validation\n */\nfunction getSwapAssetsTransaction(\n  contract,\n  assetAmount,\n  microAlgoAmount,\n  secretKey,\n  fee,\n  firstRound,\n  lastRound,\n  genesisHash\n) {\n  const buyerKeyPair = nacl.keyPairFromSecretKey(secretKey);\n  const buyerAddr = address.encodeAddress(buyerKeyPair.publicKey);\n  const programOutputs = logic.readProgram(contract, undefined);\n  const ints = programOutputs[0];\n  const byteArrays = programOutputs[1];\n\n  let noCloseRemainder;\n  let noAssetRevocationTarget;\n  const contractAssetID = ints[6];\n  const contractOwner = address.encodeAddress(byteArrays[0]);\n  const lsig = logicSig.makeLogicSig(contract, undefined);\n  const contractAddress = lsig.address();\n  const algosForAssets = makeTxn.makePaymentTxn(\n    contractAddress,\n    buyerAddr,\n    fee,\n    microAlgoAmount,\n    noCloseRemainder,\n    firstRound,\n    lastRound,\n    undefined,\n    genesisHash,\n    undefined\n  );\n  const assetsForAlgos = makeTxn.makeAssetTransferTxn(\n    buyerAddr,\n    contractOwner,\n    noCloseRemainder,\n    noAssetRevocationTarget,\n    fee,\n    assetAmount,\n    firstRound,\n    lastRound,\n    undefined,\n    genesisHash,\n    undefined,\n    contractAssetID\n  );\n  const txns = [algosForAssets, assetsForAlgos];\n  const txGroup = group.assignGroupID(txns);\n\n  const ratd = ints[7];\n  const ratn = ints[8];\n  if (assetAmount * ratd < microAlgoAmount * ratn) {\n    throw new Error(\n      `bad payment ratio, ${assetAmount.toString()}*${ratd.toString()} !>= ${microAlgoAmount.toString()}*${ratn.toString()}`\n    );\n  }\n  const minTrade = ints[4];\n  if (microAlgoAmount < minTrade) {\n    throw new Error(\n      `payment amount ${microAlgoAmount.toString()} less than minimum trade ${minTrade.toString()}`\n    );\n  }\n  const maxFee = ints[2];\n  if (txGroup[0].fee > maxFee) {\n    throw new Error(\n      `final fee of payment transaction ${txGroup[0].fee.toString()} greater than transaction max fee ${maxFee.toString()}`\n    );\n  }\n  if (txGroup[1].fee > maxFee) {\n    throw new Error(\n      `final fee of asset transaction ${txGroup[1].fee.toString()} greater than transaction max fee ${maxFee.toString()}`\n    );\n  }\n\n  const algosForAssetsSigned = logicSig.signLogicSigTransactionObject(\n    txGroup[0],\n    lsig\n  );\n  const assetsForAlgosSigned = txGroup[1].signTxn(secretKey);\n  return utils.concatArrays(algosForAssetsSigned.blob, assetsForAlgosSigned);\n}\n\nmodule.exports = {\n  LimitOrder,\n  getSwapAssetsTransaction,\n};\n","const address = require('../encoding/address');\nconst makeTxn = require('../makeTxn');\nconst logic = require('../logic/logic');\nconst logicSig = require('../logicsig');\nconst nacl = require('../nacl/naclWrappers');\nconst templates = require('./templates');\n\nclass PeriodicPayment {\n  /**\n   * MakePeriodicPayment allows some account to execute periodic withdrawal of funds.\n   * This is a contract account.\n   *\n   * This allows receiver to withdraw amount every\n   * period rounds for withdrawWindow after every multiple\n   * of period.\n   *\n   * After expiryRound, all remaining funds in the escrow\n   * are available to receiver.\n   *\n   * @deprecated This class will be removed in v2.\n   *\n   * Constructor Parameters:\n   * @param {string} receiver: address which is authorized to receive withdrawals\n   * @param {int} amount: the amount to send each period\n   * @param {int} withdrawalWindow: the duration of a withdrawal period\n   * @param {int} period: the time between a pair of withdrawal periods\n   * @param {int} expiryRound: the round at which the account expires\n   * @param {int} maxFee: maximum fee used by the withdrawal transaction\n   * @param {string} lease: b64 representation of lease to use, or leave undefined to generate one\n   * @returns {PeriodicPayment}\n   */\n  constructor(\n    receiver,\n    amount,\n    withdrawalWindow,\n    period,\n    expiryRound,\n    maxFee,\n    lease\n  ) {\n    // don't need to validate receiver or lease, it's validated by template insert\n    this.receiver = receiver;\n    if (!Number.isSafeInteger(amount) || amount < 0)\n      throw Error('amount must be a positive number and smaller than 2^53-1');\n    this.amount = amount;\n    if (!Number.isSafeInteger(withdrawalWindow) || withdrawalWindow < 0)\n      throw Error(\n        'withdrawalWindow must be a positive number and smaller than 2^53-1'\n      );\n    this.withdrawalWindow = withdrawalWindow;\n    if (!Number.isSafeInteger(period) || period < 0)\n      throw Error('period must be a positive number and smaller than 2^53-1');\n    this.period = period;\n    if (!Number.isSafeInteger(expiryRound) || expiryRound < 0)\n      throw Error(\n        'expiryRound must be a positive number and smaller than 2^53-1'\n      );\n    this.expiryRound = expiryRound;\n    if (!Number.isSafeInteger(maxFee) || maxFee < 0)\n      throw Error('maxFee must be a positive number and smaller than 2^53-1');\n    this.maxFee = maxFee;\n\n    if (lease === undefined) {\n      const leaseBytes = nacl.randomBytes(32);\n      this.lease = Buffer.from(leaseBytes).toString('base64');\n    } else {\n      this.lease = lease;\n    }\n\n    this.programBytes = this.getProgram();\n    const lsig = new logicSig.LogicSig(this.programBytes, undefined);\n    this.address = lsig.address();\n  }\n\n  /**\n   * returns the program bytes\n   * @returns {Uint8Array}\n   */\n  getProgram() {\n    const referenceProgramB64 =\n      'ASAHAQYFAAQDByYCIAECAwQFBgcIAQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIIJKvkYTkEzwJf2arzJOxERsSogG9nQzKPkpIoc4TzPTFMRAiEjEBIw4QMQIkGCUSEDEEIQQxAggSEDEGKBIQMQkyAxIxBykSEDEIIQUSEDEJKRIxBzIDEhAxAiEGDRAxCCUSEBEQ';\n    const referenceProgramBytes = Buffer.from(referenceProgramB64, 'base64');\n    const referenceOffsets = [\n      4 /* period */,\n      5 /* withdrawWindow */,\n      7 /* amount */,\n      8 /* expiryRound */,\n      9 /* lease */,\n      12 /* receiver */,\n      46,\n    ];\n    const injectionVector = [\n      this.maxFee,\n      this.period,\n      this.withdrawalWindow,\n      this.amount,\n      this.expiryRound,\n      this.lease,\n      this.receiver,\n    ];\n    const injectionTypes = [\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.BASE64,\n      templates.valTypes.ADDRESS,\n    ];\n    return templates.inject(\n      referenceProgramBytes,\n      referenceOffsets,\n      injectionVector,\n      injectionTypes\n    );\n  }\n\n  /**\n   * returns the string address of the contract\n   * @returns {string}\n   */\n  getAddress() {\n    return this.address;\n  }\n}\n\n/**\n * getPeriodicPaymentWithdrawalTransaction returns a signed transaction extracting funds form the contract\n *\n * @deprecated This feature will be removed in v2.\n *\n * @param {Uint8Array} contract: the bytearray defining the contract, received from the payer\n * @param {int} fee: the fee per byte for the transaction\n * @param {int} firstValid: the first round on which the txn will be valid\n * @param {string} genesisHash: the hash representing the network for the txn\n * @returns {Object} Object containing txID and blob representing signed transaction\n * @throws error on failure\n */\nfunction getPeriodicPaymentWithdrawalTransaction(\n  contract,\n  fee,\n  firstValid,\n  genesisHash\n) {\n  const readResult = logic.readProgram(contract, undefined);\n  const ints = readResult[0];\n  const byteArrays = readResult[1];\n  const period = ints[2];\n  const duration = ints[4];\n  const amount = ints[5];\n  if (firstValid % period !== 0) {\n    throw new Error(\n      `firstValid round ${firstValid.toString()} was not a multiple of contract period ${period.toString()}`\n    );\n  }\n\n  // extract receiver and convert as needed\n  const receiverBytes = byteArrays[1];\n  const receiver = address.encodeAddress(receiverBytes);\n  // extract lease and convert\n  const leaseBuffer = byteArrays[0];\n  const lease = new Uint8Array(leaseBuffer);\n  const lastValid = firstValid + duration;\n  const to = receiver;\n  let noCloseRemainder;\n  let noNote;\n  const lsig = logicSig.makeLogicSig(contract, undefined);\n  const from = lsig.address();\n  const txn = {\n    from,\n    to,\n    fee,\n    amount,\n    closeRemainderTo: noCloseRemainder,\n    firstRound: firstValid,\n    lastRound: lastValid,\n    note: noNote,\n    genesisHash,\n    genesisID: '',\n    type: 'pay',\n    lease,\n  };\n\n  // check fee\n  const tempTxn = makeTxn.makePaymentTxn(\n    from,\n    to,\n    fee,\n    amount,\n    noCloseRemainder,\n    firstValid,\n    lastValid,\n    noNote,\n    genesisHash,\n    ''\n  );\n  if (tempTxn.fee > ints[1]) {\n    throw new Error(\n      `final fee of payment transaction${tempTxn.fee.toString()}greater than transaction max fee${ints[1].toString()}`\n    );\n  }\n\n  return logicSig.signLogicSigTransaction(txn, lsig);\n}\nmodule.exports = {\n  PeriodicPayment,\n  getPeriodicPaymentWithdrawalTransaction,\n};\n","const address = require('../encoding/address');\nconst makeTxn = require('../makeTxn');\nconst group = require('../group');\nconst logicsig = require('../logicsig');\nconst logic = require('../logic/logic');\nconst templates = require('./templates');\nconst utils = require('../utils/utils');\n\nclass Split {\n  /**\n   * Split splits money sent to some account to two recipients at some ratio.\n   * This is a contract account.\n   *\n   * This allows either a two-transaction group, for executing a\n   * split, or single transaction, for closing the account.\n   *\n   * Withdrawals from this account are allowed as a group transaction which\n   * sends receiverOne and receiverTwo amounts with exactly the specified ratio:\n   * (rat1*amountForReceiverOne) = (rat2*amountForReceiverTwo)\n   * At least minPay must be sent to receiverOne.\n   * (CloseRemainderTo must be zero.)\n   *\n   * After expiryRound passes, all funds can be refunded to owner.\n   *\n   * @deprecated This feature will be removed in v2.\n   *\n   * Constructor Parameters:\n   * @param {string} owner: the address to refund funds to on timeout\n   * @param {string} receiverOne: the first recipient in the split account\n   * @param {string} receiverTwo: the second recipient in the split account\n   * @param {int} rat1: fraction of money to be paid to the 1st recipient\n   * @param {int} rat2: fraction of money to be paid to the 2nd recipient\n   * @param {int} expiryRound: the round at which the account expires\n   * @param {int} minPay: minimum amount to be paid out of the account\n   * @param {int} maxFee: half of the maximum fee used by each split forwarding group transaction\n   * @returns {Split}\n   */\n  constructor(\n    owner,\n    receiverOne,\n    receiverTwo,\n    rat1,\n    rat2,\n    expiryRound,\n    minPay,\n    maxFee\n  ) {\n    // don't need to validate owner, receiverone, receivertwo - they'll be validated by template.insert\n    if (!Number.isSafeInteger(rat2) || rat2 < 0)\n      throw Error('rat2 must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(rat1) || rat1 < 0)\n      throw Error('rat1 must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(expiryRound) || expiryRound < 0)\n      throw Error(\n        'expiryRound must be a positive number and smaller than 2^53-1'\n      );\n    if (!Number.isSafeInteger(minPay) || minPay < 0)\n      throw Error('minPay must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(maxFee) || maxFee < 0)\n      throw Error('maxFee must be a positive number and smaller than 2^53-1');\n\n    const referenceProgramB64 =\n      'ASAIAQUCAAYHCAkmAyCztwQn0+DycN+vsk+vJWcsoz/b7NDS6i33HOkvTpf+YiC3qUpIgHGWE8/1LPh9SGCalSN7IaITeeWSXbfsS5wsXyC4kBQ38Z8zcwWVAym4S8vpFB/c0XC6R4mnPi9EBADsPDEQIhIxASMMEDIEJBJAABkxCSgSMQcyAxIQMQglEhAxAiEEDRAiQAAuMwAAMwEAEjEJMgMSEDMABykSEDMBByoSEDMACCEFCzMBCCEGCxIQMwAIIQcPEBA=';\n    const referenceProgramBytes = Buffer.from(referenceProgramB64, 'base64');\n    const referenceOffsets = [\n      4 /* timeout */,\n      7 /* rat2 */,\n      8 /* rat1 */,\n      9 /* minPay */,\n      10 /* owner */,\n      14 /* receiver1 */,\n      47 /* receiver2 */,\n      80,\n    ];\n    const injectionVector = [\n      maxFee,\n      expiryRound,\n      rat2,\n      rat1,\n      minPay,\n      owner,\n      receiverOne,\n      receiverTwo,\n    ];\n    const injectionTypes = [\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.INT,\n      templates.valTypes.ADDRESS,\n      templates.valTypes.ADDRESS,\n      templates.valTypes.ADDRESS,\n    ];\n    const injectedBytes = templates.inject(\n      referenceProgramBytes,\n      referenceOffsets,\n      injectionVector,\n      injectionTypes\n    );\n    this.programBytes = injectedBytes;\n    const lsig = logicsig.makeLogicSig(injectedBytes, undefined);\n    this.address = lsig.address();\n  }\n\n  /**\n   * returns the program bytes\n   * @returns {Uint8Array}\n   */\n  getProgram() {\n    return this.programBytes;\n  }\n\n  /**\n   * returns the string address of the contract\n   * @returns {string}\n   */\n  getAddress() {\n    return this.address;\n  }\n}\n/**\n * returns a group transactions array which transfer funds according to the contract's ratio\n *\n * @deprecated This feature will be removed in v2.\n *\n * @param {Uint8Array} contract: bytes representing the contract in question\n * @param {int} amount: the amount to be transferred\n * @param {int} firstRound: the first round on which the transaction group will be valid\n * @param {int} lastRound: the last round on which the transaction group will be valid\n * @param {int} fee: the fee to pay in microAlgos\n * @param {string} genesisHash: the b64-encoded genesis hash indicating the network for this transaction\n * @returns {Uint8Array}\n */\nfunction getSplitFundsTransaction(\n  contract,\n  amount,\n  firstRound,\n  lastRound,\n  fee,\n  genesisHash\n) {\n  const programOutputs = logic.readProgram(contract, undefined);\n  const ints = programOutputs[0];\n  const byteArrays = programOutputs[1];\n  let rat2 = ints[6];\n  let rat1 = ints[5];\n  let amountForReceiverOne = 0;\n  // reduce fractions\n  const gcdFn = (a, b) => {\n    if (typeof a !== 'number' || typeof b !== 'number')\n      throw new Error('gcd operates only on positive integers');\n    if (!b) {\n      return a;\n    }\n    return gcdFn(b, a % b);\n  };\n  const gcd = gcdFn(rat2, rat1);\n  rat2 = Math.floor(rat2 / gcd);\n  rat1 = Math.floor(rat1 / gcd);\n  const ratio = rat1 / rat2;\n  amountForReceiverOne = Math.round(amount / (1 + ratio));\n  const amountForReceiverTwo = amount - amountForReceiverOne;\n  if (rat1 * amountForReceiverOne !== rat2 * amountForReceiverTwo) {\n    throw Error(\n      'could not split funds in a way that satisfied the contract ratio'\n    );\n  }\n\n  const logicSig = logicsig.makeLogicSig(contract, undefined); // no args\n  const from = logicSig.address();\n  const receiverOne = address.encodeAddress(byteArrays[1]);\n  const receiverTwo = address.encodeAddress(byteArrays[2]);\n  const tx1 = makeTxn.makePaymentTxn(\n    from,\n    receiverOne,\n    fee,\n    amountForReceiverOne,\n    undefined,\n    firstRound,\n    lastRound,\n    undefined,\n    genesisHash\n  );\n  const tx2 = makeTxn.makePaymentTxn(\n    from,\n    receiverTwo,\n    fee,\n    amountForReceiverTwo,\n    undefined,\n    firstRound,\n    lastRound,\n    undefined,\n    genesisHash\n  );\n  const txns = [tx1, tx2];\n  const txGroup = group.assignGroupID(txns);\n\n  const signedTxns = txGroup.map(\n    (txn) => logicsig.signLogicSigTransactionObject(txn, logicsig).blob\n  );\n  return utils.concatArrays(signedTxns[0], signedTxns[1]);\n}\n\nmodule.exports = {\n  Split,\n  getSplitFundsTransaction,\n};\n","/* eslint-disable no-bitwise */\nconst address = require('../encoding/address');\n\nfunction putUvarint(buf, x) {\n  let i = 0;\n  while (x > 0x80) {\n    buf.push((x & 0xff) | 0x80);\n    // eslint-disable-next-line no-param-reassign\n    x >>= 7;\n    i += 1;\n  }\n  buf.push(x & 0xff);\n  return i + 1;\n}\n\nconst valTypes = {\n  INT: 1,\n  ADDRESS: 2,\n  BASE64: 3,\n};\n\nfunction inject(orig, offsets, values, valueTypes) {\n  if (\n    offsets.length !== values.length ||\n    offsets.length !== valueTypes.length\n  ) {\n    throw new Error('Lengths do not match');\n  }\n\n  let res = orig;\n\n  function replace(arr, newVal, offset, placeholderLength) {\n    const beforeReplacement = arr.slice(0, offset);\n    const afterReplacement = arr.slice(offset + placeholderLength, arr.length);\n    const chunks = [beforeReplacement, Buffer.from(newVal), afterReplacement];\n    return Buffer.concat(chunks);\n  }\n\n  for (let i = 0; i < offsets.length; i++) {\n    let decodedLength = 0;\n    let val = values[i];\n    const valType = valueTypes[i];\n\n    switch (valType) {\n      case valTypes.INT:\n        // eslint-disable-next-line no-case-declarations\n        const intBuf = [];\n        decodedLength = putUvarint(intBuf, val);\n        res = replace(res, intBuf, offsets[i], 1);\n        break;\n      case valTypes.ADDRESS:\n        val = address.decodeAddress(val);\n        res = replace(res, val.publicKey, offsets[i], 32);\n        break;\n      case valTypes.BASE64:\n        // eslint-disable-next-line no-case-declarations\n        const lenBuf = [];\n        val = Buffer.from(val, 'base64');\n        putUvarint(lenBuf, val.length);\n        val = Buffer.concat([Buffer.from(lenBuf), val]);\n        res = replace(res, val, offsets[i], 33);\n        break;\n      default:\n        throw new Error('unrecognized value type');\n    }\n\n    if (decodedLength !== 0) {\n      for (let o = 0; o < offsets.length; o++) {\n        // eslint-disable-next-line no-param-reassign\n        offsets[o] += decodedLength - 1;\n      }\n    }\n  }\n\n  return res;\n}\n\nmodule.exports = { inject, valTypes };\n","import * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport { verifyMultisig } from './multisig';\nimport * as utils from './utils/utils';\nimport * as txnBuilder from './transaction';\nimport { isValidAddress } from './encoding/address';\nimport {\n  EncodedLogicSig,\n  EncodedLogicSigAccount,\n  EncodedMultisig,\n  EncodedSignedTransaction,\n} from './types/transactions/encoded';\nimport { MultisigMetadata } from './types/multisig';\n\ninterface LogicSigStorageStructure {\n  logic: Uint8Array;\n  args: Uint8Array[];\n  sig?: Uint8Array;\n  msig?: EncodedMultisig;\n}\n\n/** sanityCheckProgram performs heuristic program validation:\n * check if passed in bytes are Algorand address or is B64 encoded, rather than Teal bytes\n *\n * @param program - Program bytes to check\n */\nexport function sanityCheckProgram(program: Uint8Array) {\n  if (!program || program.length === 0) throw new Error('empty program');\n\n  const lineBreakOrd = '\\n'.charCodeAt(0);\n  const blankSpaceOrd = ' '.charCodeAt(0);\n  const tildeOrd = '~'.charCodeAt(0);\n\n  const isPrintable = (x: number) => blankSpaceOrd <= x && x <= tildeOrd;\n  const isAsciiPrintable = program.every(\n    (x: number) => x === lineBreakOrd || isPrintable(x)\n  );\n\n  if (isAsciiPrintable) {\n    const programStr = Buffer.from(program).toString();\n\n    if (isValidAddress(programStr))\n      throw new Error('requesting program bytes, get Algorand address');\n\n    if (Buffer.from(programStr, 'base64').toString('base64') === programStr)\n      throw new Error('program should not be b64 encoded');\n\n    throw new Error(\n      'program bytes are all ASCII printable characters, not looking like Teal byte code'\n    );\n  }\n}\n\n/**\n LogicSig implementation\n */\nexport class LogicSig implements LogicSigStorageStructure {\n  tag = Buffer.from('Program');\n\n  logic: Uint8Array;\n  args: Uint8Array[];\n  sig?: Uint8Array;\n  msig?: EncodedMultisig;\n\n  constructor(\n    program: Uint8Array,\n    programArgs?: Array<Uint8Array | Buffer> | null\n  ) {\n    if (\n      programArgs &&\n      (!Array.isArray(programArgs) ||\n        !programArgs.every(\n          (arg) => arg.constructor === Uint8Array || Buffer.isBuffer(arg)\n        ))\n    ) {\n      throw new TypeError('Invalid arguments');\n    }\n\n    let args: Uint8Array[] | undefined;\n    if (programArgs != null)\n      args = programArgs.map((arg) => new Uint8Array(arg));\n\n    sanityCheckProgram(program);\n\n    this.logic = program;\n    this.args = args;\n    this.sig = undefined;\n    this.msig = undefined;\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    const obj: EncodedLogicSig = {\n      l: this.logic,\n    };\n    if (this.args) {\n      obj.arg = this.args;\n    }\n    if (this.sig) {\n      obj.sig = this.sig;\n    } else if (this.msig) {\n      obj.msig = this.msig;\n    }\n    return obj;\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(encoded: EncodedLogicSig) {\n    const lsig = new LogicSig(encoded.l, encoded.arg);\n    lsig.sig = encoded.sig;\n    lsig.msig = encoded.msig;\n    return lsig;\n  }\n\n  /**\n   * Performs signature verification\n   * @param publicKey - Verification key (derived from sender address or escrow address)\n   */\n  verify(publicKey: Uint8Array) {\n    if (this.sig && this.msig) {\n      return false;\n    }\n\n    try {\n      sanityCheckProgram(this.logic);\n    } catch (e) {\n      return false;\n    }\n\n    const toBeSigned = utils.concatArrays(this.tag, this.logic);\n\n    if (!this.sig && !this.msig) {\n      const hash = nacl.genericHash(toBeSigned);\n      return utils.arrayEqual(hash, publicKey);\n    }\n\n    if (this.sig) {\n      return nacl.verify(toBeSigned, this.sig, publicKey);\n    }\n\n    return verifyMultisig(toBeSigned, this.msig, publicKey);\n  }\n\n  /**\n   * Compute hash of the logic sig program (that is the same as escrow account address) as string address\n   * @returns String representation of the address\n   */\n  address() {\n    const toBeSigned = utils.concatArrays(this.tag, this.logic);\n    const hash = nacl.genericHash(toBeSigned);\n    return address.encodeAddress(new Uint8Array(hash));\n  }\n\n  /**\n   * Creates signature (if no msig provided) or multi signature otherwise\n   * @param secretKey - Secret key to sign with\n   * @param msig - Multisig account as \\{version, threshold, addrs\\}\n   */\n  sign(secretKey: Uint8Array, msig?: MultisigMetadata) {\n    if (msig == null) {\n      this.sig = this.signProgram(secretKey);\n    } else {\n      const subsigs = msig.addrs.map((addr) => ({\n        pk: address.decodeAddress(addr).publicKey,\n      }));\n\n      this.msig = {\n        v: msig.version,\n        thr: msig.threshold,\n        subsig: subsigs,\n      };\n\n      const [sig, index] = this.singleSignMultisig(secretKey, this.msig);\n      this.msig.subsig[index].s = sig;\n    }\n  }\n\n  /**\n   * Appends a signature to multi signature\n   * @param secretKey - Secret key to sign with\n   */\n  appendToMultisig(secretKey: Uint8Array) {\n    if (this.msig === undefined) {\n      throw new Error('no multisig present');\n    }\n    const [sig, index] = this.singleSignMultisig(secretKey, this.msig);\n    this.msig.subsig[index].s = sig;\n  }\n\n  signProgram(secretKey: Uint8Array) {\n    const toBeSigned = utils.concatArrays(this.tag, this.logic);\n    const sig = nacl.sign(toBeSigned, secretKey);\n    return sig;\n  }\n\n  singleSignMultisig(\n    secretKey: Uint8Array,\n    msig: EncodedMultisig\n  ): [sig: Uint8Array, index: number] {\n    let index = -1;\n    const myPk = nacl.keyPairFromSecretKey(secretKey).publicKey;\n    for (let i = 0; i < msig.subsig.length; i++) {\n      const { pk } = msig.subsig[i];\n      if (utils.arrayEqual(pk, myPk)) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('invalid secret key');\n    }\n    const sig = this.signProgram(secretKey);\n    return [sig, index];\n  }\n\n  toByte() {\n    return encoding.encode(this.get_obj_for_encoding());\n  }\n\n  static fromByte(encoded: ArrayLike<any>) {\n    const decodedObj = encoding.decode(encoded) as EncodedLogicSig;\n    return LogicSig.from_obj_for_encoding(decodedObj);\n  }\n}\n\n/**\n * Represents an account that can sign with a LogicSig program.\n */\nexport class LogicSigAccount {\n  lsig: LogicSig;\n  sigkey?: Uint8Array;\n\n  /**\n   * Create a new LogicSigAccount. By default this will create an escrow\n   * LogicSig account. Call `sign` or `signMultisig` on the newly created\n   * LogicSigAccount to make it a delegated account.\n   *\n   * @param program - The compiled TEAL program which contains the logic for\n   *   this LogicSig.\n   * @param args - An optional array of arguments for the program.\n   */\n  constructor(program: Uint8Array, args?: Array<Uint8Array | Buffer> | null) {\n    this.lsig = new LogicSig(program, args);\n    this.sigkey = undefined;\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    const obj: EncodedLogicSigAccount = {\n      lsig: this.lsig.get_obj_for_encoding(),\n    };\n    if (this.sigkey) {\n      obj.sigkey = this.sigkey;\n    }\n    return obj;\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(encoded: EncodedLogicSigAccount) {\n    const lsigAccount = new LogicSigAccount(encoded.lsig.l, encoded.lsig.arg);\n    lsigAccount.lsig = LogicSig.from_obj_for_encoding(encoded.lsig);\n    lsigAccount.sigkey = encoded.sigkey;\n    return lsigAccount;\n  }\n\n  /**\n   * Encode this object into msgpack.\n   */\n  toByte() {\n    return encoding.encode(this.get_obj_for_encoding());\n  }\n\n  /**\n   * Decode a msgpack object into a LogicSigAccount.\n   * @param encoded - The encoded LogicSigAccount.\n   */\n  static fromByte(encoded: ArrayLike<any>) {\n    const decodedObj = encoding.decode(encoded) as EncodedLogicSigAccount;\n    return LogicSigAccount.from_obj_for_encoding(decodedObj);\n  }\n\n  /**\n   * Check if this LogicSigAccount has been delegated to another account with a\n   * signature.\n   *\n   * Note this function only checks for the presence of a delegation signature.\n   * To verify the delegation signature, use `verify`.\n   */\n  isDelegated() {\n    return !!(this.lsig.sig || this.lsig.msig);\n  }\n\n  /**\n   * Verifies this LogicSig's program and signatures.\n   * @returns true if and only if the LogicSig program and signatures are valid.\n   */\n  verify() {\n    const addr = this.address();\n    return this.lsig.verify(address.decodeAddress(addr).publicKey);\n  }\n\n  /**\n   * Get the address of this LogicSigAccount.\n   *\n   * If the LogicSig is delegated to another account, this will return the\n   * address of that account.\n   *\n   * If the LogicSig is not delegated to another account, this will return an\n   *  escrow address that is the hash of the LogicSig's program code.\n   */\n  address() {\n    if (this.lsig.sig && this.lsig.msig) {\n      throw new Error(\n        'LogicSig has too many signatures. At most one of sig or msig may be present'\n      );\n    }\n\n    if (this.lsig.sig) {\n      if (!this.sigkey) {\n        throw new Error('Signing key for delegated account is missing');\n      }\n      return address.encodeAddress(this.sigkey);\n    }\n\n    if (this.lsig.msig) {\n      const msigMetadata = {\n        version: this.lsig.msig.v,\n        threshold: this.lsig.msig.thr,\n        pks: this.lsig.msig.subsig.map((subsig) => subsig.pk),\n      };\n      return address.encodeAddress(address.fromMultisigPreImg(msigMetadata));\n    }\n\n    return this.lsig.address();\n  }\n\n  /**\n   * Turns this LogicSigAccount into a delegated LogicSig. This type of LogicSig\n   * has the authority to sign transactions on behalf of another account, called\n   * the delegating account. Use this function if the delegating account is a\n   * multisig account.\n   *\n   * @param msig - The multisig delegating account\n   * @param secretKey - The secret key of one of the members of the delegating\n   *   multisig account. Use `appendToMultisig` to add additional signatures\n   *   from other members.\n   */\n  signMultisig(msig: MultisigMetadata, secretKey: Uint8Array) {\n    this.lsig.sign(secretKey, msig);\n  }\n\n  /**\n   * Adds an additional signature from a member of the delegating multisig\n   * account.\n   *\n   * @param secretKey - The secret key of one of the members of the delegating\n   *   multisig account.\n   */\n  appendToMultisig(secretKey: Uint8Array) {\n    this.lsig.appendToMultisig(secretKey);\n  }\n\n  /**\n   * Turns this LogicSigAccount into a delegated LogicSig. This type of LogicSig\n   * has the authority to sign transactions on behalf of another account, called\n   * the delegating account. If the delegating account is a multisig account,\n   * use `signMultisig` instead.\n   *\n   * @param secretKey - The secret key of the delegating account.\n   */\n  sign(secretKey: Uint8Array) {\n    this.lsig.sign(secretKey);\n    this.sigkey = nacl.keyPairFromSecretKey(secretKey).publicKey;\n  }\n}\n\n/**\n * makeLogicSig creates LogicSig object from program and arguments\n *\n * @deprecated Use new LogicSigAccount(...) instead\n *\n * @param program - Program to make LogicSig from\n * @param args - Arguments as array of Uint8Array\n * @returns LogicSig object\n */\nexport function makeLogicSig(program: Uint8Array, args?: Uint8Array[]) {\n  return new LogicSig(program, args);\n}\n\nfunction signLogicSigTransactionWithAddress(\n  txn: txnBuilder.Transaction,\n  lsig: LogicSig,\n  lsigAddress: Uint8Array\n) {\n  if (!lsig.verify(lsigAddress)) {\n    throw new Error(\n      'Logic signature verification failed. Ensure the program and signature are valid.'\n    );\n  }\n\n  const signedTxn: EncodedSignedTransaction = {\n    lsig: lsig.get_obj_for_encoding(),\n    txn: txn.get_obj_for_encoding(),\n  };\n\n  if (!nacl.bytesEqual(lsigAddress, txn.from.publicKey)) {\n    signedTxn.sgnr = Buffer.from(lsigAddress);\n  }\n\n  return {\n    txID: txn.txID().toString(),\n    blob: encoding.encode(signedTxn),\n  };\n}\n\n/**\n * signLogicSigTransactionObject takes a transaction and a LogicSig object and\n * returns a signed transaction.\n *\n * @param txn - The transaction to sign.\n * @param lsigObject - The LogicSig object that will sign the transaction.\n *\n * @returns Object containing txID and blob representing signed transaction.\n */\nexport function signLogicSigTransactionObject(\n  txn: txnBuilder.Transaction,\n  lsigObject: LogicSig | LogicSigAccount\n) {\n  let lsig: LogicSig;\n  let lsigAddress: Uint8Array;\n\n  if (lsigObject instanceof LogicSigAccount) {\n    lsig = lsigObject.lsig;\n    lsigAddress = address.decodeAddress(lsigObject.address()).publicKey;\n  } else {\n    lsig = lsigObject;\n\n    if (lsig.sig) {\n      // For a LogicSig with a non-multisig delegating account, we cannot derive\n      // the address of that account from only its signature, so assume the\n      // delegating account is the sender. If that's not the case, the signing\n      // will fail.\n      lsigAddress = txn.from.publicKey;\n    } else if (lsig.msig) {\n      const msigMetadata = {\n        version: lsig.msig.v,\n        threshold: lsig.msig.thr,\n        pks: lsig.msig.subsig.map((subsig) => subsig.pk),\n      };\n      lsigAddress = address.fromMultisigPreImg(msigMetadata);\n    } else {\n      lsigAddress = address.decodeAddress(lsig.address()).publicKey;\n    }\n  }\n\n  return signLogicSigTransactionWithAddress(txn, lsig, lsigAddress);\n}\n\n/**\n * signLogicSigTransaction takes a transaction and a LogicSig object and returns\n * a signed transaction.\n *\n * @param txn - The transaction to sign.\n * @param lsigObject - The LogicSig object that will sign the transaction.\n *\n * @returns Object containing txID and blob representing signed transaction.\n * @throws error on failure\n */\nexport function signLogicSigTransaction(\n  txn: txnBuilder.TransactionLike,\n  lsigObject: LogicSig | LogicSigAccount\n) {\n  const algoTxn = txnBuilder.instantiateTxnIfNeeded(txn);\n  return signLogicSigTransactionObject(algoTxn, lsigObject);\n}\n\n/**\n * logicSigFromByte accepts encoded logic sig bytes and attempts to call logicsig.fromByte on it,\n * returning the result\n */\nexport function logicSigFromByte(encoded: Uint8Array) {\n  return LogicSig.fromByte(encoded);\n}\n\nconst SIGN_PROGRAM_DATA_PREFIX = Buffer.from('ProgData');\n\n/**\n * tealSign creates a signature compatible with ed25519verify opcode from program hash\n * @param sk - uint8array with secret key\n * @param data - buffer with data to sign\n * @param programHash - string representation of teal program hash (= contract address for LogicSigs)\n */\nexport function tealSign(\n  sk: Uint8Array,\n  data: Uint8Array | Buffer,\n  programHash: string\n) {\n  const parts = utils.concatArrays(\n    address.decodeAddress(programHash).publicKey,\n    data\n  );\n  const toBeSigned = Buffer.from(\n    utils.concatArrays(SIGN_PROGRAM_DATA_PREFIX, parts)\n  );\n  return nacl.sign(toBeSigned, sk);\n}\n\n/**\n * tealSignFromProgram creates a signature compatible with ed25519verify opcode from raw program bytes\n * @param sk - uint8array with secret key\n * @param data - buffer with data to sign\n * @param program - buffer with teal program\n */\nexport function tealSignFromProgram(\n  sk: Uint8Array,\n  data: Uint8Array | Buffer,\n  program: Uint8Array\n) {\n  const lsig = new LogicSig(program);\n  const contractAddress = lsig.address();\n  return tealSign(sk, data, contractAddress);\n}\n","import * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport * as txnBuilder from './transaction';\nimport * as LogicTemplatesCommonJSExport from './logicTemplates';\nimport Bid, { BidOptions } from './bid';\nimport * as convert from './convert';\nimport * as utils from './utils/utils';\n\nconst SIGN_BYTES_PREFIX = Buffer.from([77, 88]); // \"MX\"\n\n// Errors\nexport const MULTISIG_BAD_SENDER_ERROR_MSG =\n  'The transaction sender address and multisig preimage do not match.';\n\n/**\n * signTransaction takes an object with either payment or key registration fields and\n * a secret key and returns a signed blob.\n *\n * Payment transaction fields: from, to, amount, fee, firstRound, lastRound, genesisHash,\n * note(optional), GenesisID(optional), closeRemainderTo(optional)\n *\n * Key registration fields: fee, firstRound, lastRound, voteKey, selectionKey, voteFirst,\n * voteLast, voteKeyDilution, genesisHash, note(optional), GenesisID(optional)\n *\n * If flatFee is not set and the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n * @param txn - object with either payment or key registration fields\n * @param sk - Algorand Secret Key\n * @returns object contains the binary signed transaction and its txID\n */\nexport function signTransaction(\n  txn: txnBuilder.TransactionLike,\n  sk: Uint8Array\n) {\n  if (typeof txn.from === 'undefined') {\n    // Get pk from sk if no sender specified\n    const key = nacl.keyPairFromSecretKey(sk);\n    // eslint-disable-next-line no-param-reassign\n    txn.from = address.encodeAddress(key.publicKey);\n  }\n  const algoTxn = txnBuilder.instantiateTxnIfNeeded(txn);\n\n  return {\n    txID: algoTxn.txID().toString(),\n    blob: algoTxn.signTxn(sk),\n  };\n}\n\n/**\n * signBid takes an object with the following fields: bidder key, bid amount, max price, bid ID, auctionKey, auction ID,\n * and a secret key and returns a signed blob to be inserted into a transaction Algorand note field.\n * @param bid - Algorand Bid\n * @param sk - Algorand secret key\n * @returns Uint8Array binary signed bid\n */\nexport function signBid(bid: BidOptions, sk: Uint8Array) {\n  const signedBid = new Bid(bid);\n  return signedBid.signBid(sk);\n}\n\n/**\n * signBytes takes arbitrary bytes and a secret key, prepends the bytes with \"MX\" for domain separation, signs the bytes\n * with the private key, and returns the signature.\n * @param bytes - Uint8array\n * @param sk - Algorand secret key\n * @returns binary signature\n */\nexport function signBytes(bytes: Uint8Array, sk: Uint8Array) {\n  const toBeSigned = Buffer.from(utils.concatArrays(SIGN_BYTES_PREFIX, bytes));\n  const sig = nacl.sign(toBeSigned, sk);\n  return sig;\n}\n\n/**\n * verifyBytes takes array of bytes, an address, and a signature and verifies if the signature is correct for the public\n * key and the bytes (the bytes should have been signed with \"MX\" prepended for domain separation).\n * @param bytes - Uint8Array\n * @param signature - binary signature\n * @param addr - string address\n * @returns bool\n */\nexport function verifyBytes(\n  bytes: Uint8Array,\n  signature: Uint8Array,\n  addr: string\n) {\n  const toBeVerified = Buffer.from(\n    utils.concatArrays(SIGN_BYTES_PREFIX, bytes)\n  );\n  const pk = address.decodeAddress(addr).publicKey;\n  return nacl.verify(toBeVerified, signature, pk);\n}\n\n/**\n * encodeObj takes a javascript object and returns its msgpack encoding\n * Note that the encoding sorts the fields alphabetically\n * @param o - js obj\n * @returns Uint8Array binary representation\n */\nexport function encodeObj(o: Record<string | number | symbol, any>) {\n  return new Uint8Array(encoding.encode(o));\n}\n\n/**\n * decodeObj takes a Uint8Array and returns its javascript obj\n * @param o - Uint8Array to decode\n * @returns object\n */\nexport function decodeObj(o: ArrayLike<number>) {\n  return encoding.decode(o);\n}\n\nexport const ERROR_MULTISIG_BAD_SENDER = new Error(\n  MULTISIG_BAD_SENDER_ERROR_MSG\n);\nexport const ERROR_INVALID_MICROALGOS = new Error(\n  convert.INVALID_MICROALGOS_ERROR_MSG\n);\n\nexport * from './client/algod';\nexport { default as Algodv2 } from './client/v2/algod/algod';\nexport { default as Kmd } from './client/kmd';\nexport { default as IntDecoding } from './types/intDecoding';\nexport { default as Account } from './types/account';\nexport { default as Indexer } from './client/v2/indexer/indexer';\nexport {\n  BaseHTTPClient,\n  BaseHTTPClientResponse,\n  BaseHTTPClientError,\n} from './client/baseHTTPClient';\nexport { waitForConfirmation } from './wait';\nexport {\n  isValidAddress,\n  encodeAddress,\n  decodeAddress,\n  getApplicationAddress,\n} from './encoding/address';\nexport { bytesToBigInt, bigIntToBytes } from './encoding/bigint';\nexport { encodeUint64, decodeUint64 } from './encoding/uint64';\nexport { default as generateAccount } from './account';\nexport * as modelsv2 from './client/v2/algod/models/types';\nexport * as indexerModels from './client/v2/indexer/models/types';\nexport {\n  mnemonicToMasterDerivationKey,\n  masterDerivationKeyToMnemonic,\n  secretKeyToMnemonic,\n  mnemonicToSecretKey,\n  seedFromMnemonic,\n  mnemonicFromSeed,\n} from './mnemonic/mnemonic';\nexport {\n  microalgosToAlgos,\n  algosToMicroalgos,\n  INVALID_MICROALGOS_ERROR_MSG,\n} from './convert';\nexport { computeGroupID, assignGroupID } from './group';\nexport {\n  LogicSigAccount,\n  makeLogicSig,\n  signLogicSigTransaction,\n  signLogicSigTransactionObject,\n  logicSigFromByte,\n  tealSign,\n  tealSignFromProgram,\n} from './logicsig';\nexport {\n  signMultisigTransaction,\n  mergeMultisigTransactions,\n  appendSignMultisigTransaction,\n  createMultisigTransaction,\n  appendSignRawMultisigSignature,\n  verifyMultisig,\n  multisigAddress,\n} from './multisig';\nexport { SourceMap } from './logic/sourcemap';\n\nexport const LogicTemplates = LogicTemplatesCommonJSExport.default;\n\nexport * from './dryrun';\nexport * from './makeTxn';\nexport * from './transaction';\nexport * from './signer';\nexport * from './composer';\nexport * from './types';\nexport * from './abi';\n","import * as txnBuilder from './transaction';\nimport { OnApplicationComplete } from './types/transactions/base';\nimport {\n  // Transaction types\n  PaymentTxn,\n  KeyRegistrationTxn,\n\n  // Utilities\n  TransactionType,\n  SuggestedParams,\n  MustHaveSuggestedParams,\n  MustHaveSuggestedParamsInline,\n  AssetCreateTxn,\n  AssetConfigTxn,\n  AssetDestroyTxn,\n  AssetFreezeTxn,\n  AssetTransferTxn,\n  AppCreateTxn,\n  AppUpdateTxn,\n  AppDeleteTxn,\n  AppOptInTxn,\n  AppCloseOutTxn,\n  AppClearStateTxn,\n  AppNoOpTxn,\n} from './types/transactions';\nimport { RenameProperties, RenameProperty, Expand } from './types/utils';\n\n/**\n * makePaymentTxnWithSuggestedParams takes payment arguments and returns a Transaction object\n * @param from - string representation of Algorand address of sender\n * @param to - string representation of Algorand address of recipient\n * @param amount - integer amount to send, in microAlgos\n * @param closeRemainderTo - optionally close out remaining account balance to this account, represented as string rep of Algorand address\n * @param note - uint8array of arbitrary data for sender to store\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makePaymentTxnWithSuggestedParams(\n  from: PaymentTxn['from'],\n  to: PaymentTxn['to'],\n  amount: PaymentTxn['amount'],\n  closeRemainderTo: PaymentTxn['closeRemainderTo'],\n  note: PaymentTxn['note'],\n  suggestedParams: MustHaveSuggestedParams<PaymentTxn>['suggestedParams'],\n  rekeyTo?: PaymentTxn['reKeyTo']\n) {\n  const o: PaymentTxn = {\n    from,\n    to,\n    amount,\n    closeRemainderTo,\n    note,\n    suggestedParams,\n    type: TransactionType.pay,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n/**\n * makePaymentTxn takes payment arguments and returns a Transaction object\n * @param from - string representation of Algorand address of sender\n * @param to - string representation of Algorand address of recipient\n * @param fee - integer fee per byte, in microAlgos. for a flat fee, overwrite the fee property on the returned object\n * If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n * @param amount - integer amount to send, in microAlgos\n * @param closeRemainderTo - optionally close out remaining account balance to this account, represented as string rep of Algorand address\n * @param firstRound - integer first protocol round on which this txn is valid\n * @param lastRound - integer last protocol round on which this txn is valid\n * @param note - uint8array of arbitrary data for sender to store\n * @param genesisHash - string specifies hash genesis block of network in use\n * @param genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n * @Deprecated in version 2.0 this will change to use the \"WithSuggestedParams\" signature.\n */\nexport function makePaymentTxn(\n  from: PaymentTxn['from'],\n  to: PaymentTxn['to'],\n  fee: MustHaveSuggestedParamsInline<PaymentTxn>['fee'],\n  amount: PaymentTxn['amount'],\n  closeRemainderTo: PaymentTxn['closeRemainderTo'],\n  firstRound: MustHaveSuggestedParamsInline<PaymentTxn>['firstRound'],\n  lastRound: MustHaveSuggestedParamsInline<PaymentTxn>['lastRound'],\n  note: PaymentTxn['note'],\n  genesisHash: MustHaveSuggestedParamsInline<PaymentTxn>['genesisHash'],\n  genesisID: MustHaveSuggestedParamsInline<PaymentTxn>['genesisID'],\n  rekeyTo?: PaymentTxn['reKeyTo']\n) {\n  const suggestedParams: SuggestedParams = {\n    genesisHash,\n    genesisID,\n    firstRound,\n    lastRound,\n    fee,\n  };\n  return makePaymentTxnWithSuggestedParams(\n    from,\n    to,\n    amount,\n    closeRemainderTo,\n    note,\n    suggestedParams,\n    rekeyTo\n  );\n}\n\n// helper for above makePaymentTxnWithSuggestedParams, instead accepting an arguments object\nexport function makePaymentTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperty<MustHaveSuggestedParams<PaymentTxn>, 'reKeyTo', 'rekeyTo'>,\n      | 'from'\n      | 'to'\n      | 'amount'\n      | 'closeRemainderTo'\n      | 'note'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makePaymentTxnWithSuggestedParams(\n    o.from,\n    o.to,\n    o.amount,\n    o.closeRemainderTo,\n    o.note,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/**\n * makeKeyRegistrationTxnWithSuggestedParams takes key registration arguments and returns a Transaction object for\n * that key registration operation\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param voteKey - voting key. for key deregistration, leave undefined\n * @param selectionKey - selection key. for key deregistration, leave undefined\n * @param voteFirst - first round on which voteKey is valid\n * @param voteLast - last round on which voteKey is valid\n * @param voteKeyDilution - integer\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n * @param nonParticipation - configure whether the address wants to stop participating. If true,\n *   voteKey, selectionKey, voteFirst, voteLast, and voteKeyDilution must be undefined.\n * @param stateProofKey - state proof key. for key deregistration, leave undefined\n */\nexport function makeKeyRegistrationTxnWithSuggestedParams(\n  from: KeyRegistrationTxn['from'],\n  note: KeyRegistrationTxn['note'],\n  voteKey: KeyRegistrationTxn['voteKey'],\n  selectionKey: KeyRegistrationTxn['selectionKey'],\n  voteFirst: KeyRegistrationTxn['voteFirst'],\n  voteLast: KeyRegistrationTxn['voteLast'],\n  voteKeyDilution: KeyRegistrationTxn['voteKeyDilution'],\n  suggestedParams: MustHaveSuggestedParams<KeyRegistrationTxn>['suggestedParams'],\n  rekeyTo?: KeyRegistrationTxn['reKeyTo'],\n  nonParticipation?: false,\n  stateProofKey?: KeyRegistrationTxn['stateProofKey']\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxnWithSuggestedParams(\n  from: KeyRegistrationTxn['from'],\n  note: KeyRegistrationTxn['note'],\n  voteKey: undefined,\n  selectionKey: undefined,\n  voteFirst: undefined,\n  voteLast: undefined,\n  voteKeyDilution: undefined,\n  suggestedParams: MustHaveSuggestedParams<KeyRegistrationTxn>['suggestedParams'],\n  rekeyTo?: KeyRegistrationTxn['reKeyTo'],\n  nonParticipation?: true,\n  stateProofKey?: undefined\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxnWithSuggestedParams(\n  from: any,\n  note: any,\n  voteKey: any,\n  selectionKey: any,\n  voteFirst: any,\n  voteLast: any,\n  voteKeyDilution: any,\n  suggestedParams: any,\n  rekeyTo?: any,\n  nonParticipation = false,\n  stateProofKey: any = undefined\n) {\n  const o: KeyRegistrationTxn = {\n    from,\n    note,\n    voteKey,\n    selectionKey,\n    voteFirst,\n    voteLast,\n    voteKeyDilution,\n    suggestedParams,\n    type: TransactionType.keyreg,\n    reKeyTo: rekeyTo,\n    nonParticipation,\n    stateProofKey,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n/**\n * makeKeyRegistrationTxn takes key registration arguments and returns a Transaction object for\n * that key registration operation\n *\n * @param from - string representation of Algorand address of sender\n * @param fee - integer fee per byte, in microAlgos. for a flat fee, overwrite the fee property on the returned object\n *  If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n * @param firstRound - integer first protocol round on which this txn is valid\n * @param lastRound - integer last protocol round on which this txn is valid\n * @param note - uint8array of arbitrary data for sender to store\n * @param genesisHash - string specifies hash genesis block of network in use\n * @param genesisID - string specifies genesis ID of network in use\n * @param voteKey - voting key. for key deregistration, leave undefined\n * @param selectionKey - selection key. for key deregistration, leave undefined\n * @param voteFirst - first round on which voteKey is valid\n * @param voteLast - last round on which voteKey is valid\n * @param voteKeyDilution - integer\n * @param rekeyTo - rekeyTo address, optional\n * @param nonParticipation - configure whether the address wants to stop participating. If true,\n *   voteKey, selectionKey, voteFirst, voteLast, and voteKeyDilution must be undefined.\n * @param stateProofKey - state proof key. for key deregistration, leave undefined\n * @Deprecated in version 2.0 this will change to use the \"WithSuggestedParams\" signature.\n */\nexport function makeKeyRegistrationTxn(\n  from: KeyRegistrationTxn['from'],\n  fee: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['fee'],\n  firstRound: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['firstRound'],\n  lastRound: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['lastRound'],\n  note: KeyRegistrationTxn['note'],\n  genesisHash: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['genesisHash'],\n  genesisID: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['genesisID'],\n  voteKey: KeyRegistrationTxn['voteKey'],\n  selectionKey: KeyRegistrationTxn['selectionKey'],\n  voteFirst: KeyRegistrationTxn['voteFirst'],\n  voteLast: KeyRegistrationTxn['voteLast'],\n  voteKeyDilution: KeyRegistrationTxn['voteKeyDilution'],\n  rekeyTo?: KeyRegistrationTxn['reKeyTo'],\n  nonParticipation?: false,\n  stateProofKey?: KeyRegistrationTxn['stateProofKey']\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxn(\n  from: KeyRegistrationTxn['from'],\n  fee: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['fee'],\n  firstRound: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['firstRound'],\n  lastRound: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['lastRound'],\n  note: KeyRegistrationTxn['note'],\n  genesisHash: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['genesisHash'],\n  genesisID: MustHaveSuggestedParamsInline<KeyRegistrationTxn>['genesisID'],\n  voteKey: undefined,\n  selectionKey: undefined,\n  voteFirst: undefined,\n  voteLast: undefined,\n  voteKeyDilution: undefined,\n  rekeyTo?: KeyRegistrationTxn['reKeyTo'],\n  nonParticipation?: true,\n  stateProofKey?: undefined\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxn(\n  from: any,\n  fee: any,\n  firstRound: any,\n  lastRound: any,\n  note: any,\n  genesisHash: any,\n  genesisID: any,\n  voteKey: any,\n  selectionKey: any,\n  voteFirst: any,\n  voteLast: any,\n  voteKeyDilution: any,\n  rekeyTo?: any,\n  nonParticipation: any = false,\n  stateProofKey: any = undefined\n) {\n  const suggestedParams: SuggestedParams = {\n    genesisHash,\n    genesisID,\n    firstRound,\n    lastRound,\n    fee,\n  };\n  return makeKeyRegistrationTxnWithSuggestedParams(\n    from,\n    note,\n    voteKey,\n    selectionKey,\n    voteFirst,\n    voteLast,\n    voteKeyDilution,\n    suggestedParams,\n    rekeyTo,\n    nonParticipation,\n    stateProofKey\n  );\n}\n\n// helper for above makeKeyRegistrationTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeKeyRegistrationTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperty<\n        MustHaveSuggestedParams<KeyRegistrationTxn>,\n        'reKeyTo',\n        'rekeyTo'\n      >,\n      | 'from'\n      | 'note'\n      | 'voteKey'\n      | 'selectionKey'\n      | 'stateProofKey'\n      | 'voteFirst'\n      | 'voteLast'\n      | 'voteKeyDilution'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    > & {\n      nonParticipation?: false;\n    }\n  >\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperty<\n        MustHaveSuggestedParams<KeyRegistrationTxn>,\n        'reKeyTo',\n        'rekeyTo'\n      >,\n      'from' | 'note' | 'suggestedParams' | 'rekeyTo'\n    > & {\n      nonParticipation: true;\n    }\n  >\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxnWithSuggestedParamsFromObject(o: any) {\n  return makeKeyRegistrationTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.voteKey,\n    o.selectionKey,\n    o.voteFirst,\n    o.voteLast,\n    o.voteKeyDilution,\n    o.suggestedParams,\n    o.rekeyTo,\n    o.nonParticipation,\n    o.stateProofKey\n  );\n}\n\n/** makeAssetCreateTxnWithSuggestedParams takes asset creation arguments and returns a Transaction object\n * for creating that asset\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param total - integer total supply of the asset\n * @param decimals - integer number of decimals for asset unit calculation\n * @param defaultFrozen - boolean whether asset accounts should default to being frozen\n * @param manager - string representation of Algorand address in charge of reserve, freeze, clawback, destruction, etc\n * @param reserve - string representation of Algorand address representing asset reserve\n * @param freeze - string representation of Algorand address with power to freeze/unfreeze asset holdings\n * @param clawback - string representation of Algorand address with power to revoke asset holdings\n * @param unitName - string units name for this asset\n * @param assetName - string name for this asset\n * @param assetURL - string URL relating to this asset\n * @param assetMetadataHash - Uint8Array or UTF-8 string representation of a hash commitment with respect to the asset. Must be exactly 32 bytes long.\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetCreateTxnWithSuggestedParams(\n  from: AssetCreateTxn['from'],\n  note: AssetCreateTxn['note'],\n  total: AssetCreateTxn['assetTotal'],\n  decimals: AssetCreateTxn['assetDecimals'],\n  defaultFrozen: AssetCreateTxn['assetDefaultFrozen'],\n  manager: AssetCreateTxn['assetManager'],\n  reserve: AssetCreateTxn['assetReserve'],\n  freeze: AssetCreateTxn['assetFreeze'],\n  clawback: AssetCreateTxn['assetClawback'],\n  unitName: AssetCreateTxn['assetUnitName'],\n  assetName: AssetCreateTxn['assetName'],\n  assetURL: AssetCreateTxn['assetURL'],\n  assetMetadataHash: AssetCreateTxn['assetMetadataHash'] | undefined,\n  suggestedParams: MustHaveSuggestedParams<AssetCreateTxn>['suggestedParams'],\n  rekeyTo?: AssetCreateTxn['reKeyTo']\n) {\n  const o: AssetCreateTxn = {\n    from,\n    note,\n    suggestedParams,\n    assetTotal: total,\n    assetDecimals: decimals,\n    assetDefaultFrozen: defaultFrozen,\n    assetUnitName: unitName,\n    assetName,\n    assetURL,\n    assetMetadataHash,\n    assetManager: manager,\n    assetReserve: reserve,\n    assetFreeze: freeze,\n    assetClawback: clawback,\n    type: TransactionType.acfg,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n/** makeAssetCreateTxn takes asset creation arguments and returns a Transaction object\n * for creating that asset\n *\n * @param from - string representation of Algorand address of sender\n * @param fee - integer fee per byte, in microAlgos. for a flat fee, overwrite the fee property on the returned object\n *  If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n * @param firstRound - integer first protocol round on which this txn is valid\n * @param lastRound - integer last protocol round on which this txn is valid\n * @param note - uint8array of arbitrary data for sender to store\n * @param genesisHash - string specifies hash genesis block of network in use\n * @param genesisID - string specifies genesis ID of network in use\n * @param total - integer total supply of the asset\n * @param decimals - integer number of decimals for asset unit calculation\n * @param defaultFrozen - boolean whether asset accounts should default to being frozen\n * @param manager - string representation of Algorand address in charge of reserve, freeze, clawback, destruction, etc\n * @param reserve - string representation of Algorand address representing asset reserve\n * @param freeze - string representation of Algorand address with power to freeze/unfreeze asset holdings\n * @param clawback - string representation of Algorand address with power to revoke asset holdings\n * @param unitName - string units name for this asset\n * @param assetName - string name for this asset\n * @param assetURL - string URL relating to this asset\n * @param assetMetadataHash - Uint8Array or UTF-8 string representation of a hash commitment with respect to the asset. Must be exactly 32 bytes long.\n * @param rekeyTo - rekeyTo address, optional\n * @Deprecated in version 2.0 this will change to use the \"WithSuggestedParams\" signature.\n */\nexport function makeAssetCreateTxn(\n  from: AssetCreateTxn['from'],\n  fee: MustHaveSuggestedParamsInline<AssetCreateTxn>['fee'],\n  firstRound: MustHaveSuggestedParamsInline<AssetCreateTxn>['firstRound'],\n  lastRound: MustHaveSuggestedParamsInline<AssetCreateTxn>['lastRound'],\n  note: AssetCreateTxn['note'],\n  genesisHash: MustHaveSuggestedParamsInline<AssetCreateTxn>['genesisHash'],\n  genesisID: MustHaveSuggestedParamsInline<AssetCreateTxn>['genesisID'],\n  total: AssetCreateTxn['assetTotal'],\n  decimals: AssetCreateTxn['assetDecimals'],\n  defaultFrozen: AssetCreateTxn['assetDefaultFrozen'],\n  manager: AssetCreateTxn['assetManager'],\n  reserve: AssetCreateTxn['assetManager'],\n  freeze: AssetCreateTxn['assetFreeze'],\n  clawback: AssetCreateTxn['assetClawback'],\n  unitName: AssetCreateTxn['assetUnitName'],\n  assetName: AssetCreateTxn['assetName'],\n  assetURL: AssetCreateTxn['assetURL'],\n  assetMetadataHash?: AssetCreateTxn['assetMetadataHash'],\n  rekeyTo?: AssetCreateTxn['reKeyTo']\n) {\n  const suggestedParams: SuggestedParams = {\n    genesisHash,\n    genesisID,\n    firstRound,\n    lastRound,\n    fee,\n  };\n  return makeAssetCreateTxnWithSuggestedParams(\n    from,\n    note,\n    total,\n    decimals,\n    defaultFrozen,\n    manager,\n    reserve,\n    freeze,\n    clawback,\n    unitName,\n    assetName,\n    assetURL,\n    assetMetadataHash,\n    suggestedParams,\n    rekeyTo\n  );\n}\n\n// helper for above makeAssetCreateTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetCreateTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AssetCreateTxn>,\n        {\n          reKeyTo: 'rekeyTo';\n          assetTotal: 'total';\n          assetDecimals: 'decimals';\n          assetDefaultFrozen: 'defaultFrozen';\n          assetManager: 'manager';\n          assetReserve: 'reserve';\n          assetFreeze: 'freeze';\n          assetClawback: 'clawback';\n          assetUnitName: 'unitName';\n        }\n      >,\n      | 'from'\n      | 'note'\n      | 'total'\n      | 'decimals'\n      | 'defaultFrozen'\n      | 'manager'\n      | 'reserve'\n      | 'freeze'\n      | 'clawback'\n      | 'unitName'\n      | 'assetName'\n      | 'assetURL'\n      | 'assetMetadataHash'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeAssetCreateTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.total,\n    o.decimals,\n    o.defaultFrozen,\n    o.manager,\n    o.reserve,\n    o.freeze,\n    o.clawback,\n    o.unitName,\n    o.assetName,\n    o.assetURL,\n    o.assetMetadataHash,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/** makeAssetConfigTxnWithSuggestedParams can be issued by the asset manager to change the manager, reserve, freeze, or clawback\n * you must respecify existing addresses to keep them the same; leaving a field blank is the same as turning\n * that feature off for this asset\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param manager - string representation of new asset manager Algorand address\n * @param reserve - string representation of new reserve Algorand address\n * @param freeze - string representation of new freeze manager Algorand address\n * @param clawback - string representation of new revocation manager Algorand address\n * @param strictEmptyAddressChecking - boolean - throw an error if any of manager, reserve, freeze, or clawback are undefined. optional, defaults to true.\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetConfigTxnWithSuggestedParams(\n  from: AssetConfigTxn['from'],\n  note: AssetConfigTxn['note'],\n  assetIndex: AssetConfigTxn['assetIndex'],\n  manager: AssetConfigTxn['assetManager'],\n  reserve: AssetConfigTxn['assetReserve'],\n  freeze: AssetConfigTxn['assetFreeze'],\n  clawback: AssetConfigTxn['assetClawback'],\n  suggestedParams: MustHaveSuggestedParams<AssetConfigTxn>['suggestedParams'],\n  strictEmptyAddressChecking = true,\n  rekeyTo?: AssetConfigTxn['reKeyTo']\n) {\n  if (\n    strictEmptyAddressChecking &&\n    (manager === undefined ||\n      reserve === undefined ||\n      freeze === undefined ||\n      clawback === undefined)\n  ) {\n    throw Error(\n      'strict empty address checking was turned on, but at least one empty address was provided'\n    );\n  }\n  const o: AssetConfigTxn = {\n    from,\n    suggestedParams,\n    assetIndex,\n    assetManager: manager,\n    assetReserve: reserve,\n    assetFreeze: freeze,\n    assetClawback: clawback,\n    type: TransactionType.acfg,\n    note,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n/** makeAssetConfigTxn can be issued by the asset manager to change the manager, reserve, freeze, or clawback\n * you must respecify existing addresses to keep them the same; leaving a field blank is the same as turning\n * that feature off for this asset\n *\n * @param from - string representation of Algorand address of sender\n * @param fee - integer fee per byte, in microAlgos. for a flat fee, overwrite the fee property on the returned object\n *  If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n * @param firstRound - integer first protocol round on which this txn is valid\n * @param lastRound - integer last protocol round on which this txn is valid\n * @param note - uint8array of arbitrary data for sender to store\n * @param genesisHash - string specifies hash genesis block of network in use\n * @param genesisID - string specifies genesis ID of network in use\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param manager - string representation of new asset manager Algorand address\n * @param reserve - string representation of new reserve Algorand address\n * @param freeze - string representation of new freeze manager Algorand address\n * @param clawback - string representation of new revocation manager Algorand address\n * @param strictEmptyAddressChecking - boolean - throw an error if any of manager, reserve, freeze, or clawback are undefined. optional, defaults to true.\n * @param rekeyTo - rekeyTo address, optional\n * @Deprecated in version 2.0 this will change to use the \"WithSuggestedParams\" signature.\n */\nexport function makeAssetConfigTxn(\n  from: AssetConfigTxn['from'],\n  fee: MustHaveSuggestedParamsInline<AssetConfigTxn>['fee'],\n  firstRound: MustHaveSuggestedParamsInline<AssetConfigTxn>['firstRound'],\n  lastRound: MustHaveSuggestedParamsInline<AssetConfigTxn>['lastRound'],\n  note: AssetConfigTxn['note'],\n  genesisHash: MustHaveSuggestedParamsInline<AssetConfigTxn>['genesisHash'],\n  genesisID: MustHaveSuggestedParamsInline<AssetConfigTxn>['genesisID'],\n  assetIndex: AssetConfigTxn['assetIndex'],\n  manager: AssetConfigTxn['assetManager'],\n  reserve: AssetConfigTxn['assetReserve'],\n  freeze: AssetConfigTxn['assetFreeze'],\n  clawback: AssetConfigTxn['assetClawback'],\n  strictEmptyAddressChecking = true,\n  rekeyTo?: AssetConfigTxn['reKeyTo']\n) {\n  const suggestedParams: SuggestedParams = {\n    genesisHash,\n    genesisID,\n    firstRound,\n    lastRound,\n    fee,\n  };\n  return makeAssetConfigTxnWithSuggestedParams(\n    from,\n    note,\n    assetIndex,\n    manager,\n    reserve,\n    freeze,\n    clawback,\n    suggestedParams,\n    strictEmptyAddressChecking,\n    rekeyTo\n  );\n}\n\n// helper for above makeAssetConfigTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetConfigTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AssetConfigTxn>,\n        {\n          reKeyTo: 'rekeyTo';\n          assetManager: 'manager';\n          assetReserve: 'reserve';\n          assetFreeze: 'freeze';\n          assetClawback: 'clawback';\n        }\n      >,\n      | 'from'\n      | 'note'\n      | 'assetIndex'\n      | 'manager'\n      | 'reserve'\n      | 'freeze'\n      | 'clawback'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    > & {\n      strictEmptyAddressChecking: boolean;\n    }\n  >\n) {\n  return makeAssetConfigTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.assetIndex,\n    o.manager,\n    o.reserve,\n    o.freeze,\n    o.clawback,\n    o.suggestedParams,\n    o.strictEmptyAddressChecking,\n    o.rekeyTo\n  );\n}\n\n/** makeAssetDestroyTxnWithSuggestedParams will allow the asset's manager to remove this asset from the ledger, so long\n * as all outstanding assets are held by the creator.\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetDestroyTxnWithSuggestedParams(\n  from: AssetDestroyTxn['from'],\n  note: AssetDestroyTxn['note'],\n  assetIndex: AssetDestroyTxn['assetIndex'],\n  suggestedParams: MustHaveSuggestedParams<AssetDestroyTxn>['suggestedParams'],\n  rekeyTo?: AssetDestroyTxn['reKeyTo']\n) {\n  const o: AssetDestroyTxn = {\n    from,\n    suggestedParams,\n    assetIndex,\n    type: TransactionType.acfg,\n    note,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n/** makeAssetDestroyTxn will allow the asset's manager to remove this asset from the ledger, so long\n * as all outstanding assets are held by the creator.\n *\n * @param from - string representation of Algorand address of sender\n * @param fee - integer fee per byte, in microAlgos. for a flat fee, overwrite the fee property on the returned object\n *  If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n * @param firstRound - integer first protocol round on which this txn is valid\n * @param lastRound - integer last protocol round on which this txn is valid\n * @param note - uint8array of arbitrary data for sender to store\n * @param genesisHash - string specifies hash genesis block of network in use\n * @param genesisID - string specifies genesis ID of network in use\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param rekeyTo - rekeyTo address, optional\n * @Deprecated in version 2.0 this will change to use the \"WithSuggestedParams\" signature.\n */\nexport function makeAssetDestroyTxn(\n  from: AssetDestroyTxn['from'],\n  fee: MustHaveSuggestedParamsInline<AssetDestroyTxn>['fee'],\n  firstRound: MustHaveSuggestedParamsInline<AssetDestroyTxn>['firstRound'],\n  lastRound: MustHaveSuggestedParamsInline<AssetDestroyTxn>['lastRound'],\n  note: AssetDestroyTxn['note'],\n  genesisHash: MustHaveSuggestedParamsInline<AssetDestroyTxn>['genesisHash'],\n  genesisID: MustHaveSuggestedParamsInline<AssetDestroyTxn>['genesisID'],\n  assetIndex: AssetDestroyTxn['assetIndex'],\n  rekeyTo?: AssetDestroyTxn['reKeyTo']\n) {\n  const suggestedParams: SuggestedParams = {\n    genesisHash,\n    genesisID,\n    firstRound,\n    lastRound,\n    fee,\n  };\n  return makeAssetDestroyTxnWithSuggestedParams(\n    from,\n    note,\n    assetIndex,\n    suggestedParams,\n    rekeyTo\n  );\n}\n\n// helper for above makeAssetDestroyTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetDestroyTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperty<\n        MustHaveSuggestedParams<AssetDestroyTxn>,\n        'reKeyTo',\n        'rekeyTo'\n      >,\n      'from' | 'note' | 'assetIndex' | 'suggestedParams' | 'rekeyTo'\n    >\n  >\n) {\n  return makeAssetDestroyTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.assetIndex,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/** makeAssetFreezeTxnWithSuggestedParams will allow the asset's freeze manager to freeze or un-freeze an account,\n * blocking or allowing asset transfers to and from the targeted account.\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param freezeTarget - string representation of Algorand address being frozen or unfrozen\n * @param freezeState - true if freezeTarget should be frozen, false if freezeTarget should be allowed to transact\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetFreezeTxnWithSuggestedParams(\n  from: AssetFreezeTxn['from'],\n  note: AssetFreezeTxn['note'],\n  assetIndex: AssetFreezeTxn['assetIndex'],\n  freezeTarget: AssetFreezeTxn['freezeAccount'],\n  freezeState: AssetFreezeTxn['freezeState'],\n  suggestedParams: MustHaveSuggestedParams<AssetFreezeTxn>['suggestedParams'],\n  rekeyTo?: AssetFreezeTxn['reKeyTo']\n) {\n  const o: AssetFreezeTxn = {\n    from,\n    type: TransactionType.afrz,\n    freezeAccount: freezeTarget,\n    assetIndex,\n    freezeState,\n    note,\n    suggestedParams,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n/** makeAssetFreezeTxn will allow the asset's freeze manager to freeze or un-freeze an account,\n * blocking or allowing asset transfers to and from the targeted account.\n *\n * @param from - string representation of Algorand address of sender\n * @param fee - integer fee per byte, in microAlgos. for a flat fee, overwrite the fee property on the returned object\n *  If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n * @param firstRound - integer first protocol round on which this txn is valid\n * @param lastRound - integer last protocol round on which this txn is valid\n * @param note - uint8array of arbitrary data for sender to store\n * @param genesisHash - string specifies hash genesis block of network in use\n * @param genesisID - string specifies genesis ID of network in use\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param freezeTarget - string representation of Algorand address being frozen or unfrozen\n * @param freezeState - true if freezeTarget should be frozen, false if freezeTarget should be allowed to transact\n * @param rekeyTo - rekeyTo address, optional\n * @Deprecated in version 2.0 this will change to use the \"WithSuggestedParams\" signature.\n */\nexport function makeAssetFreezeTxn(\n  from: AssetFreezeTxn['from'],\n  fee: MustHaveSuggestedParamsInline<AssetFreezeTxn>['fee'],\n  firstRound: MustHaveSuggestedParamsInline<AssetFreezeTxn>['firstRound'],\n  lastRound: MustHaveSuggestedParamsInline<AssetFreezeTxn>['lastRound'],\n  note: MustHaveSuggestedParamsInline<AssetFreezeTxn>['note'],\n  genesisHash: MustHaveSuggestedParamsInline<AssetFreezeTxn>['genesisHash'],\n  genesisID: MustHaveSuggestedParamsInline<AssetFreezeTxn>['genesisID'],\n  assetIndex: AssetFreezeTxn['assetIndex'],\n  freezeTarget: AssetFreezeTxn['freezeAccount'],\n  freezeState: AssetFreezeTxn['freezeState'],\n  rekeyTo?: AssetFreezeTxn['reKeyTo']\n) {\n  const suggestedParams: SuggestedParams = {\n    genesisHash,\n    genesisID,\n    firstRound,\n    lastRound,\n    fee,\n  };\n  return makeAssetFreezeTxnWithSuggestedParams(\n    from,\n    note,\n    assetIndex,\n    freezeTarget,\n    freezeState,\n    suggestedParams,\n    rekeyTo\n  );\n}\n\n// helper for above makeAssetFreezeTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetFreezeTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AssetFreezeTxn>,\n        {\n          freezeAccount: 'freezeTarget';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'note'\n      | 'assetIndex'\n      | 'freezeTarget'\n      | 'freezeState'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeAssetFreezeTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.assetIndex,\n    o.freezeTarget,\n    o.freezeState,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/** makeAssetTransferTxnWithSuggestedParams allows for the creation of an asset transfer transaction.\n * Special case: to begin accepting assets, set amount=0 and from=to.\n *\n * @param from - string representation of Algorand address of sender\n * @param to - string representation of Algorand address of asset recipient\n * @param closeRemainderTo - optional - string representation of Algorand address - if provided,\n * send all remaining assets after transfer to the \"closeRemainderTo\" address and close \"from\"'s asset holdings\n * @param revocationTarget - optional - string representation of Algorand address - if provided,\n * and if \"from\" is the asset's revocation manager, then deduct from \"revocationTarget\" rather than \"from\"\n * @param amount - integer amount of assets to send\n * @param note - uint8array of arbitrary data for sender to store\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetTransferTxnWithSuggestedParams(\n  from: AssetTransferTxn['from'],\n  to: AssetTransferTxn['to'],\n  closeRemainderTo: AssetTransferTxn['closeRemainderTo'],\n  revocationTarget: AssetTransferTxn['assetRevocationTarget'],\n  amount: AssetTransferTxn['amount'],\n  note: AssetTransferTxn['note'],\n  assetIndex: AssetTransferTxn['assetIndex'],\n  suggestedParams: MustHaveSuggestedParams<AssetTransferTxn>['suggestedParams'],\n  rekeyTo?: AssetTransferTxn['reKeyTo']\n) {\n  const o: AssetTransferTxn = {\n    type: TransactionType.axfer,\n    from,\n    to,\n    amount,\n    suggestedParams,\n    assetIndex,\n    note,\n    assetRevocationTarget: revocationTarget,\n    closeRemainderTo,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n/** makeAssetTransferTxn allows for the creation of an asset transfer transaction.\n * Special case: to begin accepting assets, set amount=0 and from=to.\n *\n * @param from - string representation of Algorand address of sender\n * @param to - string representation of Algorand address of asset recipient\n * @param closeRemainderTo - optional - string representation of Algorand address - if provided,\n * send all remaining assets after transfer to the \"closeRemainderTo\" address and close \"from\"'s asset holdings\n * @param revocationTarget - optional - string representation of Algorand address - if provided,\n * and if \"from\" is the asset's revocation manager, then deduct from \"revocationTarget\" rather than \"from\"\n * @param fee - integer fee per byte, in microAlgos. for a flat fee, overwrite the fee property on the returned object\n *  If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n * @param amount - integer amount of assets to send\n * @param firstRound - integer first protocol round on which this txn is valid\n * @param lastRound - integer last protocol round on which this txn is valid\n * @param note - uint8array of arbitrary data for sender to store\n * @param genesisHash - string specifies hash genesis block of network in use\n * @param genesisID - string specifies genesis ID of network in use\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param rekeyTo - rekeyTo address, optional\n * @Deprecated in version 2.0 this will change to use the \"WithSuggestedParams\" signature.\n */\nexport function makeAssetTransferTxn(\n  from: AssetTransferTxn['from'],\n  to: AssetTransferTxn['to'],\n  closeRemainderTo: AssetTransferTxn['closeRemainderTo'],\n  revocationTarget: AssetTransferTxn['assetRevocationTarget'],\n  fee: MustHaveSuggestedParamsInline<AssetTransferTxn>['fee'],\n  amount: AssetTransferTxn['amount'],\n  firstRound: MustHaveSuggestedParamsInline<AssetTransferTxn>['firstRound'],\n  lastRound: MustHaveSuggestedParamsInline<AssetTransferTxn>['lastRound'],\n  note: AssetTransferTxn['note'],\n  genesisHash: MustHaveSuggestedParamsInline<AssetTransferTxn>['genesisHash'],\n  genesisID: MustHaveSuggestedParamsInline<AssetTransferTxn>['genesisID'],\n  assetIndex: AssetTransferTxn['assetIndex'],\n  rekeyTo?: AssetTransferTxn['reKeyTo']\n) {\n  const suggestedParams: SuggestedParams = {\n    genesisHash,\n    genesisID,\n    firstRound,\n    lastRound,\n    fee,\n  };\n  return makeAssetTransferTxnWithSuggestedParams(\n    from,\n    to,\n    closeRemainderTo,\n    revocationTarget,\n    amount,\n    note,\n    assetIndex,\n    suggestedParams,\n    rekeyTo\n  );\n}\n\n// helper for above makeAssetTransferTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetTransferTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AssetTransferTxn>,\n        {\n          assetRevocationTarget: 'revocationTarget';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'to'\n      | 'closeRemainderTo'\n      | 'revocationTarget'\n      | 'amount'\n      | 'note'\n      | 'assetIndex'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeAssetTransferTxnWithSuggestedParams(\n    o.from,\n    o.to,\n    o.closeRemainderTo,\n    o.revocationTarget,\n    o.amount,\n    o.note,\n    o.assetIndex,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/**\n * Make a transaction that will create an application.\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param onComplete - algosdk.OnApplicationComplete, what application should do once the program is done being run\n * @param approvalProgram - Uint8Array, the compiled TEAL that approves a transaction\n * @param clearProgram - Uint8Array, the compiled TEAL that runs when clearing state\n * @param numLocalInts - restricts number of ints in per-user local state\n * @param numLocalByteSlices - restricts number of byte slices in per-user local state\n * @param numGlobalInts - restricts number of ints in global state\n * @param numGlobalByteSlices - restricts number of byte slices in global state\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param extraPages - integer extra pages of memory to rent on creation of application\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationCreateTxn(\n  from: AppCreateTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppCreateTxn>['suggestedParams'],\n  onComplete: AppCreateTxn['appOnComplete'],\n  approvalProgram: AppCreateTxn['appApprovalProgram'],\n  clearProgram: AppCreateTxn['appClearProgram'],\n  numLocalInts: AppCreateTxn['appLocalInts'],\n  numLocalByteSlices: AppCreateTxn['appLocalByteSlices'],\n  numGlobalInts: AppCreateTxn['appGlobalInts'],\n  numGlobalByteSlices: AppCreateTxn['appGlobalByteSlices'],\n  appArgs?: AppCreateTxn['appArgs'],\n  accounts?: AppCreateTxn['appAccounts'],\n  foreignApps?: AppCreateTxn['appForeignApps'],\n  foreignAssets?: AppCreateTxn['appForeignAssets'],\n  note?: AppCreateTxn['note'],\n  lease?: AppCreateTxn['lease'],\n  rekeyTo?: AppCreateTxn['reKeyTo'],\n  extraPages?: AppCreateTxn['extraPages'],\n  boxes?: AppCreateTxn['boxes']\n) {\n  const o: AppCreateTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex: 0,\n    appOnComplete: onComplete,\n    appLocalInts: numLocalInts,\n    appLocalByteSlices: numLocalByteSlices,\n    appGlobalInts: numGlobalInts,\n    appGlobalByteSlices: numGlobalByteSlices,\n    appApprovalProgram: approvalProgram,\n    appClearProgram: clearProgram,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n    extraPages,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationCreateTxn, instead accepting an arguments object\nexport function makeApplicationCreateTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppCreateTxn>,\n        {\n          appOnComplete: 'onComplete';\n          appApprovalProgram: 'approvalProgram';\n          appClearProgram: 'clearProgram';\n          appLocalInts: 'numLocalInts';\n          appLocalByteSlices: 'numLocalByteSlices';\n          appGlobalInts: 'numGlobalInts';\n          appGlobalByteSlices: 'numGlobalByteSlices';\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'onComplete'\n      | 'approvalProgram'\n      | 'clearProgram'\n      | 'numLocalInts'\n      | 'numLocalByteSlices'\n      | 'numGlobalInts'\n      | 'numGlobalByteSlices'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n      | 'extraPages'\n    >\n  >\n) {\n  return makeApplicationCreateTxn(\n    o.from,\n    o.suggestedParams,\n    o.onComplete,\n    o.approvalProgram,\n    o.clearProgram,\n    o.numLocalInts,\n    o.numLocalByteSlices,\n    o.numGlobalInts,\n    o.numGlobalByteSlices,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.extraPages,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that changes an application's approval and clear programs\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to be updated\n * @param approvalProgram - Uint8Array, the compiled TEAL that approves a transaction\n * @param clearProgram - Uint8Array, the compiled TEAL that runs when clearing state\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationUpdateTxn(\n  from: AppUpdateTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppUpdateTxn>['suggestedParams'],\n  appIndex: AppUpdateTxn['appIndex'],\n  approvalProgram: AppUpdateTxn['appApprovalProgram'],\n  clearProgram: AppUpdateTxn['appClearProgram'],\n  appArgs?: AppUpdateTxn['appArgs'],\n  accounts?: AppUpdateTxn['appAccounts'],\n  foreignApps?: AppUpdateTxn['appForeignApps'],\n  foreignAssets?: AppUpdateTxn['appForeignAssets'],\n  note?: AppUpdateTxn['note'],\n  lease?: AppUpdateTxn['lease'],\n  rekeyTo?: AppUpdateTxn['reKeyTo'],\n  boxes?: AppUpdateTxn['boxes']\n) {\n  const o: AppUpdateTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appApprovalProgram: approvalProgram,\n    appOnComplete: OnApplicationComplete.UpdateApplicationOC,\n    appClearProgram: clearProgram,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationUpdateTxn, instead accepting an arguments object\nexport function makeApplicationUpdateTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppUpdateTxn>,\n        {\n          appApprovalProgram: 'approvalProgram';\n          appClearProgram: 'clearProgram';\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'approvalProgram'\n      | 'clearProgram'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationUpdateTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.approvalProgram,\n    o.clearProgram,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that deletes an application\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to be deleted\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationDeleteTxn(\n  from: AppDeleteTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppDeleteTxn>['suggestedParams'],\n  appIndex: AppDeleteTxn['appIndex'],\n  appArgs?: AppDeleteTxn['appArgs'],\n  accounts?: AppDeleteTxn['appAccounts'],\n  foreignApps?: AppDeleteTxn['appForeignApps'],\n  foreignAssets?: AppDeleteTxn['appForeignAssets'],\n  note?: AppDeleteTxn['note'],\n  lease?: AppDeleteTxn['lease'],\n  rekeyTo?: AppDeleteTxn['reKeyTo'],\n  boxes?: AppDeleteTxn['boxes']\n) {\n  const o: AppDeleteTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.DeleteApplicationOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationDeleteTxn, instead accepting an arguments object\nexport function makeApplicationDeleteTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppDeleteTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationDeleteTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that opts in to use an application\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to join\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationOptInTxn(\n  from: AppOptInTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppOptInTxn>['suggestedParams'],\n  appIndex: AppOptInTxn['appIndex'],\n  appArgs?: AppOptInTxn['appArgs'],\n  accounts?: AppOptInTxn['appAccounts'],\n  foreignApps?: AppOptInTxn['appForeignApps'],\n  foreignAssets?: AppOptInTxn['appForeignAssets'],\n  note?: AppOptInTxn['note'],\n  lease?: AppOptInTxn['lease'],\n  rekeyTo?: AppOptInTxn['reKeyTo'],\n  boxes?: AppOptInTxn['boxes']\n) {\n  const o: AppOptInTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.OptInOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationOptInTxn, instead accepting an argument object\nexport function makeApplicationOptInTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppOptInTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationOptInTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that closes out a user's state in an application\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to use\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationCloseOutTxn(\n  from: AppCloseOutTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppCloseOutTxn>['suggestedParams'],\n  appIndex: AppCloseOutTxn['appIndex'],\n  appArgs?: AppCloseOutTxn['appArgs'],\n  accounts?: AppCloseOutTxn['appAccounts'],\n  foreignApps?: AppCloseOutTxn['appForeignApps'],\n  foreignAssets?: AppCloseOutTxn['appForeignAssets'],\n  note?: AppCloseOutTxn['note'],\n  lease?: AppCloseOutTxn['lease'],\n  rekeyTo?: AppCloseOutTxn['reKeyTo'],\n  boxes?: AppCloseOutTxn['boxes']\n) {\n  const o: AppCloseOutTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.CloseOutOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationCloseOutTxn, instead accepting an argument object\nexport function makeApplicationCloseOutTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppOptInTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationCloseOutTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that clears a user's state in an application\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to use\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationClearStateTxn(\n  from: AppClearStateTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppClearStateTxn>['suggestedParams'],\n  appIndex: AppClearStateTxn['appIndex'],\n  appArgs?: AppClearStateTxn['appArgs'],\n  accounts?: AppClearStateTxn['appAccounts'],\n  foreignApps?: AppClearStateTxn['appForeignApps'],\n  foreignAssets?: AppClearStateTxn['appForeignAssets'],\n  note?: AppClearStateTxn['note'],\n  lease?: AppClearStateTxn['lease'],\n  rekeyTo?: AppClearStateTxn['reKeyTo'],\n  boxes?: AppClearStateTxn['boxes']\n) {\n  const o: AppClearStateTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.ClearStateOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationClearStateTxn, instead accepting an argument object\nexport function makeApplicationClearStateTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppOptInTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationClearStateTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that just calls an application, doing nothing on completion\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to use\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationNoOpTxn(\n  from: AppNoOpTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppNoOpTxn>['suggestedParams'],\n  appIndex: AppNoOpTxn['appIndex'],\n  appArgs?: AppNoOpTxn['appArgs'],\n  accounts?: AppNoOpTxn['appAccounts'],\n  foreignApps?: AppNoOpTxn['appForeignApps'],\n  foreignAssets?: AppNoOpTxn['appForeignAssets'],\n  note?: AppNoOpTxn['note'],\n  lease?: AppNoOpTxn['lease'],\n  rekeyTo?: AppNoOpTxn['reKeyTo'],\n  boxes?: AppNoOpTxn['boxes']\n) {\n  const o: AppNoOpTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.NoOpOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationNoOpTxn, instead accepting an argument object\nexport function makeApplicationNoOpTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppOptInTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationNoOpTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\nexport { OnApplicationComplete } from './types/transactions/base';\n\n/**\n * Generic function for creating any application call transaction.\n */\nexport function makeApplicationCallTxnFromObject(\n  options: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppCreateTxn>,\n        {\n          appOnComplete: 'onComplete';\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'onComplete'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n      | 'extraPages'\n    > &\n      Partial<\n        Pick<\n          RenameProperties<\n            MustHaveSuggestedParams<AppCreateTxn>,\n            {\n              appApprovalProgram: 'approvalProgram';\n              appClearProgram: 'clearProgram';\n              appLocalInts: 'numLocalInts';\n              appLocalByteSlices: 'numLocalByteSlices';\n              appGlobalInts: 'numGlobalInts';\n              appGlobalByteSlices: 'numGlobalByteSlices';\n            }\n          >,\n          | 'approvalProgram'\n          | 'clearProgram'\n          | 'numLocalInts'\n          | 'numLocalByteSlices'\n          | 'numGlobalInts'\n          | 'numGlobalByteSlices'\n        >\n      >\n  >\n) {\n  const o: AppCreateTxn = {\n    type: TransactionType.appl,\n    from: options.from,\n    suggestedParams: options.suggestedParams,\n    appIndex: options.appIndex,\n    appOnComplete: options.onComplete,\n    appLocalInts: options.numLocalInts,\n    appLocalByteSlices: options.numLocalByteSlices,\n    appGlobalInts: options.numGlobalInts,\n    appGlobalByteSlices: options.numGlobalByteSlices,\n    appApprovalProgram: options.approvalProgram,\n    appClearProgram: options.clearProgram,\n    appArgs: options.appArgs,\n    appAccounts: options.accounts,\n    appForeignApps: options.foreignApps,\n    appForeignAssets: options.foreignAssets,\n    boxes: options.boxes,\n    note: options.note,\n    lease: options.lease,\n    reKeyTo: options.rekeyTo,\n    extraPages: options.extraPages,\n  };\n  return new txnBuilder.Transaction(o);\n}\n","const english = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo',\n];\n\nexport default english;\n","/* eslint-disable no-bitwise */\nimport english from './wordlists/english';\nimport * as nacl from '../nacl/naclWrappers';\nimport * as address from '../encoding/address';\nimport Account from '../types/account';\n\nexport const FAIL_TO_DECODE_MNEMONIC_ERROR_MSG = 'failed to decode mnemonic';\nexport const NOT_IN_WORDS_LIST_ERROR_MSG =\n  'the mnemonic contains a word that is not in the wordlist';\n\n// https://stackoverflow.com/a/51452614\nfunction toUint11Array(buffer8: Uint8Array | number[]) {\n  const buffer11 = [];\n  let acc = 0;\n  let accBits = 0;\n  function add(octet) {\n    acc |= octet << accBits;\n    accBits += 8;\n    if (accBits >= 11) {\n      buffer11.push(acc & 0x7ff);\n      acc >>= 11;\n      accBits -= 11;\n    }\n  }\n  function flush() {\n    if (accBits) {\n      buffer11.push(acc);\n    }\n  }\n\n  buffer8.forEach(add);\n  flush();\n  return buffer11;\n}\n\nfunction applyWords(nums: number[]) {\n  return nums.map((n) => english[n]);\n}\n\nfunction computeChecksum(seed: Uint8Array) {\n  const hashBuffer = nacl.genericHash(seed);\n  const uint11Hash = toUint11Array(hashBuffer);\n  const words = applyWords(uint11Hash);\n\n  return words[0];\n}\n\n/**\n * mnemonicFromSeed converts a 32-byte key into a 25 word mnemonic. The generated mnemonic includes a checksum.\n * Each word in the mnemonic represents 11 bits of data, and the last 11 bits are reserved for the checksum.\n * @param seed - 32 bytes long seed\n * @returns 25 words mnemonic\n */\nexport function mnemonicFromSeed(seed: Uint8Array) {\n  // Sanity length check\n  if (seed.length !== nacl.SEED_BTYES_LENGTH) {\n    throw new RangeError(`Seed length must be ${nacl.SEED_BTYES_LENGTH}`);\n  }\n\n  const uint11Array = toUint11Array(seed);\n  const words = applyWords(uint11Array);\n  const checksumWord = computeChecksum(seed);\n\n  return `${words.join(' ')} ${checksumWord}`;\n}\n\n// from Uint11Array\n// https://stackoverflow.com/a/51452614\nfunction toUint8Array(buffer11: number[]) {\n  const buffer8 = [];\n  let acc = 0;\n  let accBits = 0;\n  function add(ui11) {\n    acc |= ui11 << accBits;\n    accBits += 11;\n    while (accBits >= 8) {\n      buffer8.push(acc & 0xff);\n      acc >>= 8;\n      accBits -= 8;\n    }\n  }\n  function flush() {\n    if (accBits) {\n      buffer8.push(acc);\n    }\n  }\n\n  buffer11.forEach(add);\n  flush();\n  return new Uint8Array(buffer8);\n}\n\n/**\n * seedFromMnemonic converts a mnemonic generated using this library into the source key used to create it.\n * It returns an error if the passed mnemonic has an incorrect checksum, if the number of words is unexpected, or if one\n * of the passed words is not found in the words list.\n * @param mnemonic - 25 words mnemonic\n * @returns 32 bytes long seed\n */\nexport function seedFromMnemonic(mnemonic: string) {\n  const words = mnemonic.split(' ');\n  const key = words.slice(0, 24);\n\n  // Check that all words are in list\n  for (const w of key) {\n    if (english.indexOf(w) === -1) throw new Error(NOT_IN_WORDS_LIST_ERROR_MSG);\n  }\n\n  const checksum = words[words.length - 1];\n  const uint11Array = key.map((word) => english.indexOf(word));\n\n  // Convert the key to uint8Array\n  let uint8Array = toUint8Array(uint11Array);\n\n  // We need to chop the last byte -\n  // the short explanation - Since 256 is not divisible by 11, we have an extra 0x0 byte.\n  // The longer explanation - When splitting the 256 bits to chunks of 11, we get 23 words and a left over of 3 bits.\n  // This left gets padded with another 8 bits to the create the 24th word.\n  // While converting back to byte array, our new 264 bits array is divisible by 8 but the last byte is just the padding.\n\n  // check that we have 33 bytes long array as expected\n  if (uint8Array.length !== 33)\n    throw new Error(FAIL_TO_DECODE_MNEMONIC_ERROR_MSG);\n\n  // check that the last byte is actually 0x0\n  if (uint8Array[uint8Array.length - 1] !== 0x0)\n    throw new Error(FAIL_TO_DECODE_MNEMONIC_ERROR_MSG);\n\n  // chop it !\n  uint8Array = uint8Array.slice(0, uint8Array.length - 1);\n\n  // compute checksum\n  const cs = computeChecksum(uint8Array);\n\n  // success!\n  if (cs === checksum) return uint8Array;\n\n  throw new Error(FAIL_TO_DECODE_MNEMONIC_ERROR_MSG);\n}\n\n/**\n * mnemonicToSecretKey takes a mnemonic string and returns the corresponding Algorand address and its secret key.\n * @param mn - 25 words Algorand mnemonic\n * @throws error if fails to decode the mnemonic\n */\nexport function mnemonicToSecretKey(mn: string): Account {\n  const seed = seedFromMnemonic(mn);\n  const keys = nacl.keyPairFromSeed(seed);\n  const encodedPk = address.encodeAddress(keys.publicKey);\n  return { addr: encodedPk, sk: keys.secretKey };\n}\n\n/**\n * secretKeyToMnemonic takes an Algorand secret key and returns the corresponding mnemonic.\n * @param sk - Algorand secret key\n * @returns Secret key's associated mnemonic\n */\nexport function secretKeyToMnemonic(sk: Uint8Array) {\n  // get the seed from the sk\n  const seed = sk.slice(0, nacl.SEED_BTYES_LENGTH);\n  return mnemonicFromSeed(seed);\n}\n\n/**\n * mnemonicToMasterDerivationKey takes a mnemonic string and returns the corresponding master derivation key.\n * @param mn - 25 words Algorand mnemonic\n * @returns Uint8Array\n * @throws error if fails to decode the mnemonic\n */\nexport function mnemonicToMasterDerivationKey(mn: string) {\n  return seedFromMnemonic(mn);\n}\n\n/**\n * masterDerivationKeyToMnemonic takes a master derivation key and returns the corresponding mnemonic.\n * @param mdk - Uint8Array\n * @returns string mnemonic\n */\nexport function masterDerivationKeyToMnemonic(mdk: Uint8Array) {\n  return mnemonicFromSeed(mdk);\n}\n","import * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport * as txnBuilder from './transaction';\nimport * as utils from './utils/utils';\nimport AnyTransaction, { EncodedTransaction } from './types/transactions';\nimport { MultisigMetadata } from './types/multisig';\nimport {\n  EncodedMultisig,\n  EncodedSignedTransaction,\n} from './types/transactions/encoded';\n\n/**\n Utilities for manipulating multisig transaction blobs.\n */\n\nexport const MULTISIG_MERGE_LESSTHANTWO_ERROR_MSG =\n  'Not enough multisig transactions to merge. Need at least two';\nexport const MULTISIG_MERGE_MISMATCH_ERROR_MSG =\n  'Cannot merge txs. txIDs differ';\nexport const MULTISIG_MERGE_MISMATCH_AUTH_ADDR_MSG =\n  'Cannot merge txs. Auth addrs differ';\nexport const MULTISIG_MERGE_WRONG_PREIMAGE_ERROR_MSG =\n  'Cannot merge txs. Multisig preimages differ';\nexport const MULTISIG_MERGE_SIG_MISMATCH_ERROR_MSG =\n  'Cannot merge txs. subsigs are mismatched.';\nconst MULTISIG_KEY_NOT_EXIST_ERROR_MSG = 'Key does not exist';\nexport const MULTISIG_NO_MUTATE_ERROR_MSG =\n  'Cannot mutate a multisig field as it would invalidate all existing signatures.';\nexport const MULTISIG_USE_PARTIAL_SIGN_ERROR_MSG =\n  'Cannot sign a multisig transaction using `signTxn`. Use `partialSignTxn` instead.';\nexport const MULTISIG_SIGNATURE_LENGTH_ERROR_MSG =\n  'Cannot add multisig signature. Signature is not of the correct length.';\n\ninterface MultisigOptions {\n  rawSig: Uint8Array;\n  myPk: Uint8Array;\n}\n\ninterface MultisigMetadataWithPks extends Omit<MultisigMetadata, 'addrs'> {\n  pks: Uint8Array[];\n}\n\n/**\n * createMultisigTransaction creates a raw, unsigned multisig transaction blob.\n * @param txn - the actual transaction.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param pks - ordered list of public keys in this multisig\n * @returns encoded multisig blob\n */\nexport function createMultisigTransaction(\n  txn: txnBuilder.Transaction,\n  { version, threshold, addrs }: MultisigMetadata\n) {\n  // construct the appendable multisigned transaction format\n  const pks = addrs.map((addr) => address.decodeAddress(addr).publicKey);\n  const subsigs = pks.map((pk) => ({ pk: Buffer.from(pk) }));\n\n  const msig: EncodedMultisig = {\n    v: version,\n    thr: threshold,\n    subsig: subsigs,\n  };\n  const txnForEncoding = txn.get_obj_for_encoding();\n  const signedTxn: EncodedSignedTransaction = {\n    msig,\n    txn: txnForEncoding,\n  };\n\n  // if the address of this multisig is different from the transaction sender,\n  // we need to add the auth-addr field\n  const msigAddr = address.fromMultisigPreImg({\n    version,\n    threshold,\n    pks,\n  });\n  if (\n    address.encodeAddress(txnForEncoding.snd) !==\n    address.encodeAddress(msigAddr)\n  ) {\n    signedTxn.sgnr = Buffer.from(msigAddr);\n  }\n\n  return new Uint8Array(encoding.encode(signedTxn));\n}\n\n/**\n * createMultisigTransactionWithSignature creates a multisig transaction blob with an included signature.\n * @param txn - the actual transaction to sign.\n * @param rawSig - a Buffer raw signature of that transaction\n * @param myPk - a public key that corresponds with rawSig\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param pks - ordered list of public keys in this multisig\n * @returns encoded multisig blob\n */\nfunction createMultisigTransactionWithSignature(\n  txn: txnBuilder.Transaction,\n  { rawSig, myPk }: MultisigOptions,\n  { version, threshold, pks }: MultisigMetadataWithPks\n) {\n  // Create an empty encoded multisig transaction\n  const encodedMsig = createMultisigTransaction(txn, {\n    version,\n    threshold,\n    addrs: pks.map((pk) => address.encodeAddress(pk)),\n  });\n  // note: this is not signed yet, but will be shortly\n  const signedTxn = encoding.decode(encodedMsig) as EncodedSignedTransaction;\n\n  let keyExist = false;\n  // append the multisig signature to the corresponding public key in the multisig blob\n  signedTxn.msig.subsig.forEach((subsig, i) => {\n    if (nacl.bytesEqual(subsig.pk, myPk)) {\n      keyExist = true;\n      signedTxn.msig.subsig[i].s = rawSig;\n    }\n  });\n  if (keyExist === false) {\n    throw new Error(MULTISIG_KEY_NOT_EXIST_ERROR_MSG);\n  }\n\n  // if the address of this multisig is different from the transaction sender,\n  // we need to add the auth-addr field\n  const msigAddr = address.fromMultisigPreImg({\n    version,\n    threshold,\n    pks,\n  });\n  if (\n    address.encodeAddress(signedTxn.txn.snd) !== address.encodeAddress(msigAddr)\n  ) {\n    signedTxn.sgnr = Buffer.from(msigAddr);\n  }\n\n  return new Uint8Array(encoding.encode(signedTxn));\n}\n\n/**\n * MultisigTransaction is a Transaction that also supports creating partially-signed multisig transactions.\n */\nexport class MultisigTransaction extends txnBuilder.Transaction {\n  /* eslint-disable class-methods-use-this,@typescript-eslint/no-unused-vars,no-dupe-class-members */\n  /**\n   * Override inherited method to throw an error, as mutating transactions are prohibited in this context\n   */\n  addLease() {\n    throw new Error(MULTISIG_NO_MUTATE_ERROR_MSG);\n  }\n\n  /**\n   * Override inherited method to throw an error, as mutating transactions are prohibited in this context\n   */\n  addRekey() {\n    throw new Error(MULTISIG_NO_MUTATE_ERROR_MSG);\n  }\n\n  /**\n   * Override inherited method to throw an error, as traditional signing is not allowed\n   */\n  signTxn(sk: Uint8Array): Uint8Array; // This overload ensures that the override has a compatible type definition with the parent method\n  signTxn(sk: any): any {\n    throw new Error(MULTISIG_USE_PARTIAL_SIGN_ERROR_MSG);\n  }\n  /* eslint-enable class-methods-use-this,@typescript-eslint/no-unused-vars,no-dupe-class-members */\n\n  /**\n   * partialSignTxn partially signs this transaction and returns a partially-signed multisig transaction,\n   * encoded with msgpack as a typed array.\n   * @param version - multisig version\n   * @param threshold - multisig threshold\n   * @param pks - multisig public key list, order is important.\n   * @param sk - an Algorand secret key to sign with.\n   * @returns an encoded, partially signed multisig transaction.\n   */\n  partialSignTxn(\n    { version, threshold, pks }: MultisigMetadataWithPks,\n    sk: Uint8Array\n  ) {\n    // get signature verifier\n    const myPk = nacl.keyPairFromSecretKey(sk).publicKey;\n    return createMultisigTransactionWithSignature(\n      this,\n      { rawSig: this.rawSignTxn(sk), myPk },\n      { version, threshold, pks }\n    );\n  }\n\n  /**\n   * partialSignWithMultisigSignature partially signs this transaction with an external raw multisig signature and returns\n   * a partially-signed multisig transaction, encoded with msgpack as a typed array.\n   * @param metadata - multisig metadata\n   * @param signerAddr - address of the signer\n   * @param signature - raw multisig signature\n   * @returns an encoded, partially signed multisig transaction.\n   */\n  partialSignWithMultisigSignature(\n    metadata: MultisigMetadataWithPks,\n    signerAddr: string,\n    signature: Uint8Array\n  ) {\n    if (!nacl.isValidSignatureLength(signature.length)) {\n      throw new Error(MULTISIG_SIGNATURE_LENGTH_ERROR_MSG);\n    }\n    return createMultisigTransactionWithSignature(\n      this,\n      {\n        rawSig: signature,\n        myPk: address.decodeAddress(signerAddr).publicKey,\n      },\n      metadata\n    );\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    txnForEnc: EncodedTransaction\n  ): MultisigTransaction {\n    return super.from_obj_for_encoding(txnForEnc) as MultisigTransaction;\n  }\n}\n\n/**\n * mergeMultisigTransactions takes a list of multisig transaction blobs, and merges them.\n * @param multisigTxnBlobs - a list of blobs representing encoded multisig txns\n * @returns typed array msg-pack encoded multisig txn\n */\nexport function mergeMultisigTransactions(multisigTxnBlobs: Uint8Array[]) {\n  if (multisigTxnBlobs.length < 2) {\n    throw new Error(MULTISIG_MERGE_LESSTHANTWO_ERROR_MSG);\n  }\n  const refSigTx = encoding.decode(\n    multisigTxnBlobs[0]\n  ) as EncodedSignedTransaction;\n  const refTxID = MultisigTransaction.from_obj_for_encoding(\n    refSigTx.txn\n  ).txID();\n  const refAuthAddr = refSigTx.sgnr\n    ? address.encodeAddress(refSigTx.sgnr)\n    : undefined;\n  const refPreImage = {\n    version: refSigTx.msig.v,\n    threshold: refSigTx.msig.thr,\n    pks: refSigTx.msig.subsig.map((subsig) => subsig.pk),\n  };\n  const refMsigAddr = address.encodeAddress(\n    address.fromMultisigPreImg(refPreImage)\n  );\n\n  const newSubsigs = refSigTx.msig.subsig.map((sig) => ({ ...sig }));\n  for (let i = 1; i < multisigTxnBlobs.length; i++) {\n    const unisig = encoding.decode(\n      multisigTxnBlobs[i]\n    ) as EncodedSignedTransaction;\n\n    const unisigAlgoTxn = MultisigTransaction.from_obj_for_encoding(unisig.txn);\n    if (unisigAlgoTxn.txID() !== refTxID) {\n      throw new Error(MULTISIG_MERGE_MISMATCH_ERROR_MSG);\n    }\n\n    const authAddr = unisig.sgnr\n      ? address.encodeAddress(unisig.sgnr)\n      : undefined;\n    if (refAuthAddr !== authAddr) {\n      throw new Error(MULTISIG_MERGE_MISMATCH_AUTH_ADDR_MSG);\n    }\n\n    // check multisig has same preimage as reference\n    if (unisig.msig.subsig.length !== refSigTx.msig.subsig.length) {\n      throw new Error(MULTISIG_MERGE_WRONG_PREIMAGE_ERROR_MSG);\n    }\n    const preimg: MultisigMetadataWithPks = {\n      version: unisig.msig.v,\n      threshold: unisig.msig.thr,\n      pks: unisig.msig.subsig.map((subsig) => subsig.pk),\n    };\n    const msgigAddr = address.encodeAddress(address.fromMultisigPreImg(preimg));\n    if (refMsigAddr !== msgigAddr) {\n      throw new Error(MULTISIG_MERGE_WRONG_PREIMAGE_ERROR_MSG);\n    }\n\n    // now, we can merge\n    unisig.msig.subsig.forEach((uniSubsig, index) => {\n      if (!uniSubsig.s) return;\n      const current = newSubsigs[index];\n      // we convert the Uint8Arrays uniSubsig.s and current.s to Buffers here because (as\n      // of Dec 2020) React overrides the buffer package with an older version that does\n      // not support Uint8Arrays in the comparison function. See this thread for more\n      // info: https://github.com/algorand/js-algorand-sdk/issues/252\n      if (\n        current.s &&\n        Buffer.compare(Buffer.from(uniSubsig.s), Buffer.from(current.s)) !== 0\n      ) {\n        // mismatch\n        throw new Error(MULTISIG_MERGE_SIG_MISMATCH_ERROR_MSG);\n      }\n      current.s = uniSubsig.s;\n    });\n  }\n  const msig: EncodedMultisig = {\n    v: refSigTx.msig.v,\n    thr: refSigTx.msig.thr,\n    subsig: newSubsigs,\n  };\n  const signedTxn: EncodedSignedTransaction = {\n    msig,\n    txn: refSigTx.txn,\n  };\n  if (typeof refAuthAddr !== 'undefined') {\n    signedTxn.sgnr = Buffer.from(address.decodeAddress(refAuthAddr).publicKey);\n  }\n  return new Uint8Array(encoding.encode(signedTxn));\n}\n\nexport function verifyMultisig(\n  toBeVerified: Uint8Array,\n  msig: EncodedMultisig,\n  publicKey: Uint8Array\n) {\n  const version = msig.v;\n  const threshold = msig.thr;\n  const subsigs = msig.subsig;\n\n  const pks = subsigs.map((subsig) => subsig.pk);\n  if (msig.subsig.length < threshold) {\n    return false;\n  }\n\n  let pk: Uint8Array;\n  try {\n    pk = address.fromMultisigPreImg({ version, threshold, pks });\n  } catch (e) {\n    return false;\n  }\n\n  if (!utils.arrayEqual(pk, publicKey)) {\n    return false;\n  }\n\n  let counter = 0;\n  for (const subsig of subsigs) {\n    if (subsig.s !== undefined) {\n      counter += 1;\n    }\n  }\n  if (counter < threshold) {\n    return false;\n  }\n\n  let verifiedCounter = 0;\n  for (const subsig of subsigs) {\n    if (subsig.s !== undefined) {\n      if (nacl.verify(toBeVerified, subsig.s, subsig.pk)) {\n        verifiedCounter += 1;\n      }\n    }\n  }\n\n  if (verifiedCounter < threshold) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * signMultisigTransaction takes a raw transaction (see signTransaction), a multisig preimage, a secret key, and returns\n * a multisig transaction, which is a blob representing a transaction and multisignature account preimage. The returned\n * multisig txn can accumulate additional signatures through mergeMultisigTransactions or appendSignMultisigTransaction.\n * @param txn - object with either payment or key registration fields\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - a list of Algorand addresses representing possible signers for this multisig. Order is important.\n * @param sk - Algorand secret key. The corresponding pk should be in the pre image.\n * @returns object containing txID, and blob of partially signed multisig transaction (with multisig preimage information)\n * If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n */\nexport function signMultisigTransaction(\n  txn: txnBuilder.TransactionLike,\n  { version, threshold, addrs }: MultisigMetadata,\n  sk: Uint8Array\n) {\n  // check that the from field matches the mSigPreImage. If from field is not populated, fill it in.\n  const expectedFromRaw = address.fromMultisigPreImgAddrs({\n    version,\n    threshold,\n    addrs,\n  });\n  if (!Object.prototype.hasOwnProperty.call(txn, 'from')) {\n    // eslint-disable-next-line no-param-reassign\n    txn.from = expectedFromRaw;\n  }\n  // build pks for partialSign\n  const pks = addrs.map((addr) => address.decodeAddress(addr).publicKey);\n  // `txn` needs to be handled differently if it's a constructed `Transaction` vs a dict of constructor args\n  const txnAlreadyBuilt = txn instanceof txnBuilder.Transaction;\n  let algoTxn: MultisigTransaction;\n  let blob: Uint8Array;\n  if (txnAlreadyBuilt) {\n    algoTxn = (txn as unknown) as MultisigTransaction;\n    blob = MultisigTransaction.prototype.partialSignTxn.call(\n      algoTxn,\n      { version, threshold, pks },\n      sk\n    );\n  } else {\n    algoTxn = new MultisigTransaction(txn as AnyTransaction);\n    blob = algoTxn.partialSignTxn({ version, threshold, pks }, sk);\n  }\n  return {\n    txID: algoTxn.txID().toString(),\n    blob,\n  };\n}\n\n/**\n * appendSignMultisigTransaction takes a multisig transaction blob, and appends our signature to it.\n * While we could derive public key preimagery from the partially-signed multisig transaction,\n * we ask the caller to pass it back in, to ensure they know what they are signing.\n * @param multisigTxnBlob - an encoded multisig txn. Supports non-payment txn types.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - a list of Algorand addresses representing possible signers for this multisig. Order is important.\n * @param sk - Algorand secret key\n * @returns object containing txID, and blob representing encoded multisig txn\n */\nexport function appendSignMultisigTransaction(\n  multisigTxnBlob: Uint8Array,\n  { version, threshold, addrs }: MultisigMetadata,\n  sk: Uint8Array\n) {\n  const pks = addrs.map((addr) => address.decodeAddress(addr).publicKey);\n  // obtain underlying txn, sign it, and merge it\n  const multisigTxObj = encoding.decode(\n    multisigTxnBlob\n  ) as EncodedSignedTransaction;\n  const msigTxn = MultisigTransaction.from_obj_for_encoding(multisigTxObj.txn);\n  const partialSignedBlob = msigTxn.partialSignTxn(\n    { version, threshold, pks },\n    sk\n  );\n  return {\n    txID: msigTxn.txID().toString(),\n    blob: mergeMultisigTransactions([multisigTxnBlob, partialSignedBlob]),\n  };\n}\n\n/**\n * appendMultisigTransactionSignature takes a multisig transaction blob, and appends a given raw signature to it.\n * This makes it possible to compile a multisig signature using only raw signatures from external methods.\n * @param multisigTxnBlob - an encoded multisig txn. Supports non-payment txn types.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - a list of Algorand addresses representing possible signers for this multisig. Order is important.\n * @param signerAddr - address of the signer\n * @param signature - raw multisig signature\n * @returns object containing txID, and blob representing encoded multisig txn\n */\nexport function appendSignRawMultisigSignature(\n  multisigTxnBlob: Uint8Array,\n  { version, threshold, addrs }: MultisigMetadata,\n  signerAddr: string,\n  signature: Uint8Array\n) {\n  const pks = addrs.map((addr) => address.decodeAddress(addr).publicKey);\n  // obtain underlying txn, sign it, and merge it\n  const multisigTxObj = encoding.decode(\n    multisigTxnBlob\n  ) as EncodedSignedTransaction;\n  const msigTxn = MultisigTransaction.from_obj_for_encoding(multisigTxObj.txn);\n  const partialSignedBlob = msigTxn.partialSignWithMultisigSignature(\n    { version, threshold, pks },\n    signerAddr,\n    signature\n  );\n  return {\n    txID: msigTxn.txID().toString(),\n    blob: mergeMultisigTransactions([multisigTxnBlob, partialSignedBlob]),\n  };\n}\n\n/**\n * multisigAddress takes multisig metadata (preimage) and returns the corresponding human readable Algorand address.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - list of Algorand addresses\n */\nexport function multisigAddress({\n  version,\n  threshold,\n  addrs,\n}: MultisigMetadata) {\n  return address.fromMultisigPreImgAddrs({ version, threshold, addrs });\n}\n","import nacl from 'tweetnacl';\nimport sha512 from 'js-sha512';\n\nexport function genericHash(arr: sha512.Message) {\n  return sha512.sha512_256.array(arr);\n}\n\nexport function randomBytes(length: number) {\n  return nacl.randomBytes(length);\n}\n\nexport function keyPairFromSeed(seed: Uint8Array) {\n  return nacl.sign.keyPair.fromSeed(seed);\n}\n\nexport function keyPair() {\n  const seed = randomBytes(nacl.box.secretKeyLength);\n  return keyPairFromSeed(seed);\n}\n\nexport function isValidSignatureLength(len: number) {\n  return len === nacl.sign.signatureLength;\n}\n\nexport function keyPairFromSecretKey(sk: Uint8Array) {\n  return nacl.sign.keyPair.fromSecretKey(sk);\n}\n\nexport function sign(msg: Uint8Array, secretKey: Uint8Array) {\n  return nacl.sign.detached(msg, secretKey);\n}\n\nexport function bytesEqual(a: Uint8Array, b: Uint8Array) {\n  return nacl.verify(a, b);\n}\n\nexport function verify(\n  message: Uint8Array,\n  signature: Uint8Array,\n  verifyKey: Uint8Array\n) {\n  return nacl.sign.detached.verify(message, signature, verifyKey);\n}\n\n// constants\nexport const PUBLIC_KEY_LENGTH = nacl.sign.publicKeyLength;\nexport const SECRET_KEY_LENGTH = nacl.sign.secretKeyLength;\nexport const HASH_BYTES_LENGTH = 32;\nexport const SEED_BTYES_LENGTH = 32;\n","import { Transaction } from './transaction';\nimport Account from './types/account';\nimport { LogicSigAccount, signLogicSigTransactionObject } from './logicsig';\nimport { MultisigMetadata } from './types/multisig';\nimport { signMultisigTransaction, mergeMultisigTransactions } from './multisig';\n\n/**\n * This type represents a function which can sign transactions from an atomic transaction group.\n * @param txnGroup - The atomic group containing transactions to be signed\n * @param indexesToSign - An array of indexes in the atomic transaction group that should be signed\n * @returns A promise which resolves an array of encoded signed transactions. The length of the\n *   array will be the same as the length of indexesToSign, and each index i in the array\n *   corresponds to the signed transaction from txnGroup[indexesToSign[i]]\n */\nexport type TransactionSigner = (\n  txnGroup: Transaction[],\n  indexesToSign: number[]\n) => Promise<Uint8Array[]>;\n\n/**\n * Create a TransactionSigner that can sign transactions for the provided basic Account.\n */\nexport function makeBasicAccountTransactionSigner(\n  account: Account\n): TransactionSigner {\n  return (txnGroup: Transaction[], indexesToSign: number[]) => {\n    const signed: Uint8Array[] = [];\n\n    for (const index of indexesToSign) {\n      signed.push(txnGroup[index].signTxn(account.sk));\n    }\n\n    return Promise.resolve(signed);\n  };\n}\n\n/**\n * Create a TransactionSigner that can sign transactions for the provided LogicSigAccount.\n */\nexport function makeLogicSigAccountTransactionSigner(\n  account: LogicSigAccount\n): TransactionSigner {\n  return (txnGroup: Transaction[], indexesToSign: number[]) => {\n    const signed: Uint8Array[] = [];\n\n    for (const index of indexesToSign) {\n      const { blob } = signLogicSigTransactionObject(txnGroup[index], account);\n      signed.push(blob);\n    }\n\n    return Promise.resolve(signed);\n  };\n}\n\n/**\n * Create a TransactionSigner that can sign transactions for the provided Multisig account.\n * @param msig - The Multisig account metadata\n * @param sks - An array of private keys belonging to the msig which should sign the transactions.\n */\nexport function makeMultiSigAccountTransactionSigner(\n  msig: MultisigMetadata,\n  sks: Uint8Array[]\n): TransactionSigner {\n  return (txnGroup: Transaction[], indexesToSign: number[]) => {\n    const signed: Uint8Array[] = [];\n\n    for (const index of indexesToSign) {\n      const txn = txnGroup[index];\n      const partialSigs: Uint8Array[] = [];\n\n      for (const sk of sks) {\n        const { blob } = signMultisigTransaction(txn, msig, sk);\n        partialSigs.push(blob);\n      }\n\n      signed.push(mergeMultisigTransactions(partialSigs));\n    }\n\n    return Promise.resolve(signed);\n  };\n}\n\n/** Represents an unsigned transactions and a signer that can authorize that transaction. */\nexport interface TransactionWithSigner {\n  /** An unsigned transaction */\n  txn: Transaction;\n  /** A transaction signer that can authorize txn */\n  signer: TransactionSigner;\n}\n\n/**\n * Check if a value conforms to the TransactionWithSigner structure.\n * @param value - The value to check.\n * @returns True if an only if the value has the structure of a TransactionWithSigner.\n */\nexport function isTransactionWithSigner(\n  value: any\n): value is TransactionWithSigner {\n  return (\n    typeof value === 'object' &&\n    Object.keys(value).length === 2 &&\n    typeof value.txn === 'object' &&\n    typeof value.signer === 'function'\n  );\n}\n","import { EncodedBoxReference } from './types';\nimport { BoxReference } from './types/transactions/base';\n\nfunction translateBoxReference(\n  reference: BoxReference,\n  foreignApps: number[],\n  appIndex: number\n): EncodedBoxReference {\n  const referenceId = reference.appIndex;\n  const referenceName = reference.name;\n  const isOwnReference = referenceId === 0 || referenceId === appIndex;\n  let index = 0;\n\n  if (foreignApps != null) {\n    // Foreign apps start from index 1; index 0 is its own app ID.\n    index = foreignApps.indexOf(referenceId) + 1;\n  }\n  // Check if the app referenced is itself after checking the foreign apps array.\n  // If index is zero, then the app ID was not found in the foreign apps array\n  // or the foreign apps array was null.\n  if (index === 0 && !isOwnReference) {\n    // Error if the app is trying to reference a foreign app that was not in\n    // its own foreign apps array.\n    throw new Error(`Box ref with appId ${referenceId} not in foreign-apps`);\n  }\n  return { i: index, n: referenceName };\n}\n\n/**\n * translateBoxReferences translates an array of BoxReferences with app IDs\n * into an array of EncodedBoxReferences with foreign indices.\n */\nexport function translateBoxReferences(\n  references: BoxReference[] | undefined,\n  foreignApps: number[],\n  appIndex: number\n): EncodedBoxReference[] {\n  if (references == null) return [];\n  return references.map((bx) =>\n    translateBoxReference(bx, foreignApps, appIndex)\n  );\n}\n","import base32 from 'hi-base32';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport * as nacl from './nacl/naclWrappers';\nimport * as utils from './utils/utils';\nimport { translateBoxReferences } from './boxStorage';\nimport {\n  OnApplicationComplete,\n  TransactionParams,\n  TransactionType,\n  isTransactionType,\n  BoxReference,\n} from './types/transactions/base';\nimport AnyTransaction, {\n  MustHaveSuggestedParams,\n  MustHaveSuggestedParamsInline,\n  EncodedTransaction,\n  EncodedSignedTransaction,\n  EncodedMultisig,\n  EncodedLogicSig,\n} from './types/transactions';\nimport { Address } from './types/address';\n\nconst ALGORAND_TRANSACTION_LENGTH = 52;\nexport const ALGORAND_MIN_TX_FEE = 1000; // version v5\nconst ALGORAND_TRANSACTION_LEASE_LENGTH = 32;\nconst ALGORAND_MAX_ASSET_DECIMALS = 19;\nconst NUM_ADDL_BYTES_AFTER_SIGNING = 75; // NUM_ADDL_BYTES_AFTER_SIGNING is the number of bytes added to a txn after signing it\nconst ALGORAND_TRANSACTION_LEASE_LABEL_LENGTH = 5;\nconst ALGORAND_TRANSACTION_ADDRESS_LENGTH = 32;\nconst ALGORAND_TRANSACTION_REKEY_LABEL_LENGTH = 5;\nconst ASSET_METADATA_HASH_LENGTH = 32;\nconst KEYREG_VOTE_KEY_LENGTH = 32;\nconst KEYREG_SELECTION_KEY_LENGTH = 32;\nconst KEYREG_STATE_PROOF_KEY_LENGTH = 64;\n\ntype AnyTransactionWithParams = MustHaveSuggestedParams<AnyTransaction>;\ntype AnyTransactionWithParamsInline = MustHaveSuggestedParamsInline<AnyTransaction>;\n\n/**\n * A modified version of the transaction params. Represents the internal structure that the Transaction class uses\n * to store inputted transaction objects.\n */\n// Omit allows overwriting properties\ninterface TransactionStorageStructure\n  extends Omit<\n    TransactionParams,\n    | 'from'\n    | 'to'\n    | 'genesisHash'\n    | 'closeRemainderTo'\n    | 'voteKey'\n    | 'selectionKey'\n    | 'stateProofKey'\n    | 'assetManager'\n    | 'assetReserve'\n    | 'assetFreeze'\n    | 'assetClawback'\n    | 'assetRevocationTarget'\n    | 'freezeAccount'\n    | 'appAccounts'\n    | 'suggestedParams'\n    | 'reKeyTo'\n  > {\n  from: string | Address;\n  to: string | Address;\n  fee: number;\n  amount: number | bigint;\n  firstRound: number;\n  lastRound: number;\n  note?: Uint8Array;\n  genesisID: string;\n  genesisHash: string | Buffer;\n  lease?: Uint8Array;\n  closeRemainderTo?: string | Address;\n  voteKey: string | Buffer;\n  selectionKey: string | Buffer;\n  stateProofKey: string | Buffer;\n  voteFirst: number;\n  voteLast: number;\n  voteKeyDilution: number;\n  assetIndex: number;\n  assetTotal: number | bigint;\n  assetDecimals: number;\n  assetDefaultFrozen: boolean;\n  assetManager: string | Address;\n  assetReserve: string | Address;\n  assetFreeze: string | Address;\n  assetClawback: string | Address;\n  assetUnitName: string;\n  assetName: string;\n  assetURL: string;\n  assetMetadataHash?: string | Uint8Array;\n  freezeAccount: string | Address;\n  freezeState: boolean;\n  assetRevocationTarget?: string | Address;\n  appIndex: number;\n  appOnComplete: OnApplicationComplete;\n  appLocalInts: number;\n  appLocalByteSlices: number;\n  appGlobalInts: number;\n  appGlobalByteSlices: number;\n  appApprovalProgram: Uint8Array;\n  appClearProgram: Uint8Array;\n  appArgs?: Uint8Array[];\n  appAccounts?: string[] | Address[];\n  appForeignApps?: number[];\n  appForeignAssets?: number[];\n  type?: TransactionType;\n  flatFee: boolean;\n  reKeyTo?: string | Address;\n  nonParticipation?: boolean;\n  group?: Buffer;\n  extraPages?: number;\n  boxes?: BoxReference[];\n  stateProofType?: number | bigint;\n  stateProof?: Uint8Array;\n  stateProofMessage?: Uint8Array;\n}\n\nfunction getKeyregKey(\n  input: undefined | string | Uint8Array | Buffer,\n  inputName: string,\n  length: number\n): Buffer | undefined {\n  if (input == null) {\n    return undefined;\n  }\n\n  let inputAsBuffer: Buffer | undefined;\n\n  if (typeof input === 'string') {\n    inputAsBuffer = Buffer.from(input, 'base64');\n  } else if (input.constructor === Uint8Array) {\n    inputAsBuffer = Buffer.from(input);\n  } else if (Buffer.isBuffer(input)) {\n    inputAsBuffer = input;\n  }\n\n  if (inputAsBuffer == null || inputAsBuffer.byteLength !== length) {\n    throw Error(\n      `${inputName} must be a ${length} byte Uint8Array or Buffer or base64 string.`\n    );\n  }\n\n  return inputAsBuffer;\n}\n\n/**\n * Transaction enables construction of Algorand transactions\n * */\nexport class Transaction implements TransactionStorageStructure {\n  name = 'Transaction';\n  tag = Buffer.from('TX');\n\n  // Implement transaction params\n  from: Address;\n  to: Address;\n  fee: number;\n  amount: number | bigint;\n  firstRound: number;\n  lastRound: number;\n  note?: Uint8Array;\n  genesisID: string;\n  genesisHash: Buffer;\n  lease?: Uint8Array;\n  closeRemainderTo?: Address;\n  voteKey: Buffer;\n  selectionKey: Buffer;\n  stateProofKey: Buffer;\n  voteFirst: number;\n  voteLast: number;\n  voteKeyDilution: number;\n  assetIndex: number;\n  assetTotal: number | bigint;\n  assetDecimals: number;\n  assetDefaultFrozen: boolean;\n  assetManager: Address;\n  assetReserve: Address;\n  assetFreeze: Address;\n  assetClawback: Address;\n  assetUnitName: string;\n  assetName: string;\n  assetURL: string;\n  assetMetadataHash?: Uint8Array;\n  freezeAccount: Address;\n  freezeState: boolean;\n  assetRevocationTarget?: Address;\n  appIndex: number;\n  appOnComplete: OnApplicationComplete;\n  appLocalInts: number;\n  appLocalByteSlices: number;\n  appGlobalInts: number;\n  appGlobalByteSlices: number;\n  appApprovalProgram: Uint8Array;\n  appClearProgram: Uint8Array;\n  appArgs?: Uint8Array[];\n  appAccounts?: Address[];\n  appForeignApps?: number[];\n  appForeignAssets?: number[];\n  boxes?: BoxReference[];\n  type?: TransactionType;\n  flatFee: boolean;\n  reKeyTo?: Address;\n  nonParticipation?: boolean;\n  group?: Buffer;\n  extraPages?: number;\n  stateProofType?: number | bigint;\n  stateProof?: Uint8Array;\n  stateProofMessage?: Uint8Array;\n\n  constructor({ ...transaction }: AnyTransaction) {\n    // Populate defaults\n    /* eslint-disable no-param-reassign */\n    const defaults: Partial<TransactionParams> = {\n      type: TransactionType.pay,\n      flatFee: false,\n      nonParticipation: false,\n    };\n    // Default type\n    if (typeof transaction.type === 'undefined') {\n      transaction.type = defaults.type;\n    }\n    // Default flatFee\n    if (\n      typeof (transaction as AnyTransactionWithParamsInline).flatFee ===\n      'undefined'\n    ) {\n      (transaction as AnyTransactionWithParamsInline).flatFee =\n        defaults.flatFee;\n    }\n    // Default nonParticipation\n    if (\n      transaction.type === TransactionType.keyreg &&\n      typeof transaction.voteKey !== 'undefined' &&\n      typeof transaction.nonParticipation === 'undefined'\n    ) {\n      transaction.nonParticipation = defaults.nonParticipation;\n    }\n    /* eslint-enable no-param-reassign */\n\n    // Move suggested parameters from its object to inline\n    if (\n      (transaction as AnyTransactionWithParams).suggestedParams !== undefined\n    ) {\n      // Create a temporary reference to the transaction object that has params inline and also as a suggested params object\n      //   - Helpful for moving params from named object to inline\n      const reference = transaction as AnyTransactionWithParams &\n        AnyTransactionWithParamsInline;\n      reference.genesisHash = reference.suggestedParams.genesisHash;\n      reference.fee = reference.suggestedParams.fee;\n      if (reference.suggestedParams.flatFee !== undefined)\n        reference.flatFee = reference.suggestedParams.flatFee;\n      reference.firstRound = reference.suggestedParams.firstRound;\n      reference.lastRound = reference.suggestedParams.lastRound;\n      reference.genesisID = reference.suggestedParams.genesisID;\n    }\n\n    // At this point all suggestedParams have been moved to be inline, so we can reassign the transaction object type\n    // to one which is more useful as we prepare properties for storing\n    const txn = transaction as TransactionStorageStructure;\n\n    txn.from = address.decodeAddress(txn.from as string);\n    if (txn.to !== undefined) txn.to = address.decodeAddress(txn.to as string);\n    if (txn.closeRemainderTo !== undefined)\n      txn.closeRemainderTo = address.decodeAddress(\n        txn.closeRemainderTo as string\n      );\n    if (txn.assetManager !== undefined)\n      txn.assetManager = address.decodeAddress(txn.assetManager as string);\n    if (txn.assetReserve !== undefined)\n      txn.assetReserve = address.decodeAddress(txn.assetReserve as string);\n    if (txn.assetFreeze !== undefined)\n      txn.assetFreeze = address.decodeAddress(txn.assetFreeze as string);\n    if (txn.assetClawback !== undefined)\n      txn.assetClawback = address.decodeAddress(txn.assetClawback as string);\n    if (txn.assetRevocationTarget !== undefined)\n      txn.assetRevocationTarget = address.decodeAddress(\n        txn.assetRevocationTarget as string\n      );\n    if (txn.freezeAccount !== undefined)\n      txn.freezeAccount = address.decodeAddress(txn.freezeAccount as string);\n    if (txn.reKeyTo !== undefined)\n      txn.reKeyTo = address.decodeAddress(txn.reKeyTo as string);\n    if (txn.genesisHash === undefined)\n      throw Error('genesis hash must be specified and in a base64 string.');\n\n    txn.genesisHash = Buffer.from(txn.genesisHash as string, 'base64');\n\n    if (\n      txn.amount !== undefined &&\n      (!(\n        Number.isSafeInteger(txn.amount) ||\n        (typeof txn.amount === 'bigint' &&\n          txn.amount <= BigInt('0xffffffffffffffff'))\n      ) ||\n        txn.amount < 0)\n    )\n      throw Error(\n        'Amount must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.'\n      );\n    if (!Number.isSafeInteger(txn.fee) || txn.fee < 0)\n      throw Error('fee must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(txn.firstRound) || txn.firstRound < 0)\n      throw Error('firstRound must be a positive number');\n    if (!Number.isSafeInteger(txn.lastRound) || txn.lastRound < 0)\n      throw Error('lastRound must be a positive number');\n    if (\n      txn.extraPages !== undefined &&\n      (!Number.isInteger(txn.extraPages) ||\n        txn.extraPages < 0 ||\n        txn.extraPages > 3)\n    )\n      throw Error('extraPages must be an Integer between and including 0 to 3');\n    if (\n      txn.assetTotal !== undefined &&\n      (!(\n        Number.isSafeInteger(txn.assetTotal) ||\n        (typeof txn.assetTotal === 'bigint' &&\n          txn.assetTotal <= BigInt('0xffffffffffffffff'))\n      ) ||\n        txn.assetTotal < 0)\n    )\n      throw Error(\n        'Total asset issuance must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.'\n      );\n    if (\n      txn.assetDecimals !== undefined &&\n      (!Number.isSafeInteger(txn.assetDecimals) ||\n        txn.assetDecimals < 0 ||\n        txn.assetDecimals > ALGORAND_MAX_ASSET_DECIMALS)\n    )\n      throw Error(\n        `assetDecimals must be a positive number and smaller than ${ALGORAND_MAX_ASSET_DECIMALS.toString()}`\n      );\n    if (\n      txn.assetIndex !== undefined &&\n      (!Number.isSafeInteger(txn.assetIndex) || txn.assetIndex < 0)\n    )\n      throw Error(\n        'Asset index must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appIndex !== undefined &&\n      (!Number.isSafeInteger(txn.appIndex) || txn.appIndex < 0)\n    )\n      throw Error(\n        'Application index must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appLocalInts !== undefined &&\n      (!Number.isSafeInteger(txn.appLocalInts) || txn.appLocalInts < 0)\n    )\n      throw Error(\n        'Application local ints count must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appLocalByteSlices !== undefined &&\n      (!Number.isSafeInteger(txn.appLocalByteSlices) ||\n        txn.appLocalByteSlices < 0)\n    )\n      throw Error(\n        'Application local byte slices count must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appGlobalInts !== undefined &&\n      (!Number.isSafeInteger(txn.appGlobalInts) || txn.appGlobalInts < 0)\n    )\n      throw Error(\n        'Application global ints count must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appGlobalByteSlices !== undefined &&\n      (!Number.isSafeInteger(txn.appGlobalByteSlices) ||\n        txn.appGlobalByteSlices < 0)\n    )\n      throw Error(\n        'Application global byte slices count must be a positive number and smaller than 2^53-1'\n      );\n    if (txn.appApprovalProgram !== undefined) {\n      if (txn.appApprovalProgram.constructor !== Uint8Array)\n        throw Error('appApprovalProgram must be a Uint8Array.');\n    }\n    if (txn.appClearProgram !== undefined) {\n      if (txn.appClearProgram.constructor !== Uint8Array)\n        throw Error('appClearProgram must be a Uint8Array.');\n    }\n    if (txn.appArgs !== undefined) {\n      if (!Array.isArray(txn.appArgs))\n        throw Error('appArgs must be an Array of Uint8Array.');\n      txn.appArgs = txn.appArgs.slice();\n      txn.appArgs.forEach((arg) => {\n        if (arg.constructor !== Uint8Array)\n          throw Error('each element of AppArgs must be a Uint8Array.');\n      });\n    } else {\n      txn.appArgs = [];\n    }\n    if (txn.appAccounts !== undefined) {\n      if (!Array.isArray(txn.appAccounts))\n        throw Error('appAccounts must be an Array of addresses.');\n      txn.appAccounts = txn.appAccounts.map((addressAsString) =>\n        address.decodeAddress(addressAsString)\n      );\n    }\n    if (txn.appForeignApps !== undefined) {\n      if (!Array.isArray(txn.appForeignApps))\n        throw Error('appForeignApps must be an Array of integers.');\n      txn.appForeignApps = txn.appForeignApps.slice();\n      txn.appForeignApps.forEach((foreignAppIndex) => {\n        if (!Number.isSafeInteger(foreignAppIndex) || foreignAppIndex < 0)\n          throw Error(\n            'each foreign application index must be a positive number and smaller than 2^53-1'\n          );\n      });\n    }\n    if (txn.appForeignAssets !== undefined) {\n      if (!Array.isArray(txn.appForeignAssets))\n        throw Error('appForeignAssets must be an Array of integers.');\n      txn.appForeignAssets = txn.appForeignAssets.slice();\n      txn.appForeignAssets.forEach((foreignAssetIndex) => {\n        if (!Number.isSafeInteger(foreignAssetIndex) || foreignAssetIndex < 0)\n          throw Error(\n            'each foreign asset index must be a positive number and smaller than 2^53-1'\n          );\n      });\n    }\n    if (txn.boxes !== undefined) {\n      if (!Array.isArray(txn.boxes))\n        throw Error('boxes must be an Array of BoxReference.');\n      txn.boxes = txn.boxes.slice();\n      txn.boxes.forEach((box) => {\n        if (\n          !Number.isSafeInteger(box.appIndex) ||\n          box.name.constructor !== Uint8Array\n        )\n          throw Error(\n            'box app index must be a number and name must be an Uint8Array.'\n          );\n      });\n    }\n    if (\n      txn.assetMetadataHash !== undefined &&\n      txn.assetMetadataHash.length !== 0\n    ) {\n      if (typeof txn.assetMetadataHash === 'string') {\n        txn.assetMetadataHash = new Uint8Array(\n          Buffer.from(txn.assetMetadataHash)\n        );\n      }\n\n      if (\n        txn.assetMetadataHash.constructor !== Uint8Array ||\n        txn.assetMetadataHash.byteLength !== ASSET_METADATA_HASH_LENGTH\n      ) {\n        throw Error(\n          `assetMetadataHash must be a ${ASSET_METADATA_HASH_LENGTH} byte Uint8Array or string.`\n        );\n      }\n\n      if (txn.assetMetadataHash.every((value) => value === 0)) {\n        // if hash contains all 0s, omit it\n        txn.assetMetadataHash = undefined;\n      }\n    } else {\n      txn.assetMetadataHash = undefined;\n    }\n    if (txn.note !== undefined) {\n      if (txn.note.constructor !== Uint8Array)\n        throw Error('note must be a Uint8Array.');\n    } else {\n      txn.note = new Uint8Array(0);\n    }\n    if (txn.lease !== undefined) {\n      if (txn.lease.constructor !== Uint8Array)\n        throw Error('lease must be a Uint8Array.');\n      if (txn.lease.length !== ALGORAND_TRANSACTION_LEASE_LENGTH)\n        throw Error(\n          `lease must be of length ${ALGORAND_TRANSACTION_LEASE_LENGTH.toString()}.`\n        );\n      if (txn.lease.every((value) => value === 0)) {\n        // if lease contains all 0s, omit it\n        txn.lease = new Uint8Array(0);\n      }\n    } else {\n      txn.lease = new Uint8Array(0);\n    }\n    txn.voteKey = getKeyregKey(txn.voteKey, 'voteKey', KEYREG_VOTE_KEY_LENGTH);\n    txn.selectionKey = getKeyregKey(\n      txn.selectionKey,\n      'selectionKey',\n      KEYREG_SELECTION_KEY_LENGTH\n    );\n    txn.stateProofKey = getKeyregKey(\n      txn.stateProofKey,\n      'stateProofKey',\n      KEYREG_STATE_PROOF_KEY_LENGTH\n    );\n    // Checking non-participation key registration\n    if (\n      txn.nonParticipation &&\n      (txn.voteKey ||\n        txn.selectionKey ||\n        txn.voteFirst ||\n        txn.stateProofKey ||\n        txn.voteLast ||\n        txn.voteKeyDilution)\n    ) {\n      throw new Error(\n        'nonParticipation is true but participation params are present.'\n      );\n    }\n    // Checking online key registration\n    if (\n      !txn.nonParticipation &&\n      (txn.voteKey ||\n        txn.selectionKey ||\n        txn.stateProofKey ||\n        txn.voteFirst ||\n        txn.voteLast ||\n        txn.voteKeyDilution) &&\n      !(\n        txn.voteKey &&\n        txn.selectionKey &&\n        txn.voteFirst &&\n        txn.voteLast &&\n        txn.voteKeyDilution\n      )\n      // stateProofKey not included here for backwards compatibility\n    ) {\n      throw new Error(\n        'online key registration missing at least one of the following fields: ' +\n          'voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution'\n      );\n    }\n    // The last option is an offline key registration where all the fields\n    // nonParticipation, voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution\n    // are all undefined/false\n\n    // Remove unwanted properties and store transaction on instance\n    delete ((txn as unknown) as AnyTransactionWithParams).suggestedParams;\n    Object.assign(this, utils.removeUndefinedProperties(txn));\n\n    // Modify Fee\n    if (!txn.flatFee) {\n      this.fee *= this.estimateSize();\n      // If suggested fee too small and will be rejected, set to min tx fee\n      if (this.fee < ALGORAND_MIN_TX_FEE) {\n        this.fee = ALGORAND_MIN_TX_FEE;\n      }\n    }\n\n    // say we are aware of groups\n    this.group = undefined;\n\n    // stpf fields\n    if (\n      txn.stateProofType !== undefined &&\n      (!Number.isSafeInteger(txn.stateProofType) || txn.stateProofType < 0)\n    )\n      throw Error(\n        'State Proof type must be a positive number and smaller than 2^53-1'\n      );\n    if (txn.stateProofMessage !== undefined) {\n      if (txn.stateProofMessage.constructor !== Uint8Array)\n        throw Error('stateProofMessage must be a Uint8Array.');\n    } else {\n      txn.stateProofMessage = new Uint8Array(0);\n    }\n    if (txn.stateProof !== undefined) {\n      if (txn.stateProof.constructor !== Uint8Array)\n        throw Error('stateProof must be a Uint8Array.');\n    } else {\n      txn.stateProof = new Uint8Array(0);\n    }\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    if (this.type === 'pay') {\n      const txn: EncodedTransaction = {\n        amt: this.amount,\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: 'pay',\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n      };\n\n      // parse close address\n      if (\n        this.closeRemainderTo !== undefined &&\n        address.encodeAddress(this.closeRemainderTo.publicKey) !==\n          address.ALGORAND_ZERO_ADDRESS_STRING\n      ) {\n        txn.close = Buffer.from(this.closeRemainderTo.publicKey);\n      }\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      // allowed zero values\n      if (this.to !== undefined) txn.rcv = Buffer.from(this.to.publicKey);\n      if (!txn.note.length) delete txn.note;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (txn.grp === undefined) delete txn.grp;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.rekey) delete txn.rekey;\n      return txn;\n    }\n    if (this.type === 'keyreg') {\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        votekey: this.voteKey,\n        selkey: this.selectionKey,\n        sprfkey: this.stateProofKey,\n        votefst: this.voteFirst,\n        votelst: this.voteLast,\n        votekd: this.voteKeyDilution,\n      };\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (txn.grp === undefined) delete txn.grp;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      if (this.nonParticipation) {\n        txn.nonpart = true;\n      }\n      if (!txn.selkey) delete txn.selkey;\n      if (!txn.votekey) delete txn.votekey;\n      if (!txn.sprfkey) delete txn.sprfkey;\n      if (!txn.votefst) delete txn.votefst;\n      if (!txn.votelst) delete txn.votelst;\n      if (!txn.votekd) delete txn.votekd;\n      return txn;\n    }\n    if (this.type === 'acfg') {\n      // asset creation, or asset reconfigure, or asset destruction\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        caid: this.assetIndex,\n        apar: {\n          t: this.assetTotal,\n          df: this.assetDefaultFrozen,\n          dc: this.assetDecimals,\n        },\n      };\n      if (this.assetManager !== undefined)\n        txn.apar.m = Buffer.from(this.assetManager.publicKey);\n      if (this.assetReserve !== undefined)\n        txn.apar.r = Buffer.from(this.assetReserve.publicKey);\n      if (this.assetFreeze !== undefined)\n        txn.apar.f = Buffer.from(this.assetFreeze.publicKey);\n      if (this.assetClawback !== undefined)\n        txn.apar.c = Buffer.from(this.assetClawback.publicKey);\n      if (this.assetName !== undefined) txn.apar.an = this.assetName;\n      if (this.assetUnitName !== undefined) txn.apar.un = this.assetUnitName;\n      if (this.assetURL !== undefined) txn.apar.au = this.assetURL;\n      if (this.assetMetadataHash !== undefined)\n        txn.apar.am = Buffer.from(this.assetMetadataHash);\n\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n\n      if (!txn.caid) delete txn.caid;\n      if (\n        !txn.apar.t &&\n        !txn.apar.un &&\n        !txn.apar.an &&\n        !txn.apar.df &&\n        !txn.apar.m &&\n        !txn.apar.r &&\n        !txn.apar.f &&\n        !txn.apar.c &&\n        !txn.apar.au &&\n        !txn.apar.am &&\n        !txn.apar.dc\n      ) {\n        delete txn.apar;\n      } else {\n        if (!txn.apar.t) delete txn.apar.t;\n        if (!txn.apar.dc) delete txn.apar.dc;\n        if (!txn.apar.un) delete txn.apar.un;\n        if (!txn.apar.an) delete txn.apar.an;\n        if (!txn.apar.df) delete txn.apar.df;\n        if (!txn.apar.m) delete txn.apar.m;\n        if (!txn.apar.r) delete txn.apar.r;\n        if (!txn.apar.f) delete txn.apar.f;\n        if (!txn.apar.c) delete txn.apar.c;\n        if (!txn.apar.au) delete txn.apar.au;\n        if (!txn.apar.am) delete txn.apar.am;\n      }\n      if (txn.grp === undefined) delete txn.grp;\n\n      return txn;\n    }\n    if (this.type === 'axfer') {\n      // asset transfer, acceptance, revocation, mint, or burn\n      const txn: EncodedTransaction = {\n        aamt: this.amount,\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        arcv: Buffer.from(this.to.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        xaid: this.assetIndex,\n      };\n      if (this.closeRemainderTo !== undefined)\n        txn.aclose = Buffer.from(this.closeRemainderTo.publicKey);\n      if (this.assetRevocationTarget !== undefined)\n        txn.asnd = Buffer.from(this.assetRevocationTarget.publicKey);\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.aamt) delete txn.aamt;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (txn.grp === undefined) delete txn.grp;\n      if (!txn.aclose) delete txn.aclose;\n      if (!txn.asnd) delete txn.asnd;\n      if (!txn.rekey) delete txn.rekey;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      return txn;\n    }\n    if (this.type === 'afrz') {\n      // asset freeze or unfreeze\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        faid: this.assetIndex,\n        afrz: this.freezeState,\n      };\n      if (this.freezeAccount !== undefined)\n        txn.fadd = Buffer.from(this.freezeAccount.publicKey);\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (!txn.afrz) delete txn.afrz;\n      if (txn.grp === undefined) delete txn.grp;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      return txn;\n    }\n    if (this.type === 'appl') {\n      // application call of some kind\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        apid: this.appIndex,\n        apan: this.appOnComplete,\n        apls: {\n          nui: this.appLocalInts,\n          nbs: this.appLocalByteSlices,\n        },\n        apgs: {\n          nui: this.appGlobalInts,\n          nbs: this.appGlobalByteSlices,\n        },\n        apfa: this.appForeignApps,\n        apas: this.appForeignAssets,\n        apep: this.extraPages,\n        apbx: translateBoxReferences(\n          this.boxes,\n          this.appForeignApps,\n          this.appIndex\n        ),\n      };\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      if (this.appApprovalProgram !== undefined) {\n        txn.apap = Buffer.from(this.appApprovalProgram);\n      }\n      if (this.appClearProgram !== undefined) {\n        txn.apsu = Buffer.from(this.appClearProgram);\n      }\n      if (this.appArgs !== undefined) {\n        txn.apaa = this.appArgs.map((arg) => Buffer.from(arg));\n      }\n      if (this.appAccounts !== undefined) {\n        txn.apat = this.appAccounts.map((decodedAddress) =>\n          Buffer.from(decodedAddress.publicKey)\n        );\n      }\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (!txn.apid) delete txn.apid;\n      if (!txn.apls.nui) delete txn.apls.nui;\n      if (!txn.apls.nbs) delete txn.apls.nbs;\n      if (!txn.apls.nui && !txn.apls.nbs) delete txn.apls;\n      if (!txn.apgs.nui) delete txn.apgs.nui;\n      if (!txn.apgs.nbs) delete txn.apgs.nbs;\n      if (!txn.apaa || !txn.apaa.length) delete txn.apaa;\n      if (!txn.apgs.nui && !txn.apgs.nbs) delete txn.apgs;\n      if (!txn.apap) delete txn.apap;\n      if (!txn.apsu) delete txn.apsu;\n      if (!txn.apan) delete txn.apan;\n      if (!txn.apfa || !txn.apfa.length) delete txn.apfa;\n      if (!txn.apas || !txn.apas.length) delete txn.apas;\n      for (const box of txn.apbx) {\n        if (!box.i) delete box.i;\n        if (!box.n || !box.n.length) delete box.n;\n      }\n      if (!txn.apbx || !txn.apbx.length) delete txn.apbx;\n      if (!txn.apat || !txn.apat.length) delete txn.apat;\n      if (!txn.apep) delete txn.apep;\n      if (txn.grp === undefined) delete txn.grp;\n      return txn;\n    }\n    if (this.type === 'stpf') {\n      // state proof txn\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        sptype: this.stateProofType,\n        spmsg: Buffer.from(this.stateProofMessage),\n        sp: Buffer.from(this.stateProof),\n      };\n      // allowed zero values\n      if (!txn.sptype) delete txn.sptype;\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (!txn.apid) delete txn.apid;\n      if (!txn.apaa || !txn.apaa.length) delete txn.apaa;\n      if (!txn.apap) delete txn.apap;\n      if (!txn.apsu) delete txn.apsu;\n      if (!txn.apan) delete txn.apan;\n      if (!txn.apfa || !txn.apfa.length) delete txn.apfa;\n      if (!txn.apas || !txn.apas.length) delete txn.apas;\n      if (!txn.apat || !txn.apat.length) delete txn.apat;\n      if (!txn.apep) delete txn.apep;\n      if (txn.grp === undefined) delete txn.grp;\n      return txn;\n    }\n\n    return undefined;\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(txnForEnc: EncodedTransaction): Transaction {\n    const txn = Object.create(this.prototype) as Transaction;\n    txn.name = 'Transaction';\n    txn.tag = Buffer.from('TX');\n\n    txn.genesisID = txnForEnc.gen;\n    txn.genesisHash = Buffer.from(txnForEnc.gh);\n    if (!isTransactionType(txnForEnc.type)) {\n      throw new Error(`Unrecognized transaction type: ${txnForEnc.type}`);\n    }\n    txn.type = txnForEnc.type;\n    txn.fee = txnForEnc.fee;\n    txn.firstRound = txnForEnc.fv;\n    txn.lastRound = txnForEnc.lv;\n    txn.note = new Uint8Array(txnForEnc.note);\n    txn.lease = new Uint8Array(txnForEnc.lx);\n    txn.from = address.decodeAddress(\n      address.encodeAddress(new Uint8Array(txnForEnc.snd))\n    );\n    if (txnForEnc.grp !== undefined) txn.group = Buffer.from(txnForEnc.grp);\n    if (txnForEnc.rekey !== undefined)\n      txn.reKeyTo = address.decodeAddress(\n        address.encodeAddress(new Uint8Array(txnForEnc.rekey))\n      );\n\n    if (txnForEnc.type === 'pay') {\n      txn.amount = txnForEnc.amt;\n      txn.to = address.decodeAddress(\n        address.encodeAddress(new Uint8Array(txnForEnc.rcv))\n      );\n      if (txnForEnc.close !== undefined)\n        txn.closeRemainderTo = address.decodeAddress(\n          address.encodeAddress(txnForEnc.close)\n        );\n    } else if (txnForEnc.type === 'keyreg') {\n      if (txnForEnc.votekey !== undefined) {\n        txn.voteKey = Buffer.from(txnForEnc.votekey);\n      }\n      if (txnForEnc.selkey !== undefined) {\n        txn.selectionKey = Buffer.from(txnForEnc.selkey);\n      }\n      if (txnForEnc.sprfkey !== undefined) {\n        txn.stateProofKey = Buffer.from(txnForEnc.sprfkey);\n      }\n      if (txnForEnc.votekd !== undefined) {\n        txn.voteKeyDilution = txnForEnc.votekd;\n      }\n      if (txnForEnc.votefst !== undefined) {\n        txn.voteFirst = txnForEnc.votefst;\n      }\n      if (txnForEnc.votelst !== undefined) {\n        txn.voteLast = txnForEnc.votelst;\n      }\n      if (txnForEnc.nonpart !== undefined) {\n        txn.nonParticipation = txnForEnc.nonpart;\n      }\n    } else if (txnForEnc.type === 'acfg') {\n      // asset creation, or asset reconfigure, or asset destruction\n      if (txnForEnc.caid !== undefined) {\n        txn.assetIndex = txnForEnc.caid;\n      }\n      if (txnForEnc.apar !== undefined) {\n        txn.assetTotal = txnForEnc.apar.t;\n        txn.assetDefaultFrozen = txnForEnc.apar.df;\n        if (txnForEnc.apar.dc !== undefined)\n          txn.assetDecimals = txnForEnc.apar.dc;\n        if (txnForEnc.apar.m !== undefined)\n          txn.assetManager = address.decodeAddress(\n            address.encodeAddress(new Uint8Array(txnForEnc.apar.m))\n          );\n        if (txnForEnc.apar.r !== undefined)\n          txn.assetReserve = address.decodeAddress(\n            address.encodeAddress(new Uint8Array(txnForEnc.apar.r))\n          );\n        if (txnForEnc.apar.f !== undefined)\n          txn.assetFreeze = address.decodeAddress(\n            address.encodeAddress(new Uint8Array(txnForEnc.apar.f))\n          );\n        if (txnForEnc.apar.c !== undefined)\n          txn.assetClawback = address.decodeAddress(\n            address.encodeAddress(new Uint8Array(txnForEnc.apar.c))\n          );\n        if (txnForEnc.apar.un !== undefined)\n          txn.assetUnitName = txnForEnc.apar.un;\n        if (txnForEnc.apar.an !== undefined) txn.assetName = txnForEnc.apar.an;\n        if (txnForEnc.apar.au !== undefined) txn.assetURL = txnForEnc.apar.au;\n        if (txnForEnc.apar.am !== undefined)\n          txn.assetMetadataHash = txnForEnc.apar.am;\n      }\n    } else if (txnForEnc.type === 'axfer') {\n      // asset transfer, acceptance, revocation, mint, or burn\n      if (txnForEnc.xaid !== undefined) {\n        txn.assetIndex = txnForEnc.xaid;\n      }\n      if (txnForEnc.aamt !== undefined) txn.amount = txnForEnc.aamt;\n      if (txnForEnc.aclose !== undefined) {\n        txn.closeRemainderTo = address.decodeAddress(\n          address.encodeAddress(new Uint8Array(txnForEnc.aclose))\n        );\n      }\n      if (txnForEnc.asnd !== undefined) {\n        txn.assetRevocationTarget = address.decodeAddress(\n          address.encodeAddress(new Uint8Array(txnForEnc.asnd))\n        );\n      }\n      txn.to = address.decodeAddress(\n        address.encodeAddress(new Uint8Array(txnForEnc.arcv))\n      );\n    } else if (txnForEnc.type === 'afrz') {\n      if (txnForEnc.afrz !== undefined) {\n        txn.freezeState = txnForEnc.afrz;\n      }\n      if (txnForEnc.faid !== undefined) {\n        txn.assetIndex = txnForEnc.faid;\n      }\n      txn.freezeAccount = address.decodeAddress(\n        address.encodeAddress(new Uint8Array(txnForEnc.fadd))\n      );\n    } else if (txnForEnc.type === 'appl') {\n      if (txnForEnc.apid !== undefined) {\n        txn.appIndex = txnForEnc.apid;\n      }\n      if (txnForEnc.apan !== undefined) {\n        txn.appOnComplete = txnForEnc.apan;\n      }\n      if (txnForEnc.apls !== undefined) {\n        if (txnForEnc.apls.nui !== undefined)\n          txn.appLocalInts = txnForEnc.apls.nui;\n        if (txnForEnc.apls.nbs !== undefined)\n          txn.appLocalByteSlices = txnForEnc.apls.nbs;\n      }\n      if (txnForEnc.apgs !== undefined) {\n        if (txnForEnc.apgs.nui !== undefined)\n          txn.appGlobalInts = txnForEnc.apgs.nui;\n        if (txnForEnc.apgs.nbs !== undefined)\n          txn.appGlobalByteSlices = txnForEnc.apgs.nbs;\n      }\n      if (txnForEnc.apep !== undefined) {\n        txn.extraPages = txnForEnc.apep;\n      }\n      if (txnForEnc.apap !== undefined) {\n        txn.appApprovalProgram = new Uint8Array(txnForEnc.apap);\n      }\n      if (txnForEnc.apsu !== undefined) {\n        txn.appClearProgram = new Uint8Array(txnForEnc.apsu);\n      }\n      if (txnForEnc.apaa !== undefined) {\n        txn.appArgs = txnForEnc.apaa.map((arg) => new Uint8Array(arg));\n      }\n      if (txnForEnc.apat !== undefined) {\n        txn.appAccounts = txnForEnc.apat.map((addressBytes) =>\n          address.decodeAddress(\n            address.encodeAddress(new Uint8Array(addressBytes))\n          )\n        );\n      }\n      if (txnForEnc.apfa !== undefined) {\n        txn.appForeignApps = txnForEnc.apfa;\n      }\n      if (txnForEnc.apas !== undefined) {\n        txn.appForeignAssets = txnForEnc.apas;\n      }\n      if (txnForEnc.apbx !== undefined) {\n        txn.boxes = txnForEnc.apbx.map((box) => ({\n          // We return 0 for the app ID so that it's guaranteed translateBoxReferences will\n          // translate the app index back to 0. If we instead returned the called app ID,\n          // translateBoxReferences would translate the app index to a nonzero value if the called\n          // app is also in the foreign app array.\n          appIndex: box.i ? txn.appForeignApps[box.i - 1] : 0,\n          name: box.n,\n        }));\n      }\n    } else if (txnForEnc.type === 'stpf') {\n      if (txnForEnc.sptype !== undefined) {\n        txn.stateProofType = txnForEnc.sptype;\n      }\n      if (txnForEnc.sp !== undefined) {\n        txn.stateProof = txnForEnc.sp;\n      }\n      if (txnForEnc.spmsg !== undefined) {\n        txn.stateProofMessage = txnForEnc.spmsg;\n      }\n    }\n    return txn;\n  }\n\n  estimateSize() {\n    return this.toByte().length + NUM_ADDL_BYTES_AFTER_SIGNING;\n  }\n\n  bytesToSign() {\n    const encodedMsg = this.toByte();\n    return Buffer.from(utils.concatArrays(this.tag, encodedMsg));\n  }\n\n  toByte() {\n    return encoding.encode(this.get_obj_for_encoding());\n  }\n\n  // returns the raw signature\n  rawSignTxn(sk: Uint8Array) {\n    const toBeSigned = this.bytesToSign();\n    const sig = nacl.sign(toBeSigned, sk);\n    return Buffer.from(sig);\n  }\n\n  signTxn(sk: Uint8Array) {\n    // construct signed message\n    const sTxn: EncodedSignedTransaction = {\n      sig: this.rawSignTxn(sk),\n      txn: this.get_obj_for_encoding(),\n    };\n    // add AuthAddr if signing with a different key than From indicates\n    const keypair = nacl.keyPairFromSecretKey(sk);\n    const pubKeyFromSk = keypair.publicKey;\n    if (\n      address.encodeAddress(pubKeyFromSk) !==\n      address.encodeAddress(this.from.publicKey)\n    ) {\n      sTxn.sgnr = Buffer.from(pubKeyFromSk);\n    }\n    return new Uint8Array(encoding.encode(sTxn));\n  }\n\n  attachSignature(signerAddr: string, signature: Uint8Array) {\n    if (!nacl.isValidSignatureLength(signature.length)) {\n      throw new Error('Invalid signature length');\n    }\n    const sTxn: EncodedSignedTransaction = {\n      sig: Buffer.from(signature),\n      txn: this.get_obj_for_encoding(),\n    };\n    // add AuthAddr if signing with a different key than From indicates\n    if (signerAddr !== address.encodeAddress(this.from.publicKey)) {\n      const signerPublicKey = address.decodeAddress(signerAddr).publicKey;\n      sTxn.sgnr = Buffer.from(signerPublicKey);\n    }\n    return new Uint8Array(encoding.encode(sTxn));\n  }\n\n  rawTxID() {\n    const enMsg = this.toByte();\n    const gh = Buffer.from(utils.concatArrays(this.tag, enMsg));\n    return Buffer.from(nacl.genericHash(gh));\n  }\n\n  txID() {\n    const hash = this.rawTxID();\n    return base32.encode(hash).slice(0, ALGORAND_TRANSACTION_LENGTH);\n  }\n\n  // add a lease to a transaction not yet having\n  // supply feePerByte to increment fee accordingly\n  addLease(lease: Uint8Array, feePerByte = 0) {\n    let mutableLease: Uint8Array;\n\n    if (lease !== undefined) {\n      if (lease.constructor !== Uint8Array)\n        throw Error('lease must be a Uint8Array.');\n      if (lease.length !== ALGORAND_TRANSACTION_LEASE_LENGTH)\n        throw Error(\n          `lease must be of length ${ALGORAND_TRANSACTION_LEASE_LENGTH.toString()}.`\n        );\n\n      mutableLease = new Uint8Array(lease);\n    } else {\n      mutableLease = new Uint8Array(0);\n    }\n    this.lease = mutableLease;\n    if (feePerByte !== 0) {\n      this.fee +=\n        (ALGORAND_TRANSACTION_LEASE_LABEL_LENGTH +\n          ALGORAND_TRANSACTION_LEASE_LENGTH) *\n        feePerByte;\n    }\n  }\n\n  // add the rekey-to field to a transaction not yet having it\n  // supply feePerByte to increment fee accordingly\n  addRekey(reKeyTo: string, feePerByte = 0) {\n    if (reKeyTo !== undefined) {\n      this.reKeyTo = address.decodeAddress(reKeyTo);\n    }\n    if (feePerByte !== 0) {\n      this.fee +=\n        (ALGORAND_TRANSACTION_REKEY_LABEL_LENGTH +\n          ALGORAND_TRANSACTION_ADDRESS_LENGTH) *\n        feePerByte;\n    }\n  }\n\n  // build display dict for prettyPrint and toString\n  // eslint-disable-next-line no-underscore-dangle\n  _getDictForDisplay() {\n    const forPrinting: TransactionStorageStructure & Record<string, any> = {\n      ...this,\n    };\n    forPrinting.tag = forPrinting.tag.toString();\n    forPrinting.from = address.encodeAddress(\n      (forPrinting.from as Address).publicKey\n    );\n    if (forPrinting.to !== undefined)\n      forPrinting.to = address.encodeAddress(\n        (forPrinting.to as Address).publicKey\n      );\n    // things that need fixing:\n    if (forPrinting.freezeAccount !== undefined)\n      forPrinting.freezeAccount = address.encodeAddress(\n        (forPrinting.freezeAccount as Address).publicKey\n      );\n    if (forPrinting.closeRemainderTo !== undefined)\n      forPrinting.closeRemainderTo = address.encodeAddress(\n        (forPrinting.closeRemainderTo as Address).publicKey\n      );\n    if (forPrinting.assetManager !== undefined)\n      forPrinting.assetManager = address.encodeAddress(\n        (forPrinting.assetManager as Address).publicKey\n      );\n    if (forPrinting.assetReserve !== undefined)\n      forPrinting.assetReserve = address.encodeAddress(\n        (forPrinting.assetReserve as Address).publicKey\n      );\n    if (forPrinting.assetFreeze !== undefined)\n      forPrinting.assetFreeze = address.encodeAddress(\n        (forPrinting.assetFreeze as Address).publicKey\n      );\n    if (forPrinting.assetClawback !== undefined)\n      forPrinting.assetClawback = address.encodeAddress(\n        (forPrinting.assetClawback as Address).publicKey\n      );\n    if (forPrinting.assetRevocationTarget !== undefined)\n      forPrinting.assetRevocationTarget = address.encodeAddress(\n        (forPrinting.assetRevocationTarget as Address).publicKey\n      );\n    if (forPrinting.reKeyTo !== undefined)\n      forPrinting.reKeyTo = address.encodeAddress(\n        (forPrinting.reKeyTo as Address).publicKey\n      );\n    forPrinting.genesisHash = forPrinting.genesisHash.toString('base64');\n    return forPrinting;\n  }\n\n  // pretty print the transaction to console\n  prettyPrint() {\n    // eslint-disable-next-line no-underscore-dangle,no-console\n    console.log(this._getDictForDisplay());\n  }\n\n  // get string representation\n  toString() {\n    // eslint-disable-next-line no-underscore-dangle\n    return JSON.stringify(this._getDictForDisplay());\n  }\n}\n\n/**\n * encodeUnsignedTransaction takes a completed txnBuilder.Transaction object, such as from the makeFoo\n * family of transactions, and converts it to a Buffer\n * @param transactionObject - the completed Transaction object\n */\nexport function encodeUnsignedTransaction(transactionObject: Transaction) {\n  const objToEncode = transactionObject.get_obj_for_encoding();\n  return encoding.encode(objToEncode);\n}\n\n/**\n * decodeUnsignedTransaction takes a Buffer (as if from encodeUnsignedTransaction) and converts it to a txnBuilder.Transaction object\n * @param transactionBuffer - the Uint8Array containing a transaction\n */\nexport function decodeUnsignedTransaction(\n  transactionBuffer: ArrayLike<number>\n) {\n  const partlyDecodedObject = encoding.decode(\n    transactionBuffer\n  ) as EncodedTransaction;\n  return Transaction.from_obj_for_encoding(partlyDecodedObject);\n}\n\n/**\n * Object representing a transaction with a signature\n */\nexport interface SignedTransaction {\n  /**\n   * Transaction signature\n   */\n  sig?: Buffer;\n\n  /**\n   * The transaction that was signed\n   */\n  txn: Transaction;\n\n  /**\n   * Multisig structure\n   */\n  msig?: EncodedMultisig;\n\n  /**\n   * Logic signature\n   */\n  lsig?: EncodedLogicSig;\n\n  /**\n   * The signer, if signing with a different key than the Transaction type `from` property indicates\n   */\n  sgnr?: Buffer;\n}\n\n/**\n * decodeSignedTransaction takes a Buffer (from transaction.signTxn) and converts it to an object\n * containing the Transaction (txn), the signature (sig), and the auth-addr field if applicable (sgnr)\n * @param transactionBuffer - the Uint8Array containing a transaction\n * @returns containing a Transaction, the signature, and possibly an auth-addr field\n */\nexport function decodeSignedTransaction(\n  transactionBuffer: Uint8Array\n): SignedTransaction {\n  const stxnDecoded = encoding.decode(\n    transactionBuffer\n  ) as EncodedSignedTransaction;\n  const stxn: SignedTransaction = {\n    ...stxnDecoded,\n    txn: Transaction.from_obj_for_encoding(stxnDecoded.txn),\n  };\n  return stxn;\n}\n\n/**\n * Either a valid transaction object or an instance of the Transaction class\n */\nexport type TransactionLike = AnyTransaction | Transaction;\n\nexport function instantiateTxnIfNeeded(transactionLike: TransactionLike) {\n  return transactionLike instanceof Transaction\n    ? transactionLike\n    : new Transaction(transactionLike);\n}\n\nexport default Transaction;\n","/**\n * Configure how integers in JSON response will be decoded.\n */\nenum IntDecoding {\n  /**\n   * All integers will be decoded as Numbers, meaning any values greater than\n   * Number.MAX_SAFE_INTEGER will lose precision.\n   */\n  DEFAULT = 'default',\n\n  /**\n   * All integers will be decoded as Numbers, but if any values are greater than\n   * Number.MAX_SAFE_INTEGER an error will be thrown.\n   */\n  SAFE = 'safe',\n\n  /**\n   * Integers will be decoded as Numbers if they are less than or equal to\n   * Number.MAX_SAFE_INTEGER, otherwise they will be decoded as BigInts.\n   */\n  MIXED = 'mixed',\n\n  /**\n   * All integers will be decoded as BigInts.\n   */\n  BIGINT = 'bigint',\n}\n\nexport default IntDecoding;\n","/**\n * Enum for application transaction types.\n *\n * The full list is available at https://developer.algorand.org/docs/reference/transactions/\n */\nexport enum TransactionType {\n  /**\n   * Payment transaction\n   */\n  pay = 'pay',\n\n  /**\n   * Key registration transaction\n   */\n  keyreg = 'keyreg',\n\n  /**\n   * Asset configuration transaction\n   */\n  acfg = 'acfg',\n\n  /**\n   * Asset transfer transaction\n   */\n  axfer = 'axfer',\n\n  /**\n   * Asset freeze transaction\n   */\n  afrz = 'afrz',\n\n  /**\n   * Application transaction\n   */\n  appl = 'appl',\n  /**\n   * State proof transaction\n   */\n  stpf = 'stpf',\n}\n\nexport function isTransactionType(s: string): s is TransactionType {\n  return (\n    s === TransactionType.pay ||\n    s === TransactionType.keyreg ||\n    s === TransactionType.acfg ||\n    s === TransactionType.axfer ||\n    s === TransactionType.afrz ||\n    s === TransactionType.appl ||\n    s === TransactionType.stpf\n  );\n}\n\n/**\n * Enums for application transactions on-transaction-complete behavior\n */\nexport enum OnApplicationComplete {\n  /**\n   * NoOpOC indicates that an application transaction will simply call its\n   * ApprovalProgram\n   */\n  NoOpOC,\n\n  /**\n   * OptInOC indicates that an application transaction will allocate some\n   * LocalState for the application in the sender's account\n   */\n  OptInOC,\n\n  /**\n   * CloseOutOC indicates that an application transaction will deallocate\n   * some LocalState for the application from the user's account\n   */\n  CloseOutOC,\n\n  /**\n   * ClearStateOC is similar to CloseOutOC, but may never fail. This\n   * allows users to reclaim their minimum balance from an application\n   * they no longer wish to opt in to.\n   */\n  ClearStateOC,\n\n  /**\n   * UpdateApplicationOC indicates that an application transaction will\n   * update the ApprovalProgram and ClearStateProgram for the application\n   */\n  UpdateApplicationOC,\n\n  /**\n   * DeleteApplicationOC indicates that an application transaction will\n   * delete the AppParams for the application from the creator's balance\n   * record\n   */\n  DeleteApplicationOC,\n}\n\n/**\n * A dict holding common-to-all-txns arguments\n */\nexport interface SuggestedParams {\n  /**\n   * Set this to true to specify fee as microalgos-per-txn\n   *   If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum\n   */\n  flatFee?: boolean;\n\n  /**\n   * Integer fee per byte, in microAlgos. For a flat fee, set flatFee to true\n   */\n  fee: number;\n\n  /**\n   * First protocol round on which this txn is valid\n   */\n  firstRound: number;\n\n  /**\n   * Last protocol round on which this txn is valid\n   */\n  lastRound: number;\n\n  /**\n   * Specifies genesis ID of network in use\n   */\n  genesisID: string;\n\n  /**\n   * Specifies hash genesis block of network in use\n   */\n  genesisHash: string;\n}\n\n/**\n * A grouping of the app ID and name of the box in an Uint8Array\n */\nexport interface BoxReference {\n  /**\n   * A unique application index\n   */\n  appIndex: number;\n\n  /**\n   * Name of box to reference\n   */\n  name: Uint8Array;\n}\n\n/**\n * A full list of all available transaction parameters\n *\n * The full documentation is available at:\n * https://developer.algorand.org/docs/reference/transactions/#common-fields-header-and-type\n */\nexport interface TransactionParams {\n  /**\n   * String representation of Algorand address of sender\n   */\n  from: string;\n\n  /**\n   * String representation of Algorand address of recipient\n   */\n  to: string;\n\n  /**\n   * Integer fee per byte, in microAlgos. For a flat fee, set flatFee to true\n   */\n  fee: number;\n\n  /**\n   * Integer amount to send\n   */\n  amount: number | bigint;\n\n  /**\n   * Integer first protocol round on which this txn is valid\n   */\n  firstRound: number;\n\n  /**\n   * Integer last protocol round on which this txn is valid\n   */\n  lastRound: number;\n\n  /**\n   * Arbitrary data for sender to store\n   */\n  note?: Uint8Array;\n\n  /**\n   * Specifies genesis ID of network in use\n   */\n  genesisID: string;\n\n  /**\n   * Specifies hash genesis block of network in use\n   */\n  genesisHash: string;\n\n  /**\n   * Lease a transaction. The sender cannot send another txn with that same lease until the last round of original txn has passed\n   */\n  lease?: Uint8Array;\n\n  /**\n   * Close out remaining account balance to this account\n   */\n  closeRemainderTo?: string;\n\n  /**\n   * Voting key bytes. For key deregistration, leave undefined\n   */\n  voteKey: Uint8Array | string;\n\n  /**\n   *Selection key bytes. For key deregistration, leave undefined\n   */\n  selectionKey: Uint8Array | string;\n\n  /**\n   * State proof key bytes. For key deregistration, leave undefined\n   */\n  stateProofKey: Uint8Array | string;\n\n  /**\n   * First round on which voteKey is valid\n   */\n  voteFirst: number;\n\n  /**\n   * Last round on which voteKey is valid\n   */\n  voteLast: number;\n\n  /**\n   * The dilution fo the 2-level participation key\n   */\n  voteKeyDilution: number;\n\n  /**\n   * Asset index uniquely specifying the asset\n   */\n  assetIndex: number;\n\n  /**\n   * Total supply of the asset\n   */\n  assetTotal: number | bigint;\n\n  /**\n   * Integer number of decimals for asset unit calcuation\n   */\n  assetDecimals: number;\n\n  /**\n   * Whether asset accounts should default to being frozen\n   */\n  assetDefaultFrozen: boolean;\n\n  /**\n   * String representation of Algorand address in charge of reserve, freeze, clawback, destruction, etc.\n   */\n  assetManager?: string;\n\n  /**\n   * String representation of Algorand address representing asset reserve\n   */\n  assetReserve?: string;\n\n  /**\n   * String representation of Algorand address with power to freeze/unfreeze asset holdings\n   */\n  assetFreeze?: string;\n\n  /**\n   * String representation of Algorand address with power to revoke asset holdings\n   */\n  assetClawback?: string;\n\n  /**\n   * Unit name for this asset\n   */\n  assetUnitName?: string;\n  /**\n   * Name for this asset\n   */\n  assetName?: string;\n\n  /**\n   * URL relating to this asset\n   */\n  assetURL?: string;\n\n  /**\n   * Uint8Array or UTF-8 string representation of a hash commitment with respect to the asset. Must be exactly 32 bytes long.\n   */\n  assetMetadataHash?: Uint8Array | string;\n\n  /**\n   * String representation of Algorand address being frozen or unfrozen\n   */\n  freezeAccount: string;\n\n  /**\n   * true if freezeTarget should be frozen, false if freezeTarget should be allowed to transact\n   */\n  freezeState: boolean;\n\n  /**\n   * String representation of Algorand address – if provided, and if \"from\" is\n   * the asset's revocation manager, then deduct from \"revocationTarget\" rather than \"from\"\n   */\n  assetRevocationTarget?: string;\n\n  /**\n   * A unique application index\n   */\n  appIndex: number;\n\n  /**\n   * What application should do once the program has been run\n   */\n  appOnComplete: OnApplicationComplete;\n\n  /**\n   * Restricts number of ints in per-user local state\n   */\n  appLocalInts: number;\n\n  /**\n   * Restricts number of byte slices in per-user local state\n   */\n  appLocalByteSlices: number;\n\n  /**\n   * Restricts number of ints in global state\n   */\n  appGlobalInts: number;\n\n  /**\n   * Restricts number of byte slices in global state\n   */\n  appGlobalByteSlices: number;\n\n  /**\n   * The compiled TEAL that approves a transaction\n   */\n  appApprovalProgram: Uint8Array;\n\n  /**\n   * The compiled TEAL program that runs when clearing state\n   */\n  appClearProgram: Uint8Array;\n\n  /**\n   * Array of Uint8Array, any additional arguments to the application\n   */\n  appArgs?: Uint8Array[];\n\n  /**\n   * Array of Address strings, any additional accounts to supply to the application\n   */\n  appAccounts?: string[];\n\n  /**\n   * Array of int, any other apps used by the application, identified by index\n   */\n  appForeignApps?: number[];\n\n  /**\n   * Array of int, any assets used by the application, identified by index\n   */\n  appForeignAssets?: number[];\n\n  /**\n   * Transaction type\n   */\n  type?: TransactionType;\n\n  /**\n   * Set this to true to specify fee as microalgos-per-txn.\n   *\n   * If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum\n   */\n  flatFee?: boolean;\n\n  /**\n   * A dict holding common-to-all-txns arguments\n   */\n  suggestedParams: SuggestedParams;\n\n  /**\n   * String representation of the Algorand address that will be used to authorize all future transactions\n   */\n  reKeyTo?: string;\n\n  /**\n   * Set this value to true to mark this account as nonparticipating.\n   *\n   * All new Algorand accounts are participating by default. This means they earn rewards.\n   */\n  nonParticipation?: boolean;\n\n  /**\n   * Int representing extra pages of memory to rent during an application create transaction.\n   */\n  extraPages?: number;\n\n  /**\n   * A grouping of the app ID and name of the box in an Uint8Array\n   */\n  boxes?: BoxReference[];\n\n  /*\n   * Uint64 identifying a particular configuration of state proofs.\n   */\n  stateProofType?: number | bigint;\n\n  /**\n   * Byte array containing the state proof.\n   */\n  stateProof?: Uint8Array;\n\n  /**\n   * Byte array containing the state proof message.\n   */\n  stateProofMessage?: Uint8Array;\n}\n","import JSONbigWithoutConfig from 'json-bigint';\nimport IntDecoding from '../types/intDecoding';\n\nconst JSONbig = JSONbigWithoutConfig({ useNativeBigInt: true, strict: true });\n\nexport interface JSONOptions {\n  intDecoding?: IntDecoding;\n}\n\n/**\n * Parse JSON with additional options.\n * @param str - The JSON string to parse.\n * @param options - Options object to configure how integers in\n *   this request's JSON response will be decoded. Use the `intDecoding`\n *   property with one of the following options:\n *\n *   * \"default\": All integers will be decoded as Numbers, meaning any values greater than\n *     Number.MAX_SAFE_INTEGER will lose precision.\n *   * \"safe\": All integers will be decoded as Numbers, but if any values are greater than\n *     Number.MAX_SAFE_INTEGER an error will be thrown.\n *   * \"mixed\": Integers will be decoded as Numbers if they are less than or equal to\n *     Number.MAX_SAFE_INTEGER, otherwise they will be decoded as BigInts.\n *   * \"bigint\": All integers will be decoded as BigInts.\n *\n *   Defaults to \"default\" if not included.\n */\nexport function parseJSON(str: string, options?: JSONOptions) {\n  const intDecoding =\n    options && options.intDecoding ? options.intDecoding : IntDecoding.DEFAULT;\n  return JSONbig.parse(str, (_, value) => {\n    if (\n      value != null &&\n      typeof value === 'object' &&\n      Object.getPrototypeOf(value) == null\n    ) {\n      // JSONbig.parse objects are created with Object.create(null) and thus have a null prototype\n      // let us remedy that\n      Object.setPrototypeOf(value, Object.prototype);\n    }\n\n    if (typeof value === 'bigint') {\n      if (intDecoding === 'safe' && value > Number.MAX_SAFE_INTEGER) {\n        throw new Error(\n          `Integer exceeds maximum safe integer: ${value.toString()}. Try parsing with a different intDecoding option.`\n        );\n      }\n      if (\n        intDecoding === 'bigint' ||\n        (intDecoding === 'mixed' && value > Number.MAX_SAFE_INTEGER)\n      ) {\n        return value;\n      }\n      // JSONbig.parse converts number to BigInts if they are >= 10**15. This is smaller than\n      // Number.MAX_SAFE_INTEGER, so we can convert some BigInts back to normal numbers.\n      return Number(value);\n    }\n\n    if (typeof value === 'number') {\n      if (intDecoding === 'bigint' && Number.isInteger(value)) {\n        return BigInt(value);\n      }\n    }\n\n    return value;\n  });\n}\n\n/**\n * ArrayEqual takes two arrays and return true if equal, false otherwise\n */\nexport function arrayEqual(a: ArrayLike<any>, b: ArrayLike<any>) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return Array.from(a).every((val, i) => val === b[i]);\n}\n\n/**\n * ConcatArrays takes n number arrays and returns a joint Uint8Array\n * @param arrs - An arbitrary number of n array-like number list arguments\n * @returns [a,b]\n */\nexport function concatArrays(...arrs: ArrayLike<number>[]) {\n  const size = arrs.reduce((sum, arr) => sum + arr.length, 0);\n  const c = new Uint8Array(size);\n\n  let offset = 0;\n  for (let i = 0; i < arrs.length; i++) {\n    c.set(arrs[i], offset);\n    offset += arrs[i].length;\n  }\n\n  return c;\n}\n\n/**\n * Remove undefined properties from an object\n * @param obj - An object, preferably one with some undefined properties\n * @returns A copy of the object with undefined properties removed\n */\nexport function removeUndefinedProperties(\n  obj: Record<string | number | symbol, any>\n) {\n  const mutableCopy = { ...obj };\n  Object.keys(mutableCopy).forEach((key) => {\n    if (typeof mutableCopy[key] === 'undefined') delete mutableCopy[key];\n  });\n  return mutableCopy;\n}\n\n/**\n * Check whether the environment is Node.js (as opposed to the browser)\n * @returns True if Node.js environment, false otherwise\n */\nexport function isNode() {\n  return (\n    typeof process === 'object' &&\n    typeof process.versions === 'object' &&\n    typeof process.versions.node !== 'undefined'\n  );\n}\n","import Algodv2 from './client/v2/algod/algod';\n\n/**\n * Wait until a transaction has been confirmed or rejected by the network, or\n * until 'waitRounds' number of rounds have passed.\n * @param client - An Algodv2 client\n * @param txid - The ID of the transaction to wait for.\n * @param waitRounds - The maximum number of rounds to wait for.\n * @returns A promise that, upon success, will resolve to the output of the\n *   `pendingTransactionInformation` call for the confirmed transaction.\n */\nexport async function waitForConfirmation(\n  client: Algodv2,\n  txid: string,\n  waitRounds: number\n): Promise<Record<string, any>> {\n  // Wait until the transaction is confirmed or rejected, or until 'waitRounds'\n  // number of rounds have passed.\n\n  const status = await client.status().do();\n  if (typeof status === 'undefined') {\n    throw new Error('Unable to get node status');\n  }\n  const startRound = status['last-round'] + 1;\n  let currentRound = startRound;\n\n  /* eslint-disable no-await-in-loop */\n  while (currentRound < startRound + waitRounds) {\n    let poolError = false;\n    try {\n      const pendingInfo = await client.pendingTransactionInformation(txid).do();\n\n      if (pendingInfo['confirmed-round']) {\n        // Got the completed Transaction\n        return pendingInfo;\n      }\n\n      if (pendingInfo['pool-error']) {\n        // If there was a pool error, then the transaction has been rejected\n        poolError = true;\n        throw new Error(`Transaction Rejected: ${pendingInfo['pool-error']}`);\n      }\n    } catch (err) {\n      // Ignore errors from PendingTransactionInformation, since it may return 404 if the algod\n      // instance is behind a load balancer and the request goes to a different algod than the\n      // one we submitted the transaction to\n      if (poolError) {\n        // Rethrow error only if it's because the transaction was rejected\n        throw err;\n      }\n    }\n\n    await client.statusAfterBlock(currentRound).do();\n    currentRound += 1;\n  }\n  /* eslint-enable no-await-in-loop */\n  throw new Error(`Transaction not confirmed after ${waitRounds} rounds`);\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from \"./aptos_account\";\nexport * from \"./aptos_client\";\nexport * as BCS from \"./bcs\";\nexport * from \"./coin_client\";\nexport * from \"./faucet_client\";\nexport * from \"./hex_string\";\nexport * from \"./token_client\";\nexport * from \"./transaction_builder\";\nexport * as TokenTypes from \"./token_types\";\nexport * as Types from \"./generated/index\";\nexport { derivePath } from \"./utils/hd-key\";\nexport {\n  deserializePropertyMap,\n  deserializeValueBasedOnTypeTag,\n  getPropertyValueRaw,\n} from \"./utils/property_map_serde\";\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport nacl from \"tweetnacl\";\nimport * as bip39 from \"@scure/bip39\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\nimport { sha3_256 as sha3Hash } from \"@noble/hashes/sha3\";\nimport { derivePath } from \"./utils/hd-key\";\nimport { HexString, MaybeHexString } from \"./hex_string\";\nimport * as Gen from \"./generated/index\";\nimport { Memoize } from \"./utils\";\nimport { AccountAddress, AuthenticationKey, Ed25519PublicKey } from \"./aptos_types\";\nimport { bcsToBytes } from \"./bcs\";\n\nexport interface AptosAccountObject {\n  address?: Gen.HexEncodedBytes;\n  publicKeyHex?: Gen.HexEncodedBytes;\n  privateKeyHex: Gen.HexEncodedBytes;\n}\n\n/**\n * Class for creating and managing Aptos account\n */\nexport class AptosAccount {\n  /**\n   * A private key and public key, associated with the given account\n   */\n  readonly signingKey: nacl.SignKeyPair;\n\n  /**\n   * Address associated with the given account\n   */\n  private readonly accountAddress: HexString;\n\n  static fromAptosAccountObject(obj: AptosAccountObject): AptosAccount {\n    return new AptosAccount(HexString.ensure(obj.privateKeyHex).toUint8Array(), obj.address);\n  }\n\n  /**\n   * Test derive path\n   */\n  static isValidPath = (path: string): boolean => {\n    if (!/^m\\/44'\\/637'\\/[0-9]+'\\/[0-9]+'\\/[0-9]+'+$/.test(path)) {\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * Creates new account with bip44 path and mnemonics,\n   * @param path. (e.g. m/44'/637'/0'/0'/0')\n   * Detailed description: {@link https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki}\n   * @param mnemonics.\n   * @returns AptosAccount\n   */\n  static fromDerivePath(path: string, mnemonics: string): AptosAccount {\n    if (!AptosAccount.isValidPath(path)) {\n      throw new Error(\"Invalid derivation path\");\n    }\n\n    const normalizeMnemonics = mnemonics\n      .trim()\n      .split(/\\s+/)\n      .map((part) => part.toLowerCase())\n      .join(\" \");\n\n    const { key } = derivePath(path, bytesToHex(bip39.mnemonicToSeedSync(normalizeMnemonics)));\n\n    return new AptosAccount(key);\n  }\n\n  /**\n   * Creates new account instance. Constructor allows passing in an address,\n   * to handle account key rotation, where auth_key != public_key\n   * @param privateKeyBytes  Private key from which account key pair will be generated.\n   * If not specified, new key pair is going to be created.\n   * @param address Account address (e.g. 0xe8012714cd17606cee7188a2a365eef3fe760be598750678c8c5954eb548a591).\n   * If not specified, a new one will be generated from public key\n   */\n  constructor(privateKeyBytes?: Uint8Array | undefined, address?: MaybeHexString) {\n    if (privateKeyBytes) {\n      this.signingKey = nacl.sign.keyPair.fromSeed(privateKeyBytes.slice(0, 32));\n    } else {\n      this.signingKey = nacl.sign.keyPair();\n    }\n    this.accountAddress = HexString.ensure(address || this.authKey().hex());\n  }\n\n  /**\n   * This is the key by which Aptos account is referenced.\n   * It is the 32-byte of the SHA-3 256 cryptographic hash\n   * of the public key(s) concatenated with a signature scheme identifier byte\n   * @returns Address associated with the given account\n   */\n  address(): HexString {\n    return this.accountAddress;\n  }\n\n  /**\n   * This key enables account owners to rotate their private key(s)\n   * associated with the account without changing the address that hosts their account.\n   * See here for more info: {@link https://aptos.dev/concepts/accounts#single-signer-authentication}\n   * @returns Authentication key for the associated account\n   */\n  @Memoize()\n  authKey(): HexString {\n    const pubKey = new Ed25519PublicKey(this.signingKey.publicKey);\n    const authKey = AuthenticationKey.fromEd25519PublicKey(pubKey);\n    return authKey.derivedAddress();\n  }\n\n  /**\n   * Takes source address and seeds and returns the resource account address\n   * @param sourceAddress Address used to derive the resource account\n   * @param seed The seed bytes\n   * @returns The resource account address\n   */\n\n  static getResourceAccountAddress(sourceAddress: MaybeHexString, seed: Uint8Array): HexString {\n    const source = bcsToBytes(AccountAddress.fromHex(sourceAddress));\n\n    const bytes = new Uint8Array([...source, ...seed, AuthenticationKey.DERIVE_RESOURCE_ACCOUNT_SCHEME]);\n\n    const hash = sha3Hash.create();\n    hash.update(bytes);\n\n    return HexString.fromUint8Array(hash.digest());\n  }\n\n  /**\n   * This key is generated with Ed25519 scheme.\n   * Public key is used to check a signature of transaction, signed by given account\n   * @returns The public key for the associated account\n   */\n  pubKey(): HexString {\n    return HexString.fromUint8Array(this.signingKey.publicKey);\n  }\n\n  /**\n   * Signs specified `buffer` with account's private key\n   * @param buffer A buffer to sign\n   * @returns A signature HexString\n   */\n  signBuffer(buffer: Uint8Array): HexString {\n    const signature = nacl.sign(buffer, this.signingKey.secretKey);\n    return HexString.fromUint8Array(signature.slice(0, 64));\n  }\n\n  /**\n   * Signs specified `hexString` with account's private key\n   * @param hexString A regular string or HexString to sign\n   * @returns A signature HexString\n   */\n  signHexString(hexString: MaybeHexString): HexString {\n    const toSign = HexString.ensure(hexString).toUint8Array();\n    return this.signBuffer(toSign);\n  }\n\n  /**\n   * Derives account address, public key and private key\n   * @returns AptosAccountObject instance.\n   * @example An example of the returned AptosAccountObject object\n   * ```\n   * {\n   *    address: \"0xe8012714cd17606cee7188a2a365eef3fe760be598750678c8c5954eb548a591\",\n   *    publicKeyHex: \"0xf56d8524faf79fbc0f48c13aeed3b0ce5dd376b4db93b8130a107c0a5e04ba04\",\n   *    privateKeyHex: `0x009c9f7c992a06cfafe916f125d8adb7a395fca243e264a8e56a4b3e6accf940\n   *      d2b11e9ece3049ce60e3c7b4a1c58aebfa9298e29a30a58a67f1998646135204`\n   * }\n   * ```\n   */\n  toPrivateKeyObject(): AptosAccountObject {\n    return {\n      address: this.address().hex(),\n      publicKeyHex: this.pubKey().hex(),\n      privateKeyHex: HexString.fromUint8Array(this.signingKey.secretKey.slice(0, 32)).hex(),\n    };\n  }\n}\n\n// Returns an account address as a HexString given either an AptosAccount or a MaybeHexString.\nexport function getAddressFromAccountOrAddress(accountOrAddress: AptosAccount | MaybeHexString): HexString {\n  return accountOrAddress instanceof AptosAccount ? accountOrAddress.address() : HexString.ensure(accountOrAddress);\n}\n","import nacl from \"tweetnacl\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha512 } from \"@noble/hashes/sha512\";\nimport { hexToBytes } from \"@noble/hashes/utils\";\n\ntype Hex = string;\ntype Path = string;\n\ntype Keys = {\n  key: Uint8Array;\n  chainCode: Uint8Array;\n};\n\nconst pathRegex = /^m(\\/[0-9]+')+$/;\n\nconst replaceDerive = (val: string): string => val.replace(\"'\", \"\");\n\nconst HMAC_KEY = \"ed25519 seed\";\nconst HARDENED_OFFSET = 0x80000000;\n\nexport const getMasterKeyFromSeed = (seed: Hex): Keys => {\n  const h = hmac.create(sha512, HMAC_KEY);\n  const I = h.update(hexToBytes(seed)).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR,\n  };\n};\n\nexport const CKDPriv = ({ key, chainCode }: Keys, index: number): Keys => {\n  const buffer = new ArrayBuffer(4);\n  new DataView(buffer).setUint32(0, index);\n  const indexBytes = new Uint8Array(buffer);\n  const zero = new Uint8Array([0]);\n  const data = new Uint8Array([...zero, ...key, ...indexBytes]);\n\n  const I = hmac.create(sha512, chainCode).update(data).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR,\n  };\n};\n\nexport const getPublicKey = (privateKey: Uint8Array, withZeroByte = true): Uint8Array => {\n  const keyPair = nacl.sign.keyPair.fromSeed(privateKey);\n  const signPk = keyPair.secretKey.subarray(32);\n  const zero = new Uint8Array([0]);\n  return withZeroByte ? new Uint8Array([...zero, ...signPk]) : signPk;\n};\n\nexport const isValidPath = (path: string): boolean => {\n  if (!pathRegex.test(path)) {\n    return false;\n  }\n  return !path\n    .split(\"/\")\n    .slice(1)\n    .map(replaceDerive)\n    .some(Number.isNaN as any);\n};\n\nexport const derivePath = (path: Path, seed: Hex, offset = HARDENED_OFFSET): Keys => {\n  if (!isValidPath(path)) {\n    throw new Error(\"Invalid derivation path\");\n  }\n\n  const { key, chainCode } = getMasterKeyFromSeed(seed);\n  const segments = path\n    .split(\"/\")\n    .slice(1)\n    .map(replaceDerive)\n    .map((el) => parseInt(el, 10));\n\n  return segments.reduce((parentKeys, segment) => CKDPriv(parentKeys, segment + offset), { key, chainCode });\n};\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bytesToHex, hexToBytes } from \"@noble/hashes/utils\";\nimport { HexEncodedBytes } from \"./generated\";\n\n// eslint-disable-next-line no-use-before-define\nexport type MaybeHexString = HexString | string | HexEncodedBytes;\n\n/**\n * A util class for working with hex strings.\n * Hex strings are strings that are prefixed with `0x`\n */\nexport class HexString {\n  /// We want to make sure this hexString has the `0x` hex prefix\n  private readonly hexString: string;\n\n  /**\n   * Creates new hex string from Buffer\n   * @param buffer A buffer to convert\n   * @returns New HexString\n   */\n  static fromBuffer(buffer: Uint8Array): HexString {\n    return HexString.fromUint8Array(buffer);\n  }\n\n  /**\n   * Creates new hex string from Uint8Array\n   * @param arr Uint8Array to convert\n   * @returns New HexString\n   */\n  static fromUint8Array(arr: Uint8Array): HexString {\n    return new HexString(bytesToHex(arr));\n  }\n\n  /**\n   * Ensures `hexString` is instance of `HexString` class\n   * @param hexString String to check\n   * @returns New HexString if `hexString` is regular string or `hexString` if it is HexString instance\n   * @example\n   * ```\n   *  const regularString = \"string\";\n   *  const hexString = new HexString(\"string\"); // \"0xstring\"\n   *  HexString.ensure(regularString); // \"0xstring\"\n   *  HexString.ensure(hexString); // \"0xstring\"\n   * ```\n   */\n  static ensure(hexString: MaybeHexString): HexString {\n    if (typeof hexString === \"string\") {\n      return new HexString(hexString);\n    }\n    return hexString;\n  }\n\n  /**\n   * Creates new HexString instance from regular string. If specified string already starts with \"0x\" prefix,\n   * it will not add another one\n   * @param hexString String to convert\n   * @example\n   * ```\n   *  const string = \"string\";\n   *  new HexString(string); // \"0xstring\"\n   * ```\n   */\n  constructor(hexString: string | HexEncodedBytes) {\n    if (hexString.startsWith(\"0x\")) {\n      this.hexString = hexString;\n    } else {\n      this.hexString = `0x${hexString}`;\n    }\n  }\n\n  /**\n   * Getter for inner hexString\n   * @returns Inner hex string\n   */\n  hex(): string {\n    return this.hexString;\n  }\n\n  /**\n   * Getter for inner hexString without prefix\n   * @returns Inner hex string without prefix\n   * @example\n   * ```\n   *  const hexString = new HexString(\"string\"); // \"0xstring\"\n   *  hexString.noPrefix(); // \"string\"\n   * ```\n   */\n  noPrefix(): string {\n    return this.hexString.slice(2);\n  }\n\n  /**\n   * Overrides default `toString` method\n   * @returns Inner hex string\n   */\n  toString(): string {\n    return this.hex();\n  }\n\n  /**\n   * Trimmes extra zeroes in the begining of a string\n   * @returns Inner hexString without leading zeroes\n   * @example\n   * ```\n   *  new HexString(\"0x000000string\").toShortString(); // result = \"0xstring\"\n   * ```\n   */\n  toShortString(): string {\n    const trimmed = this.hexString.replace(/^0x0*/, \"\");\n    return `0x${trimmed}`;\n  }\n\n  /**\n   * Converts hex string to a Uint8Array\n   * @returns Uint8Array from inner hexString without prefix\n   */\n  toUint8Array(): Uint8Array {\n    return Uint8Array.from(hexToBytes(this.noPrefix()));\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nexport type Nullable<T> = { [P in keyof T]: T[P] | null };\n\nexport type AnyObject = { [key: string]: any };\n\nexport async function sleep(timeMs: number): Promise<null> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeMs);\n  });\n}\n\nexport const DEFAULT_VERSION_PATH_BASE = \"/v1\";\n\nexport function fixNodeUrl(nodeUrl: string): string {\n  let out = `${nodeUrl}`;\n  if (out.endsWith(\"/\")) {\n    out = out.substring(0, out.length - 1);\n  }\n  if (!out.endsWith(DEFAULT_VERSION_PATH_BASE)) {\n    out = `${out}${DEFAULT_VERSION_PATH_BASE}`;\n  }\n  return out;\n}\n\nexport const DEFAULT_MAX_GAS_AMOUNT = 200000;\n// Transaction expire timestamp\nexport const DEFAULT_TXN_EXP_SEC_FROM_NOW = 20;\n// How long does SDK wait for txhn to finish\nexport const DEFAULT_TXN_TIMEOUT_SEC = 20;\nexport const APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n","/**\n * Credits to https://github.com/darrylhodgins/typescript-memoize\n */\n\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-restricted-syntax */\n\ninterface MemoizeArgs {\n  // ttl in milliseconds for cached items. After `ttlMs`, cached items are evicted automatically. If no `ttlMs`\n  // is provided, cached items won't get auto-evicted.\n  ttlMs?: number;\n  // produces the cache key based on `args`.\n  hashFunction?: boolean | ((...args: any[]) => any);\n  // cached items can be taged with `tags`. `tags` can be used to evict cached items\n  tags?: string[];\n}\n\nexport function Memoize(args?: MemoizeArgs | MemoizeArgs[\"hashFunction\"]) {\n  let hashFunction: MemoizeArgs[\"hashFunction\"];\n  let ttlMs: MemoizeArgs[\"ttlMs\"];\n  let tags: MemoizeArgs[\"tags\"];\n\n  if (typeof args === \"object\") {\n    hashFunction = args.hashFunction;\n    ttlMs = args.ttlMs;\n    tags = args.tags;\n  } else {\n    hashFunction = args;\n  }\n\n  return (target: Object, propertyKey: string, descriptor: TypedPropertyDescriptor<any>) => {\n    if (descriptor.value != null) {\n      descriptor.value = getNewFunction(descriptor.value, hashFunction, ttlMs, tags);\n    } else if (descriptor.get != null) {\n      descriptor.get = getNewFunction(descriptor.get, hashFunction, ttlMs, tags);\n    } else {\n      throw new Error(\"Only put a Memoize() decorator on a method or get accessor.\");\n    }\n  };\n}\n\nexport function MemoizeExpiring(ttlMs: number, hashFunction?: MemoizeArgs[\"hashFunction\"]) {\n  return Memoize({\n    ttlMs,\n    hashFunction,\n  });\n}\n\nconst clearCacheTagsMap: Map<string, Map<any, any>[]> = new Map();\n\nexport function clear(tags: string[]): number {\n  const cleared: Set<Map<any, any>> = new Set();\n  for (const tag of tags) {\n    const maps = clearCacheTagsMap.get(tag);\n    if (maps) {\n      for (const mp of maps) {\n        if (!cleared.has(mp)) {\n          mp.clear();\n          cleared.add(mp);\n        }\n      }\n    }\n  }\n  return cleared.size;\n}\n\nfunction getNewFunction(\n  originalMethod: () => void,\n  hashFunction?: MemoizeArgs[\"hashFunction\"],\n  ttlMs: number = 0,\n  tags?: MemoizeArgs[\"tags\"],\n) {\n  const propMapName = Symbol(\"__memoized_map__\");\n\n  // The function returned here gets called instead of originalMethod.\n  // eslint-disable-next-line func-names\n  return function (...args: any[]) {\n    let returnedValue: any;\n\n    // @ts-ignore\n    const that: any = this;\n\n    // Get or create map\n    // eslint-disable-next-line no-prototype-builtins\n    if (!that.hasOwnProperty(propMapName)) {\n      Object.defineProperty(that, propMapName, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: new Map<any, any>(),\n      });\n    }\n    const myMap: Map<any, any> = that[propMapName];\n\n    if (Array.isArray(tags)) {\n      for (const tag of tags) {\n        if (clearCacheTagsMap.has(tag)) {\n          clearCacheTagsMap.get(tag)!.push(myMap);\n        } else {\n          clearCacheTagsMap.set(tag, [myMap]);\n        }\n      }\n    }\n\n    if (hashFunction || args.length > 0 || ttlMs > 0) {\n      let hashKey: any;\n\n      // If true is passed as first parameter, will automatically use every argument, passed to string\n      if (hashFunction === true) {\n        hashKey = args.map((a) => a.toString()).join(\"!\");\n      } else if (hashFunction) {\n        hashKey = hashFunction.apply(that, args);\n      } else {\n        // eslint-disable-next-line prefer-destructuring\n        hashKey = args[0];\n      }\n\n      const timestampKey = `${hashKey}__timestamp`;\n      let isExpired: boolean = false;\n      if (ttlMs > 0) {\n        if (!myMap.has(timestampKey)) {\n          // \"Expired\" since it was never called before\n          isExpired = true;\n        } else {\n          const timestamp = myMap.get(timestampKey);\n          isExpired = Date.now() - timestamp > ttlMs;\n        }\n      }\n\n      if (myMap.has(hashKey) && !isExpired) {\n        returnedValue = myMap.get(hashKey);\n      } else {\n        returnedValue = originalMethod.apply(that, args as any);\n        myMap.set(hashKey, returnedValue);\n        if (ttlMs > 0) {\n          myMap.set(timestampKey, Date.now());\n        }\n      }\n    } else {\n      const hashKey = that;\n      if (myMap.has(hashKey)) {\n        returnedValue = myMap.get(hashKey);\n      } else {\n        returnedValue = originalMethod.apply(that, args as any);\n        myMap.set(hashKey, returnedValue);\n      }\n    }\n\n    return returnedValue;\n  };\n}\n","import { AnyNumber } from \"../bcs\";\nimport { HexString, MaybeHexString } from \"../hex_string\";\n\n/// This function is a helper for paginating using a function wrapping an API\nexport async function paginateWithCursor<T>(\n  apiFunction: (\n    address: string,\n    ledgerVersion?: string | undefined,\n    start?: string | undefined,\n    limit?: number | undefined,\n  ) => Promise<T[]>,\n  accountAddress: MaybeHexString,\n  limitPerRequest: number,\n  query?: { ledgerVersion?: AnyNumber },\n): Promise<T[]> {\n  const out = [];\n  let cursor: string | undefined;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await apiFunction(\n      HexString.ensure(accountAddress).hex(),\n      query?.ledgerVersion?.toString(),\n      cursor,\n      limitPerRequest,\n    );\n    // Response is the main response, i.e. the T[]. Attached to that are the headers as `__headers`.\n    // eslint-disable-next-line no-underscore-dangle\n    cursor = (response as any).__headers[\"x-aptos-cursor\"];\n    // Now that we have the cursor (if any), we remove the headers before\n    // adding these to the output of this function.\n    // eslint-disable-next-line no-underscore-dangle\n    delete (response as any).__headers;\n    out.push(...response);\n    if (cursor === null || cursor === undefined) {\n      break;\n    }\n  }\n  return out;\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from \"./abi\";\nexport * from \"./account_address\";\nexport * from \"./authenticator\";\nexport * from \"./transaction\";\nexport * from \"./type_tag\";\nexport * from \"./identifier\";\nexport * from \"./ed25519\";\nexport * from \"./multi_ed25519\";\nexport * from \"./authentication_key\";\nexport * from \"./rotation_proof_challenge\";\n\nexport type SigningMessage = Uint8Array;\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from \"./types\";\nexport * from \"./serializer\";\nexport * from \"./deserializer\";\nexport * from \"./helper\";\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Uint128, Uint16, Uint32, Uint64, Uint8, Uint256 } from \"./types\";\n\n// Upper bound values for uint8, uint16, uint64 and uint128\nexport const MAX_U8_NUMBER: Uint8 = 2 ** 8 - 1;\nexport const MAX_U16_NUMBER: Uint16 = 2 ** 16 - 1;\nexport const MAX_U32_NUMBER: Uint32 = 2 ** 32 - 1;\nexport const MAX_U64_BIG_INT: Uint64 = BigInt(2 ** 64) - BigInt(1);\nexport const MAX_U128_BIG_INT: Uint128 = BigInt(2 ** 128) - BigInt(1);\nexport const MAX_U256_BIG_INT: Uint256 = BigInt(2 ** 256) - BigInt(1);\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-bitwise */\nimport {\n  MAX_U128_BIG_INT,\n  MAX_U16_NUMBER,\n  MAX_U32_NUMBER,\n  MAX_U64_BIG_INT,\n  MAX_U8_NUMBER,\n  MAX_U256_BIG_INT,\n} from \"./consts\";\nimport { AnyNumber, Bytes, Uint16, Uint32, Uint8 } from \"./types\";\n\nexport class Serializer {\n  private buffer: ArrayBuffer;\n\n  private offset: number;\n\n  constructor() {\n    this.buffer = new ArrayBuffer(64);\n    this.offset = 0;\n  }\n\n  private ensureBufferWillHandleSize(bytes: number) {\n    while (this.buffer.byteLength < this.offset + bytes) {\n      const newBuffer = new ArrayBuffer(this.buffer.byteLength * 2);\n      new Uint8Array(newBuffer).set(new Uint8Array(this.buffer));\n      this.buffer = newBuffer;\n    }\n  }\n\n  protected serialize(values: Bytes) {\n    this.ensureBufferWillHandleSize(values.length);\n    new Uint8Array(this.buffer, this.offset).set(values);\n    this.offset += values.length;\n  }\n\n  private serializeWithFunction(\n    fn: (byteOffset: number, value: number, littleEndian?: boolean) => void,\n    bytesLength: number,\n    value: number,\n  ) {\n    this.ensureBufferWillHandleSize(bytesLength);\n    const dv = new DataView(this.buffer, this.offset);\n    fn.apply(dv, [0, value, true]);\n    this.offset += bytesLength;\n  }\n\n  /**\n   * Serializes a string. UTF8 string is supported. Serializes the string's bytes length \"l\" first,\n   * and then serializes \"l\" bytes of the string content.\n   *\n   * BCS layout for \"string\": string_length | string_content. string_length is the bytes length of\n   * the string that is uleb128 encoded. string_length is a u32 integer.\n   *\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeStr(\"çå∞≠¢õß∂ƒ∫\");\n   * assert(serializer.getBytes() === new Uint8Array([24, 0xc3, 0xa7, 0xc3, 0xa5, 0xe2, 0x88, 0x9e,\n   * 0xe2, 0x89, 0xa0, 0xc2, 0xa2, 0xc3, 0xb5, 0xc3, 0x9f, 0xe2, 0x88, 0x82, 0xc6, 0x92, 0xe2, 0x88, 0xab]));\n   * ```\n   */\n  serializeStr(value: string): void {\n    const textEncoder = new TextEncoder();\n    this.serializeBytes(textEncoder.encode(value));\n  }\n\n  /**\n   * Serializes an array of bytes.\n   *\n   * BCS layout for \"bytes\": bytes_length | bytes. bytes_length is the length of the bytes array that is\n   * uleb128 encoded. bytes_length is a u32 integer.\n   */\n  serializeBytes(value: Bytes): void {\n    this.serializeU32AsUleb128(value.length);\n    this.serialize(value);\n  }\n\n  /**\n   * Serializes an array of bytes with known length. Therefore length doesn't need to be\n   * serialized to help deserialization.  When deserializing, the number of\n   * bytes to deserialize needs to be passed in.\n   */\n  serializeFixedBytes(value: Bytes): void {\n    this.serialize(value);\n  }\n\n  /**\n   * Serializes a boolean value.\n   *\n   * BCS layout for \"boolean\": One byte. \"0x01\" for True and \"0x00\" for False.\n   */\n  serializeBool(value: boolean): void {\n    if (typeof value !== \"boolean\") {\n      throw new Error(\"Value needs to be a boolean\");\n    }\n    const byteValue = value ? 1 : 0;\n    this.serialize(new Uint8Array([byteValue]));\n  }\n\n  /**\n   * Serializes a uint8 number.\n   *\n   * BCS layout for \"uint8\": One byte. Binary format in little-endian representation.\n   */\n  @checkNumberRange(0, MAX_U8_NUMBER)\n  serializeU8(value: Uint8): void {\n    this.serialize(new Uint8Array([value]));\n  }\n\n  /**\n   * Serializes a uint16 number.\n   *\n   * BCS layout for \"uint16\": Two bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeU16(4660);\n   * assert(serializer.getBytes() === new Uint8Array([0x34, 0x12]));\n   * ```\n   */\n  @checkNumberRange(0, MAX_U16_NUMBER)\n  serializeU16(value: Uint16): void {\n    this.serializeWithFunction(DataView.prototype.setUint16, 2, value);\n  }\n\n  /**\n   * Serializes a uint32 number.\n   *\n   * BCS layout for \"uint32\": Four bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeU32(305419896);\n   * assert(serializer.getBytes() === new Uint8Array([0x78, 0x56, 0x34, 0x12]));\n   * ```\n   */\n  @checkNumberRange(0, MAX_U32_NUMBER)\n  serializeU32(value: Uint32): void {\n    this.serializeWithFunction(DataView.prototype.setUint32, 4, value);\n  }\n\n  /**\n   * Serializes a uint64 number.\n   *\n   * BCS layout for \"uint64\": Eight bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeU64(1311768467750121216);\n   * assert(serializer.getBytes() === new Uint8Array([0x00, 0xEF, 0xCD, 0xAB, 0x78, 0x56, 0x34, 0x12]));\n   * ```\n   */\n  @checkNumberRange(BigInt(0), MAX_U64_BIG_INT)\n  serializeU64(value: AnyNumber): void {\n    const low = BigInt(value.toString()) & BigInt(MAX_U32_NUMBER);\n    const high = BigInt(value.toString()) >> BigInt(32);\n\n    // write little endian number\n    this.serializeU32(Number(low));\n    this.serializeU32(Number(high));\n  }\n\n  /**\n   * Serializes a uint128 number.\n   *\n   * BCS layout for \"uint128\": Sixteen bytes. Binary format in little-endian representation.\n   */\n  @checkNumberRange(BigInt(0), MAX_U128_BIG_INT)\n  serializeU128(value: AnyNumber): void {\n    const low = BigInt(value.toString()) & MAX_U64_BIG_INT;\n    const high = BigInt(value.toString()) >> BigInt(64);\n\n    // write little endian number\n    this.serializeU64(low);\n    this.serializeU64(high);\n  }\n\n  /**\n   * Serializes a uint256 number.\n   *\n   * BCS layout for \"uint256\": Sixteen bytes. Binary format in little-endian representation.\n   */\n  @checkNumberRange(BigInt(0), MAX_U256_BIG_INT)\n  serializeU256(value: AnyNumber): void {\n    const low = BigInt(value.toString()) & MAX_U128_BIG_INT;\n    const high = BigInt(value.toString()) >> BigInt(128);\n\n    // write little endian number\n    this.serializeU128(low);\n    this.serializeU128(high);\n  }\n\n  /**\n   * Serializes a uint32 number with uleb128.\n   *\n   * BCS use uleb128 encoding in two cases: (1) lengths of variable-length sequences and (2) tags of enum values\n   */\n  @checkNumberRange(0, MAX_U32_NUMBER)\n  serializeU32AsUleb128(val: Uint32): void {\n    let value = val;\n    const valueArray = [];\n    while (value >>> 7 !== 0) {\n      valueArray.push((value & 0x7f) | 0x80);\n      value >>>= 7;\n    }\n    valueArray.push(value);\n    this.serialize(new Uint8Array(valueArray));\n  }\n\n  /**\n   * Returns the buffered bytes\n   */\n  getBytes(): Bytes {\n    return new Uint8Array(this.buffer).slice(0, this.offset);\n  }\n}\n\n/**\n * Creates a decorator to make sure the arg value of the decorated function is within a range.\n * @param minValue The arg value of decorated function must >= minValue\n * @param maxValue The arg value of decorated function must <= maxValue\n * @param message Error message\n */\nfunction checkNumberRange<T extends AnyNumber>(minValue: T, maxValue: T, message?: string) {\n  return (target: unknown, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const childFunction = descriptor.value;\n    // eslint-disable-next-line no-param-reassign\n    descriptor.value = function deco(value: AnyNumber) {\n      const valueBigInt = BigInt(value.toString());\n      if (valueBigInt > BigInt(maxValue.toString()) || valueBigInt < BigInt(minValue.toString())) {\n        throw new Error(message || \"Value is out of range\");\n      }\n      childFunction.apply(this, [value]);\n    };\n    return descriptor;\n  };\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-bitwise */\nimport { MAX_U32_NUMBER } from \"./consts\";\nimport { Bytes, Uint128, Uint16, Uint256, Uint32, Uint64, Uint8 } from \"./types\";\n\nexport class Deserializer {\n  private buffer: ArrayBuffer;\n\n  private offset: number;\n\n  constructor(data: Bytes) {\n    // copies data to prevent outside mutation of buffer.\n    this.buffer = new ArrayBuffer(data.length);\n    new Uint8Array(this.buffer).set(data, 0);\n    this.offset = 0;\n  }\n\n  private read(length: number): ArrayBuffer {\n    if (this.offset + length > this.buffer.byteLength) {\n      throw new Error(\"Reached to the end of buffer\");\n    }\n\n    const bytes = this.buffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return bytes;\n  }\n\n  /**\n   * Deserializes a string. UTF8 string is supported. Reads the string's bytes length \"l\" first,\n   * and then reads \"l\" bytes of content. Decodes the byte array into a string.\n   *\n   * BCS layout for \"string\": string_length | string_content. string_length is the bytes length of\n   * the string that is uleb128 encoded. string_length is a u32 integer.\n   *\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([24, 0xc3, 0xa7, 0xc3, 0xa5, 0xe2, 0x88, 0x9e,\n   * 0xe2, 0x89, 0xa0, 0xc2, 0xa2, 0xc3, 0xb5, 0xc3, 0x9f, 0xe2, 0x88, 0x82, 0xc6, 0x92, 0xe2, 0x88, 0xab]));\n   * assert(deserializer.deserializeStr() === \"çå∞≠¢õß∂ƒ∫\");\n   * ```\n   */\n  deserializeStr(): string {\n    const value = this.deserializeBytes();\n    const textDecoder = new TextDecoder();\n    return textDecoder.decode(value);\n  }\n\n  /**\n   * Deserializes an array of bytes.\n   *\n   * BCS layout for \"bytes\": bytes_length | bytes. bytes_length is the length of the bytes array that is\n   * uleb128 encoded. bytes_length is a u32 integer.\n   */\n  deserializeBytes(): Bytes {\n    const len = this.deserializeUleb128AsU32();\n    return new Uint8Array(this.read(len));\n  }\n\n  /**\n   * Deserializes an array of bytes. The number of bytes to read is already known.\n   *\n   */\n  deserializeFixedBytes(len: number): Bytes {\n    return new Uint8Array(this.read(len));\n  }\n\n  /**\n   * Deserializes a boolean value.\n   *\n   * BCS layout for \"boolean\": One byte. \"0x01\" for True and \"0x00\" for False.\n   */\n  deserializeBool(): boolean {\n    const bool = new Uint8Array(this.read(1))[0];\n    if (bool !== 1 && bool !== 0) {\n      throw new Error(\"Invalid boolean value\");\n    }\n    return bool === 1;\n  }\n\n  /**\n   * Deserializes a uint8 number.\n   *\n   * BCS layout for \"uint8\": One byte. Binary format in little-endian representation.\n   */\n  deserializeU8(): Uint8 {\n    return new DataView(this.read(1)).getUint8(0);\n  }\n\n  /**\n   * Deserializes a uint16 number.\n   *\n   * BCS layout for \"uint16\": Two bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x34, 0x12]));\n   * assert(deserializer.deserializeU16() === 4660);\n   * ```\n   */\n  deserializeU16(): Uint16 {\n    return new DataView(this.read(2)).getUint16(0, true);\n  }\n\n  /**\n   * Deserializes a uint32 number.\n   *\n   * BCS layout for \"uint32\": Four bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x78, 0x56, 0x34, 0x12]));\n   * assert(deserializer.deserializeU32() === 305419896);\n   * ```\n   */\n  deserializeU32(): Uint32 {\n    return new DataView(this.read(4)).getUint32(0, true);\n  }\n\n  /**\n   * Deserializes a uint64 number.\n   *\n   * BCS layout for \"uint64\": Eight bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x00, 0xEF, 0xCD, 0xAB, 0x78, 0x56, 0x34, 0x12]));\n   * assert(deserializer.deserializeU64() === 1311768467750121216);\n   * ```\n   */\n  deserializeU64(): Uint64 {\n    const low = this.deserializeU32();\n    const high = this.deserializeU32();\n\n    // combine the two 32-bit values and return (little endian)\n    return BigInt((BigInt(high) << BigInt(32)) | BigInt(low));\n  }\n\n  /**\n   * Deserializes a uint128 number.\n   *\n   * BCS layout for \"uint128\": Sixteen bytes. Binary format in little-endian representation.\n   */\n  deserializeU128(): Uint128 {\n    const low = this.deserializeU64();\n    const high = this.deserializeU64();\n\n    // combine the two 64-bit values and return (little endian)\n    return BigInt((high << BigInt(64)) | low);\n  }\n\n  /**\n   * Deserializes a uint256 number.\n   *\n   * BCS layout for \"uint256\": Thirty-two bytes. Binary format in little-endian representation.\n   */\n  deserializeU256(): Uint256 {\n    const low = this.deserializeU128();\n    const high = this.deserializeU128();\n\n    // combine the two 128-bit values and return (little endian)\n    return BigInt((high << BigInt(128)) | low);\n  }\n\n  /**\n   * Deserializes a uleb128 encoded uint32 number.\n   *\n   * BCS use uleb128 encoding in two cases: (1) lengths of variable-length sequences and (2) tags of enum values\n   */\n  deserializeUleb128AsU32(): Uint32 {\n    let value: bigint = BigInt(0);\n    let shift = 0;\n\n    while (value < MAX_U32_NUMBER) {\n      const byte = this.deserializeU8();\n      value |= BigInt(byte & 0x7f) << BigInt(shift);\n\n      if ((byte & 0x80) === 0) {\n        break;\n      }\n      shift += 7;\n    }\n\n    if (value > MAX_U32_NUMBER) {\n      throw new Error(\"Overflow while parsing uleb128-encoded uint32 value\");\n    }\n\n    return Number(value);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Deserializer } from \"./deserializer\";\nimport { Serializer } from \"./serializer\";\nimport { AnyNumber, Bytes, Seq, Uint16, Uint32, Uint8 } from \"./types\";\n\ninterface Serializable {\n  serialize(serializer: Serializer): void;\n}\n\n/**\n * Serializes a vector values that are \"Serializable\".\n */\nexport function serializeVector<T extends Serializable>(value: Seq<T>, serializer: Serializer): void {\n  serializer.serializeU32AsUleb128(value.length);\n  value.forEach((item: T) => {\n    item.serialize(serializer);\n  });\n}\n\n/**\n * Serializes a vector with specified item serializaiton function.\n * Very dynamic function and bypasses static typechecking.\n */\nexport function serializeVectorWithFunc(value: any[], func: string): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU32AsUleb128(value.length);\n  const f = (serializer as any)[func];\n  value.forEach((item) => {\n    f.call(serializer, item);\n  });\n  return serializer.getBytes();\n}\n\n/**\n * Deserializes a vector of values.\n */\nexport function deserializeVector(deserializer: Deserializer, cls: any): any[] {\n  const length = deserializer.deserializeUleb128AsU32();\n  const list: Seq<typeof cls> = [];\n  for (let i = 0; i < length; i += 1) {\n    list.push(cls.deserialize(deserializer));\n  }\n  return list;\n}\n\nexport function bcsToBytes<T extends Serializable>(value: T): Bytes {\n  const serializer = new Serializer();\n  value.serialize(serializer);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeUint64(value: AnyNumber): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU64(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeU8(value: Uint8): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU8(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeU16(value: Uint16): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU16(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeU32(value: Uint32): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU32(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeU128(value: AnyNumber): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU128(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeBool(value: boolean): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeBool(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeStr(value: string): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeStr(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeBytes(value: Bytes): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeBytes(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeFixedBytes(value: Bytes): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeFixedBytes(value);\n  return serializer.getBytes();\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-classes-per-file */\nimport { sha3_256 as sha3Hash } from \"@noble/hashes/sha3\";\nimport { HexString } from \"../hex_string\";\nimport {\n  Deserializer,\n  Serializer,\n  Uint64,\n  Bytes,\n  Seq,\n  Uint8,\n  Uint128,\n  deserializeVector,\n  serializeVector,\n  bcsToBytes,\n  Uint16,\n  Uint256,\n} from \"../bcs\";\nimport { AccountAddress } from \"./account_address\";\nimport { TransactionAuthenticator } from \"./authenticator\";\nimport { Identifier } from \"./identifier\";\nimport { TypeTag } from \"./type_tag\";\n\nexport class RawTransaction {\n  /**\n   * RawTransactions contain the metadata and payloads that can be submitted to Aptos chain for execution.\n   * RawTransactions must be signed before Aptos chain can execute them.\n   *\n   * @param sender Account address of the sender.\n   * @param sequence_number Sequence number of this transaction. This must match the sequence number stored in\n   *   the sender's account at the time the transaction executes.\n   * @param payload Instructions for the Aptos Blockchain, including publishing a module,\n   *   execute a entry function or execute a script payload.\n   * @param max_gas_amount Maximum total gas to spend for this transaction. The account must have more\n   *   than this gas or the transaction will be discarded during validation.\n   * @param gas_unit_price Price to be paid per gas unit.\n   * @param expiration_timestamp_secs The blockchain timestamp at which the blockchain would discard this transaction.\n   * @param chain_id The chain ID of the blockchain that this transaction is intended to be run on.\n   */\n  constructor(\n    public readonly sender: AccountAddress,\n    public readonly sequence_number: Uint64,\n    public readonly payload: TransactionPayload,\n    public readonly max_gas_amount: Uint64,\n    public readonly gas_unit_price: Uint64,\n    public readonly expiration_timestamp_secs: Uint64,\n    public readonly chain_id: ChainId,\n  ) {}\n\n  serialize(serializer: Serializer): void {\n    this.sender.serialize(serializer);\n    serializer.serializeU64(this.sequence_number);\n    this.payload.serialize(serializer);\n    serializer.serializeU64(this.max_gas_amount);\n    serializer.serializeU64(this.gas_unit_price);\n    serializer.serializeU64(this.expiration_timestamp_secs);\n    this.chain_id.serialize(serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): RawTransaction {\n    const sender = AccountAddress.deserialize(deserializer);\n    const sequence_number = deserializer.deserializeU64();\n    const payload = TransactionPayload.deserialize(deserializer);\n    const max_gas_amount = deserializer.deserializeU64();\n    const gas_unit_price = deserializer.deserializeU64();\n    const expiration_timestamp_secs = deserializer.deserializeU64();\n    const chain_id = ChainId.deserialize(deserializer);\n    return new RawTransaction(\n      sender,\n      sequence_number,\n      payload,\n      max_gas_amount,\n      gas_unit_price,\n      expiration_timestamp_secs,\n      chain_id,\n    );\n  }\n}\n\nexport class Script {\n  /**\n   * Scripts contain the Move bytecodes payload that can be submitted to Aptos chain for execution.\n   * @param code Move bytecode\n   * @param ty_args Type arguments that bytecode requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to bytecode function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   */\n  constructor(\n    public readonly code: Bytes,\n    public readonly ty_args: Seq<TypeTag>,\n    public readonly args: Seq<TransactionArgument>,\n  ) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.code);\n    serializeVector<TypeTag>(this.ty_args, serializer);\n    serializeVector<TransactionArgument>(this.args, serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): Script {\n    const code = deserializer.deserializeBytes();\n    const ty_args = deserializeVector(deserializer, TypeTag);\n    const args = deserializeVector(deserializer, TransactionArgument);\n    return new Script(code, ty_args, args);\n  }\n}\n\nexport class EntryFunction {\n  /**\n   * Contains the payload to run a function within a module.\n   * @param module_name Fully qualified module name. ModuleId consists of account address and module name.\n   * @param function_name The function to run.\n   * @param ty_args Type arguments that move function requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to the move function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   */\n  constructor(\n    public readonly module_name: ModuleId,\n    public readonly function_name: Identifier,\n    public readonly ty_args: Seq<TypeTag>,\n    public readonly args: Seq<Bytes>,\n  ) {}\n\n  /**\n   *\n   * @param module Fully qualified module name in format \"AccountAddress::module_name\" e.g. \"0x1::coin\"\n   * @param func Function name\n   * @param ty_args Type arguments that move function requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to the move function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @returns\n   */\n  static natural(module: string, func: string, ty_args: Seq<TypeTag>, args: Seq<Bytes>): EntryFunction {\n    return new EntryFunction(ModuleId.fromStr(module), new Identifier(func), ty_args, args);\n  }\n\n  /**\n   * `natual` is deprecated, please use `natural`\n   *\n   * @deprecated.\n   */\n  static natual(module: string, func: string, ty_args: Seq<TypeTag>, args: Seq<Bytes>): EntryFunction {\n    return EntryFunction.natural(module, func, ty_args, args);\n  }\n\n  serialize(serializer: Serializer): void {\n    this.module_name.serialize(serializer);\n    this.function_name.serialize(serializer);\n    serializeVector<TypeTag>(this.ty_args, serializer);\n\n    serializer.serializeU32AsUleb128(this.args.length);\n    this.args.forEach((item: Bytes) => {\n      serializer.serializeBytes(item);\n    });\n  }\n\n  static deserialize(deserializer: Deserializer): EntryFunction {\n    const module_name = ModuleId.deserialize(deserializer);\n    const function_name = Identifier.deserialize(deserializer);\n    const ty_args = deserializeVector(deserializer, TypeTag);\n\n    const length = deserializer.deserializeUleb128AsU32();\n    const list: Seq<Bytes> = [];\n    for (let i = 0; i < length; i += 1) {\n      list.push(deserializer.deserializeBytes());\n    }\n\n    const args = list;\n    return new EntryFunction(module_name, function_name, ty_args, args);\n  }\n}\n\nexport class Module {\n  /**\n   * Contains the bytecode of a Move module that can be published to the Aptos chain.\n   * @param code Move bytecode of a module.\n   */\n  constructor(public readonly code: Bytes) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.code);\n  }\n\n  static deserialize(deserializer: Deserializer): Module {\n    const code = deserializer.deserializeBytes();\n    return new Module(code);\n  }\n}\n\nexport class ModuleId {\n  /**\n   * Full name of a module.\n   * @param address The account address.\n   * @param name The name of the module under the account at \"address\".\n   */\n  constructor(public readonly address: AccountAddress, public readonly name: Identifier) {}\n\n  /**\n   * Converts a string literal to a ModuleId\n   * @param moduleId String literal in format \"AccountAddress::module_name\",\n   *   e.g. \"0x1::coin\"\n   * @returns\n   */\n  static fromStr(moduleId: string): ModuleId {\n    const parts = moduleId.split(\"::\");\n    if (parts.length !== 2) {\n      throw new Error(\"Invalid module id.\");\n    }\n    return new ModuleId(AccountAddress.fromHex(new HexString(parts[0])), new Identifier(parts[1]));\n  }\n\n  serialize(serializer: Serializer): void {\n    this.address.serialize(serializer);\n    this.name.serialize(serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): ModuleId {\n    const address = AccountAddress.deserialize(deserializer);\n    const name = Identifier.deserialize(deserializer);\n    return new ModuleId(address, name);\n  }\n}\n\nexport class ChangeSet {\n  serialize(serializer: Serializer): void {\n    throw new Error(\"Not implemented.\");\n  }\n\n  static deserialize(deserializer: Deserializer): ChangeSet {\n    throw new Error(\"Not implemented.\");\n  }\n}\n\nexport class WriteSet {\n  serialize(serializer: Serializer): void {\n    throw new Error(\"Not implmented.\");\n  }\n\n  static deserialize(deserializer: Deserializer): WriteSet {\n    throw new Error(\"Not implmented.\");\n  }\n}\n\nexport class SignedTransaction {\n  /**\n   * A SignedTransaction consists of a raw transaction and an authenticator. The authenticator\n   * contains a client's public key and the signature of the raw transaction.\n   *\n   * @see {@link https://aptos.dev/guides/creating-a-signed-transaction/ | Creating a Signed Transaction}\n   *\n   * @param raw_txn\n   * @param authenticator Contains a client's public key and the signature of the raw transaction.\n   *   Authenticator has 3 flavors: single signature, multi-signature and multi-agent.\n   *   @see authenticator.ts for details.\n   */\n  constructor(public readonly raw_txn: RawTransaction, public readonly authenticator: TransactionAuthenticator) {}\n\n  serialize(serializer: Serializer): void {\n    this.raw_txn.serialize(serializer);\n    this.authenticator.serialize(serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): SignedTransaction {\n    const raw_txn = RawTransaction.deserialize(deserializer);\n    const authenticator = TransactionAuthenticator.deserialize(deserializer);\n    return new SignedTransaction(raw_txn, authenticator);\n  }\n}\n\nexport abstract class RawTransactionWithData {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): RawTransactionWithData {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return MultiAgentRawTransaction.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for RawTransactionWithData: ${index}`);\n    }\n  }\n}\n\nexport class MultiAgentRawTransaction extends RawTransactionWithData {\n  constructor(\n    public readonly raw_txn: RawTransaction,\n    public readonly secondary_signer_addresses: Seq<AccountAddress>,\n  ) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    // enum variant index\n    serializer.serializeU32AsUleb128(0);\n    this.raw_txn.serialize(serializer);\n    serializeVector<TransactionArgument>(this.secondary_signer_addresses, serializer);\n  }\n\n  static load(deserializer: Deserializer): MultiAgentRawTransaction {\n    const rawTxn = RawTransaction.deserialize(deserializer);\n    const secondarySignerAddresses = deserializeVector(deserializer, AccountAddress);\n\n    return new MultiAgentRawTransaction(rawTxn, secondarySignerAddresses);\n  }\n}\n\nexport abstract class TransactionPayload {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): TransactionPayload {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionPayloadScript.load(deserializer);\n      // TODO: change to 1 once ModuleBundle has been removed from rust\n      case 2:\n        return TransactionPayloadEntryFunction.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n    }\n  }\n}\n\nexport class TransactionPayloadScript extends TransactionPayload {\n  constructor(public readonly value: Script) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionPayloadScript {\n    const value = Script.deserialize(deserializer);\n    return new TransactionPayloadScript(value);\n  }\n}\n\nexport class TransactionPayloadEntryFunction extends TransactionPayload {\n  constructor(public readonly value: EntryFunction) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(2);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionPayloadEntryFunction {\n    const value = EntryFunction.deserialize(deserializer);\n    return new TransactionPayloadEntryFunction(value);\n  }\n}\n\nexport class ChainId {\n  constructor(public readonly value: Uint8) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU8(this.value);\n  }\n\n  static deserialize(deserializer: Deserializer): ChainId {\n    const value = deserializer.deserializeU8();\n    return new ChainId(value);\n  }\n}\n\nexport abstract class TransactionArgument {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): TransactionArgument {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionArgumentU8.load(deserializer);\n      case 1:\n        return TransactionArgumentU64.load(deserializer);\n      case 2:\n        return TransactionArgumentU128.load(deserializer);\n      case 3:\n        return TransactionArgumentAddress.load(deserializer);\n      case 4:\n        return TransactionArgumentU8Vector.load(deserializer);\n      case 5:\n        return TransactionArgumentBool.load(deserializer);\n      case 6:\n        return TransactionArgumentU16.load(deserializer);\n      case 7:\n        return TransactionArgumentU32.load(deserializer);\n      case 8:\n        return TransactionArgumentU256.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionArgument: ${index}`);\n    }\n  }\n}\n\nexport class TransactionArgumentU8 extends TransactionArgument {\n  constructor(public readonly value: Uint8) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    serializer.serializeU8(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU8 {\n    const value = deserializer.deserializeU8();\n    return new TransactionArgumentU8(value);\n  }\n}\n\nexport class TransactionArgumentU16 extends TransactionArgument {\n  constructor(public readonly value: Uint16) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(6);\n    serializer.serializeU16(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU16 {\n    const value = deserializer.deserializeU16();\n    return new TransactionArgumentU16(value);\n  }\n}\n\nexport class TransactionArgumentU32 extends TransactionArgument {\n  constructor(public readonly value: Uint16) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(7);\n    serializer.serializeU32(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU32 {\n    const value = deserializer.deserializeU32();\n    return new TransactionArgumentU32(value);\n  }\n}\n\nexport class TransactionArgumentU64 extends TransactionArgument {\n  constructor(public readonly value: Uint64) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n    serializer.serializeU64(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU64 {\n    const value = deserializer.deserializeU64();\n    return new TransactionArgumentU64(value);\n  }\n}\n\nexport class TransactionArgumentU128 extends TransactionArgument {\n  constructor(public readonly value: Uint128) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(2);\n    serializer.serializeU128(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU128 {\n    const value = deserializer.deserializeU128();\n    return new TransactionArgumentU128(value);\n  }\n}\n\nexport class TransactionArgumentU256 extends TransactionArgument {\n  constructor(public readonly value: Uint256) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(8);\n    serializer.serializeU256(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU256 {\n    const value = deserializer.deserializeU256();\n    return new TransactionArgumentU256(value);\n  }\n}\n\nexport class TransactionArgumentAddress extends TransactionArgument {\n  constructor(public readonly value: AccountAddress) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(3);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentAddress {\n    const value = AccountAddress.deserialize(deserializer);\n    return new TransactionArgumentAddress(value);\n  }\n}\n\nexport class TransactionArgumentU8Vector extends TransactionArgument {\n  constructor(public readonly value: Bytes) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(4);\n    serializer.serializeBytes(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU8Vector {\n    const value = deserializer.deserializeBytes();\n    return new TransactionArgumentU8Vector(value);\n  }\n}\n\nexport class TransactionArgumentBool extends TransactionArgument {\n  constructor(public readonly value: boolean) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(5);\n    serializer.serializeBool(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentBool {\n    const value = deserializer.deserializeBool();\n    return new TransactionArgumentBool(value);\n  }\n}\n\nexport abstract class Transaction {\n  abstract serialize(serializer: Serializer): void;\n\n  abstract hash(): Bytes;\n\n  getHashSalt(): Bytes {\n    const hash = sha3Hash.create();\n    hash.update(\"APTOS::Transaction\");\n    return hash.digest();\n  }\n\n  static deserialize(deserializer: Deserializer): Transaction {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return UserTransaction.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for Transaction: ${index}`);\n    }\n  }\n}\n\nexport class UserTransaction extends Transaction {\n  constructor(public readonly value: SignedTransaction) {\n    super();\n  }\n\n  hash(): Bytes {\n    const hash = sha3Hash.create();\n    hash.update(this.getHashSalt());\n    hash.update(bcsToBytes(this));\n    return hash.digest();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): UserTransaction {\n    return new UserTransaction(SignedTransaction.deserialize(deserializer));\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { HexString, MaybeHexString } from \"../hex_string\";\nimport { Serializer, Deserializer, Bytes } from \"../bcs\";\n\nexport class AccountAddress {\n  static readonly LENGTH: number = 32;\n\n  readonly address: Bytes;\n\n  static CORE_CODE_ADDRESS: AccountAddress = AccountAddress.fromHex(\"0x1\");\n\n  constructor(address: Bytes) {\n    if (address.length !== AccountAddress.LENGTH) {\n      throw new Error(\"Expected address of length 32\");\n    }\n    this.address = address;\n  }\n\n  /**\n   * Creates AccountAddress from a hex string.\n   * @param addr Hex string can be with a prefix or without a prefix,\n   *   e.g. '0x1aa' or '1aa'. Hex string will be left padded with 0s if too short.\n   */\n  static fromHex(addr: MaybeHexString): AccountAddress {\n    let address = HexString.ensure(addr);\n\n    // If an address hex has odd number of digits, padd the hex string with 0\n    // e.g. '1aa' would become '01aa'.\n    if (address.noPrefix().length % 2 !== 0) {\n      address = new HexString(`0${address.noPrefix()}`);\n    }\n\n    const addressBytes = address.toUint8Array();\n\n    if (addressBytes.length > AccountAddress.LENGTH) {\n      // eslint-disable-next-line quotes\n      throw new Error(\"Hex string is too long. Address's length is 32 bytes.\");\n    } else if (addressBytes.length === AccountAddress.LENGTH) {\n      return new AccountAddress(addressBytes);\n    }\n\n    const res: Bytes = new Uint8Array(AccountAddress.LENGTH);\n    res.set(addressBytes, AccountAddress.LENGTH - addressBytes.length);\n\n    return new AccountAddress(res);\n  }\n\n  /**\n   * Checks if the string is a valid AccountAddress\n   * @param addr Hex string can be with a prefix or without a prefix,\n   *   e.g. '0x1aa' or '1aa'. Hex string will be left padded with 0s if too short.\n   */\n  static isValid(addr: MaybeHexString): boolean {\n    // At least one zero is required\n    if (addr === \"\") {\n      return false;\n    }\n\n    let address = HexString.ensure(addr);\n\n    // If an address hex has odd number of digits, padd the hex string with 0\n    // e.g. '1aa' would become '01aa'.\n    if (address.noPrefix().length % 2 !== 0) {\n      address = new HexString(`0${address.noPrefix()}`);\n    }\n\n    const addressBytes = address.toUint8Array();\n\n    return addressBytes.length <= AccountAddress.LENGTH;\n  }\n\n  /**\n   * Return a hex string from account Address.\n   */\n  toHexString(): MaybeHexString {\n    return HexString.fromUint8Array(this.address).hex();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeFixedBytes(this.address);\n  }\n\n  static deserialize(deserializer: Deserializer): AccountAddress {\n    return new AccountAddress(deserializer.deserializeFixedBytes(AccountAddress.LENGTH));\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Bytes, Deserializer, Serializer } from \"../bcs\";\n\nexport class Ed25519PublicKey {\n  static readonly LENGTH: number = 32;\n\n  readonly value: Bytes;\n\n  constructor(value: Bytes) {\n    if (value.length !== Ed25519PublicKey.LENGTH) {\n      throw new Error(`Ed25519PublicKey length should be ${Ed25519PublicKey.LENGTH}`);\n    }\n    this.value = value;\n  }\n\n  toBytes(): Bytes {\n    return this.value;\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.value);\n  }\n\n  static deserialize(deserializer: Deserializer): Ed25519PublicKey {\n    const value = deserializer.deserializeBytes();\n    return new Ed25519PublicKey(value);\n  }\n}\n\nexport class Ed25519Signature {\n  static readonly LENGTH = 64;\n\n  constructor(public readonly value: Bytes) {\n    if (value.length !== Ed25519Signature.LENGTH) {\n      throw new Error(`Ed25519Signature length should be ${Ed25519Signature.LENGTH}`);\n    }\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.value);\n  }\n\n  static deserialize(deserializer: Deserializer): Ed25519Signature {\n    const value = deserializer.deserializeBytes();\n    return new Ed25519Signature(value);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-bitwise */\nimport { Bytes, Deserializer, Seq, Serializer, Uint8 } from \"../bcs\";\nimport { Ed25519PublicKey, Ed25519Signature } from \"./ed25519\";\n\n/**\n * MultiEd25519 currently supports at most 32 signatures.\n */\nconst MAX_SIGNATURES_SUPPORTED = 32;\n\nexport class MultiEd25519PublicKey {\n  /**\n   * Public key for a K-of-N multisig transaction. A K-of-N multisig transaction means that for such a\n   * transaction to be executed, at least K out of the N authorized signers have signed the transaction\n   * and passed the check conducted by the chain.\n   *\n   * @see {@link\n   * https://aptos.dev/guides/creating-a-signed-transaction#multisignature-transactions | Creating a Signed Transaction}\n   *\n   * @param public_keys A list of public keys\n   * @param threshold At least \"threshold\" signatures must be valid\n   */\n  constructor(public readonly public_keys: Seq<Ed25519PublicKey>, public readonly threshold: Uint8) {\n    if (threshold > MAX_SIGNATURES_SUPPORTED) {\n      throw new Error(`\"threshold\" cannot be larger than ${MAX_SIGNATURES_SUPPORTED}`);\n    }\n  }\n\n  /**\n   * Converts a MultiEd25519PublicKey into bytes with: bytes = p1_bytes | ... | pn_bytes | threshold\n   */\n  toBytes(): Bytes {\n    const bytes = new Uint8Array(this.public_keys.length * Ed25519PublicKey.LENGTH + 1);\n    this.public_keys.forEach((k: Ed25519PublicKey, i: number) => {\n      bytes.set(k.value, i * Ed25519PublicKey.LENGTH);\n    });\n\n    bytes[this.public_keys.length * Ed25519PublicKey.LENGTH] = this.threshold;\n\n    return bytes;\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.toBytes());\n  }\n\n  static deserialize(deserializer: Deserializer): MultiEd25519PublicKey {\n    const bytes = deserializer.deserializeBytes();\n    const threshold = bytes[bytes.length - 1];\n\n    const keys: Seq<Ed25519PublicKey> = [];\n\n    for (let i = 0; i < bytes.length - 1; i += Ed25519PublicKey.LENGTH) {\n      const begin = i;\n      keys.push(new Ed25519PublicKey(bytes.subarray(begin, begin + Ed25519PublicKey.LENGTH)));\n    }\n    return new MultiEd25519PublicKey(keys, threshold);\n  }\n}\n\nexport class MultiEd25519Signature {\n  static BITMAP_LEN: Uint8 = 4;\n\n  /**\n   * Signature for a K-of-N multisig transaction.\n   *\n   * @see {@link\n   * https://aptos.dev/guides/creating-a-signed-transaction#multisignature-transactions | Creating a Signed Transaction}\n   *\n   * @param signatures A list of ed25519 signatures\n   * @param bitmap 4 bytes, at most 32 signatures are supported. If Nth bit value is `1`, the Nth\n   * signature should be provided in `signatures`. Bits are read from left to right\n   */\n  constructor(public readonly signatures: Seq<Ed25519Signature>, public readonly bitmap: Uint8Array) {\n    if (bitmap.length !== MultiEd25519Signature.BITMAP_LEN) {\n      throw new Error(`\"bitmap\" length should be ${MultiEd25519Signature.BITMAP_LEN}`);\n    }\n  }\n\n  /**\n   * Converts a MultiEd25519Signature into bytes with `bytes = s1_bytes | ... | sn_bytes | bitmap`\n   */\n  toBytes(): Bytes {\n    const bytes = new Uint8Array(this.signatures.length * Ed25519Signature.LENGTH + MultiEd25519Signature.BITMAP_LEN);\n    this.signatures.forEach((k: Ed25519Signature, i: number) => {\n      bytes.set(k.value, i * Ed25519Signature.LENGTH);\n    });\n\n    bytes.set(this.bitmap, this.signatures.length * Ed25519Signature.LENGTH);\n\n    return bytes;\n  }\n\n  /**\n   * Helper method to create a bitmap out of the specified bit positions\n   * @param bits The bitmap positions that should be set. A position starts at index 0.\n   * Valid position should range between 0 and 31.\n   * @example\n   * Here's an example of valid `bits`\n   * ```\n   * [0, 2, 31]\n   * ```\n   * `[0, 2, 31]` means the 1st, 3rd and 32nd bits should be set in the bitmap.\n   * The result bitmap should be 0b1010000000000000000000000000001\n   *\n   * @returns bitmap that is 32bit long\n   */\n  static createBitmap(bits: Seq<Uint8>): Uint8Array {\n    // Bits are read from left to right. e.g. 0b10000000 represents the first bit is set in one byte.\n    // The decimal value of 0b10000000 is 128.\n    const firstBitInByte = 128;\n    const bitmap = new Uint8Array([0, 0, 0, 0]);\n\n    // Check if duplicates exist in bits\n    const dupCheckSet = new Set();\n\n    bits.forEach((bit: number) => {\n      if (bit >= MAX_SIGNATURES_SUPPORTED) {\n        throw new Error(`Invalid bit value ${bit}.`);\n      }\n\n      if (dupCheckSet.has(bit)) {\n        throw new Error(\"Duplicated bits detected.\");\n      }\n\n      dupCheckSet.add(bit);\n\n      const byteOffset = Math.floor(bit / 8);\n\n      let byte = bitmap[byteOffset];\n\n      byte |= firstBitInByte >> bit % 8;\n\n      bitmap[byteOffset] = byte;\n    });\n\n    return bitmap;\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.toBytes());\n  }\n\n  static deserialize(deserializer: Deserializer): MultiEd25519Signature {\n    const bytes = deserializer.deserializeBytes();\n    const bitmap = bytes.subarray(bytes.length - 4);\n\n    const sigs: Seq<Ed25519Signature> = [];\n\n    for (let i = 0; i < bytes.length - bitmap.length; i += Ed25519Signature.LENGTH) {\n      const begin = i;\n      sigs.push(new Ed25519Signature(bytes.subarray(begin, begin + Ed25519Signature.LENGTH)));\n    }\n    return new MultiEd25519Signature(sigs, bitmap);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { Serializer, Deserializer, Seq, deserializeVector, serializeVector } from \"../bcs\";\nimport { AccountAddress } from \"./account_address\";\nimport { Ed25519PublicKey, Ed25519Signature } from \"./ed25519\";\nimport { MultiEd25519PublicKey, MultiEd25519Signature } from \"./multi_ed25519\";\n\nexport abstract class TransactionAuthenticator {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): TransactionAuthenticator {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionAuthenticatorEd25519.load(deserializer);\n      case 1:\n        return TransactionAuthenticatorMultiEd25519.load(deserializer);\n      case 2:\n        return TransactionAuthenticatorMultiAgent.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionAuthenticator: ${index}`);\n    }\n  }\n}\n\nexport class TransactionAuthenticatorEd25519 extends TransactionAuthenticator {\n  /**\n   * An authenticator for single signature.\n   *\n   * @param public_key Client's public key.\n   * @param signature Signature of a raw transaction.\n   * @see {@link https://aptos.dev/guides/creating-a-signed-transaction/ | Creating a Signed Transaction}\n   * for details about generating a signature.\n   */\n  constructor(public readonly public_key: Ed25519PublicKey, public readonly signature: Ed25519Signature) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionAuthenticatorEd25519 {\n    const public_key = Ed25519PublicKey.deserialize(deserializer);\n    const signature = Ed25519Signature.deserialize(deserializer);\n    return new TransactionAuthenticatorEd25519(public_key, signature);\n  }\n}\n\nexport class TransactionAuthenticatorMultiEd25519 extends TransactionAuthenticator {\n  /**\n   * An authenticator for multiple signatures.\n   *\n   * @param public_key\n   * @param signature\n   *\n   */\n  constructor(public readonly public_key: MultiEd25519PublicKey, public readonly signature: MultiEd25519Signature) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionAuthenticatorMultiEd25519 {\n    const public_key = MultiEd25519PublicKey.deserialize(deserializer);\n    const signature = MultiEd25519Signature.deserialize(deserializer);\n    return new TransactionAuthenticatorMultiEd25519(public_key, signature);\n  }\n}\n\nexport class TransactionAuthenticatorMultiAgent extends TransactionAuthenticator {\n  constructor(\n    public readonly sender: AccountAuthenticator,\n    public readonly secondary_signer_addresses: Seq<AccountAddress>,\n    public readonly secondary_signers: Seq<AccountAuthenticator>,\n  ) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(2);\n    this.sender.serialize(serializer);\n    serializeVector<AccountAddress>(this.secondary_signer_addresses, serializer);\n    serializeVector<AccountAuthenticator>(this.secondary_signers, serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionAuthenticatorMultiAgent {\n    const sender = AccountAuthenticator.deserialize(deserializer);\n    const secondary_signer_addresses = deserializeVector(deserializer, AccountAddress);\n    const secondary_signers = deserializeVector(deserializer, AccountAuthenticator);\n    return new TransactionAuthenticatorMultiAgent(sender, secondary_signer_addresses, secondary_signers);\n  }\n}\n\nexport abstract class AccountAuthenticator {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): AccountAuthenticator {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return AccountAuthenticatorEd25519.load(deserializer);\n      case 1:\n        return AccountAuthenticatorMultiEd25519.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for AccountAuthenticator: ${index}`);\n    }\n  }\n}\n\nexport class AccountAuthenticatorEd25519 extends AccountAuthenticator {\n  constructor(public readonly public_key: Ed25519PublicKey, public readonly signature: Ed25519Signature) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): AccountAuthenticatorEd25519 {\n    const public_key = Ed25519PublicKey.deserialize(deserializer);\n    const signature = Ed25519Signature.deserialize(deserializer);\n    return new AccountAuthenticatorEd25519(public_key, signature);\n  }\n}\n\nexport class AccountAuthenticatorMultiEd25519 extends AccountAuthenticator {\n  constructor(public readonly public_key: MultiEd25519PublicKey, public readonly signature: MultiEd25519Signature) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): AccountAuthenticatorMultiEd25519 {\n    const public_key = MultiEd25519PublicKey.deserialize(deserializer);\n    const signature = MultiEd25519Signature.deserialize(deserializer);\n    return new AccountAuthenticatorMultiEd25519(public_key, signature);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Deserializer, Serializer } from \"../bcs\";\n\nexport class Identifier {\n  constructor(public value: string) {}\n\n  public serialize(serializer: Serializer): void {\n    serializer.serializeStr(this.value);\n  }\n\n  static deserialize(deserializer: Deserializer): Identifier {\n    const value = deserializer.deserializeStr();\n    return new Identifier(value);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport { Deserializer, Seq, Serializer, deserializeVector, serializeVector } from \"../bcs\";\nimport { AccountAddress } from \"./account_address\";\nimport { Identifier } from \"./identifier\";\n\nexport abstract class TypeTag {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): TypeTag {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TypeTagBool.load(deserializer);\n      case 1:\n        return TypeTagU8.load(deserializer);\n      case 2:\n        return TypeTagU64.load(deserializer);\n      case 3:\n        return TypeTagU128.load(deserializer);\n      case 4:\n        return TypeTagAddress.load(deserializer);\n      case 5:\n        return TypeTagSigner.load(deserializer);\n      case 6:\n        return TypeTagVector.load(deserializer);\n      case 7:\n        return TypeTagStruct.load(deserializer);\n      case 8:\n        return TypeTagU16.load(deserializer);\n      case 9:\n        return TypeTagU32.load(deserializer);\n      case 10:\n        return TypeTagU256.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TypeTag: ${index}`);\n    }\n  }\n}\n\nexport class TypeTagBool extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n  }\n\n  static load(deserializer: Deserializer): TypeTagBool {\n    return new TypeTagBool();\n  }\n}\n\nexport class TypeTagU8 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU8 {\n    return new TypeTagU8();\n  }\n}\n\nexport class TypeTagU16 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU16 {\n    return new TypeTagU16();\n  }\n}\n\nexport class TypeTagU32 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU32 {\n    return new TypeTagU32();\n  }\n}\n\nexport class TypeTagU64 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(2);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU64 {\n    return new TypeTagU64();\n  }\n}\n\nexport class TypeTagU128 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(3);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU128 {\n    return new TypeTagU128();\n  }\n}\n\nexport class TypeTagU256 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU256 {\n    return new TypeTagU256();\n  }\n}\n\nexport class TypeTagAddress extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(4);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagAddress {\n    return new TypeTagAddress();\n  }\n}\n\nexport class TypeTagSigner extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(5);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagSigner {\n    return new TypeTagSigner();\n  }\n}\n\nexport class TypeTagVector extends TypeTag {\n  constructor(public readonly value: TypeTag) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(6);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TypeTagVector {\n    const value = TypeTag.deserialize(deserializer);\n    return new TypeTagVector(value);\n  }\n}\n\nexport class TypeTagStruct extends TypeTag {\n  constructor(public readonly value: StructTag) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(7);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TypeTagStruct {\n    const value = StructTag.deserialize(deserializer);\n    return new TypeTagStruct(value);\n  }\n\n  isStringTypeTag(): boolean {\n    if (\n      this.value.module_name.value === \"string\" &&\n      this.value.name.value === \"String\" &&\n      this.value.address.toHexString() === AccountAddress.fromHex(\"0x1\").toHexString()\n    ) {\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class StructTag {\n  constructor(\n    public readonly address: AccountAddress,\n    public readonly module_name: Identifier,\n    public readonly name: Identifier,\n    public readonly type_args: Seq<TypeTag>,\n  ) {}\n\n  /**\n   * Converts a string literal to a StructTag\n   * @param structTag String literal in format \"AcountAddress::module_name::ResourceName\",\n   *   e.g. \"0x1::aptos_coin::AptosCoin\"\n   * @returns\n   */\n  static fromString(structTag: string): StructTag {\n    // Type args are not supported in string literal\n    if (structTag.includes(\"<\")) {\n      throw new Error(\"Not implemented\");\n    }\n\n    const parts = structTag.split(\"::\");\n    if (parts.length !== 3) {\n      throw new Error(\"Invalid struct tag string literal.\");\n    }\n\n    return new StructTag(AccountAddress.fromHex(parts[0]), new Identifier(parts[1]), new Identifier(parts[2]), []);\n  }\n\n  serialize(serializer: Serializer): void {\n    this.address.serialize(serializer);\n    this.module_name.serialize(serializer);\n    this.name.serialize(serializer);\n    serializeVector<TypeTag>(this.type_args, serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): StructTag {\n    const address = AccountAddress.deserialize(deserializer);\n    const moduleName = Identifier.deserialize(deserializer);\n    const name = Identifier.deserialize(deserializer);\n    const typeArgs = deserializeVector(deserializer, TypeTag);\n    return new StructTag(address, moduleName, name, typeArgs);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Deserializer, Serializer, Bytes, Seq, deserializeVector, serializeVector } from \"../bcs\";\n\nimport { ModuleId } from \"./transaction\";\n\nimport { TypeTag } from \"./type_tag\";\n\nexport class TypeArgumentABI {\n  /**\n   * Constructs a TypeArgumentABI instance.\n   * @param name\n   */\n  constructor(public readonly name: string) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeStr(this.name);\n  }\n\n  static deserialize(deserializer: Deserializer): TypeArgumentABI {\n    const name = deserializer.deserializeStr();\n    return new TypeArgumentABI(name);\n  }\n}\n\nexport class ArgumentABI {\n  /**\n   * Constructs an ArgumentABI instance.\n   * @param name\n   * @param type_tag\n   */\n  constructor(public readonly name: string, public readonly type_tag: TypeTag) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeStr(this.name);\n    this.type_tag.serialize(serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): TypeArgumentABI {\n    const name = deserializer.deserializeStr();\n    const typeTag = TypeTag.deserialize(deserializer);\n    return new ArgumentABI(name, typeTag);\n  }\n}\n\nexport abstract class ScriptABI {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): ScriptABI {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionScriptABI.load(deserializer);\n      case 1:\n        return EntryFunctionABI.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n    }\n  }\n}\n\nexport class TransactionScriptABI extends ScriptABI {\n  /**\n   * Constructs a TransactionScriptABI instance.\n   * @param name Entry function name\n   * @param doc\n   * @param code\n   * @param ty_args\n   * @param args\n   */\n  constructor(\n    public readonly name: string,\n    public readonly doc: string,\n    public readonly code: Bytes,\n    public readonly ty_args: Seq<TypeArgumentABI>,\n    public readonly args: Seq<ArgumentABI>,\n  ) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    serializer.serializeStr(this.name);\n    serializer.serializeStr(this.doc);\n    serializer.serializeBytes(this.code);\n    serializeVector<TypeArgumentABI>(this.ty_args, serializer);\n    serializeVector<ArgumentABI>(this.args, serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionScriptABI {\n    const name = deserializer.deserializeStr();\n    const doc = deserializer.deserializeStr();\n    const code = deserializer.deserializeBytes();\n    const tyArgs = deserializeVector(deserializer, TypeArgumentABI);\n    const args = deserializeVector(deserializer, ArgumentABI);\n    return new TransactionScriptABI(name, doc, code, tyArgs, args);\n  }\n}\n\nexport class EntryFunctionABI extends ScriptABI {\n  /**\n   * Constructs a EntryFunctionABI instance\n   * @param name\n   * @param module_name Fully qualified module id\n   * @param doc\n   * @param ty_args\n   * @param args\n   */\n  constructor(\n    public readonly name: string,\n    public readonly module_name: ModuleId,\n    public readonly doc: string,\n    public readonly ty_args: Seq<TypeArgumentABI>,\n    public readonly args: Seq<ArgumentABI>,\n  ) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n    serializer.serializeStr(this.name);\n    this.module_name.serialize(serializer);\n    serializer.serializeStr(this.doc);\n    serializeVector<TypeArgumentABI>(this.ty_args, serializer);\n    serializeVector<ArgumentABI>(this.args, serializer);\n  }\n\n  static load(deserializer: Deserializer): EntryFunctionABI {\n    const name = deserializer.deserializeStr();\n    const moduleName = ModuleId.deserialize(deserializer);\n    const doc = deserializer.deserializeStr();\n    const tyArgs = deserializeVector(deserializer, TypeArgumentABI);\n    const args = deserializeVector(deserializer, ArgumentABI);\n    return new EntryFunctionABI(name, moduleName, doc, tyArgs, args);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { sha3_256 as sha3Hash } from \"@noble/hashes/sha3\";\nimport { HexString } from \"../hex_string\";\nimport { Bytes } from \"../bcs\";\nimport { MultiEd25519PublicKey } from \"./multi_ed25519\";\nimport { Ed25519PublicKey } from \"./ed25519\";\n\n/**\n * Each account stores an authentication key. Authentication key enables account owners to rotate\n * their private key(s) associated with the account without changing the address that hosts their account.\n * @see {@link * https://aptos.dev/concepts/accounts | Account Basics}\n *\n * Account addresses can be derived from AuthenticationKey\n */\nexport class AuthenticationKey {\n  static readonly LENGTH: number = 32;\n\n  static readonly MULTI_ED25519_SCHEME: number = 1;\n\n  static readonly ED25519_SCHEME: number = 0;\n\n  static readonly DERIVE_RESOURCE_ACCOUNT_SCHEME: number = 255;\n\n  readonly bytes: Bytes;\n\n  constructor(bytes: Bytes) {\n    if (bytes.length !== AuthenticationKey.LENGTH) {\n      throw new Error(\"Expected a byte array of length 32\");\n    }\n    this.bytes = bytes;\n  }\n\n  /**\n   * Converts a K-of-N MultiEd25519PublicKey to AuthenticationKey with:\n   * `auth_key = sha3-256(p_1 | … | p_n | K | 0x01)`. `K` represents the K-of-N required for\n   * authenticating the transaction. `0x01` is the 1-byte scheme for multisig.\n   */\n  static fromMultiEd25519PublicKey(publicKey: MultiEd25519PublicKey): AuthenticationKey {\n    const pubKeyBytes = publicKey.toBytes();\n\n    const bytes = new Uint8Array(pubKeyBytes.length + 1);\n    bytes.set(pubKeyBytes);\n    bytes.set([AuthenticationKey.MULTI_ED25519_SCHEME], pubKeyBytes.length);\n\n    const hash = sha3Hash.create();\n    hash.update(bytes);\n\n    return new AuthenticationKey(hash.digest());\n  }\n\n  static fromEd25519PublicKey(publicKey: Ed25519PublicKey): AuthenticationKey {\n    const pubKeyBytes = publicKey.value;\n\n    const bytes = new Uint8Array(pubKeyBytes.length + 1);\n    bytes.set(pubKeyBytes);\n    bytes.set([AuthenticationKey.ED25519_SCHEME], pubKeyBytes.length);\n\n    const hash = sha3Hash.create();\n    hash.update(bytes);\n\n    return new AuthenticationKey(hash.digest());\n  }\n\n  /**\n   * Derives an account address from AuthenticationKey. Since current AccountAddress is 32 bytes,\n   * AuthenticationKey bytes are directly translated to AccountAddress.\n   */\n  derivedAddress(): HexString {\n    return HexString.fromUint8Array(this.bytes);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Serializer } from \"../bcs\";\nimport { AccountAddress } from \"./account_address\";\n\nexport class RotationProofChallenge {\n  constructor(\n    public readonly accountAddress: AccountAddress,\n    public readonly moduleName: string,\n    public readonly structName: string,\n    public readonly sequenceNumber: number | bigint,\n    public readonly originator: AccountAddress,\n    public readonly currentAuthKey: AccountAddress,\n    public readonly newPublicKey: Uint8Array,\n  ) {}\n\n  serialize(serializer: Serializer): void {\n    this.accountAddress.serialize(serializer);\n    serializer.serializeStr(this.moduleName);\n    serializer.serializeStr(this.structName);\n    serializer.serializeU64(this.sequenceNumber);\n    this.originator.serialize(serializer);\n    this.currentAuthKey.serialize(serializer);\n    serializer.serializeBytes(this.newPublicKey);\n  }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport { AptosGeneratedClient } from './AptosGeneratedClient';\n\nexport { ApiError } from './core/ApiError';\nexport { BaseHttpRequest } from './core/BaseHttpRequest';\nexport { CancelablePromise, CancelError } from './core/CancelablePromise';\nexport { OpenAPI } from './core/OpenAPI';\nexport type { OpenAPIConfig } from './core/OpenAPI';\n\nexport type { AccountData } from './models/AccountData';\nexport type { AccountSignature } from './models/AccountSignature';\nexport type { AccountSignature_Ed25519Signature } from './models/AccountSignature_Ed25519Signature';\nexport type { AccountSignature_MultiEd25519Signature } from './models/AccountSignature_MultiEd25519Signature';\nexport type { Address } from './models/Address';\nexport type { AptosError } from './models/AptosError';\nexport { AptosErrorCode } from './models/AptosErrorCode';\nexport type { Block } from './models/Block';\nexport type { BlockMetadataTransaction } from './models/BlockMetadataTransaction';\nexport type { DecodedTableData } from './models/DecodedTableData';\nexport type { DeletedTableData } from './models/DeletedTableData';\nexport type { DeleteModule } from './models/DeleteModule';\nexport type { DeleteResource } from './models/DeleteResource';\nexport type { DeleteTableItem } from './models/DeleteTableItem';\nexport type { DirectWriteSet } from './models/DirectWriteSet';\nexport type { Ed25519Signature } from './models/Ed25519Signature';\nexport type { EncodeSubmissionRequest } from './models/EncodeSubmissionRequest';\nexport type { EntryFunctionId } from './models/EntryFunctionId';\nexport type { EntryFunctionPayload } from './models/EntryFunctionPayload';\nexport type { Event } from './models/Event';\nexport type { EventGuid } from './models/EventGuid';\nexport type { GasEstimation } from './models/GasEstimation';\nexport type { GenesisPayload } from './models/GenesisPayload';\nexport type { GenesisPayload_WriteSetPayload } from './models/GenesisPayload_WriteSetPayload';\nexport type { GenesisTransaction } from './models/GenesisTransaction';\nexport type { HashValue } from './models/HashValue';\nexport type { HealthCheckSuccess } from './models/HealthCheckSuccess';\nexport type { HexEncodedBytes } from './models/HexEncodedBytes';\nexport type { IdentifierWrapper } from './models/IdentifierWrapper';\nexport type { IndexResponse } from './models/IndexResponse';\nexport type { ModuleBundlePayload } from './models/ModuleBundlePayload';\nexport type { MoveAbility } from './models/MoveAbility';\nexport type { MoveFunction } from './models/MoveFunction';\nexport type { MoveFunctionGenericTypeParam } from './models/MoveFunctionGenericTypeParam';\nexport { MoveFunctionVisibility } from './models/MoveFunctionVisibility';\nexport type { MoveModule } from './models/MoveModule';\nexport type { MoveModuleBytecode } from './models/MoveModuleBytecode';\nexport type { MoveModuleId } from './models/MoveModuleId';\nexport type { MoveResource } from './models/MoveResource';\nexport type { MoveScriptBytecode } from './models/MoveScriptBytecode';\nexport type { MoveStruct } from './models/MoveStruct';\nexport type { MoveStructField } from './models/MoveStructField';\nexport type { MoveStructGenericTypeParam } from './models/MoveStructGenericTypeParam';\nexport type { MoveStructTag } from './models/MoveStructTag';\nexport type { MoveStructValue } from './models/MoveStructValue';\nexport type { MoveType } from './models/MoveType';\nexport type { MoveValue } from './models/MoveValue';\nexport type { MultiAgentSignature } from './models/MultiAgentSignature';\nexport type { MultiEd25519Signature } from './models/MultiEd25519Signature';\nexport type { PendingTransaction } from './models/PendingTransaction';\nexport type { RawTableItemRequest } from './models/RawTableItemRequest';\nexport { RoleType } from './models/RoleType';\nexport type { ScriptPayload } from './models/ScriptPayload';\nexport type { ScriptWriteSet } from './models/ScriptWriteSet';\nexport type { StateCheckpointTransaction } from './models/StateCheckpointTransaction';\nexport type { StateKeyWrapper } from './models/StateKeyWrapper';\nexport type { SubmitTransactionRequest } from './models/SubmitTransactionRequest';\nexport type { TableItemRequest } from './models/TableItemRequest';\nexport type { Transaction } from './models/Transaction';\nexport type { Transaction_BlockMetadataTransaction } from './models/Transaction_BlockMetadataTransaction';\nexport type { Transaction_GenesisTransaction } from './models/Transaction_GenesisTransaction';\nexport type { Transaction_PendingTransaction } from './models/Transaction_PendingTransaction';\nexport type { Transaction_StateCheckpointTransaction } from './models/Transaction_StateCheckpointTransaction';\nexport type { Transaction_UserTransaction } from './models/Transaction_UserTransaction';\nexport type { TransactionPayload } from './models/TransactionPayload';\nexport type { TransactionPayload_EntryFunctionPayload } from './models/TransactionPayload_EntryFunctionPayload';\nexport type { TransactionPayload_ModuleBundlePayload } from './models/TransactionPayload_ModuleBundlePayload';\nexport type { TransactionPayload_ScriptPayload } from './models/TransactionPayload_ScriptPayload';\nexport type { TransactionsBatchSingleSubmissionFailure } from './models/TransactionsBatchSingleSubmissionFailure';\nexport type { TransactionsBatchSubmissionResult } from './models/TransactionsBatchSubmissionResult';\nexport type { TransactionSignature } from './models/TransactionSignature';\nexport type { TransactionSignature_Ed25519Signature } from './models/TransactionSignature_Ed25519Signature';\nexport type { TransactionSignature_MultiAgentSignature } from './models/TransactionSignature_MultiAgentSignature';\nexport type { TransactionSignature_MultiEd25519Signature } from './models/TransactionSignature_MultiEd25519Signature';\nexport type { U128 } from './models/U128';\nexport type { U256 } from './models/U256';\nexport type { U64 } from './models/U64';\nexport type { UserTransaction } from './models/UserTransaction';\nexport type { VersionedEvent } from './models/VersionedEvent';\nexport type { ViewRequest } from './models/ViewRequest';\nexport type { WriteModule } from './models/WriteModule';\nexport type { WriteResource } from './models/WriteResource';\nexport type { WriteSet } from './models/WriteSet';\nexport type { WriteSet_DirectWriteSet } from './models/WriteSet_DirectWriteSet';\nexport type { WriteSet_ScriptWriteSet } from './models/WriteSet_ScriptWriteSet';\nexport type { WriteSetChange } from './models/WriteSetChange';\nexport type { WriteSetChange_DeleteModule } from './models/WriteSetChange_DeleteModule';\nexport type { WriteSetChange_DeleteResource } from './models/WriteSetChange_DeleteResource';\nexport type { WriteSetChange_DeleteTableItem } from './models/WriteSetChange_DeleteTableItem';\nexport type { WriteSetChange_WriteModule } from './models/WriteSetChange_WriteModule';\nexport type { WriteSetChange_WriteResource } from './models/WriteSetChange_WriteResource';\nexport type { WriteSetChange_WriteTableItem } from './models/WriteSetChange_WriteTableItem';\nexport type { WriteSetPayload } from './models/WriteSetPayload';\nexport type { WriteTableItem } from './models/WriteTableItem';\n\nexport { $AccountData } from './schemas/$AccountData';\nexport { $AccountSignature } from './schemas/$AccountSignature';\nexport { $AccountSignature_Ed25519Signature } from './schemas/$AccountSignature_Ed25519Signature';\nexport { $AccountSignature_MultiEd25519Signature } from './schemas/$AccountSignature_MultiEd25519Signature';\nexport { $Address } from './schemas/$Address';\nexport { $AptosError } from './schemas/$AptosError';\nexport { $AptosErrorCode } from './schemas/$AptosErrorCode';\nexport { $Block } from './schemas/$Block';\nexport { $BlockMetadataTransaction } from './schemas/$BlockMetadataTransaction';\nexport { $DecodedTableData } from './schemas/$DecodedTableData';\nexport { $DeletedTableData } from './schemas/$DeletedTableData';\nexport { $DeleteModule } from './schemas/$DeleteModule';\nexport { $DeleteResource } from './schemas/$DeleteResource';\nexport { $DeleteTableItem } from './schemas/$DeleteTableItem';\nexport { $DirectWriteSet } from './schemas/$DirectWriteSet';\nexport { $Ed25519Signature } from './schemas/$Ed25519Signature';\nexport { $EncodeSubmissionRequest } from './schemas/$EncodeSubmissionRequest';\nexport { $EntryFunctionId } from './schemas/$EntryFunctionId';\nexport { $EntryFunctionPayload } from './schemas/$EntryFunctionPayload';\nexport { $Event } from './schemas/$Event';\nexport { $EventGuid } from './schemas/$EventGuid';\nexport { $GasEstimation } from './schemas/$GasEstimation';\nexport { $GenesisPayload } from './schemas/$GenesisPayload';\nexport { $GenesisPayload_WriteSetPayload } from './schemas/$GenesisPayload_WriteSetPayload';\nexport { $GenesisTransaction } from './schemas/$GenesisTransaction';\nexport { $HashValue } from './schemas/$HashValue';\nexport { $HealthCheckSuccess } from './schemas/$HealthCheckSuccess';\nexport { $HexEncodedBytes } from './schemas/$HexEncodedBytes';\nexport { $IdentifierWrapper } from './schemas/$IdentifierWrapper';\nexport { $IndexResponse } from './schemas/$IndexResponse';\nexport { $ModuleBundlePayload } from './schemas/$ModuleBundlePayload';\nexport { $MoveAbility } from './schemas/$MoveAbility';\nexport { $MoveFunction } from './schemas/$MoveFunction';\nexport { $MoveFunctionGenericTypeParam } from './schemas/$MoveFunctionGenericTypeParam';\nexport { $MoveFunctionVisibility } from './schemas/$MoveFunctionVisibility';\nexport { $MoveModule } from './schemas/$MoveModule';\nexport { $MoveModuleBytecode } from './schemas/$MoveModuleBytecode';\nexport { $MoveModuleId } from './schemas/$MoveModuleId';\nexport { $MoveResource } from './schemas/$MoveResource';\nexport { $MoveScriptBytecode } from './schemas/$MoveScriptBytecode';\nexport { $MoveStruct } from './schemas/$MoveStruct';\nexport { $MoveStructField } from './schemas/$MoveStructField';\nexport { $MoveStructGenericTypeParam } from './schemas/$MoveStructGenericTypeParam';\nexport { $MoveStructTag } from './schemas/$MoveStructTag';\nexport { $MoveStructValue } from './schemas/$MoveStructValue';\nexport { $MoveType } from './schemas/$MoveType';\nexport { $MoveValue } from './schemas/$MoveValue';\nexport { $MultiAgentSignature } from './schemas/$MultiAgentSignature';\nexport { $MultiEd25519Signature } from './schemas/$MultiEd25519Signature';\nexport { $PendingTransaction } from './schemas/$PendingTransaction';\nexport { $RawTableItemRequest } from './schemas/$RawTableItemRequest';\nexport { $RoleType } from './schemas/$RoleType';\nexport { $ScriptPayload } from './schemas/$ScriptPayload';\nexport { $ScriptWriteSet } from './schemas/$ScriptWriteSet';\nexport { $StateCheckpointTransaction } from './schemas/$StateCheckpointTransaction';\nexport { $StateKeyWrapper } from './schemas/$StateKeyWrapper';\nexport { $SubmitTransactionRequest } from './schemas/$SubmitTransactionRequest';\nexport { $TableItemRequest } from './schemas/$TableItemRequest';\nexport { $Transaction } from './schemas/$Transaction';\nexport { $Transaction_BlockMetadataTransaction } from './schemas/$Transaction_BlockMetadataTransaction';\nexport { $Transaction_GenesisTransaction } from './schemas/$Transaction_GenesisTransaction';\nexport { $Transaction_PendingTransaction } from './schemas/$Transaction_PendingTransaction';\nexport { $Transaction_StateCheckpointTransaction } from './schemas/$Transaction_StateCheckpointTransaction';\nexport { $Transaction_UserTransaction } from './schemas/$Transaction_UserTransaction';\nexport { $TransactionPayload } from './schemas/$TransactionPayload';\nexport { $TransactionPayload_EntryFunctionPayload } from './schemas/$TransactionPayload_EntryFunctionPayload';\nexport { $TransactionPayload_ModuleBundlePayload } from './schemas/$TransactionPayload_ModuleBundlePayload';\nexport { $TransactionPayload_ScriptPayload } from './schemas/$TransactionPayload_ScriptPayload';\nexport { $TransactionsBatchSingleSubmissionFailure } from './schemas/$TransactionsBatchSingleSubmissionFailure';\nexport { $TransactionsBatchSubmissionResult } from './schemas/$TransactionsBatchSubmissionResult';\nexport { $TransactionSignature } from './schemas/$TransactionSignature';\nexport { $TransactionSignature_Ed25519Signature } from './schemas/$TransactionSignature_Ed25519Signature';\nexport { $TransactionSignature_MultiAgentSignature } from './schemas/$TransactionSignature_MultiAgentSignature';\nexport { $TransactionSignature_MultiEd25519Signature } from './schemas/$TransactionSignature_MultiEd25519Signature';\nexport { $U128 } from './schemas/$U128';\nexport { $U256 } from './schemas/$U256';\nexport { $U64 } from './schemas/$U64';\nexport { $UserTransaction } from './schemas/$UserTransaction';\nexport { $VersionedEvent } from './schemas/$VersionedEvent';\nexport { $ViewRequest } from './schemas/$ViewRequest';\nexport { $WriteModule } from './schemas/$WriteModule';\nexport { $WriteResource } from './schemas/$WriteResource';\nexport { $WriteSet } from './schemas/$WriteSet';\nexport { $WriteSet_DirectWriteSet } from './schemas/$WriteSet_DirectWriteSet';\nexport { $WriteSet_ScriptWriteSet } from './schemas/$WriteSet_ScriptWriteSet';\nexport { $WriteSetChange } from './schemas/$WriteSetChange';\nexport { $WriteSetChange_DeleteModule } from './schemas/$WriteSetChange_DeleteModule';\nexport { $WriteSetChange_DeleteResource } from './schemas/$WriteSetChange_DeleteResource';\nexport { $WriteSetChange_DeleteTableItem } from './schemas/$WriteSetChange_DeleteTableItem';\nexport { $WriteSetChange_WriteModule } from './schemas/$WriteSetChange_WriteModule';\nexport { $WriteSetChange_WriteResource } from './schemas/$WriteSetChange_WriteResource';\nexport { $WriteSetChange_WriteTableItem } from './schemas/$WriteSetChange_WriteTableItem';\nexport { $WriteSetPayload } from './schemas/$WriteSetPayload';\nexport { $WriteTableItem } from './schemas/$WriteTableItem';\n\nexport { AccountsService } from './services/AccountsService';\nexport { BlocksService } from './services/BlocksService';\nexport { EventsService } from './services/EventsService';\nexport { GeneralService } from './services/GeneralService';\nexport { TablesService } from './services/TablesService';\nexport { TransactionsService } from './services/TransactionsService';\nexport { ViewService } from './services/ViewService';\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport abstract class BaseHttpRequest {\n\n    constructor(public readonly config: OpenAPIConfig) {}\n\n    public abstract request<T>(options: ApiRequestOptions): CancelablePromise<T>;\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport axios from 'axios';\nimport type { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport FormData from 'form-data';\n\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\ninterface Cookie {\n  name: string;\n  value: string;\n  expires?: Date;\n  path?: string;\n  sameSite?: \"Lax\" | \"None\" | \"Strict\";\n  secure?: boolean;\n}\n\nclass CookieJar {\n  constructor(private jar = new Map<string, Cookie[]>()) {}\n\n  setCookie(url: URL, cookieStr: string) {\n    const key = url.origin.toLowerCase();\n    if (!this.jar.has(key)) {\n      this.jar.set(key, []);\n    }\n\n    const cookie = CookieJar.parse(cookieStr);\n    this.jar.set(key, [...(this.jar.get(key)?.filter((c) => c.name !== cookie.name) || []), cookie]);\n  }\n\n  getCookies(url: URL): Cookie[] {\n    const key = url.origin.toLowerCase();\n    if (!this.jar.get(key)) {\n      return [];\n    }\n\n    // Filter out expired cookies\n    return this.jar.get(key)?.filter((cookie) => !cookie.expires || cookie.expires > new Date()) || [];\n  }\n\n  static parse(str: string): Cookie {\n    if (typeof str !== \"string\") {\n      throw new Error(\"argument str must be a string\");\n    }\n\n    const parts = str.split(\";\").map((part) => part.trim());\n\n    let cookie: Cookie;\n\n    if (parts.length > 0) {\n      const [name, value] = parts[0].split(\"=\");\n      if (!name || !value) {\n        throw new Error(\"Invalid cookie\");\n      }\n\n      cookie = {\n        name,\n        value,\n      };\n    } else {\n      throw new Error(\"Invalid cookie\");\n    }\n\n    parts.slice(1).forEach((part) => {\n      const [name, value] = part.split(\"=\");\n      if (!name.trim()) {\n        throw new Error(\"Invalid cookie\");\n      }\n\n      const nameLow = name.toLowerCase();\n      // eslint-disable-next-line quotes\n      const val = value?.charAt(0) === \"'\" || value?.charAt(0) === '\"' ? value?.slice(1, -1) : value;\n      if (nameLow === \"expires\") {\n        cookie.expires = new Date(val);\n      }\n      if (nameLow === \"path\") {\n        cookie.path = val;\n      }\n      if (nameLow === \"samesite\") {\n        if (val !== \"Lax\" && val !== \"None\" && val !== \"Strict\") {\n          throw new Error(\"Invalid cookie SameSite value\");\n        }\n        cookie.sameSite = val;\n      }\n      if (nameLow === \"secure\") {\n        cookie.secure = true;\n      }\n    });\n\n    return cookie;\n  }\n}\n\nconst jar = new CookieJar();\n\naxios.interceptors.response.use((response) => {\n  if (Array.isArray(response.headers[\"set-cookie\"])) {\n    response.headers[\"set-cookie\"].forEach((c) => {\n      jar.setCookie(new URL(response.config.url!), c);\n    });\n  }\n  return response;\n});\n\naxios.interceptors.request.use(function (config) {\n  const cookies = jar.getCookies(new URL(config.url!));\n\n  if (cookies?.length > 0 && config.headers) {\n    config.headers.cookie = cookies.map((cookie) => `${cookie.name}=${cookie.value}`).join(\"; \");\n  }\n  return config;\n});\n\nconst isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nconst isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nconst isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nconst isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nconst isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nconst isSuccess = (status: number): boolean => {\n    return status >= 200 && status < 300;\n};\n\nconst base64 = (str: string): string => { return btoa(str); };\n\nconst getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nconst getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nconst resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nconst getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions, formData?: FormData): Promise<Record<string, string>> => {\n    const token = await resolve(options, config.TOKEN);\n    const username = await resolve(options, config.USERNAME);\n    const password = await resolve(options, config.PASSWORD);\n    const additionalHeaders = await resolve(options, config.HEADERS);\n    const formHeaders = typeof formData?.getHeaders === 'function' && formData?.getHeaders() || {}\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n        ...formHeaders,\n    })\n    .filter(([_, value]) => isDefined(value))\n    .reduce((headers, [key, value]) => ({\n        ...headers,\n        [key]: String(value),\n    }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return headers;\n};\n\nconst getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body) {\n        return options.body;\n    }\n    return undefined;\n};\n\nconst sendRequest = async <T>(\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Record<string, string>,\n    onCancel: OnCancel\n): Promise<AxiosResponse<T>> => {\n    const source = axios.CancelToken.source();\n\n    const requestConfig: AxiosRequestConfig = {\n        url,\n        headers,\n        data: body ?? formData,\n        method: options.method,\n        withCredentials: config.WITH_CREDENTIALS,\n        cancelToken: source.token,\n    };\n\n    const isBCS = Object.keys(config.HEADERS || {})\n    .filter((k) => k.toLowerCase() === \"accept\")\n    .map((k) => (config.HEADERS as Record<string, string>)[k])\n    .includes(\"application/x-bcs\");\n  if (isBCS) {\n    requestConfig.responseType = \"arraybuffer\";\n  }\n\n    onCancel(() => source.cancel('The user aborted a request.'));\n\n    try {\n        return await axios.request(requestConfig);\n    } catch (error) {\n        const axiosError = error as AxiosError<T>;\n        if (axiosError.response) {\n            return axiosError.response;\n        }\n        throw error;\n    }\n};\n\nconst getResponseHeader = (response: AxiosResponse<any>, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers[responseHeader];\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nconst getResponseBody = (response: AxiosResponse<any>): any => {\n    if (response.status !== 204) {\n        return response.data;\n    }\n    return undefined;\n};\n\nconst catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        429: 'Too Many Requests',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        throw new ApiError(options, result, 'Generic Error');\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options, formData);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest<T>(config, options, url, body, formData, headers, onCancel);\n                const responseBody = getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: isSuccess(response.status),\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                // Attach the response headers to the output. This is a hack to fix\n                // https://github.com/ferdikoomen/openapi-typescript-codegen/issues/1295\n                const out = result.body;\n                try {\n                    out[\"__headers\"] = response.headers;\n                } catch (_) {}\n\n                resolve(out);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    readonly [Symbol.toStringTag]!: string;\n\n    private _isResolved: boolean;\n    private _isRejected: boolean;\n    private _isCancelled: boolean;\n    private readonly _cancelHandlers: (() => void)[];\n    private readonly _promise: Promise<T>;\n    private _resolve?: (value: T | PromiseLike<T>) => void;\n    private _reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this._isResolved = false;\n        this._isRejected = false;\n        this._isCancelled = false;\n        this._cancelHandlers = [];\n        this._promise = new Promise<T>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isResolved = true;\n                this._resolve?.(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isRejected = true;\n                this._reject?.(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this._isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this._isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this._isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this._promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this._promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this._promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n            return;\n        }\n        this._isCancelled = true;\n        if (this._cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this._cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this._cancelHandlers.length = 0;\n        this._reject?.(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this._isCancelled;\n    }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport { BaseHttpRequest } from './BaseHttpRequest';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\nimport { request as __request } from './request';\n\nexport class AxiosHttpRequest extends BaseHttpRequest {\n\n    constructor(config: OpenAPIConfig) {\n        super(config);\n    }\n\n    /**\n     * Request method\n     * @param options The request options from the service\n     * @returns CancelablePromise<T>\n     * @throws ApiError\n     */\n    public request<T>(options: ApiRequestOptions): CancelablePromise<T> {\n        return __request(this.config, options);\n    }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AccountData } from '../models/AccountData';\nimport type { Address } from '../models/Address';\nimport type { IdentifierWrapper } from '../models/IdentifierWrapper';\nimport type { MoveModuleBytecode } from '../models/MoveModuleBytecode';\nimport type { MoveResource } from '../models/MoveResource';\nimport type { MoveStructTag } from '../models/MoveStructTag';\nimport type { StateKeyWrapper } from '../models/StateKeyWrapper';\nimport type { U64 } from '../models/U64';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class AccountsService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get account\n     * Return the authentication key and the sequence number for an account\n     * address. Optionally, a ledger version can be specified. If the ledger\n     * version is not specified in the request, the latest ledger version is used.\n     * @param address Address of account with or without a `0x` prefix\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns AccountData\n     * @throws ApiError\n     */\n    public getAccount(\n        address: Address,\n        ledgerVersion?: U64,\n    ): CancelablePromise<AccountData> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}',\n            path: {\n                'address': address,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n        });\n    }\n\n    /**\n     * Get account resources\n     * Retrieves all account resources for a given account and a specific ledger version.  If the\n     * ledger version is not specified in the request, the latest ledger version is used.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param address Address of account with or without a `0x` prefix\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @param start Cursor specifying where to start for pagination\n     *\n     * This cursor cannot be derived manually client-side. Instead, you must\n     * call this endpoint once without this query parameter specified, and\n     * then use the cursor returned in the X-Aptos-Cursor header in the\n     * response.\n     * @param limit Max number of account resources to retrieve\n     *\n     * If not provided, defaults to default page size.\n     * @returns MoveResource\n     * @throws ApiError\n     */\n    public getAccountResources(\n        address: Address,\n        ledgerVersion?: U64,\n        start?: StateKeyWrapper,\n        limit?: number,\n    ): CancelablePromise<Array<MoveResource>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/resources',\n            path: {\n                'address': address,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Get account modules\n     * Retrieves all account modules' bytecode for a given account at a specific ledger version.\n     * If the ledger version is not specified in the request, the latest ledger version is used.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param address Address of account with or without a `0x` prefix\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @param start Cursor specifying where to start for pagination\n     *\n     * This cursor cannot be derived manually client-side. Instead, you must\n     * call this endpoint once without this query parameter specified, and\n     * then use the cursor returned in the X-Aptos-Cursor header in the\n     * response.\n     * @param limit Max number of account modules to retrieve\n     *\n     * If not provided, defaults to default page size.\n     * @returns MoveModuleBytecode\n     * @throws ApiError\n     */\n    public getAccountModules(\n        address: Address,\n        ledgerVersion?: U64,\n        start?: StateKeyWrapper,\n        limit?: number,\n    ): CancelablePromise<Array<MoveModuleBytecode>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/modules',\n            path: {\n                'address': address,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Get account resource\n     * Retrieves an individual resource from a given account and at a specific ledger version. If the\n     * ledger version is not specified in the request, the latest ledger version is used.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param address Address of account with or without a `0x` prefix\n     * @param resourceType Name of struct to retrieve e.g. `0x1::account::Account`\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveResource\n     * @throws ApiError\n     */\n    public getAccountResource(\n        address: Address,\n        resourceType: MoveStructTag,\n        ledgerVersion?: U64,\n    ): CancelablePromise<MoveResource> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/resource/{resource_type}',\n            path: {\n                'address': address,\n                'resource_type': resourceType,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n        });\n    }\n\n    /**\n     * Get account module\n     * Retrieves an individual module from a given account and at a specific ledger version. If the\n     * ledger version is not specified in the request, the latest ledger version is used.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param address Address of account with or without a `0x` prefix\n     * @param moduleName Name of module to retrieve e.g. `coin`\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveModuleBytecode\n     * @throws ApiError\n     */\n    public getAccountModule(\n        address: Address,\n        moduleName: IdentifierWrapper,\n        ledgerVersion?: U64,\n    ): CancelablePromise<MoveModuleBytecode> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/module/{module_name}',\n            path: {\n                'address': address,\n                'module_name': moduleName,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { Block } from '../models/Block';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class BlocksService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get blocks by height\n     * This endpoint allows you to get the transactions in a block\n     * and the corresponding block information.\n     *\n     * Transactions are limited by max default transactions size.  If not all transactions\n     * are present, the user will need to query for the rest of the transactions via the\n     * get transactions API.\n     *\n     * If the block is pruned, it will return a 410\n     * @param blockHeight Block height to lookup.  Starts at 0\n     * @param withTransactions If set to true, include all transactions in the block\n     *\n     * If not provided, no transactions will be retrieved\n     * @returns Block\n     * @throws ApiError\n     */\n    public getBlockByHeight(\n        blockHeight: number,\n        withTransactions?: boolean,\n    ): CancelablePromise<Block> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/blocks/by_height/{block_height}',\n            path: {\n                'block_height': blockHeight,\n            },\n            query: {\n                'with_transactions': withTransactions,\n            },\n        });\n    }\n\n    /**\n     * Get blocks by version\n     * This endpoint allows you to get the transactions in a block\n     * and the corresponding block information given a version in the block.\n     *\n     * Transactions are limited by max default transactions size.  If not all transactions\n     * are present, the user will need to query for the rest of the transactions via the\n     * get transactions API.\n     *\n     * If the block has been pruned, it will return a 410\n     * @param version Ledger version to lookup block information for.\n     * @param withTransactions If set to true, include all transactions in the block\n     *\n     * If not provided, no transactions will be retrieved\n     * @returns Block\n     * @throws ApiError\n     */\n    public getBlockByVersion(\n        version: number,\n        withTransactions?: boolean,\n    ): CancelablePromise<Block> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/blocks/by_version/{version}',\n            path: {\n                'version': version,\n            },\n            query: {\n                'with_transactions': withTransactions,\n            },\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { Address } from '../models/Address';\nimport type { IdentifierWrapper } from '../models/IdentifierWrapper';\nimport type { MoveStructTag } from '../models/MoveStructTag';\nimport type { U64 } from '../models/U64';\nimport type { VersionedEvent } from '../models/VersionedEvent';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class EventsService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get events by creation number\n     * Event types are globally identifiable by an account `address` and\n     * monotonically increasing `creation_number`, one per event type emitted\n     * to the given account. This API returns events corresponding to that\n     * that event type.\n     * @param address Hex-encoded 32 byte Aptos account, with or without a `0x` prefix, for\n     * which events are queried. This refers to the account that events were\n     * emitted to, not the account hosting the move module that emits that\n     * event type.\n     * @param creationNumber Creation number corresponding to the event stream originating\n     * from the given account.\n     * @param start Starting sequence number of events.\n     *\n     * If unspecified, by default will retrieve the most recent events\n     * @param limit Max number of events to retrieve.\n     *\n     * If unspecified, defaults to default page size\n     * @returns VersionedEvent\n     * @throws ApiError\n     */\n    public getEventsByCreationNumber(\n        address: Address,\n        creationNumber: U64,\n        start?: U64,\n        limit?: number,\n    ): CancelablePromise<Array<VersionedEvent>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/events/{creation_number}',\n            path: {\n                'address': address,\n                'creation_number': creationNumber,\n            },\n            query: {\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Get events by event handle\n     * This API uses the given account `address`, `eventHandle`, and `fieldName`\n     * to build a key that can globally identify an event types. It then uses this\n     * key to return events emitted to the given account matching that event type.\n     * @param address Hex-encoded 32 byte Aptos account, with or without a `0x` prefix, for\n     * which events are queried. This refers to the account that events were\n     * emitted to, not the account hosting the move module that emits that\n     * event type.\n     * @param eventHandle Name of struct to lookup event handle e.g. `0x1::account::Account`\n     * @param fieldName Name of field to lookup event handle e.g. `withdraw_events`\n     * @param start Starting sequence number of events.\n     *\n     * If unspecified, by default will retrieve the most recent\n     * @param limit Max number of events to retrieve.\n     *\n     * If unspecified, defaults to default page size\n     * @returns VersionedEvent\n     * @throws ApiError\n     */\n    public getEventsByEventHandle(\n        address: Address,\n        eventHandle: MoveStructTag,\n        fieldName: IdentifierWrapper,\n        start?: U64,\n        limit?: number,\n    ): CancelablePromise<Array<VersionedEvent>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/events/{event_handle}/{field_name}',\n            path: {\n                'address': address,\n                'event_handle': eventHandle,\n                'field_name': fieldName,\n            },\n            query: {\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { HealthCheckSuccess } from '../models/HealthCheckSuccess';\nimport type { IndexResponse } from '../models/IndexResponse';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class GeneralService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Show OpenAPI explorer\n     * Provides a UI that you can use to explore the API. You can also\n     * retrieve the API directly at `/spec.yaml` and `/spec.json`.\n     * @returns string\n     * @throws ApiError\n     */\n    public spec(): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/spec',\n        });\n    }\n\n    /**\n     * Check basic node health\n     * By default this endpoint just checks that it can get the latest ledger\n     * info and then returns 200.\n     *\n     * If the duration_secs param is provided, this endpoint will return a\n     * 200 if the following condition is true:\n     *\n     * `server_latest_ledger_info_timestamp >= server_current_time_timestamp - duration_secs`\n     * @param durationSecs Threshold in seconds that the server can be behind to be considered healthy\n     *\n     * If not provided, the healthcheck will always succeed\n     * @returns HealthCheckSuccess\n     * @throws ApiError\n     */\n    public healthy(\n        durationSecs?: number,\n    ): CancelablePromise<HealthCheckSuccess> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/-/healthy',\n            query: {\n                'duration_secs': durationSecs,\n            },\n        });\n    }\n\n    /**\n     * Get ledger info\n     * Get the latest ledger information, including data such as chain ID,\n     * role type, ledger versions, epoch, etc.\n     * @returns IndexResponse\n     * @throws ApiError\n     */\n    public getLedgerInfo(): CancelablePromise<IndexResponse> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/',\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { Address } from '../models/Address';\nimport type { MoveValue } from '../models/MoveValue';\nimport type { RawTableItemRequest } from '../models/RawTableItemRequest';\nimport type { TableItemRequest } from '../models/TableItemRequest';\nimport type { U64 } from '../models/U64';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class TablesService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get table item\n     * Get a table item at a specific ledger version from the table identified by {table_handle}\n     * in the path and the \"key\" (TableItemRequest) provided in the request body.\n     *\n     * This is a POST endpoint because the \"key\" for requesting a specific\n     * table item (TableItemRequest) could be quite complex, as each of its\n     * fields could themselves be composed of other structs. This makes it\n     * impractical to express using query params, meaning GET isn't an option.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param tableHandle Table handle hex encoded 32-byte string\n     * @param requestBody\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveValue\n     * @throws ApiError\n     */\n    public getTableItem(\n        tableHandle: Address,\n        requestBody: TableItemRequest,\n        ledgerVersion?: U64,\n    ): CancelablePromise<MoveValue> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/tables/{table_handle}/item',\n            path: {\n                'table_handle': tableHandle,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Get raw table item\n     * Get a table item at a specific ledger version from the table identified by {table_handle}\n     * in the path and the \"key\" (RawTableItemRequest) provided in the request body.\n     *\n     * The `get_raw_table_item` requires only a serialized key comparing to the full move type information\n     * comparing to the `get_table_item` api, and can only return the query in the bcs format.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param tableHandle Table handle hex encoded 32-byte string\n     * @param requestBody\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveValue\n     * @throws ApiError\n     */\n    public getRawTableItem(\n        tableHandle: Address,\n        requestBody: RawTableItemRequest,\n        ledgerVersion?: U64,\n    ): CancelablePromise<MoveValue> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/tables/{table_handle}/raw_item',\n            path: {\n                'table_handle': tableHandle,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { Address } from '../models/Address';\nimport type { EncodeSubmissionRequest } from '../models/EncodeSubmissionRequest';\nimport type { GasEstimation } from '../models/GasEstimation';\nimport type { HashValue } from '../models/HashValue';\nimport type { HexEncodedBytes } from '../models/HexEncodedBytes';\nimport type { PendingTransaction } from '../models/PendingTransaction';\nimport type { SubmitTransactionRequest } from '../models/SubmitTransactionRequest';\nimport type { Transaction } from '../models/Transaction';\nimport type { TransactionsBatchSubmissionResult } from '../models/TransactionsBatchSubmissionResult';\nimport type { U64 } from '../models/U64';\nimport type { UserTransaction } from '../models/UserTransaction';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class TransactionsService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get transactions\n     * Retrieve on-chain committed transactions. The page size and start ledger version\n     * can be provided to get a specific sequence of transactions.\n     *\n     * If the version has been pruned, then a 410 will be returned.\n     *\n     * To retrieve a pending transaction, use /transactions/by_hash.\n     * @param start Ledger version to start list of transactions\n     *\n     * If not provided, defaults to showing the latest transactions\n     * @param limit Max number of transactions to retrieve.\n     *\n     * If not provided, defaults to default page size\n     * @returns Transaction\n     * @throws ApiError\n     */\n    public getTransactions(\n        start?: U64,\n        limit?: number,\n    ): CancelablePromise<Array<Transaction>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/transactions',\n            query: {\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Submit transaction\n     * This endpoint accepts transaction submissions in two formats.\n     *\n     * To submit a transaction as JSON, you must submit a SubmitTransactionRequest.\n     * To build this request, do the following:\n     *\n     * 1. Encode the transaction as BCS. If you are using a language that has\n     * native BCS support, make sure of that library. If not, you may take\n     * advantage of /transactions/encode_submission. When using this\n     * endpoint, make sure you trust the node you're talking to, as it is\n     * possible they could manipulate your request.\n     * 2. Sign the encoded transaction and use it to create a TransactionSignature.\n     * 3. Submit the request. Make sure to use the \"application/json\" Content-Type.\n     *\n     * To submit a transaction as BCS, you must submit a SignedTransaction\n     * encoded as BCS. See SignedTransaction in types/src/transaction/mod.rs.\n     * Make sure to use the `application/x.aptos.signed_transaction+bcs` Content-Type.\n     * @param requestBody\n     * @returns PendingTransaction\n     * @throws ApiError\n     */\n    public submitTransaction(\n        requestBody: SubmitTransactionRequest,\n    ): CancelablePromise<PendingTransaction> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/transactions',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Get transaction by hash\n     * Look up a transaction by its hash. This is the same hash that is returned\n     * by the API when submitting a transaction (see PendingTransaction).\n     *\n     * When given a transaction hash, the server first looks for the transaction\n     * in storage (on-chain, committed). If no on-chain transaction is found, it\n     * looks the transaction up by hash in the mempool (pending, not yet committed).\n     *\n     * To create a transaction hash by yourself, do the following:\n     * 1. Hash message bytes: \"RawTransaction\" bytes + BCS bytes of [Transaction](https://aptos-labs.github.io/aptos-core/aptos_types/transaction/enum.Transaction.html).\n     * 2. Apply hash algorithm `SHA3-256` to the hash message bytes.\n     * 3. Hex-encode the hash bytes with `0x` prefix.\n     * @param txnHash Hash of transaction to retrieve\n     * @returns Transaction\n     * @throws ApiError\n     */\n    public getTransactionByHash(\n        txnHash: HashValue,\n    ): CancelablePromise<Transaction> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/transactions/by_hash/{txn_hash}',\n            path: {\n                'txn_hash': txnHash,\n            },\n        });\n    }\n\n    /**\n     * Get transaction by version\n     * Retrieves a transaction by a given version. If the version has been\n     * pruned, a 410 will be returned.\n     * @param txnVersion Version of transaction to retrieve\n     * @returns Transaction\n     * @throws ApiError\n     */\n    public getTransactionByVersion(\n        txnVersion: U64,\n    ): CancelablePromise<Transaction> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/transactions/by_version/{txn_version}',\n            path: {\n                'txn_version': txnVersion,\n            },\n        });\n    }\n\n    /**\n     * Get account transactions\n     * Retrieves on-chain committed transactions from an account. If the start\n     * version is too far in the past, a 410 will be returned.\n     *\n     * If no start version is given, it will start at version 0.\n     *\n     * To retrieve a pending transaction, use /transactions/by_hash.\n     * @param address Address of account with or without a `0x` prefix\n     * @param start Account sequence number to start list of transactions\n     *\n     * If not provided, defaults to showing the latest transactions\n     * @param limit Max number of transactions to retrieve.\n     *\n     * If not provided, defaults to default page size\n     * @returns Transaction\n     * @throws ApiError\n     */\n    public getAccountTransactions(\n        address: Address,\n        start?: U64,\n        limit?: number,\n    ): CancelablePromise<Array<Transaction>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/transactions',\n            path: {\n                'address': address,\n            },\n            query: {\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Submit batch transactions\n     * This allows you to submit multiple transactions.  The response has three outcomes:\n     *\n     * 1. All transactions succeed, and it will return a 202\n     * 2. Some transactions succeed, and it will return the failed transactions and a 206\n     * 3. No transactions succeed, and it will also return the failed transactions and a 206\n     *\n     * To submit a transaction as JSON, you must submit a SubmitTransactionRequest.\n     * To build this request, do the following:\n     *\n     * 1. Encode the transaction as BCS. If you are using a language that has\n     * native BCS support, make sure to use that library. If not, you may take\n     * advantage of /transactions/encode_submission. When using this\n     * endpoint, make sure you trust the node you're talking to, as it is\n     * possible they could manipulate your request.\n     * 2. Sign the encoded transaction and use it to create a TransactionSignature.\n     * 3. Submit the request. Make sure to use the \"application/json\" Content-Type.\n     *\n     * To submit a transaction as BCS, you must submit a SignedTransaction\n     * encoded as BCS. See SignedTransaction in types/src/transaction/mod.rs.\n     * Make sure to use the `application/x.aptos.signed_transaction+bcs` Content-Type.\n     * @param requestBody\n     * @returns TransactionsBatchSubmissionResult\n     * @throws ApiError\n     */\n    public submitBatchTransactions(\n        requestBody: Array<SubmitTransactionRequest>,\n    ): CancelablePromise<TransactionsBatchSubmissionResult> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/transactions/batch',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Simulate transaction\n     * The output of the transaction will have the exact transaction outputs and events that running\n     * an actual signed transaction would have.  However, it will not have the associated state\n     * hashes, as they are not updated in storage.  This can be used to estimate the maximum gas\n     * units for a submitted transaction.\n     *\n     * To use this, you must:\n     * - Create a SignedTransaction with a zero-padded signature.\n     * - Submit a SubmitTransactionRequest containing a UserTransactionRequest containing that signature.\n     *\n     * To use this endpoint with BCS, you must submit a SignedTransaction\n     * encoded as BCS. See SignedTransaction in types/src/transaction/mod.rs.\n     * @param requestBody\n     * @param estimateMaxGasAmount If set to true, the max gas value in the transaction will be ignored\n     * and the maximum possible gas will be used\n     * @param estimateGasUnitPrice If set to true, the gas unit price in the transaction will be ignored\n     * and the estimated value will be used\n     * @param estimatePrioritizedGasUnitPrice If set to true, the transaction will use a higher price than the original\n     * estimate.\n     * @returns UserTransaction\n     * @throws ApiError\n     */\n    public simulateTransaction(\n        requestBody: SubmitTransactionRequest,\n        estimateMaxGasAmount?: boolean,\n        estimateGasUnitPrice?: boolean,\n        estimatePrioritizedGasUnitPrice?: boolean,\n    ): CancelablePromise<Array<UserTransaction>> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/transactions/simulate',\n            query: {\n                'estimate_max_gas_amount': estimateMaxGasAmount,\n                'estimate_gas_unit_price': estimateGasUnitPrice,\n                'estimate_prioritized_gas_unit_price': estimatePrioritizedGasUnitPrice,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Encode submission\n     * This endpoint accepts an EncodeSubmissionRequest, which internally is a\n     * UserTransactionRequestInner (and optionally secondary signers) encoded\n     * as JSON, validates the request format, and then returns that request\n     * encoded in BCS. The client can then use this to create a transaction\n     * signature to be used in a SubmitTransactionRequest, which it then\n     * passes to the /transactions POST endpoint.\n     *\n     * To be clear, this endpoint makes it possible to submit transaction\n     * requests to the API from languages that do not have library support for\n     * BCS. If you are using an SDK that has BCS support, such as the official\n     * Rust, TypeScript, or Python SDKs, you do not need to use this endpoint.\n     *\n     * To sign a message using the response from this endpoint:\n     * - Decode the hex encoded string in the response to bytes.\n     * - Sign the bytes to create the signature.\n     * - Use that as the signature field in something like Ed25519Signature, which you then use to build a TransactionSignature.\n     * @param requestBody\n     * @returns HexEncodedBytes\n     * @throws ApiError\n     */\n    public encodeSubmission(\n        requestBody: EncodeSubmissionRequest,\n    ): CancelablePromise<HexEncodedBytes> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/transactions/encode_submission',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Estimate gas price\n     * Currently, the gas estimation is handled by taking the median of the last 100,000 transactions\n     * If a user wants to prioritize their transaction and is willing to pay, they can pay more\n     * than the gas price.  If they're willing to wait longer, they can pay less.  Note that the\n     * gas price moves with the fee market, and should only increase when demand outweighs supply.\n     *\n     * If there have been no transactions in the last 100,000 transactions, the price will be 1.\n     * @returns GasEstimation\n     * @throws ApiError\n     */\n    public estimateGasPrice(): CancelablePromise<GasEstimation> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/estimate_gas_price',\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { MoveValue } from '../models/MoveValue';\nimport type { U64 } from '../models/U64';\nimport type { ViewRequest } from '../models/ViewRequest';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class ViewService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Execute view function of a module\n     * Execute the Move function with the given parameters and return its execution result.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param requestBody\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveValue\n     * @throws ApiError\n     */\n    public view(\n        requestBody: ViewRequest,\n        ledgerVersion?: U64,\n    ): CancelablePromise<Array<MoveValue>> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/view',\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { BaseHttpRequest } from './core/BaseHttpRequest';\nimport type { OpenAPIConfig } from './core/OpenAPI';\nimport { AxiosHttpRequest } from './core/AxiosHttpRequest';\n\nimport { AccountsService } from './services/AccountsService';\nimport { BlocksService } from './services/BlocksService';\nimport { EventsService } from './services/EventsService';\nimport { GeneralService } from './services/GeneralService';\nimport { TablesService } from './services/TablesService';\nimport { TransactionsService } from './services/TransactionsService';\nimport { ViewService } from './services/ViewService';\n\ntype HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;\n\nexport class AptosGeneratedClient {\n\n    public readonly accounts: AccountsService;\n    public readonly blocks: BlocksService;\n    public readonly events: EventsService;\n    public readonly general: GeneralService;\n    public readonly tables: TablesService;\n    public readonly transactions: TransactionsService;\n    public readonly view: ViewService;\n\n    public readonly request: BaseHttpRequest;\n\n    constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = AxiosHttpRequest) {\n        this.request = new HttpRequest({\n            BASE: config?.BASE ?? '/v1',\n            VERSION: config?.VERSION ?? '1.2.0',\n            WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,\n            CREDENTIALS: config?.CREDENTIALS ?? 'include',\n            TOKEN: config?.TOKEN,\n            USERNAME: config?.USERNAME,\n            PASSWORD: config?.PASSWORD,\n            HEADERS: config?.HEADERS,\n            ENCODE_PATH: config?.ENCODE_PATH,\n        });\n\n        this.accounts = new AccountsService(this.request);\n        this.blocks = new BlocksService(this.request);\n        this.events = new EventsService(this.request);\n        this.general = new GeneralService(this.request);\n        this.tables = new TablesService(this.request);\n        this.transactions = new TransactionsService(this.request);\n        this.view = new ViewService(this.request);\n    }\n}\n\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string>;\n    USERNAME?: string | Resolver<string>;\n    PASSWORD?: string | Resolver<string>;\n    HEADERS?: Headers | Resolver<Headers>;\n    ENCODE_PATH?: (path: string) => string;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: '/v1',\n    VERSION: '1.2.0',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n\n/**\n * These codes provide more granular error information beyond just the HTTP\n * status code of the response.\n */\nexport enum AptosErrorCode {\n    ACCOUNT_NOT_FOUND = 'account_not_found',\n    RESOURCE_NOT_FOUND = 'resource_not_found',\n    MODULE_NOT_FOUND = 'module_not_found',\n    STRUCT_FIELD_NOT_FOUND = 'struct_field_not_found',\n    VERSION_NOT_FOUND = 'version_not_found',\n    TRANSACTION_NOT_FOUND = 'transaction_not_found',\n    TABLE_ITEM_NOT_FOUND = 'table_item_not_found',\n    BLOCK_NOT_FOUND = 'block_not_found',\n    VERSION_PRUNED = 'version_pruned',\n    BLOCK_PRUNED = 'block_pruned',\n    INVALID_INPUT = 'invalid_input',\n    INVALID_TRANSACTION_UPDATE = 'invalid_transaction_update',\n    SEQUENCE_NUMBER_TOO_OLD = 'sequence_number_too_old',\n    VM_ERROR = 'vm_error',\n    HEALTH_CHECK_FAILED = 'health_check_failed',\n    MEMPOOL_IS_FULL = 'mempool_is_full',\n    INTERNAL_ERROR = 'internal_error',\n    WEB_FRAMEWORK_ERROR = 'web_framework_error',\n    BCS_NOT_SUPPORTED = 'bcs_not_supported',\n    API_DISABLED = 'api_disabled',\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n\n/**\n * Move function visibility\n */\nexport enum MoveFunctionVisibility {\n    PRIVATE = 'private',\n    PUBLIC = 'public',\n    FRIEND = 'friend',\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n\nexport enum RoleType {\n    VALIDATOR = 'validator',\n    FULL_NODE = 'full_node',\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AccountData = {\n    description: `Account data\n\n    A simplified version of the onchain Account resource`,\n    properties: {\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        authentication_key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AccountSignature = {\n    type: 'one-of',\n    description: `Account signature scheme\n\n    The account signature scheme allows you to have two types of accounts:\n\n    1. A single Ed25519 key account, one private key\n    2. A k-of-n multi-Ed25519 key account, multiple private keys, such that k-of-n must sign a transaction.`,\n    contains: [{\n        type: 'AccountSignature_Ed25519Signature',\n    }, {\n        type: 'AccountSignature_MultiEd25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AccountSignature_Ed25519Signature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'Ed25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AccountSignature_MultiEd25519Signature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'MultiEd25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Address = {\n    type: 'string',\n    description: `A hex encoded 32 byte Aptos account address.\n\n    This is represented in a string as a 64 character hex string, sometimes\n    shortened by stripping leading 0s, and adding a 0x.\n\n    For example, address 0x0000000000000000000000000000000000000000000000000000000000000001 is represented as 0x1.\n    `,\n    format: 'hex',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AptosError = {\n    description: `This is the generic struct we use for all API errors, it contains a string\n    message and an Aptos API specific error code.`,\n    properties: {\n        message: {\n            type: 'string',\n            description: `A message describing the error`,\n            isRequired: true,\n        },\n        error_code: {\n            type: 'AptosErrorCode',\n            isRequired: true,\n        },\n        vm_error_code: {\n            type: 'number',\n            description: `A code providing VM error details when submitting transactions to the VM`,\n            format: 'uint64',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AptosErrorCode = {\n    type: 'Enum',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Block = {\n    description: `A Block with or without transactions\n\n    This contains the information about a transactions along with\n    associated transactions if requested`,\n    properties: {\n        block_height: {\n            type: 'U64',\n            isRequired: true,\n        },\n        block_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        block_timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n        first_version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        last_version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        transactions: {\n            type: 'array',\n            contains: {\n                type: 'Transaction',\n            },\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $BlockMetadataTransaction = {\n    description: `A block metadata transaction\n\n    This signifies the beginning of a block, and contains information\n    about the specific block`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_change_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        event_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_checkpoint_hash: {\n            type: 'HashValue',\n        },\n        gas_used: {\n            type: 'U64',\n            isRequired: true,\n        },\n        success: {\n            type: 'boolean',\n            description: `Whether the transaction was successful`,\n            isRequired: true,\n        },\n        vm_status: {\n            type: 'string',\n            description: `The VM status of the transaction, can tell useful information in a failure`,\n            isRequired: true,\n        },\n        accumulator_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        id: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        epoch: {\n            type: 'U64',\n            isRequired: true,\n        },\n        round: {\n            type: 'U64',\n            isRequired: true,\n        },\n        events: {\n            type: 'array',\n            contains: {\n                type: 'Event',\n            },\n            isRequired: true,\n        },\n        previous_block_votes_bitvec: {\n            type: 'array',\n            contains: {\n                type: 'number',\n                format: 'uint8',\n            },\n            isRequired: true,\n        },\n        proposer: {\n            type: 'Address',\n            isRequired: true,\n        },\n        failed_proposer_indices: {\n            type: 'array',\n            contains: {\n                type: 'number',\n                format: 'uint32',\n            },\n            isRequired: true,\n        },\n        timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DecodedTableData = {\n    description: `Decoded table data`,\n    properties: {\n        key: {\n            description: `Key of table in JSON`,\n            properties: {\n            },\n            isRequired: true,\n        },\n        key_type: {\n            type: 'string',\n            description: `Type of key`,\n            isRequired: true,\n        },\n        value: {\n            description: `Value of table in JSON`,\n            properties: {\n            },\n            isRequired: true,\n        },\n        value_type: {\n            type: 'string',\n            description: `Type of value`,\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DeletedTableData = {\n    description: `Deleted table data`,\n    properties: {\n        key: {\n            description: `Deleted key`,\n            properties: {\n            },\n            isRequired: true,\n        },\n        key_type: {\n            type: 'string',\n            description: `Deleted key type`,\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DeleteModule = {\n    description: `Delete a module`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        state_key_hash: {\n            type: 'string',\n            description: `State key hash`,\n            isRequired: true,\n        },\n        module: {\n            type: 'MoveModuleId',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DeleteResource = {\n    description: `Delete a resource`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        state_key_hash: {\n            type: 'string',\n            description: `State key hash`,\n            isRequired: true,\n        },\n        resource: {\n            type: 'MoveStructTag',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DeleteTableItem = {\n    description: `Delete a table item`,\n    properties: {\n        state_key_hash: {\n            type: 'string',\n            isRequired: true,\n        },\n        handle: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        data: {\n            type: 'DeletedTableData',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DirectWriteSet = {\n    properties: {\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        events: {\n            type: 'array',\n            contains: {\n                type: 'Event',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Ed25519Signature = {\n    description: `A single Ed25519 signature`,\n    properties: {\n        public_key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        signature: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $EncodeSubmissionRequest = {\n    description: `Request to encode a submission`,\n    properties: {\n        sender: {\n            type: 'Address',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        max_gas_amount: {\n            type: 'U64',\n            isRequired: true,\n        },\n        gas_unit_price: {\n            type: 'U64',\n            isRequired: true,\n        },\n        expiration_timestamp_secs: {\n            type: 'U64',\n            isRequired: true,\n        },\n        payload: {\n            type: 'TransactionPayload',\n            isRequired: true,\n        },\n        secondary_signers: {\n            type: 'array',\n            contains: {\n                type: 'Address',\n            },\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $EntryFunctionId = {\n    type: 'string',\n    description: `Entry function id is string representation of a entry function defined on-chain.\n\n    Format: \\`{address}::{module name}::{function name}\\`\n\n    Both \\`module name\\` and \\`function name\\` are case-sensitive.\n    `,\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $EntryFunctionPayload = {\n    description: `Payload which runs a single entry function`,\n    properties: {\n        function: {\n            type: 'EntryFunctionId',\n            isRequired: true,\n        },\n        type_arguments: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n        arguments: {\n            type: 'array',\n            contains: {\n                properties: {\n                },\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Event = {\n    description: `An event from a transaction`,\n    properties: {\n        guid: {\n            type: 'EventGuid',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n        data: {\n            description: `The JSON representation of the event`,\n            properties: {\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $EventGuid = {\n    properties: {\n        creation_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        account_address: {\n            type: 'Address',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $GasEstimation = {\n    description: `Struct holding the outputs of the estimate gas API`,\n    properties: {\n        deprioritized_gas_estimate: {\n            type: 'number',\n            description: `The deprioritized estimate for the gas unit price`,\n            format: 'uint64',\n        },\n        gas_estimate: {\n            type: 'number',\n            description: `The current estimate for the gas unit price`,\n            isRequired: true,\n            format: 'uint64',\n        },\n        prioritized_gas_estimate: {\n            type: 'number',\n            description: `The prioritized estimate for the gas unit price`,\n            format: 'uint64',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $GenesisPayload = {\n    type: 'one-of',\n    description: `The writeset payload of the Genesis transaction`,\n    contains: [{\n        type: 'GenesisPayload_WriteSetPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $GenesisPayload_WriteSetPayload = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'WriteSetPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $GenesisTransaction = {\n    description: `The genesis transaction\n\n    This only occurs at the genesis transaction (version 0)`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_change_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        event_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_checkpoint_hash: {\n            type: 'HashValue',\n        },\n        gas_used: {\n            type: 'U64',\n            isRequired: true,\n        },\n        success: {\n            type: 'boolean',\n            description: `Whether the transaction was successful`,\n            isRequired: true,\n        },\n        vm_status: {\n            type: 'string',\n            description: `The VM status of the transaction, can tell useful information in a failure`,\n            isRequired: true,\n        },\n        accumulator_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        payload: {\n            type: 'GenesisPayload',\n            isRequired: true,\n        },\n        events: {\n            type: 'array',\n            contains: {\n                type: 'Event',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $HashValue = {\n    type: 'string',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $HealthCheckSuccess = {\n    description: `Representation of a successful healthcheck`,\n    properties: {\n        message: {\n            type: 'string',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $HexEncodedBytes = {\n    type: 'string',\n    description: `All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with \\`0x\\` and fulfilled with\n    two hex digits per byte.\n\n    Unlike the \\`Address\\` type, HexEncodedBytes will not trim any zeros.\n    `,\n    format: 'hex',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $IdentifierWrapper = {\n    type: 'string',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $IndexResponse = {\n    description: `The struct holding all data returned to the client by the\n    index endpoint (i.e., GET \"/\").  Only for responding in JSON`,\n    properties: {\n        chain_id: {\n            type: 'number',\n            description: `Chain ID of the current chain`,\n            isRequired: true,\n            format: 'uint8',\n        },\n        epoch: {\n            type: 'U64',\n            isRequired: true,\n        },\n        ledger_version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        oldest_ledger_version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        ledger_timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n        node_role: {\n            type: 'RoleType',\n            isRequired: true,\n        },\n        oldest_block_height: {\n            type: 'U64',\n            isRequired: true,\n        },\n        block_height: {\n            type: 'U64',\n            isRequired: true,\n        },\n        git_hash: {\n            type: 'string',\n            description: `Git hash of the build of the API endpoint.  Can be used to determine the exact\n            software version used by the API endpoint.`,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $ModuleBundlePayload = {\n    properties: {\n        modules: {\n            type: 'array',\n            contains: {\n                type: 'MoveModuleBytecode',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveAbility = {\n    type: 'string',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveFunction = {\n    description: `Move function`,\n    properties: {\n        name: {\n            type: 'IdentifierWrapper',\n            isRequired: true,\n        },\n        visibility: {\n            type: 'MoveFunctionVisibility',\n            isRequired: true,\n        },\n        is_entry: {\n            type: 'boolean',\n            description: `Whether the function can be called as an entry function directly in a transaction`,\n            isRequired: true,\n        },\n        generic_type_params: {\n            type: 'array',\n            contains: {\n                type: 'MoveFunctionGenericTypeParam',\n            },\n            isRequired: true,\n        },\n        params: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n        return: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveFunctionGenericTypeParam = {\n    description: `Move function generic type param`,\n    properties: {\n        constraints: {\n            type: 'array',\n            contains: {\n                type: 'MoveAbility',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveFunctionVisibility = {\n    type: 'Enum',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveModule = {\n    description: `A Move module`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        name: {\n            type: 'IdentifierWrapper',\n            isRequired: true,\n        },\n        friends: {\n            type: 'array',\n            contains: {\n                type: 'MoveModuleId',\n            },\n            isRequired: true,\n        },\n        exposed_functions: {\n            type: 'array',\n            contains: {\n                type: 'MoveFunction',\n            },\n            isRequired: true,\n        },\n        structs: {\n            type: 'array',\n            contains: {\n                type: 'MoveStruct',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveModuleBytecode = {\n    description: `Move module bytecode along with it's ABI`,\n    properties: {\n        bytecode: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        abi: {\n            type: 'MoveModule',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveModuleId = {\n    type: 'string',\n    description: `Move module id is a string representation of Move module.\n\n    Format: \\`{address}::{module name}\\`\n\n    \\`address\\` should be hex-encoded 32 byte account address that is prefixed with \\`0x\\`.\n\n    Module name is case-sensitive.\n    `,\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveResource = {\n    description: `A parsed Move resource`,\n    properties: {\n        type: {\n            type: 'MoveStructTag',\n            isRequired: true,\n        },\n        data: {\n            type: 'MoveStructValue',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveScriptBytecode = {\n    description: `Move script bytecode`,\n    properties: {\n        bytecode: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        abi: {\n            type: 'MoveFunction',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStruct = {\n    description: `A move struct`,\n    properties: {\n        name: {\n            type: 'IdentifierWrapper',\n            isRequired: true,\n        },\n        is_native: {\n            type: 'boolean',\n            description: `Whether the struct is a native struct of Move`,\n            isRequired: true,\n        },\n        abilities: {\n            type: 'array',\n            contains: {\n                type: 'MoveAbility',\n            },\n            isRequired: true,\n        },\n        generic_type_params: {\n            type: 'array',\n            contains: {\n                type: 'MoveStructGenericTypeParam',\n            },\n            isRequired: true,\n        },\n        fields: {\n            type: 'array',\n            contains: {\n                type: 'MoveStructField',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStructField = {\n    description: `Move struct field`,\n    properties: {\n        name: {\n            type: 'IdentifierWrapper',\n            isRequired: true,\n        },\n        type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStructGenericTypeParam = {\n    description: `Move generic type param`,\n    properties: {\n        constraints: {\n            type: 'array',\n            contains: {\n                type: 'MoveAbility',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStructTag = {\n    type: 'string',\n    description: `String representation of a MoveStructTag (on-chain Move struct type). This exists so you\n    can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.\n\n    It is a combination of:\n    1. \\`move_module_address\\`, \\`module_name\\` and \\`struct_name\\`, all joined by \\`::\\`\n    2. \\`struct generic type parameters\\` joined by \\`, \\`\n\n    Examples:\n     * \\`0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\\`\n     * \\`0x1::account::Account\\`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n\n    See [doc](https://aptos.dev/concepts/accounts) for more details.\n    `,\n    pattern: '^0x[0-9a-zA-Z:_<>]+$',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStructValue = {\n    description: `This is a JSON representation of some data within an account resource. More specifically,\n    it is a map of strings to arbitrary JSON values / objects, where the keys are top level\n    fields within the given resource.\n\n    To clarify, you might query for 0x1::account::Account and see the example data.\n\n    Move \\`bool\\` type value is serialized into \\`boolean\\`.\n\n    Move \\`u8\\`, \\`u16\\` and \\`u32\\` type value is serialized into \\`integer\\`.\n\n    Move \\`u64\\`, \\`u128\\` and \\`u256\\` type value is serialized into \\`string\\`.\n\n    Move \\`address\\` type value (32 byte Aptos account address) is serialized into a HexEncodedBytes string.\n    For example:\n    - \\`0x1\\`\n    - \\`0x1668f6be25668c1a17cd8caf6b8d2f25\\`\n\n    Move \\`vector\\` type value is serialized into \\`array\\`, except \\`vector<u8>\\` which is serialized into a\n    HexEncodedBytes string with \\`0x\\` prefix.\n    For example:\n    - \\`vector<u64>{255, 255}\\` => \\`[\"255\", \"255\"]\\`\n    - \\`vector<u8>{255, 255}\\` => \\`0xffff\\`\n\n    Move \\`struct\\` type value is serialized into \\`object\\` that looks like this (except some Move stdlib types, see the following section):\n    \\`\\`\\`json\n    {\n        field1_name: field1_value,\n        field2_name: field2_value,\n        ......\n    }\n    \\`\\`\\`\n\n    For example:\n    \\`{ \"created\": \"0xa550c18\", \"role_id\": \"0\" }\\`\n\n     **Special serialization for Move stdlib types**:\n    - [0x1::string::String](https://github.com/aptos-labs/aptos-core/blob/main/language/move-stdlib/docs/ascii.md)\n    is serialized into \\`string\\`. For example, struct value \\`0x1::string::String{bytes: b\"Hello World!\"}\\`\n    is serialized as \\`\"Hello World!\"\\` in JSON.\n    `,\n    properties: {\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveType = {\n    type: 'string',\n    description: `String representation of an on-chain Move type tag that is exposed in transaction payload.\n    Values:\n    - bool\n    - u8\n    - u16\n    - u32\n    - u64\n    - u128\n    - u256\n    - address\n    - signer\n    - vector: \\`vector<{non-reference MoveTypeId}>\\`\n    - struct: \\`{address}::{module_name}::{struct_name}::<{generic types}>\\`\n\n    Vector type value examples:\n    - \\`vector<u8>\\`\n    - \\`vector<vector<u64>>\\`\n    - \\`vector<0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>\\`\n\n    Struct type value examples:\n    - \\`0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\n    - \\`0x1::account::Account\\`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n    `,\n    pattern: '^(bool|u8|u64|u128|address|signer|vector<.+>|0x[0-9a-zA-Z:_<, >]+)$',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveValue = {\n    type: 'any-of',\n    description: `An enum of the possible Move value types`,\n    contains: [{\n        type: 'number',\n        format: 'uint8',\n    }, {\n        type: 'number',\n        format: 'uint16',\n    }, {\n        type: 'number',\n        format: 'uint32',\n    }, {\n        type: 'U64',\n    }, {\n        type: 'U128',\n    }, {\n        type: 'U256',\n    }, {\n        type: 'boolean',\n    }, {\n        type: 'Address',\n    }, {\n        type: 'array',\n        contains: {\n            type: 'MoveValue',\n        },\n    }, {\n        type: 'HexEncodedBytes',\n    }, {\n        type: 'MoveStructValue',\n    }, {\n        type: 'string',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MultiAgentSignature = {\n    description: `Multi agent signature for multi agent transactions\n\n    This allows you to have transactions across multiple accounts`,\n    properties: {\n        sender: {\n            type: 'AccountSignature',\n            isRequired: true,\n        },\n        secondary_signer_addresses: {\n            type: 'array',\n            contains: {\n                type: 'Address',\n            },\n            isRequired: true,\n        },\n        secondary_signers: {\n            type: 'array',\n            contains: {\n                type: 'AccountSignature',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MultiEd25519Signature = {\n    description: `A Ed25519 multi-sig signature\n\n    This allows k-of-n signing for a transaction`,\n    properties: {\n        public_keys: {\n            type: 'array',\n            contains: {\n                type: 'HexEncodedBytes',\n            },\n            isRequired: true,\n        },\n        signatures: {\n            type: 'array',\n            contains: {\n                type: 'HexEncodedBytes',\n            },\n            isRequired: true,\n        },\n        threshold: {\n            type: 'number',\n            description: `The number of signatures required for a successful transaction`,\n            isRequired: true,\n            format: 'uint8',\n        },\n        bitmap: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $PendingTransaction = {\n    description: `A transaction waiting in mempool`,\n    properties: {\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        sender: {\n            type: 'Address',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        max_gas_amount: {\n            type: 'U64',\n            isRequired: true,\n        },\n        gas_unit_price: {\n            type: 'U64',\n            isRequired: true,\n        },\n        expiration_timestamp_secs: {\n            type: 'U64',\n            isRequired: true,\n        },\n        payload: {\n            type: 'TransactionPayload',\n            isRequired: true,\n        },\n        signature: {\n            type: 'TransactionSignature',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $RawTableItemRequest = {\n    description: `Table Item request for the GetTableItemRaw API`,\n    properties: {\n        key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $RoleType = {\n    type: 'Enum',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $ScriptPayload = {\n    description: `Payload which runs a script that can run multiple functions`,\n    properties: {\n        code: {\n            type: 'MoveScriptBytecode',\n            isRequired: true,\n        },\n        type_arguments: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n        arguments: {\n            type: 'array',\n            contains: {\n                properties: {\n                },\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $ScriptWriteSet = {\n    properties: {\n        execute_as: {\n            type: 'Address',\n            isRequired: true,\n        },\n        script: {\n            type: 'ScriptPayload',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $StateCheckpointTransaction = {\n    description: `A state checkpoint transaction`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_change_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        event_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_checkpoint_hash: {\n            type: 'HashValue',\n        },\n        gas_used: {\n            type: 'U64',\n            isRequired: true,\n        },\n        success: {\n            type: 'boolean',\n            description: `Whether the transaction was successful`,\n            isRequired: true,\n        },\n        vm_status: {\n            type: 'string',\n            description: `The VM status of the transaction, can tell useful information in a failure`,\n            isRequired: true,\n        },\n        accumulator_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $StateKeyWrapper = {\n    type: 'string',\n    description: `Representation of a StateKey as a hex string. This is used for cursor based pagination.\n    `,\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $SubmitTransactionRequest = {\n    description: `A request to submit a transaction\n\n    This requires a transaction and a signature of it`,\n    properties: {\n        sender: {\n            type: 'Address',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        max_gas_amount: {\n            type: 'U64',\n            isRequired: true,\n        },\n        gas_unit_price: {\n            type: 'U64',\n            isRequired: true,\n        },\n        expiration_timestamp_secs: {\n            type: 'U64',\n            isRequired: true,\n        },\n        payload: {\n            type: 'TransactionPayload',\n            isRequired: true,\n        },\n        signature: {\n            type: 'TransactionSignature',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TableItemRequest = {\n    description: `Table Item request for the GetTableItem API`,\n    properties: {\n        key_type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n        value_type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n        key: {\n            description: `The value of the table item's key`,\n            properties: {\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction = {\n    type: 'one-of',\n    description: `Enum of the different types of transactions in Aptos`,\n    contains: [{\n        type: 'Transaction_PendingTransaction',\n    }, {\n        type: 'Transaction_UserTransaction',\n    }, {\n        type: 'Transaction_GenesisTransaction',\n    }, {\n        type: 'Transaction_BlockMetadataTransaction',\n    }, {\n        type: 'Transaction_StateCheckpointTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_BlockMetadataTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'BlockMetadataTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_GenesisTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'GenesisTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_PendingTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'PendingTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_StateCheckpointTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'StateCheckpointTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_UserTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'UserTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionPayload = {\n    type: 'one-of',\n    description: `An enum of the possible transaction payloads`,\n    contains: [{\n        type: 'TransactionPayload_EntryFunctionPayload',\n    }, {\n        type: 'TransactionPayload_ScriptPayload',\n    }, {\n        type: 'TransactionPayload_ModuleBundlePayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionPayload_EntryFunctionPayload = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'EntryFunctionPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionPayload_ModuleBundlePayload = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'ModuleBundlePayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionPayload_ScriptPayload = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'ScriptPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionsBatchSingleSubmissionFailure = {\n    description: `Information telling which batch submission transactions failed`,\n    properties: {\n        error: {\n            type: 'AptosError',\n            isRequired: true,\n        },\n        transaction_index: {\n            type: 'number',\n            description: `The index of which transaction failed, same as submission order`,\n            isRequired: true,\n            format: 'uint64',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionsBatchSubmissionResult = {\n    description: `Batch transaction submission result\n\n    Tells which transactions failed`,\n    properties: {\n        transaction_failures: {\n            type: 'array',\n            contains: {\n                type: 'TransactionsBatchSingleSubmissionFailure',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionSignature = {\n    type: 'one-of',\n    description: `An enum representing the different transaction signatures available`,\n    contains: [{\n        type: 'TransactionSignature_Ed25519Signature',\n    }, {\n        type: 'TransactionSignature_MultiEd25519Signature',\n    }, {\n        type: 'TransactionSignature_MultiAgentSignature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionSignature_Ed25519Signature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'Ed25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionSignature_MultiAgentSignature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'MultiAgentSignature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionSignature_MultiEd25519Signature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'MultiEd25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $U128 = {\n    type: 'string',\n    description: `A string containing a 128-bit unsigned integer.\n\n    We represent u128 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u128s in JSON natively.\n    `,\n    format: 'uint128',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $U256 = {\n    type: 'string',\n    description: `A string containing a 256-bit unsigned integer.\n\n    We represent u256 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u256s in JSON natively.\n    `,\n    format: 'uint256',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $U64 = {\n    type: 'string',\n    description: `A string containing a 64-bit unsigned integer.\n\n    We represent u64 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u64s in JSON natively.\n    `,\n    format: 'uint64',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $UserTransaction = {\n    description: `A transaction submitted by a user to change the state of the blockchain`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_change_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        event_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_checkpoint_hash: {\n            type: 'HashValue',\n        },\n        gas_used: {\n            type: 'U64',\n            isRequired: true,\n        },\n        success: {\n            type: 'boolean',\n            description: `Whether the transaction was successful`,\n            isRequired: true,\n        },\n        vm_status: {\n            type: 'string',\n            description: `The VM status of the transaction, can tell useful information in a failure`,\n            isRequired: true,\n        },\n        accumulator_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        sender: {\n            type: 'Address',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        max_gas_amount: {\n            type: 'U64',\n            isRequired: true,\n        },\n        gas_unit_price: {\n            type: 'U64',\n            isRequired: true,\n        },\n        expiration_timestamp_secs: {\n            type: 'U64',\n            isRequired: true,\n        },\n        payload: {\n            type: 'TransactionPayload',\n            isRequired: true,\n        },\n        signature: {\n            type: 'TransactionSignature',\n        },\n        events: {\n            type: 'array',\n            contains: {\n                type: 'Event',\n            },\n            isRequired: true,\n        },\n        timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $VersionedEvent = {\n    description: `An event from a transaction with a version`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        guid: {\n            type: 'EventGuid',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n        data: {\n            description: `The JSON representation of the event`,\n            properties: {\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $ViewRequest = {\n    description: `View request for the Move View Function API`,\n    properties: {\n        function: {\n            type: 'EntryFunctionId',\n            isRequired: true,\n        },\n        type_arguments: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n        arguments: {\n            type: 'array',\n            contains: {\n                properties: {\n                },\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteModule = {\n    description: `Write a new module or update an existing one`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        state_key_hash: {\n            type: 'string',\n            description: `State key hash`,\n            isRequired: true,\n        },\n        data: {\n            type: 'MoveModuleBytecode',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteResource = {\n    description: `Write a resource or update an existing one`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        state_key_hash: {\n            type: 'string',\n            description: `State key hash`,\n            isRequired: true,\n        },\n        data: {\n            type: 'MoveResource',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSet = {\n    type: 'one-of',\n    description: `The associated writeset with a payload`,\n    contains: [{\n        type: 'WriteSet_ScriptWriteSet',\n    }, {\n        type: 'WriteSet_DirectWriteSet',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSet_DirectWriteSet = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'DirectWriteSet',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSet_ScriptWriteSet = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'ScriptWriteSet',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange = {\n    type: 'one-of',\n    description: `A final state change of a transaction on a resource or module`,\n    contains: [{\n        type: 'WriteSetChange_DeleteModule',\n    }, {\n        type: 'WriteSetChange_DeleteResource',\n    }, {\n        type: 'WriteSetChange_DeleteTableItem',\n    }, {\n        type: 'WriteSetChange_WriteModule',\n    }, {\n        type: 'WriteSetChange_WriteResource',\n    }, {\n        type: 'WriteSetChange_WriteTableItem',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_DeleteModule = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'DeleteModule',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_DeleteResource = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'DeleteResource',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_DeleteTableItem = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'DeleteTableItem',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_WriteModule = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'WriteModule',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_WriteResource = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'WriteResource',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_WriteTableItem = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'WriteTableItem',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetPayload = {\n    description: `A writeset payload, used only for genesis`,\n    properties: {\n        write_set: {\n            type: 'WriteSet',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteTableItem = {\n    description: `Change set to write a table item`,\n    properties: {\n        state_key_hash: {\n            type: 'string',\n            isRequired: true,\n        },\n        handle: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        value: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        data: {\n            type: 'DecodedTableData',\n        },\n    },\n} as const;\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { sha3_256 as sha3Hash } from \"@noble/hashes/sha3\";\nimport {\n  Ed25519PublicKey,\n  Ed25519Signature,\n  MultiEd25519PublicKey,\n  MultiEd25519Signature,\n  RawTransaction,\n  SignedTransaction,\n  TransactionAuthenticatorEd25519,\n  TransactionAuthenticatorMultiEd25519,\n  SigningMessage,\n  MultiAgentRawTransaction,\n  AccountAddress,\n  EntryFunction,\n  Identifier,\n  ChainId,\n  Script,\n  TransactionPayload,\n  TransactionArgument,\n  TransactionPayloadEntryFunction,\n  TransactionPayloadScript,\n  ModuleId,\n} from \"../aptos_types\";\nimport { bcsToBytes, Bytes, Deserializer, Serializer, Uint64, Uint8 } from \"../bcs\";\nimport { ArgumentABI, EntryFunctionABI, ScriptABI, TransactionScriptABI, TypeArgumentABI } from \"../aptos_types/abi\";\nimport { HexString, MaybeHexString } from \"../hex_string\";\nimport { argToTransactionArgument, TypeTagParser, serializeArg } from \"./builder_utils\";\nimport * as Gen from \"../generated/index\";\nimport { DEFAULT_TXN_EXP_SEC_FROM_NOW, DEFAULT_MAX_GAS_AMOUNT, MemoizeExpiring } from \"../utils\";\n\nexport { TypeTagParser } from \"./builder_utils\";\n\nconst RAW_TRANSACTION_SALT = \"APTOS::RawTransaction\";\nconst RAW_TRANSACTION_WITH_DATA_SALT = \"APTOS::RawTransactionWithData\";\n\ntype AnyRawTransaction = RawTransaction | MultiAgentRawTransaction;\n\n/**\n * Function that takes in a Signing Message (serialized raw transaction)\n *  and returns a signature\n */\nexport type SigningFn = (txn: SigningMessage) => Ed25519Signature | MultiEd25519Signature;\n\nexport class TransactionBuilder<F extends SigningFn> {\n  protected readonly signingFunction: F;\n\n  constructor(signingFunction: F, public readonly rawTxnBuilder?: TransactionBuilderABI) {\n    this.signingFunction = signingFunction;\n  }\n\n  /**\n   * Builds a RawTransaction. Relays the call to TransactionBuilderABI.build\n   * @param func\n   * @param ty_tags\n   * @param args\n   */\n  build(func: string, ty_tags: string[], args: any[]): RawTransaction {\n    if (!this.rawTxnBuilder) {\n      throw new Error(\"this.rawTxnBuilder doesn't exist.\");\n    }\n\n    return this.rawTxnBuilder.build(func, ty_tags, args);\n  }\n\n  /** Generates a Signing Message out of a raw transaction. */\n  static getSigningMessage(rawTxn: AnyRawTransaction): SigningMessage {\n    const hash = sha3Hash.create();\n    if (rawTxn instanceof RawTransaction) {\n      hash.update(RAW_TRANSACTION_SALT);\n    } else if (rawTxn instanceof MultiAgentRawTransaction) {\n      hash.update(RAW_TRANSACTION_WITH_DATA_SALT);\n    } else {\n      throw new Error(\"Unknown transaction type.\");\n    }\n\n    const prefix = hash.digest();\n\n    const body = bcsToBytes(rawTxn);\n\n    const mergedArray = new Uint8Array(prefix.length + body.length);\n    mergedArray.set(prefix);\n    mergedArray.set(body, prefix.length);\n\n    return mergedArray;\n  }\n}\n\n/**\n * Provides signing method for signing a raw transaction with single public key.\n */\nexport class TransactionBuilderEd25519 extends TransactionBuilder<SigningFn> {\n  private readonly publicKey: Uint8Array;\n\n  constructor(signingFunction: SigningFn, publicKey: Uint8Array, rawTxnBuilder?: TransactionBuilderABI) {\n    super(signingFunction, rawTxnBuilder);\n    this.publicKey = publicKey;\n  }\n\n  rawToSigned(rawTxn: RawTransaction): SignedTransaction {\n    const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n    const signature = this.signingFunction(signingMessage);\n\n    const authenticator = new TransactionAuthenticatorEd25519(\n      new Ed25519PublicKey(this.publicKey),\n      signature as Ed25519Signature,\n    );\n\n    return new SignedTransaction(rawTxn, authenticator);\n  }\n\n  /** Signs a raw transaction and returns a bcs serialized transaction. */\n  sign(rawTxn: RawTransaction): Bytes {\n    return bcsToBytes(this.rawToSigned(rawTxn));\n  }\n}\n\n/**\n * Provides signing method for signing a raw transaction with multisig public key.\n */\nexport class TransactionBuilderMultiEd25519 extends TransactionBuilder<SigningFn> {\n  private readonly publicKey: MultiEd25519PublicKey;\n\n  constructor(signingFunction: SigningFn, publicKey: MultiEd25519PublicKey) {\n    super(signingFunction);\n    this.publicKey = publicKey;\n  }\n\n  rawToSigned(rawTxn: RawTransaction): SignedTransaction {\n    const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n    const signature = this.signingFunction(signingMessage);\n\n    const authenticator = new TransactionAuthenticatorMultiEd25519(this.publicKey, signature as MultiEd25519Signature);\n\n    return new SignedTransaction(rawTxn, authenticator);\n  }\n\n  /** Signs a raw transaction and returns a bcs serialized transaction. */\n  sign(rawTxn: RawTransaction): Bytes {\n    return bcsToBytes(this.rawToSigned(rawTxn));\n  }\n}\n\n/**\n * Config for creating raw transactions.\n */\ninterface ABIBuilderConfig {\n  sender: MaybeHexString | AccountAddress;\n  sequenceNumber: Uint64 | string;\n  gasUnitPrice: Uint64 | string;\n  maxGasAmount?: Uint64 | string;\n  expSecFromNow?: number | string;\n  chainId: Uint8 | string;\n}\n\n/**\n * Builds raw transactions based on ABI\n */\nexport class TransactionBuilderABI {\n  private readonly abiMap: Map<string, ScriptABI>;\n\n  private readonly builderConfig: Partial<ABIBuilderConfig>;\n\n  /**\n   * Constructs a TransactionBuilderABI instance\n   * @param abis List of binary ABIs.\n   * @param builderConfig Configs for creating a raw transaction.\n   */\n  constructor(abis: Bytes[], builderConfig?: ABIBuilderConfig) {\n    this.abiMap = new Map<string, ScriptABI>();\n\n    abis.forEach((abi) => {\n      const deserializer = new Deserializer(abi);\n      const scriptABI = ScriptABI.deserialize(deserializer);\n      let k: string;\n      if (scriptABI instanceof EntryFunctionABI) {\n        const funcABI = scriptABI as EntryFunctionABI;\n        const { address: addr, name: moduleName } = funcABI.module_name;\n        k = `${HexString.fromUint8Array(addr.address).toShortString()}::${moduleName.value}::${funcABI.name}`;\n      } else {\n        const funcABI = scriptABI as TransactionScriptABI;\n        k = funcABI.name;\n      }\n\n      if (this.abiMap.has(k)) {\n        throw new Error(\"Found conflicting ABI interfaces\");\n      }\n\n      this.abiMap.set(k, scriptABI);\n    });\n\n    this.builderConfig = {\n      maxGasAmount: BigInt(DEFAULT_MAX_GAS_AMOUNT),\n      expSecFromNow: DEFAULT_TXN_EXP_SEC_FROM_NOW,\n      ...builderConfig,\n    };\n  }\n\n  private static toBCSArgs(abiArgs: any[], args: any[]): Bytes[] {\n    if (abiArgs.length !== args.length) {\n      throw new Error(\"Wrong number of args provided.\");\n    }\n\n    return args.map((arg, i) => {\n      const serializer = new Serializer();\n      serializeArg(arg, abiArgs[i].type_tag, serializer);\n      return serializer.getBytes();\n    });\n  }\n\n  private static toTransactionArguments(abiArgs: any[], args: any[]): TransactionArgument[] {\n    if (abiArgs.length !== args.length) {\n      throw new Error(\"Wrong number of args provided.\");\n    }\n\n    return args.map((arg, i) => argToTransactionArgument(arg, abiArgs[i].type_tag));\n  }\n\n  setSequenceNumber(seqNumber: Uint64 | string) {\n    this.builderConfig.sequenceNumber = BigInt(seqNumber);\n  }\n\n  /**\n   * Builds a TransactionPayload. For dApps, chain ID and account sequence numbers are only known to the wallet.\n   * Instead of building a RawTransaction (requires chainID and sequenceNumber), dApps can build a TransactionPayload\n   * and pass the payload to the wallet for signing and sending.\n   * @param func Fully qualified func names, e.g. 0x1::Coin::transfer\n   * @param ty_tags TypeTag strings\n   * @param args Function arguments\n   * @returns TransactionPayload\n   */\n  buildTransactionPayload(func: string, ty_tags: string[], args: any[]): TransactionPayload {\n    const typeTags = ty_tags.map((ty_arg) => new TypeTagParser(ty_arg).parseTypeTag());\n\n    let payload: TransactionPayload;\n\n    if (!this.abiMap.has(func)) {\n      throw new Error(`Cannot find function: ${func}`);\n    }\n\n    const scriptABI = this.abiMap.get(func);\n\n    if (scriptABI instanceof EntryFunctionABI) {\n      const funcABI = scriptABI as EntryFunctionABI;\n      const bcsArgs = TransactionBuilderABI.toBCSArgs(funcABI.args, args);\n      payload = new TransactionPayloadEntryFunction(\n        new EntryFunction(funcABI.module_name, new Identifier(funcABI.name), typeTags, bcsArgs),\n      );\n    } else if (scriptABI instanceof TransactionScriptABI) {\n      const funcABI = scriptABI as TransactionScriptABI;\n      const scriptArgs = TransactionBuilderABI.toTransactionArguments(funcABI.args, args);\n\n      payload = new TransactionPayloadScript(new Script(funcABI.code, typeTags, scriptArgs));\n    } else {\n      /* istanbul ignore next */\n      throw new Error(\"Unknown ABI format.\");\n    }\n\n    return payload;\n  }\n\n  /**\n   * Builds a RawTransaction\n   * @param func Fully qualified func names, e.g. 0x1::Coin::transfer\n   * @param ty_tags TypeTag strings.\n   * @example Below are valid value examples\n   * ```\n   * // Structs are in format `AccountAddress::ModuleName::StructName`\n   * 0x1::aptos_coin::AptosCoin\n   * // Vectors are in format `vector<other_tag_string>`\n   * vector<0x1::aptos_coin::AptosCoin>\n   * bool\n   * u8\n   * u16\n   * u32\n   * u64\n   * u128\n   * u256\n   * address\n   * ```\n   * @param args Function arguments\n   * @returns RawTransaction\n   */\n  build(func: string, ty_tags: string[], args: any[]): RawTransaction {\n    const { sender, sequenceNumber, gasUnitPrice, maxGasAmount, expSecFromNow, chainId } = this.builderConfig;\n\n    if (!gasUnitPrice) {\n      throw new Error(\"No gasUnitPrice provided.\");\n    }\n\n    const senderAccount = sender instanceof AccountAddress ? sender : AccountAddress.fromHex(sender!);\n    const expTimestampSec = BigInt(Math.floor(Date.now() / 1000) + Number(expSecFromNow));\n    const payload = this.buildTransactionPayload(func, ty_tags, args);\n\n    if (payload) {\n      return new RawTransaction(\n        senderAccount,\n        BigInt(sequenceNumber!),\n        payload,\n        BigInt(maxGasAmount!),\n        BigInt(gasUnitPrice!),\n        expTimestampSec,\n        new ChainId(Number(chainId)),\n      );\n    }\n\n    throw new Error(\"Invalid ABI.\");\n  }\n}\n\nexport type RemoteABIBuilderConfig = Partial<Omit<ABIBuilderConfig, \"sender\">> & {\n  sender: MaybeHexString | AccountAddress;\n};\n\ninterface AptosClientInterface {\n  getAccountModules: (accountAddress: MaybeHexString) => Promise<Gen.MoveModuleBytecode[]>;\n  getAccount: (accountAddress: MaybeHexString) => Promise<Gen.AccountData>;\n  getChainId: () => Promise<number>;\n  estimateGasPrice: () => Promise<Gen.GasEstimation>;\n}\n\n/**\n * This transaction builder downloads JSON ABIs from the fullnodes.\n * It then translates the JSON ABIs to the format that is accepted by TransactionBuilderABI\n */\nexport class TransactionBuilderRemoteABI {\n  // We don't want the builder to depend on the actual AptosClient. There might be circular dependencies.\n  constructor(\n    private readonly aptosClient: AptosClientInterface,\n    private readonly builderConfig: RemoteABIBuilderConfig,\n  ) {}\n\n  // Cache for 10 minutes\n  @MemoizeExpiring(10 * 60 * 1000)\n  async fetchABI(addr: string) {\n    const modules = await this.aptosClient.getAccountModules(addr);\n    const abis = modules\n      .map((module) => module.abi)\n      .flatMap((abi) =>\n        abi!.exposed_functions\n          .filter((ef) => ef.is_entry)\n          .map(\n            (ef) =>\n              ({\n                fullName: `${abi!.address}::${abi!.name}::${ef.name}`,\n                ...ef,\n              } as Gen.MoveFunction & { fullName: string }),\n          ),\n      );\n\n    const abiMap = new Map<string, Gen.MoveFunction & { fullName: string }>();\n    abis.forEach((abi) => {\n      abiMap.set(abi.fullName, abi);\n    });\n\n    return abiMap;\n  }\n\n  /**\n   * Builds a raw transaction. Only support script function a.k.a entry function payloads\n   *\n   * @param func fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer\n   * @param ty_tags\n   * @param args\n   * @returns RawTransaction\n   */\n  async build(func: Gen.EntryFunctionId, ty_tags: Gen.MoveType[], args: any[]): Promise<RawTransaction> {\n    /* eslint no-param-reassign: [\"off\"] */\n    const normlize = (s: string) => s.replace(/^0[xX]0*/g, \"0x\");\n    func = normlize(func);\n    const funcNameParts = func.split(\"::\");\n    if (funcNameParts.length !== 3) {\n      throw new Error(\n        // eslint-disable-next-line max-len\n        \"'func' needs to be a fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer\",\n      );\n    }\n\n    const [addr, module] = func.split(\"::\");\n\n    // Downloads the JSON abi\n    const abiMap = await this.fetchABI(addr);\n    if (!abiMap.has(func)) {\n      throw new Error(`${func} doesn't exist.`);\n    }\n\n    const funcAbi = abiMap.get(func);\n\n    // Remove all `signer` and `&signer` from argument list because the Move VM injects those arguments. Clients do not\n    // need to care about those args. `signer` and `&signer` are required be in the front of the argument list. But we\n    // just loop through all arguments and filter out `signer` and `&signer`.\n    const originalArgs = funcAbi!.params.filter((param) => param !== \"signer\" && param !== \"&signer\");\n\n    // Convert string arguments to TypeArgumentABI\n    const typeArgABIs = originalArgs.map((arg, i) => new ArgumentABI(`var${i}`, new TypeTagParser(arg).parseTypeTag()));\n\n    const entryFunctionABI = new EntryFunctionABI(\n      funcAbi!.name,\n      ModuleId.fromStr(`${addr}::${module}`),\n      \"\", // Doc string\n      funcAbi!.generic_type_params.map((_, i) => new TypeArgumentABI(`${i}`)),\n      typeArgABIs,\n    );\n\n    const { sender, ...rest } = this.builderConfig;\n\n    const senderAddress = sender instanceof AccountAddress ? HexString.fromUint8Array(sender.address) : sender;\n\n    const [{ sequence_number: sequenceNumber }, chainId, { gas_estimate: gasUnitPrice }] = await Promise.all([\n      rest?.sequenceNumber\n        ? Promise.resolve({ sequence_number: rest?.sequenceNumber })\n        : this.aptosClient.getAccount(senderAddress),\n      rest?.chainId ? Promise.resolve(rest?.chainId) : this.aptosClient.getChainId(),\n      rest?.gasUnitPrice ? Promise.resolve({ gas_estimate: rest?.gasUnitPrice }) : this.aptosClient.estimateGasPrice(),\n    ]);\n\n    const builderABI = new TransactionBuilderABI([bcsToBytes(entryFunctionABI)], {\n      sender,\n      sequenceNumber,\n      chainId,\n      gasUnitPrice: BigInt(gasUnitPrice),\n      ...rest,\n    });\n\n    return builderABI.build(func, ty_tags, args);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { HexString } from \"../hex_string\";\nimport {\n  TypeTag,\n  TypeTagBool,\n  TypeTagU8,\n  TypeTagU16,\n  TypeTagU32,\n  TypeTagU64,\n  TypeTagU128,\n  TypeTagU256,\n  TypeTagAddress,\n  AccountAddress,\n  TypeTagVector,\n  TypeTagStruct,\n  StructTag,\n  Identifier,\n  TransactionArgument,\n  TransactionArgumentBool,\n  TransactionArgumentU16,\n  TransactionArgumentU32,\n  TransactionArgumentU64,\n  TransactionArgumentU128,\n  TransactionArgumentU256,\n  TransactionArgumentAddress,\n  TransactionArgumentU8,\n  TransactionArgumentU8Vector,\n} from \"../aptos_types\";\nimport { Serializer } from \"../bcs\";\n\nexport const stringStructTag = new StructTag(\n  AccountAddress.fromHex(\"0x1\"),\n  new Identifier(\"string\"),\n  new Identifier(\"String\"),\n  [],\n);\n\nfunction assertType(val: any, types: string[] | string, message?: string) {\n  if (!types?.includes(typeof val)) {\n    throw new Error(\n      message || `Invalid arg: ${val} type should be ${types instanceof Array ? types.join(\" or \") : types}`,\n    );\n  }\n}\n\nfunction bail(message: string) {\n  throw new Error(message);\n}\n\nfunction isWhiteSpace(c: string): boolean {\n  if (c.match(/\\s/)) {\n    return true;\n  }\n  return false;\n}\n\nfunction isValidAlphabetic(c: string): boolean {\n  if (c.match(/[_A-Za-z0-9]/g)) {\n    return true;\n  }\n  return false;\n}\n\ntype TokenType = string;\ntype TokenValue = string;\ntype Token = [TokenType, TokenValue];\n\n// Returns Token and Token byte size\nfunction nextToken(tagStr: string, pos: number): [Token, number] {\n  const c = tagStr[pos];\n  if (c === \":\") {\n    if (tagStr.slice(pos, pos + 2) === \"::\") {\n      return [[\"COLON\", \"::\"], 2];\n    }\n    bail(\"Unrecognized token.\");\n  } else if (c === \"<\") {\n    return [[\"LT\", \"<\"], 1];\n  } else if (c === \">\") {\n    return [[\"GT\", \">\"], 1];\n  } else if (c === \",\") {\n    return [[\"COMMA\", \",\"], 1];\n  } else if (isWhiteSpace(c)) {\n    let res = \"\";\n    for (let i = pos; i < tagStr.length; i += 1) {\n      const char = tagStr[i];\n      if (isWhiteSpace(char)) {\n        res = `${res}${char}`;\n      } else {\n        break;\n      }\n    }\n    return [[\"SPACE\", res], res.length];\n  } else if (isValidAlphabetic(c)) {\n    let res = \"\";\n    for (let i = pos; i < tagStr.length; i += 1) {\n      const char = tagStr[i];\n      if (isValidAlphabetic(char)) {\n        res = `${res}${char}`;\n      } else {\n        break;\n      }\n    }\n    return [[\"IDENT\", res], res.length];\n  }\n  throw new Error(\"Unrecognized token.\");\n}\n\nfunction tokenize(tagStr: string): Token[] {\n  let pos = 0;\n  const tokens = [];\n  while (pos < tagStr.length) {\n    const [token, size] = nextToken(tagStr, pos);\n    if (token[0] !== \"SPACE\") {\n      tokens.push(token);\n    }\n    pos += size;\n  }\n  return tokens;\n}\n\n/**\n * Parser to parse a type tag string\n */\nexport class TypeTagParser {\n  private readonly tokens: Token[];\n\n  constructor(tagStr: string) {\n    this.tokens = tokenize(tagStr);\n  }\n\n  private consume(targetToken: string) {\n    const token = this.tokens.shift();\n    if (!token || token[1] !== targetToken) {\n      bail(\"Invalid type tag.\");\n    }\n  }\n\n  private parseCommaList(endToken: TokenValue, allowTraillingComma: boolean): TypeTag[] {\n    const res: TypeTag[] = [];\n    if (this.tokens.length <= 0) {\n      bail(\"Invalid type tag.\");\n    }\n\n    while (this.tokens[0][1] !== endToken) {\n      res.push(this.parseTypeTag());\n\n      if (this.tokens.length > 0 && this.tokens[0][1] === endToken) {\n        break;\n      }\n\n      this.consume(\",\");\n      if (this.tokens.length > 0 && this.tokens[0][1] === endToken && allowTraillingComma) {\n        break;\n      }\n\n      if (this.tokens.length <= 0) {\n        bail(\"Invalid type tag.\");\n      }\n    }\n    return res;\n  }\n\n  parseTypeTag(): TypeTag {\n    if (this.tokens.length === 0) {\n      bail(\"Invalid type tag.\");\n    }\n\n    // Pop left most element out\n    const [tokenTy, tokenVal] = this.tokens.shift()!;\n\n    if (tokenVal === \"u8\") {\n      return new TypeTagU8();\n    }\n    if (tokenVal === \"u16\") {\n      return new TypeTagU16();\n    }\n    if (tokenVal === \"u32\") {\n      return new TypeTagU32();\n    }\n    if (tokenVal === \"u64\") {\n      return new TypeTagU64();\n    }\n    if (tokenVal === \"u128\") {\n      return new TypeTagU128();\n    }\n    if (tokenVal === \"u256\") {\n      return new TypeTagU256();\n    }\n    if (tokenVal === \"bool\") {\n      return new TypeTagBool();\n    }\n    if (tokenVal === \"address\") {\n      return new TypeTagAddress();\n    }\n    if (tokenVal === \"vector\") {\n      this.consume(\"<\");\n      const res = this.parseTypeTag();\n      this.consume(\">\");\n      return new TypeTagVector(res);\n    }\n    if (tokenTy === \"IDENT\" && (tokenVal.startsWith(\"0x\") || tokenVal.startsWith(\"0X\"))) {\n      const address = tokenVal;\n      this.consume(\"::\");\n      const [moduleTokenTy, module] = this.tokens.shift()!;\n      if (moduleTokenTy !== \"IDENT\") {\n        bail(\"Invalid type tag.\");\n      }\n      this.consume(\"::\");\n      const [nameTokenTy, name] = this.tokens.shift()!;\n      if (nameTokenTy !== \"IDENT\") {\n        bail(\"Invalid type tag.\");\n      }\n\n      let tyTags: TypeTag[] = [];\n      // Check if the struct has ty args\n      if (this.tokens.length > 0 && this.tokens[0][1] === \"<\") {\n        this.consume(\"<\");\n        tyTags = this.parseCommaList(\">\", true);\n        this.consume(\">\");\n      }\n\n      const structTag = new StructTag(\n        AccountAddress.fromHex(address),\n        new Identifier(module),\n        new Identifier(name),\n        tyTags,\n      );\n      return new TypeTagStruct(structTag);\n    }\n\n    throw new Error(\"Invalid type tag.\");\n  }\n}\n\nexport function ensureBoolean(val: boolean | string): boolean {\n  assertType(val, [\"boolean\", \"string\"]);\n  if (typeof val === \"boolean\") {\n    return val;\n  }\n\n  if (val === \"true\") {\n    return true;\n  }\n  if (val === \"false\") {\n    return false;\n  }\n\n  throw new Error(\"Invalid boolean string.\");\n}\n\nexport function ensureNumber(val: number | string): number {\n  assertType(val, [\"number\", \"string\"]);\n  if (typeof val === \"number\") {\n    return val;\n  }\n\n  const res = Number.parseInt(val, 10);\n  if (Number.isNaN(res)) {\n    throw new Error(\"Invalid number string.\");\n  }\n\n  return res;\n}\n\nexport function ensureBigInt(val: number | bigint | string): bigint {\n  assertType(val, [\"number\", \"bigint\", \"string\"]);\n  return BigInt(val);\n}\n\nexport function serializeArg(argVal: any, argType: TypeTag, serializer: Serializer) {\n  if (argType instanceof TypeTagBool) {\n    serializer.serializeBool(ensureBoolean(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU8) {\n    serializer.serializeU8(ensureNumber(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU16) {\n    serializer.serializeU16(ensureNumber(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU32) {\n    serializer.serializeU32(ensureNumber(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU64) {\n    serializer.serializeU64(ensureBigInt(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU128) {\n    serializer.serializeU128(ensureBigInt(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU256) {\n    serializer.serializeU256(ensureBigInt(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagAddress) {\n    let addr: AccountAddress;\n    if (typeof argVal === \"string\" || argVal instanceof HexString) {\n      addr = AccountAddress.fromHex(argVal);\n    } else if (argVal instanceof AccountAddress) {\n      addr = argVal;\n    } else {\n      throw new Error(\"Invalid account address.\");\n    }\n    addr.serialize(serializer);\n    return;\n  }\n  if (argType instanceof TypeTagVector) {\n    // We are serializing a vector<u8>\n    if (argType.value instanceof TypeTagU8) {\n      if (argVal instanceof Uint8Array) {\n        serializer.serializeBytes(argVal);\n        return;\n      }\n\n      if (typeof argVal === \"string\") {\n        serializer.serializeStr(argVal);\n        return;\n      }\n    }\n\n    if (!(argVal instanceof Array)) {\n      throw new Error(\"Invalid vector args.\");\n    }\n\n    serializer.serializeU32AsUleb128(argVal.length);\n\n    argVal.forEach((arg) => serializeArg(arg, argType.value, serializer));\n    return;\n  }\n\n  if (argType instanceof TypeTagStruct) {\n    const { address, module_name: moduleName, name } = (argType as TypeTagStruct).value;\n    if (\n      `${HexString.fromUint8Array(address.address).toShortString()}::${moduleName.value}::${name.value}` !==\n      \"0x1::string::String\"\n    ) {\n      throw new Error(\"The only supported struct arg is of type 0x1::string::String\");\n    }\n    assertType(argVal, [\"string\"]);\n\n    serializer.serializeStr(argVal);\n    return;\n  }\n  throw new Error(\"Unsupported arg type.\");\n}\n\nexport function argToTransactionArgument(argVal: any, argType: TypeTag): TransactionArgument {\n  if (argType instanceof TypeTagBool) {\n    return new TransactionArgumentBool(ensureBoolean(argVal));\n  }\n  if (argType instanceof TypeTagU8) {\n    return new TransactionArgumentU8(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU16) {\n    return new TransactionArgumentU16(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU32) {\n    return new TransactionArgumentU32(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU64) {\n    return new TransactionArgumentU64(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagU128) {\n    return new TransactionArgumentU128(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagU256) {\n    return new TransactionArgumentU256(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagAddress) {\n    let addr: AccountAddress;\n    if (typeof argVal === \"string\" || argVal instanceof HexString) {\n      addr = AccountAddress.fromHex(argVal);\n    } else if (argVal instanceof AccountAddress) {\n      addr = argVal;\n    } else {\n      throw new Error(\"Invalid account address.\");\n    }\n    return new TransactionArgumentAddress(addr);\n  }\n  if (argType instanceof TypeTagVector && argType.value instanceof TypeTagU8) {\n    if (!(argVal instanceof Uint8Array)) {\n      throw new Error(`${argVal} should be an instance of Uint8Array`);\n    }\n    return new TransactionArgumentU8Vector(argVal);\n  }\n\n  throw new Error(\"Unknown type for TransactionArgument.\");\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { HexString, MaybeHexString } from \"./hex_string\";\nimport {\n  clear,\n  DEFAULT_TXN_EXP_SEC_FROM_NOW,\n  DEFAULT_MAX_GAS_AMOUNT,\n  DEFAULT_TXN_TIMEOUT_SEC,\n  fixNodeUrl,\n  paginateWithCursor,\n  Memoize,\n  sleep,\n  APTOS_COIN,\n} from \"./utils\";\nimport { AptosAccount } from \"./aptos_account\";\nimport * as Gen from \"./generated/index\";\nimport {\n  TxnBuilderTypes,\n  TransactionBuilderEd25519,\n  TransactionBuilderRemoteABI,\n  RemoteABIBuilderConfig,\n  TransactionBuilderMultiEd25519,\n} from \"./transaction_builder\";\nimport {\n  bcsSerializeBytes,\n  bcsSerializeU8,\n  bcsToBytes,\n  Bytes,\n  Seq,\n  Serializer,\n  serializeVector,\n  Uint64,\n  AnyNumber,\n} from \"./bcs\";\nimport { Ed25519PublicKey, MultiEd25519PublicKey } from \"./aptos_types\";\n\nexport interface OptionalTransactionArgs {\n  maxGasAmount?: Uint64;\n  gasUnitPrice?: Uint64;\n  expireTimestamp?: Uint64;\n}\n\ninterface PaginationArgs {\n  start?: AnyNumber;\n  limit?: number;\n}\n\n/**\n * Provides methods for retrieving data from Aptos node.\n * For more detailed API specification see {@link https://fullnode.devnet.aptoslabs.com/v1/spec}\n */\nexport class AptosClient {\n  client: Gen.AptosGeneratedClient;\n\n  readonly nodeUrl: string;\n\n  /**\n   * Build a client configured to connect to an Aptos node at the given URL.\n   *\n   * Note: If you forget to append `/v1` to the URL, the client constructor\n   * will automatically append it. If you don't want this URL processing to\n   * take place, set doNotFixNodeUrl to true.\n   *\n   * @param nodeUrl URL of the Aptos Node API endpoint.\n   * @param config Additional configuration options for the generated Axios client.\n   */\n  constructor(nodeUrl: string, config?: Partial<Gen.OpenAPIConfig>, doNotFixNodeUrl: boolean = false) {\n    if (!nodeUrl) {\n      throw new Error(\"Node URL cannot be empty.\");\n    }\n    const conf = config === undefined || config === null ? {} : { ...config };\n\n    if (doNotFixNodeUrl) {\n      this.nodeUrl = nodeUrl;\n    } else {\n      this.nodeUrl = fixNodeUrl(nodeUrl);\n    }\n    conf.BASE = this.nodeUrl;\n\n    // Do not carry cookies when `WITH_CREDENTIALS` is explicitly set to `false`. By default, cookies will be sent\n    if (config?.WITH_CREDENTIALS === false) {\n      conf.WITH_CREDENTIALS = false;\n    } else {\n      conf.WITH_CREDENTIALS = true;\n    }\n\n    this.client = new Gen.AptosGeneratedClient(conf);\n  }\n\n  /**\n   * Queries an Aptos account by address\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @returns Core account resource, used for identifying account and transaction execution\n   * @example An example of the returned account\n   * ```\n   * {\n   *    sequence_number: \"1\",\n   *    authentication_key: \"0x5307b5f4bc67829097a8ba9b43dba3b88261eeccd1f709d9bde240fc100fbb69\"\n   * }\n   * ```\n   */\n  @parseApiError\n  async getAccount(accountAddress: MaybeHexString): Promise<Gen.AccountData> {\n    return this.client.accounts.getAccount(HexString.ensure(accountAddress).hex());\n  }\n\n  /**\n   * Queries transactions sent by given account\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param query Optional pagination object\n   * @param query.start The sequence number of the start transaction of the page. Default is 0.\n   * @param query.limit The max number of transactions should be returned for the page. Default is 25.\n   * @returns An array of on-chain transactions, sent by account\n   */\n  @parseApiError\n  async getAccountTransactions(accountAddress: MaybeHexString, query?: PaginationArgs): Promise<Gen.Transaction[]> {\n    return this.client.transactions.getAccountTransactions(\n      HexString.ensure(accountAddress).hex(),\n      query?.start?.toString(),\n      query?.limit,\n    );\n  }\n\n  /**\n   * Queries modules associated with given account\n   *\n   * Note: In order to get all account modules, this function may call the API\n   * multiple times as it paginates.\n   *\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param query.ledgerVersion Specifies ledger version of transactions. By default latest version will be used\n   * @returns Account modules array for a specific ledger version.\n   * Module is represented by MoveModule interface. It contains module `bytecode` and `abi`,\n   * which is JSON representation of a module\n   */\n  @parseApiError\n  async getAccountModules(\n    accountAddress: MaybeHexString,\n    query?: { ledgerVersion?: AnyNumber },\n  ): Promise<Gen.MoveModuleBytecode[]> {\n    // Note: This function does not expose a `limit` parameter because it might\n    // be ambiguous how this is being used. Is it being passed to getAccountModules\n    // to limit the number of items per response, or does it limit the total output\n    // of this function? We avoid this confusion by not exposing the parameter at all.\n    const f = this.client.accounts.getAccountModules.bind({ httpRequest: this.client.request });\n    const out = await paginateWithCursor(f, accountAddress, 1000, query);\n    return out;\n  }\n\n  /**\n   * Queries module associated with given account by module name\n   *\n   * Note: In order to get all account resources, this function may call the API\n   * multiple times as it paginates.\n   *\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param moduleName The name of the module\n   * @param query.ledgerVersion Specifies ledger version of transactions. By default latest version will be used\n   * @returns Specified module.\n   * Module is represented by MoveModule interface. It contains module `bytecode` and `abi`,\n   * which JSON representation of a module\n   */\n  @parseApiError\n  async getAccountModule(\n    accountAddress: MaybeHexString,\n    moduleName: string,\n    query?: { ledgerVersion?: AnyNumber },\n  ): Promise<Gen.MoveModuleBytecode> {\n    return this.client.accounts.getAccountModule(\n      HexString.ensure(accountAddress).hex(),\n      moduleName,\n      query?.ledgerVersion?.toString(),\n    );\n  }\n\n  /**\n   * Queries all resources associated with given account\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param query.ledgerVersion Specifies ledger version of transactions. By default latest version will be used\n   * @returns Account resources for a specific ledger version\n   */\n  @parseApiError\n  async getAccountResources(\n    accountAddress: MaybeHexString,\n    query?: { ledgerVersion?: AnyNumber },\n  ): Promise<Gen.MoveResource[]> {\n    const f = this.client.accounts.getAccountResources.bind({ httpRequest: this.client.request });\n    const out = await paginateWithCursor(f, accountAddress, 9999, query);\n    return out;\n  }\n\n  /**\n   * Queries resource associated with given account by resource type\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param resourceType String representation of an on-chain Move struct type\n   * @param query.ledgerVersion Specifies ledger version of transactions. By default latest version will be used\n   * @returns Account resource of specified type and ledger version\n   * @example An example of an account resource\n   * ```\n   * {\n   *    type: \"0x1::aptos_coin::AptosCoin\",\n   *    data: { value: 6 }\n   * }\n   * ```\n   */\n  @parseApiError\n  async getAccountResource(\n    accountAddress: MaybeHexString,\n    resourceType: Gen.MoveStructTag,\n    query?: { ledgerVersion?: AnyNumber },\n  ): Promise<Gen.MoveResource> {\n    return this.client.accounts.getAccountResource(\n      HexString.ensure(accountAddress).hex(),\n      resourceType,\n      query?.ledgerVersion?.toString(),\n    );\n  }\n\n  /** Generates a signed transaction that can be submitted to the chain for execution. */\n  static generateBCSTransaction(accountFrom: AptosAccount, rawTxn: TxnBuilderTypes.RawTransaction): Uint8Array {\n    const txnBuilder = new TransactionBuilderEd25519((signingMessage: TxnBuilderTypes.SigningMessage) => {\n      // @ts-ignore\n      const sigHexStr = accountFrom.signBuffer(signingMessage);\n      return new TxnBuilderTypes.Ed25519Signature(sigHexStr.toUint8Array());\n    }, accountFrom.pubKey().toUint8Array());\n\n    return txnBuilder.sign(rawTxn);\n  }\n\n  /**\n   * Note: Unless you have a specific reason for using this, it'll probably be simpler\n   * to use `simulateTransaction`.\n   *\n   * Generates a BCS transaction that can be submitted to the chain for simulation.\n   *\n   * @param accountFrom The account that will be used to send the transaction\n   * for simulation.\n   * @param rawTxn The raw transaction to be simulated, likely created by calling\n   * the `generateTransaction` function.\n   * @returns The BCS encoded signed transaction, which you should then pass into\n   * the `submitBCSSimulation` function.\n   */\n  static generateBCSSimulation(accountFrom: AptosAccount, rawTxn: TxnBuilderTypes.RawTransaction): Uint8Array {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const txnBuilder = new TransactionBuilderEd25519((_signingMessage: TxnBuilderTypes.SigningMessage) => {\n      // @ts-ignore\n      const invalidSigBytes = new Uint8Array(64);\n      return new TxnBuilderTypes.Ed25519Signature(invalidSigBytes);\n    }, accountFrom.pubKey().toUint8Array());\n\n    return txnBuilder.sign(rawTxn);\n  }\n\n  /** Generates a transaction request that can be submitted to produce a raw transaction that\n   * can be signed, which upon being signed can be submitted to the blockchain\n   * @param sender Hex-encoded 32 byte Aptos account address of transaction sender\n   * @param payload Transaction payload. It depends on transaction type you want to send\n   * @param options Options allow to overwrite default transaction options.\n   * @returns A transaction object\n   */\n  async generateTransaction(\n    sender: MaybeHexString,\n    payload: Gen.EntryFunctionPayload,\n    options?: Partial<Gen.SubmitTransactionRequest>,\n  ): Promise<TxnBuilderTypes.RawTransaction> {\n    const config: RemoteABIBuilderConfig = { sender };\n    if (options?.sequence_number) {\n      config.sequenceNumber = options.sequence_number;\n    }\n\n    if (options?.gas_unit_price) {\n      config.gasUnitPrice = options.gas_unit_price;\n    }\n\n    if (options?.max_gas_amount) {\n      config.maxGasAmount = options.max_gas_amount;\n    }\n\n    if (options?.expiration_timestamp_secs) {\n      const timestamp = Number.parseInt(options.expiration_timestamp_secs, 10);\n      config.expSecFromNow = timestamp - Math.floor(Date.now() / 1000);\n    }\n\n    const builder = new TransactionBuilderRemoteABI(this, config);\n    return builder.build(payload.function, payload.type_arguments, payload.arguments);\n  }\n\n  /** Converts a transaction request produced by `generateTransaction` into a properly\n   * signed transaction, which can then be submitted to the blockchain\n   * @param accountFrom AptosAccount of transaction sender\n   * @param rawTransaction A raw transaction generated by `generateTransaction` method\n   * @returns A transaction, signed with sender account\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async signTransaction(\n    accountFrom: AptosAccount,\n    rawTransaction: TxnBuilderTypes.RawTransaction,\n  ): Promise<Uint8Array> {\n    return Promise.resolve(AptosClient.generateBCSTransaction(accountFrom, rawTransaction));\n  }\n\n  /**\n   * Event types are globally identifiable by an account `address` and\n   * monotonically increasing `creation_number`, one per event type emitted\n   * to the given account. This API returns events corresponding to that\n   * that event type.\n   * @param address Hex-encoded 32 byte Aptos account, with or without a `0x` prefix,\n   * for which events are queried. This refers to the account that events were emitted\n   * to, not the account hosting the move module that emits that event type.\n   * @param creationNumber Creation number corresponding to the event type.\n   * @returns Array of events assotiated with the given account and creation number.\n   */\n  @parseApiError\n  async getEventsByCreationNumber(\n    address: MaybeHexString,\n    creationNumber: AnyNumber | string,\n    query?: PaginationArgs,\n  ): Promise<Gen.Event[]> {\n    return this.client.events.getEventsByCreationNumber(\n      HexString.ensure(address).hex(),\n      creationNumber.toString(),\n      query?.start?.toString(),\n      query?.limit,\n    );\n  }\n\n  /**\n   * This API uses the given account `address`, `eventHandle`, and `fieldName`\n   * to build a key that can globally identify an event types. It then uses this\n   * key to return events emitted to the given account matching that event type.\n   * @param address Hex-encoded 32 byte Aptos account, with or without a `0x` prefix,\n   * for which events are queried. This refers to the account that events were emitted\n   * to, not the account hosting the move module that emits that event type.\n   * @param eventHandleStruct String representation of an on-chain Move struct type.\n   * (e.g. `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>`)\n   * @param fieldName The field name of the EventHandle in the struct\n   * @param query Optional query object\n   * @param query.start The start sequence number in the EVENT STREAM, defaulting to the latest event.\n   * The events are returned in the reverse order of sequence number\n   * @param query.limit The number of events to be returned. The default is 25.\n   * @returns Array of events\n   */\n  @parseApiError\n  async getEventsByEventHandle(\n    address: MaybeHexString,\n    eventHandleStruct: Gen.MoveStructTag,\n    fieldName: string,\n    query?: PaginationArgs,\n  ): Promise<Gen.Event[]> {\n    return this.client.events.getEventsByEventHandle(\n      HexString.ensure(address).hex(),\n      eventHandleStruct,\n      fieldName,\n      query?.start?.toString(),\n      query?.limit,\n    );\n  }\n\n  /**\n   * Submits a signed transaction to the transaction endpoint.\n   * @param signedTxn A transaction, signed by `signTransaction` method\n   * @returns Transaction that is accepted and submitted to mempool\n   */\n  async submitTransaction(signedTxn: Uint8Array): Promise<Gen.PendingTransaction> {\n    return this.submitSignedBCSTransaction(signedTxn);\n  }\n\n  /**\n   * Generates and submits a transaction to the transaction simulation\n   * endpoint. For this we generate a transaction with a fake signature.\n   *\n   * @param accountOrPubkey The sender or sender's public key. When private key is available, `AptosAccount` instance\n   * can be used to send the transaction for simulation. If private key is not available, sender's public key can be\n   * used to send the transaction for simulation.\n   * @param rawTransaction The raw transaction to be simulated, likely created\n   * by calling the `generateTransaction` function.\n   * @param query.estimateGasUnitPrice If set to true, the gas unit price in the\n   * transaction will be ignored and the estimated value will be used.\n   * @param query.estimateMaxGasAmount If set to true, the max gas value in the\n   * transaction will be ignored and the maximum possible gas will be used.\n   * @param query.estimatePrioritizedGasUnitPrice If set to true, the transaction will use a higher price than the\n   * original estimate.\n   * @returns The BCS encoded signed transaction, which you should then provide\n   *\n   */\n  async simulateTransaction(\n    accountOrPubkey: AptosAccount | Ed25519PublicKey | MultiEd25519PublicKey,\n    rawTransaction: TxnBuilderTypes.RawTransaction,\n    query?: {\n      estimateGasUnitPrice?: boolean;\n      estimateMaxGasAmount?: boolean;\n      estimatePrioritizedGasUnitPrice: boolean;\n    },\n  ): Promise<Gen.UserTransaction[]> {\n    let signedTxn: Uint8Array;\n\n    if (accountOrPubkey instanceof AptosAccount) {\n      signedTxn = AptosClient.generateBCSSimulation(accountOrPubkey, rawTransaction);\n    } else if (accountOrPubkey instanceof MultiEd25519PublicKey) {\n      const txnBuilder = new TransactionBuilderMultiEd25519(() => {\n        const { threshold } = accountOrPubkey;\n        const bits: Seq<number> = [];\n        const signatures: TxnBuilderTypes.Ed25519Signature[] = [];\n        for (let i = 0; i < threshold; i += 1) {\n          bits.push(i);\n          signatures.push(new TxnBuilderTypes.Ed25519Signature(new Uint8Array(64)));\n        }\n        const bitmap = TxnBuilderTypes.MultiEd25519Signature.createBitmap(bits);\n        return new TxnBuilderTypes.MultiEd25519Signature(signatures, bitmap);\n      }, accountOrPubkey);\n\n      signedTxn = txnBuilder.sign(rawTransaction);\n    } else {\n      const txnBuilder = new TransactionBuilderEd25519(() => {\n        const invalidSigBytes = new Uint8Array(64);\n        return new TxnBuilderTypes.Ed25519Signature(invalidSigBytes);\n      }, accountOrPubkey.toBytes());\n\n      signedTxn = txnBuilder.sign(rawTransaction);\n    }\n    return this.submitBCSSimulation(signedTxn, query);\n  }\n\n  /**\n   * Submits a signed transaction to the endpoint that takes BCS payload\n   *\n   * @param signedTxn A BCS transaction representation\n   * @returns Transaction that is accepted and submitted to mempool\n   */\n  @parseApiError\n  async submitSignedBCSTransaction(signedTxn: Uint8Array): Promise<Gen.PendingTransaction> {\n    // Need to construct a customized post request for transactions in BCS payload\n    return this.client.request.request<Gen.PendingTransaction>({\n      url: \"/transactions\",\n      method: \"POST\",\n      body: signedTxn,\n      mediaType: \"application/x.aptos.signed_transaction+bcs\",\n    });\n  }\n\n  /**\n   * Submits the BCS serialization of a signed transaction to the simulation endpoint.\n   *\n   * @param bcsBody The output of `generateBCSSimulation`.\n   * @param query?.estimateGasUnitPrice If set to true, the gas unit price in the\n   * transaction will be ignored and the estimated value will be used.\n   * @param query?.estimateMaxGasAmount If set to true, the max gas value in the\n   * transaction will be ignored and the maximum possible gas will be used.\n   * @param query?.estimatePrioritizedGasUnitPrice If set to true, the transaction will use a higher price than the\n   * original estimate.\n   * @returns Simulation result in the form of UserTransaction.\n   */\n  @parseApiError\n  async submitBCSSimulation(\n    bcsBody: Uint8Array,\n    query?: {\n      estimateGasUnitPrice?: boolean;\n      estimateMaxGasAmount?: boolean;\n      estimatePrioritizedGasUnitPrice?: boolean;\n    },\n  ): Promise<Gen.UserTransaction[]> {\n    // Need to construct a customized post request for transactions in BCS payload.\n    const queryParams = {\n      estimate_gas_unit_price: query?.estimateGasUnitPrice ?? false,\n      estimate_max_gas_amount: query?.estimateMaxGasAmount ?? false,\n      estimate_prioritized_gas_unit_price: query?.estimatePrioritizedGasUnitPrice ?? false,\n    };\n    return this.client.request.request<Gen.UserTransaction[]>({\n      url: \"/transactions/simulate\",\n      query: queryParams,\n      method: \"POST\",\n      body: bcsBody,\n      mediaType: \"application/x.aptos.signed_transaction+bcs\",\n    });\n  }\n\n  /**\n   * Queries on-chain transactions. This function will not return pending\n   * transactions. For that, use `getTransactionsByHash`.\n   *\n   * @param query Optional pagination object\n   * @param query.start The start transaction version of the page. Default is the latest ledger version\n   * @param query.limit The max number of transactions should be returned for the page. Default is 25\n   * @returns Array of on-chain transactions\n   */\n  @parseApiError\n  async getTransactions(query?: PaginationArgs): Promise<Gen.Transaction[]> {\n    return this.client.transactions.getTransactions(query?.start?.toString(), query?.limit);\n  }\n\n  /**\n   * @param txnHash - Transaction hash should be hex-encoded bytes string with 0x prefix.\n   * @returns Transaction from mempool (pending) or on-chain (committed) transaction\n   */\n  @parseApiError\n  async getTransactionByHash(txnHash: string): Promise<Gen.Transaction> {\n    return this.client.transactions.getTransactionByHash(txnHash);\n  }\n\n  /**\n   * @param txnVersion - Transaction version is an uint64 number.\n   * @returns On-chain transaction. Only on-chain transactions have versions, so this\n   * function cannot be used to query pending transactions.\n   */\n  @parseApiError\n  async getTransactionByVersion(txnVersion: AnyNumber): Promise<Gen.Transaction> {\n    return this.client.transactions.getTransactionByVersion(txnVersion.toString());\n  }\n\n  /**\n   * Defines if specified transaction is currently in pending state\n   * @param txnHash A hash of transaction\n   *\n   * To create a transaction hash:\n   *\n   * 1. Create hash message bytes: \"Aptos::Transaction\" bytes + BCS bytes of Transaction.\n   * 2. Apply hash algorithm SHA3-256 to the hash message bytes.\n   * 3. Hex-encode the hash bytes with 0x prefix.\n   *\n   * @returns `true` if transaction is in pending state and `false` otherwise\n   */\n  async transactionPending(txnHash: string): Promise<boolean> {\n    try {\n      const response = await this.client.transactions.getTransactionByHash(txnHash);\n      return response.type === \"pending_transaction\";\n    } catch (e: any) {\n      if (e?.status === 404) {\n        return true;\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * Wait for a transaction to move past pending state.\n   *\n   * There are 4 possible outcomes:\n   * 1. Transaction is processed and successfully committed to the blockchain.\n   * 2. Transaction is rejected for some reason, and is therefore not committed\n   *    to the blockchain.\n   * 3. Transaction is committed but execution failed, meaning no changes were\n   *    written to the blockchain state.\n   * 4. Transaction is not processed within the specified timeout.\n   *\n   * In case 1, this function resolves with the transaction response returned\n   * by the API.\n   *\n   * In case 2, the function will throw an ApiError, likely with an HTTP status\n   * code indicating some problem with the request (e.g. 400).\n   *\n   * In case 3, if `checkSuccess` is false (the default), this function returns\n   * the transaction response just like in case 1, in which the `success` field\n   * will be false. If `checkSuccess` is true, it will instead throw a\n   * FailedTransactionError.\n   *\n   * In case 4, this function throws a WaitForTransactionError.\n   *\n   * @param txnHash The hash of a transaction previously submitted to the blockchain.\n   * @param extraArgs.timeoutSecs Timeout in seconds. Defaults to 20 seconds.\n   * @param extraArgs.checkSuccess See above. Defaults to false.\n   * @returns See above.\n   *\n   * @example\n   * ```\n   * const rawTransaction = await this.generateRawTransaction(sender.address(), payload, extraArgs);\n   * const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTransaction);\n   * const pendingTransaction = await this.submitSignedBCSTransaction(bcsTxn);\n   * const transasction = await this.aptosClient.waitForTransactionWithResult(pendingTransaction.hash);\n   * ```\n   */\n  async waitForTransactionWithResult(\n    txnHash: string,\n    extraArgs?: { timeoutSecs?: number; checkSuccess?: boolean },\n  ): Promise<Gen.Transaction> {\n    const timeoutSecs = extraArgs?.timeoutSecs ?? DEFAULT_TXN_TIMEOUT_SEC;\n    const checkSuccess = extraArgs?.checkSuccess ?? false;\n\n    let isPending = true;\n    let count = 0;\n    let lastTxn: Gen.Transaction | undefined;\n    while (isPending) {\n      if (count >= timeoutSecs) {\n        break;\n      }\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        lastTxn = await this.client.transactions.getTransactionByHash(txnHash);\n        isPending = lastTxn.type === \"pending_transaction\";\n        if (!isPending) {\n          break;\n        }\n      } catch (e) {\n        // In short, this means we will retry if it was an ApiError and the code was 404 or 5xx.\n        const isApiError = e instanceof Gen.ApiError;\n        const isRequestError = isApiError && e.status !== 404 && e.status >= 400 && e.status < 500;\n        if (!isApiError || isRequestError) {\n          throw e;\n        }\n      }\n      // eslint-disable-next-line no-await-in-loop\n      await sleep(1000);\n      count += 1;\n    }\n\n    // There is a chance that lastTxn is still undefined. Let's throw some error here\n    if (lastTxn === undefined) {\n      throw new Error(`Waiting for transaction ${txnHash} failed`);\n    }\n\n    if (isPending) {\n      throw new WaitForTransactionError(\n        `Waiting for transaction ${txnHash} timed out after ${timeoutSecs} seconds`,\n        lastTxn,\n      );\n    }\n    if (!checkSuccess) {\n      return lastTxn;\n    }\n    if (!(lastTxn as any)?.success) {\n      throw new FailedTransactionError(\n        `Transaction ${txnHash} committed to the blockchain but execution failed`,\n        lastTxn,\n      );\n    }\n    return lastTxn;\n  }\n\n  /**\n   * This function works the same as `waitForTransactionWithResult` except it\n   * doesn't return the transaction in those cases, it returns nothing. For\n   * more information, see the documentation for `waitForTransactionWithResult`.\n   */\n  async waitForTransaction(\n    txnHash: string,\n    extraArgs?: { timeoutSecs?: number; checkSuccess?: boolean },\n  ): Promise<void> {\n    await this.waitForTransactionWithResult(txnHash, extraArgs);\n  }\n\n  /**\n   * Queries the latest ledger information\n   * @returns Latest ledger information\n   * @example Example of returned data\n   * ```\n   * {\n   *   chain_id: 15,\n   *   epoch: 6,\n   *   ledgerVersion: \"2235883\",\n   *   ledger_timestamp:\"1654580922321826\"\n   * }\n   * ```\n   */\n  @parseApiError\n  async getLedgerInfo(): Promise<Gen.IndexResponse> {\n    return this.client.general.getLedgerInfo();\n  }\n\n  /**\n   * @returns Current chain id\n   */\n  @Memoize()\n  async getChainId(): Promise<number> {\n    const result = await this.getLedgerInfo();\n    return result.chain_id;\n  }\n\n  /**\n   * Gets a table item for a table identified by the handle and the key for the item.\n   * Key and value types need to be passed in to help with key serialization and value deserialization.\n   * @param handle A pointer to where that table is stored\n   * @param data Object, that describes table item\n   * @param data.key_type Move type of table key (e.g. `vector<u8>`)\n   * @param data.value_type Move type of table value (e.g. `u64`)\n   * @param data.key Value of table key\n   * @returns Table item value rendered in JSON\n   */\n  @parseApiError\n  async getTableItem(handle: string, data: Gen.TableItemRequest, query?: { ledgerVersion?: AnyNumber }): Promise<any> {\n    const tableItem = await this.client.tables.getTableItem(handle, data, query?.ledgerVersion?.toString());\n    return tableItem;\n  }\n\n  /**\n   * Generates a raw transaction out of a transaction payload\n   * @param accountFrom\n   * @param payload\n   * @param extraArgs\n   * @returns\n   */\n  async generateRawTransaction(\n    accountFrom: HexString,\n    payload: TxnBuilderTypes.TransactionPayload,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<TxnBuilderTypes.RawTransaction> {\n    const [{ sequence_number: sequenceNumber }, chainId, { gas_estimate: gasEstimate }] = await Promise.all([\n      this.getAccount(accountFrom),\n      this.getChainId(),\n      extraArgs?.gasUnitPrice ? Promise.resolve({ gas_estimate: extraArgs.gasUnitPrice }) : this.estimateGasPrice(),\n    ]);\n\n    const { maxGasAmount, gasUnitPrice, expireTimestamp } = {\n      maxGasAmount: BigInt(DEFAULT_MAX_GAS_AMOUNT),\n      gasUnitPrice: BigInt(gasEstimate),\n      expireTimestamp: BigInt(Math.floor(Date.now() / 1000) + DEFAULT_TXN_EXP_SEC_FROM_NOW),\n      ...extraArgs,\n    };\n\n    return new TxnBuilderTypes.RawTransaction(\n      TxnBuilderTypes.AccountAddress.fromHex(accountFrom),\n      BigInt(sequenceNumber),\n      payload,\n      maxGasAmount,\n      gasUnitPrice,\n      expireTimestamp,\n      new TxnBuilderTypes.ChainId(chainId),\n    );\n  }\n\n  /**\n   * Helper for generating, signing, and submitting a transaction.\n   *\n   * @param sender AptosAccount of transaction sender.\n   * @param payload Transaction payload.\n   * @param extraArgs Extra args for building the transaction payload.\n   * @returns The transaction response from the API.\n   */\n  async generateSignSubmitTransaction(\n    sender: AptosAccount,\n    payload: TxnBuilderTypes.TransactionPayload,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    // :!:>generateSignSubmitTransactionInner\n    const rawTransaction = await this.generateRawTransaction(sender.address(), payload, extraArgs);\n    const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTransaction);\n    const pendingTransaction = await this.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n    // <:!:generateSignSubmitTransactionInner\n  }\n\n  /**\n   * Publishes a move package. `packageMetadata` and `modules` can be generated with command\n   * `aptos move compile --save-metadata [ --included-artifacts=<...> ]`.\n   * @param sender\n   * @param packageMetadata package metadata bytes\n   * @param modules bytecodes of modules\n   * @param extraArgs\n   * @returns Transaction hash\n   */\n  async publishPackage(\n    sender: AptosAccount,\n    packageMetadata: Bytes,\n    modules: Seq<TxnBuilderTypes.Module>,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const codeSerializer = new Serializer();\n    serializeVector(modules, codeSerializer);\n\n    const payload = new TxnBuilderTypes.TransactionPayloadEntryFunction(\n      TxnBuilderTypes.EntryFunction.natural(\n        \"0x1::code\",\n        \"publish_package_txn\",\n        [],\n        [bcsSerializeBytes(packageMetadata), codeSerializer.getBytes()],\n      ),\n    );\n\n    return this.generateSignSubmitTransaction(sender, payload, extraArgs);\n  }\n\n  /**\n   * Helper for generating, submitting, and waiting for a transaction, and then\n   * checking whether it was committed successfully. Under the hood this is just\n   * `generateSignSubmitTransaction` and then `waitForTransactionWithResult`, see\n   * those for information about the return / error semantics of this function.\n   */\n  async generateSignSubmitWaitForTransaction(\n    sender: AptosAccount,\n    payload: TxnBuilderTypes.TransactionPayload,\n    extraArgs?: OptionalTransactionArgs & {\n      checkSuccess?: boolean;\n      timeoutSecs?: number;\n    },\n  ): Promise<Gen.Transaction> {\n    const txnHash = await this.generateSignSubmitTransaction(sender, payload, extraArgs);\n    return this.waitForTransactionWithResult(txnHash, extraArgs);\n  }\n\n  @parseApiError\n  @Memoize({\n    ttlMs: 5 * 60 * 1000, // cache result for 5min\n    tags: [\"gas_estimates\"],\n  })\n  async estimateGasPrice(): Promise<Gen.GasEstimation> {\n    return this.client.transactions.estimateGasPrice();\n  }\n\n  @parseApiError\n  async estimateMaxGasAmount(forAccount: MaybeHexString): Promise<Uint64> {\n    // Only Aptos utility coin is accepted as gas\n    const typeTag = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n\n    const [{ gas_estimate: gasUnitPrice }, resources] = await Promise.all([\n      this.estimateGasPrice(),\n      this.getAccountResources(forAccount),\n    ]);\n\n    const accountResource = resources.find((r) => r.type === typeTag);\n    const balance = BigInt((accountResource!.data as any).coin.value);\n    return balance / BigInt(gasUnitPrice);\n  }\n\n  /**\n   * Rotate an account's auth key. After rotation, only the new private key can be used to sign txns for\n   * the account.\n   * WARNING: You must create a new instance of AptosAccount after using this function.\n   * @param forAccount Account of which the auth key will be rotated\n   * @param toPrivateKeyBytes New private key\n   * @param extraArgs Extra args for building the transaction payload.\n   * @returns PendingTransaction\n   */\n  async rotateAuthKeyEd25519(\n    forAccount: AptosAccount,\n    toPrivateKeyBytes: Uint8Array,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<Gen.PendingTransaction> {\n    const { sequence_number: sequenceNumber, authentication_key: authKey } = await this.getAccount(\n      forAccount.address(),\n    );\n\n    const helperAccount = new AptosAccount(toPrivateKeyBytes);\n\n    const challenge = new TxnBuilderTypes.RotationProofChallenge(\n      TxnBuilderTypes.AccountAddress.CORE_CODE_ADDRESS,\n      \"account\",\n      \"RotationProofChallenge\",\n      BigInt(sequenceNumber),\n      TxnBuilderTypes.AccountAddress.fromHex(forAccount.address()),\n      new TxnBuilderTypes.AccountAddress(new HexString(authKey).toUint8Array()),\n      helperAccount.pubKey().toUint8Array(),\n    );\n\n    const challengeHex = HexString.fromUint8Array(bcsToBytes(challenge));\n\n    const proofSignedByCurrentPrivateKey = forAccount.signHexString(challengeHex);\n\n    const proofSignedByNewPrivateKey = helperAccount.signHexString(challengeHex);\n\n    const payload = new TxnBuilderTypes.TransactionPayloadEntryFunction(\n      TxnBuilderTypes.EntryFunction.natural(\n        \"0x1::account\",\n        \"rotate_authentication_key\",\n        [],\n        [\n          bcsSerializeU8(0), // ed25519 scheme\n          bcsSerializeBytes(forAccount.pubKey().toUint8Array()),\n          bcsSerializeU8(0), // ed25519 scheme\n          bcsSerializeBytes(helperAccount.pubKey().toUint8Array()),\n          bcsSerializeBytes(proofSignedByCurrentPrivateKey.toUint8Array()),\n          bcsSerializeBytes(proofSignedByNewPrivateKey.toUint8Array()),\n        ],\n      ),\n    );\n\n    const rawTransaction = await this.generateRawTransaction(forAccount.address(), payload, extraArgs);\n    const bcsTxn = AptosClient.generateBCSTransaction(forAccount, rawTransaction);\n    return this.submitSignedBCSTransaction(bcsTxn);\n  }\n\n  /**\n   * Lookup the original address by the current derived address\n   * @param addressOrAuthKey\n   * @returns original address\n   */\n  async lookupOriginalAddress(addressOrAuthKey: MaybeHexString): Promise<HexString> {\n    const resource = await this.getAccountResource(\"0x1\", \"0x1::account::OriginatingAddress\");\n\n    const {\n      address_map: { handle },\n    } = resource.data as any;\n\n    const origAddress = await this.getTableItem(handle, {\n      key_type: \"address\",\n      value_type: \"address\",\n      key: HexString.ensure(addressOrAuthKey).hex(),\n    });\n\n    return new HexString(origAddress);\n  }\n\n  /**\n   * Get block by height\n   *\n   * @param blockHeight Block height to lookup.  Starts at 0\n   * @param withTransactions If set to true, include all transactions in the block\n   *\n   * @returns Block\n   */\n  @parseApiError\n  async getBlockByHeight(blockHeight: number, withTransactions?: boolean): Promise<Gen.Block> {\n    return this.client.blocks.getBlockByHeight(blockHeight, withTransactions);\n  }\n\n  /**\n   * Get block by block transaction version\n   *\n   * @param version Ledger version to lookup block information for\n   * @param withTransactions If set to true, include all transactions in the block\n   *\n   * @returns Block\n   */\n  @parseApiError\n  async getBlockByVersion(version: number, withTransactions?: boolean): Promise<Gen.Block> {\n    return this.client.blocks.getBlockByVersion(version, withTransactions);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  clearCache(tags: string[]) {\n    clear(tags);\n  }\n}\n\nexport class ApiError extends Error {\n  constructor(\n    public readonly status: number,\n    public readonly message: string,\n    public readonly errorCode?: string,\n    public readonly vmErrorCode?: string,\n  ) {\n    super(message);\n  }\n}\n\n/**\n * This error is used by `waitForTransactionWithResult` when waiting for a\n * transaction times out.\n */\nexport class WaitForTransactionError extends Error {\n  public readonly lastSubmittedTransaction: Gen.Transaction | undefined;\n\n  constructor(message: string, lastSubmittedTransaction: Gen.Transaction | undefined) {\n    super(message);\n    this.lastSubmittedTransaction = lastSubmittedTransaction;\n  }\n}\n\n/**\n * This error is used by `waitForTransactionWithResult` if `checkSuccess` is true.\n * See that function for more information.\n */\nexport class FailedTransactionError extends Error {\n  public readonly transaction: Gen.Transaction;\n\n  constructor(message: string, transaction: Gen.Transaction) {\n    super(message);\n    this.transaction = transaction;\n  }\n}\n\n/**\n * Creates a decorator to parse Gen.ApiError and return a wrapped error that is more developer friendly\n */\nfunction parseApiError(target: unknown, propertyKey: string, descriptor: PropertyDescriptor) {\n  const childFunction = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = async function wrapper(...args: any[]) {\n    try {\n      // We need to explicitly await here so that the function is called and\n      // potentially throws an error. If we just return without awaiting, the\n      // promise is returned directly and the catch block cannot trigger.\n      const res = await childFunction.apply(this, [...args]);\n      return res;\n    } catch (e) {\n      if (e instanceof Gen.ApiError) {\n        throw new ApiError(\n          e.status,\n          JSON.stringify({ message: e.message, ...e.body }),\n          e.body?.error_code,\n          e.body?.vm_error_code,\n        );\n      }\n      throw e;\n    }\n  };\n  return descriptor;\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable max-len */\n\n// ecosystem/typescript/sdk/src/move_scripts/token_transfer_with_opt_in\nexport const TOKEN_TRANSFER_OPT_IN =\n  \"a11ceb0b0500000006010004020408030c0a05161d073339086c400000010100020700010307000104030100010504020007060c0508000800030503010801000405080008000304060c0801050306737472696e6705746f6b656e06537472696e6707546f6b656e4964136372656174655f746f6b656e5f69645f726177087472616e73666572000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000030000010c0b010b020b030b0411000c070b000b070b050b06110102\";\n\n/*\nFollow these steps to get the ABI strings:\n\nGo to the package directory of the relevant Move module, e.g. if you're trying\nto get the ABI for the `transfer` function of `aptos_account.move`, go to\nthe directory `aptos-move/framework/aptos-framework`.\n\nCompile the Move packages with the Aptos CLI:\n```\naptos move compile --included-artifacts all\n```\nThis `--included-artifacts all` argument is necessary to generate ABIs.\n\nFind the ABI files under the `build` directory and convert the ABI files to hex strings.\nOn Mac and Linux, this can be done with this command:\n```\ncat <ABI_FILE_PATH> | od -v -t x1 -A n | tr -d ' \\n'\n```\nFor example:\n```\ncat build/AptosFramework/abis/aptos_account/transfer.abi | od -v -t x1 -A n | tr -d ' \\n'\n```\n*/\nexport const TOKEN_ABIS = [\n  // aptos-token/build/AptosToken/abis/token/create_collection_script.abi\nn  // aptos-token/build/AptosToken/abis/token/create_token_script.abi\nn  // aptos-token/build/AptosToken/abis/token/direct_transfer_script.abi\n  \"01166469726563745f7472616e736665725f736372697074000000000000000000000000000000000000000000000000000000000000000305746f6b656e0000051063726561746f72735f61646472657373040a636f6c6c656374696f6e07000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e6700046e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67001070726f70657274795f76657273696f6e0206616d6f756e7402\",\n  // aptos-token/build/AptosToken/abis/token_transfers/offer_script.abi\n  \"010C6F666665725F73637269707400000000000000000000000000000000000000000000000000000000000000030F746F6B656E5F7472616E7366657273000006087265636569766572040763726561746F72040A636F6C6C656374696F6E07000000000000000000000000000000000000000000000000000000000000000106737472696E6706537472696E6700046E616D6507000000000000000000000000000000000000000000000000000000000000000106737472696E6706537472696E67001070726F70657274795F76657273696F6E0206616D6F756E7402\",\n  // aptos-token/build/AptosToken/abis/token_transfers/claim_script.abi\n  \"010C636C61696D5F73637269707400000000000000000000000000000000000000000000000000000000000000030F746F6B656E5F7472616E73666572730000050673656E646572040763726561746F72040A636F6C6C656374696F6E07000000000000000000000000000000000000000000000000000000000000000106737472696E6706537472696E6700046E616D6507000000000000000000000000000000000000000000000000000000000000000106737472696E6706537472696E67001070726F70657274795F76657273696F6E02\",\n  // aptos-token/build/AptosToken/abis/token_transfers/cancel_offer_script.abi\n  \"011363616E63656C5F6F666665725F73637269707400000000000000000000000000000000000000000000000000000000000000030F746F6B656E5F7472616E7366657273000005087265636569766572040763726561746F72040A636F6C6C656374696F6E07000000000000000000000000000000000000000000000000000000000000000106737472696E6706537472696E6700046E616D6507000000000000000000000000000000000000000000000000000000000000000106737472696E6706537472696E67001070726F70657274795F76657273696F6E02\",\n  // aptos-token/build/AptosToken/abis/token/mutate_token_properties.abi\n  \"01176d75746174655f746f6b656e5f70726f70657274696573000000000000000000000000000000000000000000000000000000000000000305746f6b656eba02206d75746174652074686520746f6b656e2070726f706572747920616e64207361766520746865206e65772070726f706572747920696e20546f6b656e53746f72650a2069662074686520746f6b656e2070726f70657274795f76657273696f6e20697320302c2077652077696c6c206372656174652061206e65772070726f70657274795f76657273696f6e2070657220746f6b656e20746f2067656e65726174652061206e657720746f6b656e5f69642070657220746f6b656e0a2069662074686520746f6b656e2070726f70657274795f76657273696f6e206973206e6f7420302c2077652077696c6c206a75737420757064617465207468652070726f70657274794d617020616e642075736520746865206578697374696e6720746f6b656e5f6964202870726f70657274795f76657273696f6e2900090b746f6b656e5f6f776e6572040763726561746f72040f636f6c6c656374696f6e5f6e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67000a746f6b656e5f6e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e670016746f6b656e5f70726f70657274795f76657273696f6e0206616d6f756e7402046b6579730607000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67000676616c7565730606010574797065730607000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e6700\",\n  // aptos-token/build/AptosToken/abis/token/opt_in_direct_transfer.abi\n  \"01166f70745f696e5f6469726563745f7472616e73666572000000000000000000000000000000000000000000000000000000000000000305746f6b656e000001066f70745f696e00\",\n  // aptos-token/build/AptosToken/abis/token/burn.abi\n  \"01046275726e000000000000000000000000000000000000000000000000000000000000000305746f6b656e20204275726e206120746f6b656e2062792074686520746f6b656e206f776e657200051063726561746f72735f61646472657373040a636f6c6c656374696f6e07000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e6700046e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67001070726f70657274795f76657273696f6e0206616d6f756e7402\",\n  // aptos-token/build/AptosToken/abis/token/burn_by_creator.abi\n  \"010f6275726e5f62795f63726561746f72000000000000000000000000000000000000000000000000000000000000000305746f6b656e6a204275726e206120746f6b656e2062792063726561746f72207768656e2074686520746f6b656e2773204255524e41424c455f42595f43524541544f5220697320747275650a2054686520746f6b656e206973206f776e65642061742061646472657373206f776e65720005056f776e6572040a636f6c6c656374696f6e07000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e6700046e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67001070726f70657274795f76657273696f6e0206616d6f756e7402\",\n];\n\nexport const COIN_ABIS = [\n  // aptos-framework/build/AptosFramework/abis/coin/transfer.abi\n  \"01087472616E73666572000000000000000000000000000000000000000000000000000000000000000104636F696E3C205472616E73666572732060616D6F756E7460206F6620636F696E732060436F696E54797065602066726F6D206066726F6D6020746F2060746F602E0109636F696E5F747970650202746F0406616D6F756E7402\",\n  // aptos-framework/build/AptosFramework/abis/aptos_account/transfer.abi\n  \"01087472616e7366657200000000000000000000000000000000000000000000000000000000000000010d6170746f735f6163636f756e7400000202746f0406616d6f756e7402\",\n];\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { AptosAccount, getAddressFromAccountOrAddress } from \"./aptos_account\";\nimport { AptosClient, OptionalTransactionArgs } from \"./aptos_client\";\nimport { HexString, MaybeHexString } from \"./hex_string\";\nimport { TransactionBuilderABI } from \"./transaction_builder\";\nimport { COIN_ABIS } from \"./abis\";\nimport { APTOS_COIN } from \"./utils\";\n\n/**\n * Class for working with the coin module, such as transferring coins and\n * checking balances.\n */\nexport class CoinClient {\n  aptosClient: AptosClient;\n\n  transactionBuilder: TransactionBuilderABI;\n\n  /**\n   * Creates new CoinClient instance\n   * @param aptosClient AptosClient instance\n   */\n  constructor(aptosClient: AptosClient) {\n    this.aptosClient = aptosClient;\n    this.transactionBuilder = new TransactionBuilderABI(COIN_ABIS.map((abi) => new HexString(abi).toUint8Array()));\n  }\n\n  /**\n   * Generate, sign, and submit a transaction to the Aptos blockchain API to\n   * transfer coins from one account to another. By default it transfers\n   * 0x1::aptos_coin::AptosCoin, but you can specify a different coin type\n   * with the `coinType` argument.\n   *\n   * You may set `createReceiverIfMissing` to true if you want to create the\n   * receiver account if it does not exist on chain yet. If you do not set\n   * this to true, the transaction will fail if the receiver account does not\n   * exist on-chain.\n   *\n   * @param from Account sending the coins\n   * @param to Account to receive the coins\n   * @param amount Number of coins to transfer\n   * @param extraArgs Extra args for building the transaction or configuring how\n   * the client should submit and wait for the transaction\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>transfer\n  async transfer(\n    from: AptosAccount,\n    to: AptosAccount | MaybeHexString,\n    amount: number | bigint,\n    extraArgs?: OptionalTransactionArgs & {\n      // The coin type to use, defaults to 0x1::aptos_coin::AptosCoin\n      coinType?: string;\n      // If set, create the `receiver` account if it doesn't exist on-chain.\n      // This is done by calling `0x1::aptos_account::transfer` instead, which\n      // will create the account on-chain first if it doesn't exist before\n      // transferring the coins to it.\n      createReceiverIfMissing?: boolean;\n    },\n  ): Promise<string> {\n    // If none is explicitly given, use 0x1::aptos_coin::AptosCoin as the coin type.\n    const coinTypeToTransfer = extraArgs?.coinType ?? APTOS_COIN;\n\n    // If we should create the receiver account if it doesn't exist on-chain,\n    // use the `0x1::aptos_account::transfer` function.\n    const func = extraArgs?.createReceiverIfMissing ? \"0x1::aptos_account::transfer\" : \"0x1::coin::transfer\";\n\n    // If we're using the `0x1::aptos_account::transfer` function, we don't\n    // need type args.\n    const typeArgs = extraArgs?.createReceiverIfMissing ? [] : [coinTypeToTransfer];\n\n    // Get the receiver address from the AptosAccount or MaybeHexString.\n    const toAddress = getAddressFromAccountOrAddress(to);\n\n    const payload = this.transactionBuilder.buildTransactionPayload(func, typeArgs, [toAddress, amount]);\n\n    return this.aptosClient.generateSignSubmitTransaction(from, payload, extraArgs);\n  } // <:!:transfer\n\n  /**\n   * Get the balance of the account. By default it checks the balance of\n   * 0x1::aptos_coin::AptosCoin, but you can specify a different coin type.\n   *\n   * @param account Account that you want to get the balance of.\n   * @param extraArgs Extra args for checking the balance.\n   * @returns Promise that resolves to the balance as a bigint.\n   */\n  // :!:>checkBalance\n  async checkBalance(\n    account: AptosAccount | MaybeHexString,\n    extraArgs?: {\n      // The coin type to use, defaults to 0x1::aptos_coin::AptosCoin\n      coinType?: string;\n    },\n  ): Promise<bigint> {\n    const coinType = extraArgs?.coinType ?? APTOS_COIN;\n    const typeTag = `0x1::coin::CoinStore<${coinType}>`;\n    const address = getAddressFromAccountOrAddress(account);\n    const accountResource = await this.aptosClient.getAccountResource(address, typeTag);\n    return BigInt((accountResource.data as any).coin.value);\n  } // <:!:checkBalance\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\n/** Faucet creates and funds accounts. This is a thin wrapper around that. */\nimport { AptosClient } from \"./aptos_client\";\nimport { OpenAPIConfig } from \"./generated\";\nimport { AxiosHttpRequest } from \"./generated/core/AxiosHttpRequest\";\nimport { HexString, MaybeHexString } from \"./hex_string\";\nimport { DEFAULT_TXN_TIMEOUT_SEC } from \"./utils\";\n\n/**\n * Class for requsting tokens from faucet\n */\nexport class FaucetClient extends AptosClient {\n  faucetRequester: AxiosHttpRequest;\n\n  /**\n   * Establishes a connection to Aptos node\n   * @param nodeUrl A url of the Aptos Node API endpoint\n   * @param faucetUrl A faucet url\n   * @param config An optional config for inner axios instance\n   * Detailed config description: {@link https://github.com/axios/axios#request-config}\n   */\n  constructor(nodeUrl: string, faucetUrl: string, config?: Partial<OpenAPIConfig>) {\n    super(nodeUrl, config);\n\n    if (!faucetUrl) {\n      throw new Error(\"Faucet URL cannot be empty.\");\n    }\n    // Build a requester configured to talk to the faucet.\n    this.faucetRequester = new AxiosHttpRequest({\n      BASE: faucetUrl,\n      VERSION: config?.VERSION ?? \"0.1.0\",\n      WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,\n      CREDENTIALS: config?.CREDENTIALS ?? \"include\",\n      TOKEN: config?.TOKEN,\n      USERNAME: config?.USERNAME,\n      PASSWORD: config?.PASSWORD,\n      HEADERS: config?.HEADERS,\n      ENCODE_PATH: config?.ENCODE_PATH,\n    });\n  }\n\n  /**\n   * This creates an account if it does not exist and mints the specified amount of\n   * coins into that account\n   * @param address Hex-encoded 16 bytes Aptos account address wich mints tokens\n   * @param amount Amount of tokens to mint\n   * @param timeoutSecs\n   * @returns Hashes of submitted transactions\n   */\n  async fundAccount(address: MaybeHexString, amount: number, timeoutSecs = DEFAULT_TXN_TIMEOUT_SEC): Promise<string[]> {\n    const tnxHashes = await this.faucetRequester.request<Array<string>>({\n      method: \"POST\",\n      url: \"/mint\",\n      query: {\n        address: HexString.ensure(address).noPrefix(),\n        amount,\n      },\n    });\n\n    const promises: Promise<void>[] = [];\n    for (let i = 0; i < tnxHashes.length; i += 1) {\n      const tnxHash = tnxHashes[i];\n      promises.push(this.waitForTransaction(tnxHash, { timeoutSecs }));\n    }\n    await Promise.all(promises);\n    return tnxHashes;\n  }\n}\n","import { Bytes, Deserializer, Serializer } from \"../bcs\";\nimport { TypeTagParser } from \"../transaction_builder\";\nimport { serializeArg, stringStructTag } from \"../transaction_builder/builder_utils\";\nimport {\n  TypeTag,\n  TypeTagAddress,\n  TypeTagBool,\n  TypeTagStruct,\n  TypeTagU128,\n  TypeTagU64,\n  TypeTagU8,\n} from \"../aptos_types\";\nimport { HexString } from \"../hex_string\";\n\nexport class PropertyValue {\n  type: string;\n\n  value: any;\n\n  constructor(type: string, value: string) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class PropertyMap {\n  data: { [key: string]: PropertyValue };\n\n  constructor() {\n    this.data = {};\n  }\n\n  setProperty(key: string, value: PropertyValue) {\n    this.data[key] = value;\n  }\n}\n\nexport function getPropertyType(typ: string): TypeTag {\n  let typeTag: TypeTag;\n  if (typ === \"string\" || typ === \"String\") {\n    typeTag = new TypeTagStruct(stringStructTag);\n  } else {\n    typeTag = new TypeTagParser(typ).parseTypeTag();\n  }\n  return typeTag;\n}\n\nexport function getPropertyValueRaw(values: Array<string>, types: Array<string>): Array<Bytes> {\n  if (values.length !== types.length) {\n    throw new Error(\"Length of property values and types not match\");\n  }\n\n  const results = new Array<Bytes>();\n  types.forEach((typ, index) => {\n    try {\n      const typeTag = getPropertyType(typ);\n      const serializer = new Serializer();\n      serializeArg(values[index], typeTag, serializer);\n      results.push(serializer.getBytes());\n    } catch (error) {\n      // if not support type, just use the raw string bytes\n      results.push(new TextEncoder().encode(values[index]));\n    }\n  });\n  return results;\n}\n\nexport function deserializePropertyMap(rawPropertyMap: any): PropertyMap {\n  const entries = rawPropertyMap.map.data;\n  const pm = new PropertyMap();\n  entries.forEach((prop: any) => {\n    const { key } = prop;\n    const val: string = prop.value.value;\n    const typ: string = prop.value.type;\n    const typeTag = getPropertyType(typ);\n    const newValue = deserializeValueBasedOnTypeTag(typeTag, val);\n    const pv = new PropertyValue(typ, newValue);\n    pm.setProperty(key, pv);\n  });\n  return pm;\n}\n\nexport function deserializeValueBasedOnTypeTag(tag: TypeTag, val: string): string {\n  const de = new Deserializer(new HexString(val).toUint8Array());\n  let res: string = \"\";\n  if (tag instanceof TypeTagU8) {\n    res = de.deserializeU8().toString();\n  } else if (tag instanceof TypeTagU64) {\n    res = de.deserializeU64().toString();\n  } else if (tag instanceof TypeTagU128) {\n    res = de.deserializeU128().toString();\n  } else if (tag instanceof TypeTagBool) {\n    res = de.deserializeBool() ? \"true\" : \"false\";\n  } else if (tag instanceof TypeTagAddress) {\n    res = HexString.fromUint8Array(de.deserializeFixedBytes(32)).hex();\n  } else if (tag instanceof TypeTagStruct && (tag as TypeTagStruct).isStringTypeTag()) {\n    res = de.deserializeStr();\n  } else {\n    res = val;\n  }\n  return res;\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { deserializePropertyMap, PropertyMap, PropertyValue } from \"./utils/property_map_serde\";\n\nexport { PropertyMap, PropertyValue };\nexport class TokenData {\n  /** Unique name within this creator's account for this Token's collection */\n  collection: string;\n\n  /** Description of Token */\n  description: string;\n\n  /** Name of Token */\n  name: string;\n\n  /** Optional maximum number of this Token */\n  maximum?: number;\n\n  /** Total number of this type of Token */\n  supply: number;\n\n  /** URL for additional information / media */\n  uri: string;\n\n  /** default properties of token data */\n  default_properties: PropertyMap;\n\n  /** mutability config of tokendata fields */\n  mutability_config: boolean[];\n\n  constructor(\n    collection: string,\n    description: string,\n    name: string,\n    maximum: number,\n    supply: number,\n    uri: string,\n    default_properties: any,\n    mutability_config: boolean[],\n  ) {\n    this.collection = collection;\n    this.description = description;\n    this.name = name;\n    this.maximum = maximum;\n    this.supply = supply;\n    this.uri = uri;\n    this.default_properties = deserializePropertyMap(default_properties);\n    this.mutability_config = mutability_config;\n  }\n}\n\nexport interface TokenDataId {\n  /** Token creator address */\n  creator: string;\n\n  /** Unique name within this creator's account for this Token's collection */\n  collection: string;\n\n  /** Name of Token */\n  name: string;\n}\n\nexport interface TokenId {\n  token_data_id: TokenDataId;\n\n  /** version number of the property map */\n  property_version: string;\n}\n\n/** server will return string for u64 */\ntype U64 = string;\n\nexport class Token {\n  id: TokenId;\n\n  /** server will return string for u64 */\n  amount: U64;\n\n  /** the property map of the token */\n  token_properties: PropertyMap;\n\n  constructor(id: TokenId, amount: U64, token_properties: any) {\n    this.id = id;\n    this.amount = amount;\n    this.token_properties = deserializePropertyMap(token_properties);\n  }\n}\n","// Copyright (c) Aptos\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable max-len */\n\nimport { AptosAccount } from \"./aptos_account\";\nimport { AptosClient, OptionalTransactionArgs } from \"./aptos_client\";\nimport * as TokenTypes from \"./token_types\";\nimport * as Gen from \"./generated/index\";\nimport { HexString, MaybeHexString } from \"./hex_string\";\nimport { TransactionBuilder, TransactionBuilderABI, TxnBuilderTypes } from \"./transaction_builder\";\nimport { MAX_U64_BIG_INT } from \"./bcs/consts\";\nimport { TOKEN_ABIS, TOKEN_TRANSFER_OPT_IN } from \"./abis\";\nimport { AnyNumber, bcsToBytes, Bytes } from \"./bcs\";\nimport { getPropertyValueRaw, PropertyMap } from \"./utils/property_map_serde\";\nimport {\n  Script,\n  TransactionArgumentAddress,\n  TransactionArgumentU64,\n  TransactionArgumentU8Vector,\n  TransactionPayloadScript,\n} from \"./aptos_types\";\nimport { Token, TokenData } from \"./token_types\";\n\n/**\n * Class for creating, minting and managing minting NFT collections and tokens\n */\nexport class TokenClient {\n  aptosClient: AptosClient;\n\n  transactionBuilder: TransactionBuilderABI;\n\n  /**\n   * Creates new TokenClient instance\n   *\n   * @param aptosClient AptosClient instance\n   */\n  constructor(aptosClient: AptosClient) {\n    this.aptosClient = aptosClient;\n    this.transactionBuilder = new TransactionBuilderABI(TOKEN_ABIS.map((abi) => new HexString(abi).toUint8Array()));\n  }\n\n  /**\n   * Creates a new NFT collection within the specified account\n   *\n   * @param account AptosAccount where collection will be created\n   * @param name Collection name\n   * @param description Collection description\n   * @param uri URL to additional info about collection\n   * @param maxAmount Maximum number of `token_data` allowed within this collection\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createCollection\n  async createCollection(\n    account: AptosAccount,\n    name: string,\n    description: string,\n    uri: string,\n    maxAmount: AnyNumber = MAX_U64_BIG_INT,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    // <:!:createCollection\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token::create_collection_script\",\n      [],\n      [name, description, uri, maxAmount, [false, false, false]],\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(account, payload, extraArgs);\n  }\n\n  /**\n   * Creates a new NFT within the specified account\n   *\n   * @param account AptosAccount where token will be created\n   * @param collectionName Name of collection, that token belongs to\n   * @param name Token name\n   * @param description Token description\n   * @param supply Token supply\n   * @param uri URL to additional info about token\n   * @param max The maxium of tokens can be minted from this token\n   * @param royalty_payee_address the address to receive the royalty, the address can be a shared account address.\n   * @param royalty_points_denominator the denominator for calculating royalty\n   * @param royalty_points_numerator the numerator for calculating royalty\n   * @param property_keys the property keys for storing on-chain properties\n   * @param property_values the property values to be stored on-chain\n   * @param property_types the type of property values\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createToken\n  async createToken(\n    account: AptosAccount,\n    collectionName: string,\n    name: string,\n    description: string,\n    supply: number,\n    uri: string,\n    max: AnyNumber = MAX_U64_BIG_INT,\n    royalty_payee_address: MaybeHexString = account.address(),\n    royalty_points_denominator: number = 0,\n    royalty_points_numerator: number = 0,\n    property_keys: Array<string> = [],\n    property_values: Array<string> = [],\n    property_types: Array<string> = [],\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    // <:!:createToken\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token::create_token_script\",\n      [],\n      [\n        collectionName,\n        name,\n        description,\n        supply,\n        max,\n        uri,\n        royalty_payee_address,\n        royalty_points_denominator,\n        royalty_points_numerator,\n        [false, false, false, false, false],\n        property_keys,\n        getPropertyValueRaw(property_values, property_types),\n        property_types,\n      ],\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(account, payload, extraArgs);\n  }\n\n  /**\n   * Creates a new NFT within the specified account\n   *\n   * @param account AptosAccount where token will be created\n   * @param collectionName Name of collection, that token belongs to\n   * @param name Token name\n   * @param description Token description\n   * @param supply Token supply\n   * @param uri URL to additional info about token\n   * @param max The maxium of tokens can be minted from this token\n   * @param royalty_payee_address the address to receive the royalty, the address can be a shared account address.\n   * @param royalty_points_denominator the denominator for calculating royalty\n   * @param royalty_points_numerator the numerator for calculating royalty\n   * @param property_keys the property keys for storing on-chain properties\n   * @param property_values the property values to be stored on-chain\n   * @param property_types the type of property values\n   * @param mutability_config configs which field is mutable\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createToken\n  async createTokenWithMutabilityConfig(\n    account: AptosAccount,\n    collectionName: string,\n    name: string,\n    description: string,\n    supply: AnyNumber,\n    uri: string,\n    max: AnyNumber = MAX_U64_BIG_INT,\n    royalty_payee_address: MaybeHexString = account.address(),\n    royalty_points_denominator: AnyNumber = 0,\n    royalty_points_numerator: AnyNumber = 0,\n    property_keys: Array<string> = [],\n    property_values: Array<Bytes> = [],\n    property_types: Array<string> = [],\n    mutability_config: Array<boolean> = [false, false, false, false, false],\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    // <:!:createToken\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token::create_token_script\",\n      [],\n      [\n        collectionName,\n        name,\n        description,\n        supply,\n        max,\n        uri,\n        royalty_payee_address,\n        royalty_points_denominator,\n        royalty_points_numerator,\n        mutability_config,\n        property_keys,\n        property_values,\n        property_types,\n      ],\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(account, payload, extraArgs);\n  }\n\n  /**\n   * Transfers specified amount of tokens from account to receiver\n   *\n   * @param account AptosAccount where token from which tokens will be transfered\n   * @param receiver  Hex-encoded 32 byte Aptos account address to which tokens will be transfered\n   * @param creator Hex-encoded 32 byte Aptos account address to which created tokens\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async offerToken(\n    account: AptosAccount,\n    receiver: MaybeHexString,\n    creator: MaybeHexString,\n    collectionName: string,\n    name: string,\n    amount: number,\n    property_version: number = 0,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token_transfers::offer_script\",\n      [],\n      [receiver, creator, collectionName, name, property_version, amount],\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(account, payload, extraArgs);\n  }\n\n  /**\n   * Claims a token on specified account\n   *\n   * @param account AptosAccount which will claim token\n   * @param sender Hex-encoded 32 byte Aptos account address which holds a token\n   * @param creator Hex-encoded 32 byte Aptos account address which created a token\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async claimToken(\n    account: AptosAccount,\n    sender: MaybeHexString,\n    creator: MaybeHexString,\n    collectionName: string,\n    name: string,\n    property_version: number = 0,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token_transfers::claim_script\",\n      [],\n      [sender, creator, collectionName, name, property_version],\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(account, payload, extraArgs);\n  }\n\n  /**\n   * Removes a token from pending claims list\n   *\n   * @param account AptosAccount which will remove token from pending list\n   * @param receiver Hex-encoded 32 byte Aptos account address which had to claim token\n   * @param creator Hex-encoded 32 byte Aptos account address which created a token\n   * @param collectionName Name of collection where token is strored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async cancelTokenOffer(\n    account: AptosAccount,\n    receiver: MaybeHexString,\n    creator: MaybeHexString,\n    collectionName: string,\n    name: string,\n    property_version: number = 0,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token_transfers::cancel_offer_script\",\n      [],\n      [receiver, creator, collectionName, name, property_version],\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(account, payload, extraArgs);\n  }\n\n  /**\n   * Directly transfer the specified amount of tokens from account to receiver\n   * using a single multi signature transaction.\n   *\n   * @param sender AptosAccount where token from which tokens will be transfered\n   * @param receiver Hex-encoded 32 byte Aptos account address to which tokens will be transfered\n   * @param creator Hex-encoded 32 byte Aptos account address to which created tokens\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async directTransferToken(\n    sender: AptosAccount,\n    receiver: AptosAccount,\n    creator: MaybeHexString,\n    collectionName: string,\n    name: string,\n    amount: AnyNumber,\n    propertyVersion: AnyNumber = 0,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token::direct_transfer_script\",\n      [],\n      [creator, collectionName, name, propertyVersion, amount],\n    );\n\n    const rawTxn = await this.aptosClient.generateRawTransaction(sender.address(), payload, extraArgs);\n    const multiAgentTxn = new TxnBuilderTypes.MultiAgentRawTransaction(rawTxn, [\n      TxnBuilderTypes.AccountAddress.fromHex(receiver.address()),\n    ]);\n\n    const senderSignature = new TxnBuilderTypes.Ed25519Signature(\n      sender.signBuffer(TransactionBuilder.getSigningMessage(multiAgentTxn)).toUint8Array(),\n    );\n\n    const senderAuthenticator = new TxnBuilderTypes.AccountAuthenticatorEd25519(\n      new TxnBuilderTypes.Ed25519PublicKey(sender.signingKey.publicKey),\n      senderSignature,\n    );\n\n    const receiverSignature = new TxnBuilderTypes.Ed25519Signature(\n      receiver.signBuffer(TransactionBuilder.getSigningMessage(multiAgentTxn)).toUint8Array(),\n    );\n\n    const receiverAuthenticator = new TxnBuilderTypes.AccountAuthenticatorEd25519(\n      new TxnBuilderTypes.Ed25519PublicKey(receiver.signingKey.publicKey),\n      receiverSignature,\n    );\n\n    const multiAgentAuthenticator = new TxnBuilderTypes.TransactionAuthenticatorMultiAgent(\n      senderAuthenticator,\n      [TxnBuilderTypes.AccountAddress.fromHex(receiver.address())], // Secondary signer addresses\n      [receiverAuthenticator], // Secondary signer authenticators\n    );\n\n    const bcsTxn = bcsToBytes(new TxnBuilderTypes.SignedTransaction(rawTxn, multiAgentAuthenticator));\n\n    const transactionRes = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n\n    return transactionRes.hash;\n  }\n\n  /**\n   * User opt-in or out direct transfer through a boolean flag\n   *\n   * @param sender AptosAccount where the token will be transferred\n   * @param optIn boolean value indicates user want to opt-in or out of direct transfer\n   * @returns The hash of the transaction submitted to the API\n   */\n  async optInTokenTransfer(sender: AptosAccount, optIn: boolean, extraArgs?: OptionalTransactionArgs): Promise<string> {\n    const payload = this.transactionBuilder.buildTransactionPayload(\"0x3::token::opt_in_direct_transfer\", [], [optIn]);\n\n    return this.aptosClient.generateSignSubmitTransaction(sender, payload, extraArgs);\n  }\n\n  /**\n   * Directly transfer token to a receiver. The receiver should have opted in to direct transfer\n   *\n   * @param sender AptosAccount where the token will be transferred\n   * @param creator  address of the token creator\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap\n   * @param amount Amount of tokens which will be transfered\n   * @returns The hash of the transaction submitted to the API\n   */\n  async transferWithOptIn(\n    sender: AptosAccount,\n    creator: MaybeHexString,\n    collectionName: string,\n    tokenName: string,\n    propertyVersion: AnyNumber,\n    receiver: MaybeHexString,\n    amount: AnyNumber,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    // compile script to invoke public transfer function\n    const payload = new TransactionPayloadScript(\n      new Script(\n        new HexString(TOKEN_TRANSFER_OPT_IN).toUint8Array(),\n        [],\n        [\n          new TransactionArgumentAddress(TxnBuilderTypes.AccountAddress.fromHex(creator)),\n          new TransactionArgumentU8Vector(new TextEncoder().encode(collectionName)),\n          new TransactionArgumentU8Vector(new TextEncoder().encode(tokenName)),\n          new TransactionArgumentU64(BigInt(propertyVersion)),\n          new TransactionArgumentAddress(TxnBuilderTypes.AccountAddress.fromHex(receiver)),\n          new TransactionArgumentU64(BigInt(amount)),\n        ],\n      ),\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(sender, payload, extraArgs);\n  }\n\n  /**\n   * BurnToken by Creator\n   *\n   * @param creator creator of the token\n   * @param ownerAddress address of the token owner\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap\n   * @returns The hash of the transaction submitted to the API\n   */\n  async burnByCreator(\n    creator: AptosAccount,\n    ownerAddress: MaybeHexString,\n    collection: String,\n    name: String,\n    PropertyVersion: AnyNumber,\n    amount: AnyNumber,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token::burn_by_creator\",\n      [],\n      [ownerAddress, collection, name, PropertyVersion, amount],\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(creator, payload, extraArgs);\n  }\n\n  /**\n   * BurnToken by Owner\n   *\n   * @param owner creator of the token\n   * @param creatorAddress address of the token creator\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap\n   * @returns The hash of the transaction submitted to the API\n   */\n  async burnByOwner(\n    owner: AptosAccount,\n    creatorAddress: MaybeHexString,\n    collection: String,\n    name: String,\n    PropertyVersion: AnyNumber,\n    amount: AnyNumber,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token::burn\",\n      [],\n      [creatorAddress, collection, name, PropertyVersion, amount],\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(owner, payload, extraArgs);\n  }\n\n  /**\n   * creator mutates the properties of the tokens\n   *\n   * @param account AptosAccount who modifies the token properties\n   * @param tokenOwner the address of account owning the token\n   * @param creator the creator of the token\n   * @param collection_name the name of the token collection\n   * @param tokenName the name of created token\n   * @param propertyVersion the property_version of the token to be modified\n   * @param amount the number of tokens to be modified\n   *\n   * @returns The hash of the transaction submitted to the API\n   */\n  async mutateTokenProperties(\n    account: AptosAccount,\n    tokenOwner: HexString,\n    creator: HexString,\n    collection_name: string,\n    tokenName: string,\n    propertyVersion: AnyNumber,\n    amount: AnyNumber,\n    keys: Array<string>,\n    values: Array<Bytes>,\n    types: Array<string>,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const payload = this.transactionBuilder.buildTransactionPayload(\n      \"0x3::token::mutate_token_properties\",\n      [],\n      [tokenOwner, creator, collection_name, tokenName, propertyVersion, amount, keys, values, types],\n    );\n\n    return this.aptosClient.generateSignSubmitTransaction(account, payload, extraArgs);\n  }\n\n  /**\n   * Queries collection data\n   * @param creator Hex-encoded 32 byte Aptos account address which created a collection\n   * @param collectionName Collection name\n   * @returns Collection data in below format\n   * ```\n   *  Collection {\n   *    // Describes the collection\n   *    description: string,\n   *    // Unique name within this creators account for this collection\n   *    name: string,\n   *    // URL for additional information/media\n   *    uri: string,\n   *    // Total number of distinct Tokens tracked by the collection\n   *    count: number,\n   *    // Optional maximum number of tokens allowed within this collections\n   *    maximum: number\n   *  }\n   * ```\n   */\n  async getCollectionData(creator: MaybeHexString, collectionName: string): Promise<any> {\n    const resources = await this.aptosClient.getAccountResources(creator);\n    const accountResource: { type: Gen.MoveStructTag; data: any } = resources.find(\n      (r) => r.type === \"0x3::token::Collections\",\n    )!;\n    const { handle }: { handle: string } = accountResource.data.collection_data;\n    const getCollectionTableItemRequest: Gen.TableItemRequest = {\n      key_type: \"0x1::string::String\",\n      value_type: \"0x3::token::CollectionData\",\n      key: collectionName,\n    };\n\n    const collectionTable = await this.aptosClient.getTableItem(handle, getCollectionTableItemRequest);\n    return collectionTable;\n  }\n\n  /**\n   * Queries token data from collection\n   *\n   * @param creator Hex-encoded 32 byte Aptos account address which created a token\n   * @param collectionName Name of collection, which holds a token\n   * @param tokenName Token name\n   * @returns Token data in below format\n   * ```\n   * TokenData {\n   *     // Unique name within this creators account for this Token's collection\n   *     collection: string;\n   *     // Describes this Token\n   *     description: string;\n   *     // The name of this Token\n   *     name: string;\n   *     // Optional maximum number of this type of Token.\n   *     maximum: number;\n   *     // Total number of this type of Token\n   *     supply: number;\n   *     /// URL for additional information / media\n   *     uri: string;\n   *   }\n   * ```\n   */\n  // :!:>getTokenData\n  async getTokenData(\n    creator: MaybeHexString,\n    collectionName: string,\n    tokenName: string,\n  ): Promise<TokenTypes.TokenData> {\n    const creatorHex = creator instanceof HexString ? creator.hex() : creator;\n    const collection: { type: Gen.MoveStructTag; data: any } = await this.aptosClient.getAccountResource(\n      creatorHex,\n      \"0x3::token::Collections\",\n    );\n    const { handle } = collection.data.token_data;\n    const tokenDataId = {\n      creator: creatorHex,\n      collection: collectionName,\n      name: tokenName,\n    };\n\n    const getTokenTableItemRequest: Gen.TableItemRequest = {\n      key_type: \"0x3::token::TokenDataId\",\n      value_type: \"0x3::token::TokenData\",\n      key: tokenDataId,\n    };\n\n    // We know the response will be a struct containing TokenData, hence the\n    // implicit cast.\n    const rawTokenData = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n    return new TokenData(\n      rawTokenData.collection,\n      rawTokenData.description,\n      rawTokenData.name,\n      rawTokenData.maximum,\n      rawTokenData.supply,\n      rawTokenData.uri,\n      rawTokenData.default_properties,\n      rawTokenData.mutability_config,\n    );\n  } // <:!:getTokenData\n\n  /**\n   * Queries token balance for the token creator\n   */\n  async getToken(\n    creator: MaybeHexString,\n    collectionName: string,\n    tokenName: string,\n    property_version: string = \"0\",\n  ): Promise<TokenTypes.Token> {\n    const tokenDataId: TokenTypes.TokenDataId = {\n      creator: creator instanceof HexString ? creator.hex() : creator,\n      collection: collectionName,\n      name: tokenName,\n    };\n    return this.getTokenForAccount(creator, {\n      token_data_id: tokenDataId,\n      property_version,\n    });\n  }\n\n  /**\n   * Queries token balance for a token account\n   * @param account Hex-encoded 32 byte Aptos account address which created a token\n   * @param tokenId token id\n   *\n   * TODO: Update this:\n   * @example\n   * ```\n   * {\n   *   creator: '0x1',\n   *   collection: 'Some collection',\n   *   name: 'Awesome token'\n   * }\n   * ```\n   * @returns Token object in below format\n   * ```\n   * Token {\n   *   id: TokenId;\n   *   value: number;\n   * }\n   * ```\n   */\n  async getTokenForAccount(account: MaybeHexString, tokenId: TokenTypes.TokenId): Promise<TokenTypes.Token> {\n    const tokenStore: { type: Gen.MoveStructTag; data: any } = await this.aptosClient.getAccountResource(\n      account instanceof HexString ? account.hex() : account,\n      \"0x3::token::TokenStore\",\n    );\n    const { handle } = tokenStore.data.tokens;\n\n    const getTokenTableItemRequest: Gen.TableItemRequest = {\n      key_type: \"0x3::token::TokenId\",\n      value_type: \"0x3::token::Token\",\n      key: tokenId,\n    };\n\n    try {\n      const rawToken = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n      return new Token(rawToken.id, rawToken.amount, rawToken.token_properties);\n    } catch (error: any) {\n      if (error?.status === 404) {\n        return {\n          id: tokenId,\n          amount: \"0\",\n          token_properties: new PropertyMap(),\n        };\n      }\n      return error;\n    }\n  }\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","'use strict';\n\nconst asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","'use strict';\n\nconst encoders = require('./encoders');\nconst decoders = require('./decoders');\nconst inherits = require('inherits');\n\nconst api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n}\n\nEntity.prototype._createNamed = function createNamed(Base) {\n  const name = this.name;\n\n  function Generated(entity) {\n    this._initNamed(entity, name);\n  }\n  inherits(Generated, Base);\n  Generated.prototype._initNamed = function _initNamed(entity, name) {\n    Base.call(this, entity, name);\n  };\n\n  return new Generated(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","'use strict';\n\nconst inherits = require('inherits');\nconst Reporter = require('../base/reporter').Reporter;\nconst Buffer = require('safer-buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function';\n\n  return isCompatible;\n};\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!EncoderBuffer.isEncoderBuffer(item))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function';\n\n  return isCompatible;\n};\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = Buffer.alloc(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","'use strict';\n\nconst base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","'use strict';\n\nconst Reporter = require('../base/reporter').Reporter;\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst assert = require('minimalistic-assert');\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n\n  state.name = name;\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      const res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  let result = state['default'];\n  let present = true;\n\n  let prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any)\n        save = input.save();\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default'];\n    else\n      return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        const state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(\n      false,\n      data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n","'use strict';\n\nconst inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  const state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  const state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  const state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  const state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  const state = this._reporterState;\n\n  const prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  const state = this._reporterState;\n\n  const now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  let err;\n  const state = this._reporterState;\n\n  const inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  const state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n}\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","'use strict';\n\n// Helper\nfunction reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n}\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = reverse(exports.tag);\n","'use strict';\n\nconst constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst bignum = require('bn.js');\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options);\n  }\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  const state = buffer.save();\n  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer,\n    'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  let len = derDecodeLen(buffer,\n    decodedTag.primitive,\n    'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  const state = buffer.save();\n  const res = this._skipUntilEnd(\n    buffer,\n    'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    const len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    let res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len);\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n  options) {\n  const result = [];\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    const res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    let str = '';\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  let result;\n  const identifiers = [];\n  let ident = 0;\n  let subident = 0;\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  const first = (identifiers[0] / 40) | 0;\n  const second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    let tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  const str = buffer.raw().toString();\n\n  let year;\n  let mon;\n  let day;\n  let hour;\n  let min;\n  let sec;\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0;\n    mon = str.slice(4, 6) | 0;\n    day = str.slice(6, 8) | 0;\n    hour = str.slice(8, 10) | 0;\n    min = str.slice(10, 12) | 0;\n    sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0;\n    mon = str.slice(2, 4) | 0;\n    day = str.slice(4, 6) | 0;\n    hour = str.slice(6, 8) | 0;\n    min = str.slice(8, 10) | 0;\n    sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull() {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  const res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw();\n  let res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  let tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  const cls = der.tagClass[tag >> 6];\n  const primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  const tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  let len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  const num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","'use strict';\n\nconst decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\n\nconst DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1;\n  for (let i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s.]+/g);\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  let size = 0;\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    const numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = Buffer.from(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n    if (num.length === 0)\n      size++;\n\n    const out = Buffer.alloc(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0;\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  let size = 1;\n  for (let i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  const out = new Array(size);\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n  if (state['default'] === null)\n    return false;\n\n  const data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","'use strict';\n\nconst encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data);\n\n  const p = buf.toString('base64');\n  const out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (let i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('./internal/errors'),\n    _require$codes = _require.codes,\n    ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n    ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\n\nvar AssertionError = require('./internal/assert/assertion_error');\n\nvar _require2 = require('util/'),\n    inspect = _require2.inspect;\n\nvar _require$types = require('util/').types,\n    isPromise = _require$types.isPromise,\n    isRegExp = _require$types.isRegExp;\n\nvar objectAssign = Object.assign ? Object.assign : require('es6-object-assign').assign;\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\n\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n} // Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\n\n\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\n\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\n\nvar warned = false; // The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {}; // All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\n\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n\n    if (argsLen === 2) operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n\n  var err = new AssertionError(errArgs);\n\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n\n  throw err;\n}\n\nassert.fail = fail; // The AssertionError is defined in internal/error.\n\nassert.AssertionError = AssertionError;\n\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n} // Pure assertion tests whether a value is truthy, as determined\n// by !!value.\n\n\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\n\nassert.ok = ok; // The equality assertion tests shallow, coercive equality with ==.\n\n/* eslint-disable no-restricted-properties */\n\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n}; // The non-equality assertion tests for whether two objects are not\n// equal with !=.\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n}; // The equivalence assertion tests a deep equality relation.\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}; // The non-equivalence assertion tests for any deep inequality.\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nvar Comparison = function Comparison(obj, keys, actual) {\n  var _this = this;\n\n  _classCallCheck(this, Comparison);\n\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && obj[key].test(actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n};\n\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return expected.test(actual); // assert.doesNotThrow does not accept objects.\n\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    } // Handle primitives properly.\n\n\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n\n    var keys = Object.keys(expected); // Special handle errors to make sure the name and the message are compared\n    // as well.\n\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && expected[key].test(actual[key])) {\n        return;\n      }\n\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  } // Guard instanceof against arrow functions as they don't have a prototype.\n\n\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn(); // Fail in case no promise is returned.\n\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\n\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\n\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  throw actual;\n}\n\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\n\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\n\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\n\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\n\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    }); // Make sure we actually have a stack trace!\n\n    var origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift(); // Filter all frames existing in err.stack.\n\n      var tmp1 = newErr.stack.split('\\n');\n\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n\n    throw newErr;\n  }\n}; // Expose a strict only variant of assert\n\n\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _require = require('util/'),\n    inspect = _require.inspect;\n\nvar _require2 = require('../errors'),\n    ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n\n  while (count) {\n    str += str;\n    count--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n}; // Comparing short primitives should just show === / !== instead of using the\n// diff.\n\nvar kMaxShortLength = 10;\n\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\n\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = ''; // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  } // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n\n\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length; // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        } // Ignore the first characters.\n\n\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  } // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n\n\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  var maxLines = Math.max(actualLines.length, expectedLines.length); // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n'); // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n\n\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the expected line to the cache.\n\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++; // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the actual line to the result.\n\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++; // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i]; // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine); // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        } // Mark the current line as the last diverging one.\n\n\n        lastPos = i; // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2; // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = ''; // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    } // Inspected object to big (Show ~20 rows max)\n\n\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\n\nvar AssertionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AssertionError, _Error);\n\n  function AssertionError(options) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n\n    var message = options.message,\n        operator = options.operator,\n        stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n        expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, String(message)));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      } // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n\n\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, createErrDiff(actual, expected, operator)));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n'); // In case \"actual\" is an object, it should not be reference equal.\n\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        } // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n\n\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n\n          while (res.length > 27) {\n            res.pop();\n          }\n        } // Only print a single input.\n\n\n        if (res.length === 1) {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \" \").concat(res[0])));\n        } else {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\")));\n        }\n      } else {\n        var _res = inspectValue(actual);\n\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(_res).concat(other)));\n      }\n    }\n\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    } // Create error message including the error code in the name.\n\n\n    _this.stack; // Reset the name.\n\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: inspect.custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread({}, ctx, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n\n/* eslint node-core/alphabetize-errors: \"error\" */\n\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n'use strict'; // The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar codes = {}; // Lazy loaded\n\nvar assert;\nvar util;\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inherits(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, getMessage(arg1, arg2, arg3)));\n      _this.code = code;\n      return _this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\"); // determiner: 'must be' or 'must not be'\n\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } // TODO(BridgeAR): Improve the output by showing `null` and similar.\n\n\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar regexFlagsSupported = /a/g.flags !== undefined;\n\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\n\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\n\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\n\nvar _require$types = require('util/').types,\n    isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n    isArrayBufferView = _require$types.isArrayBufferView,\n    isDate = _require$types.isDate,\n    isMap = _require$types.isMap,\n    isRegExp = _require$types.isRegExp,\n    isSet = _require$types.isSet,\n    isNativeError = _require$types.isNativeError,\n    isBoxedPrimitive = _require$types.isBoxedPrimitive,\n    isNumberObject = _require$types.isNumberObject,\n    isStringObject = _require$types.isStringObject,\n    isBooleanObject = _require$types.isBooleanObject,\n    isBigIntObject = _require$types.isBigIntObject,\n    isSymbolObject = _require$types.isSymbolObject,\n    isFloat32Array = _require$types.isFloat32Array,\n    isFloat64Array = _require$types.isFloat64Array;\n\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  } // The maximum size for an array is 2 ** 32 -1.\n\n\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\n\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n} // Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3; // Check if they have the same source and flags\n\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\n\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\n\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\n\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n} // Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  } // Check more closely if val1 and val2 are equal.\n\n\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n\n      return false;\n    }\n\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  } // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n\n\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    } // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n\n\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\n\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\n\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2); // The pair must have the same number of owned properties.\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  } // Cheap key test\n\n\n  var i = 0;\n\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  } // Use memos to handle cycles.\n\n\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    memos.position++;\n  }\n\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\n\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n\n  return false;\n} // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\n\n\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n\n  }\n\n  return true;\n}\n\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\n\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  var curB = b.get(altValue);\n\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i]; // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      } // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n\n\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false; // Fast path to detect missing string, symbol, undefined and null values.\n\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(val);\n    }\n  }\n\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i]; // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n        key = _aEntries$i[0],\n        item1 = _aEntries$i[1];\n\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false; // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n\n        if (set === null) {\n          set = new Set();\n        }\n\n        set.add(key);\n      }\n    }\n  }\n\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n          key = _bEntries$_i[0],\n          item = _bEntries$_i[1];\n\n      if (_typeof(key) === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(key) || !innerDeepEqual(a.get(key), item, false, memo)) && !mapHasEqualEntry(set, a, key, item, false, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  } // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n\n\n  for (i = 0; i < keys.length; i++) {\n    var _key = keys[i];\n\n    if (!innerDeepEqual(a[_key], b[_key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\n\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\n\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar pkg = require('./../../package.json');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\nvar currentVerArr = pkg.version.split('.');\n\n/**\n * Compare package versions\n * @param {string} version\n * @param {string?} thanVersion\n * @returns {boolean}\n */\nfunction isOlderVersion(version, thanVersion) {\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\n  var destVer = version.split('.');\n  for (var i = 0; i < 3; i++) {\n    if (pkgVersionArr[i] > destVer[i]) {\n      return true;\n    } else if (pkgVersionArr[i] < destVer[i]) {\n      return false;\n    }\n  }\n  return false;\n}\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator\n * @param {string?} version\n * @param {string} message\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  var isDeprecated = version && isOlderVersion(version);\n\n  function formatMessage(opt, desc) {\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\n    }\n\n    if (isDeprecated && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  isOlderVersion: isOlderVersion,\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    return Buffer.from(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return Buffer.from(toBase64(base64url), \"base64\");\n}\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nexports.default = base64url;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction padString(input) {\n    var segmentLength = 4;\n    var stringLength = input.length;\n    var diff = stringLength % segmentLength;\n    if (!diff) {\n        return input;\n    }\n    var position = stringLength;\n    var padLength = segmentLength - diff;\n    var paddedStringLength = stringLength + padLength;\n    var buffer = Buffer.alloc(paddedStringLength);\n    buffer.write(input);\n    while (padLength--) {\n        buffer.write(\"=\", position++);\n    }\n    return buffer.toString();\n}\nexports.default = padString;\n","module.exports = require('./dist/base64url').default;\nmodule.exports.default = module.exports;\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","class Context {\n  code = \"\";\n  scopes = [[\"vars\"]];\n  bitFields: Parser[] = [];\n  tmpVariableCount = 0;\n  references = new Map<string, { resolved: boolean; requested: boolean }>();\n  importPath: string;\n  imports: any[] = [];\n  reverseImports = new Map<any, number>();\n  useContextVariables = false;\n\n  constructor(importPath: string, useContextVariables: boolean) {\n    this.importPath = importPath;\n    this.useContextVariables = useContextVariables;\n  }\n\n  generateVariable(name?: string): string {\n    const scopes = [...this.scopes[this.scopes.length - 1]];\n    if (name) {\n      scopes.push(name);\n    }\n\n    return scopes.join(\".\");\n  }\n\n  generateOption(val: number | string | Function): string {\n    switch (typeof val) {\n      case \"number\":\n        return val.toString();\n      case \"string\":\n        return this.generateVariable(val);\n      case \"function\":\n        return `${this.addImport(val)}.call(${this.generateVariable()}, vars)`;\n    }\n  }\n\n  generateError(err: string) {\n    this.pushCode(`throw new Error(${err});`);\n  }\n\n  generateTmpVariable(): string {\n    return \"$tmp\" + this.tmpVariableCount++;\n  }\n\n  pushCode(code: string) {\n    this.code += code + \"\\n\";\n  }\n\n  pushPath(name: string) {\n    if (name) {\n      this.scopes[this.scopes.length - 1].push(name);\n    }\n  }\n\n  popPath(name: string) {\n    if (name) {\n      this.scopes[this.scopes.length - 1].pop();\n    }\n  }\n\n  pushScope(name: string) {\n    this.scopes.push([name]);\n  }\n\n  popScope() {\n    this.scopes.pop();\n  }\n\n  addImport(im: any): string {\n    if (!this.importPath) return `(${im})`;\n    let id = this.reverseImports.get(im);\n    if (!id) {\n      id = this.imports.push(im) - 1;\n      this.reverseImports.set(im, id);\n    }\n    return `${this.importPath}[${id}]`;\n  }\n\n  addReference(alias: string) {\n    if (!this.references.has(alias)) {\n      this.references.set(alias, { resolved: false, requested: false });\n    }\n  }\n\n  markResolved(alias: string) {\n    const reference = this.references.get(alias);\n\n    if (reference) {\n      reference.resolved = true;\n    }\n  }\n\n  markRequested(aliasList: string[]) {\n    aliasList.forEach((alias) => {\n      const reference = this.references.get(alias);\n\n      if (reference) {\n        reference.requested = true;\n      }\n    });\n  }\n\n  getUnresolvedReferences(): string[] {\n    return Array.from(this.references)\n      .filter(([_, reference]) => !reference.resolved && !reference.requested)\n      .map(([alias, _]) => alias);\n  }\n}\n\nconst aliasRegistry = new Map<string, Parser>();\nconst FUNCTION_PREFIX = \"___parser_\";\n\ninterface ParserOptions {\n  length?: number | string | ((item: any) => number);\n  assert?: number | string | ((item: number | string) => boolean);\n  lengthInBytes?: number | string | ((item: any) => number);\n  type?: string | Parser;\n  formatter?: (item: any) => any;\n  encoding?: string;\n  readUntil?: \"eof\" | ((item: any, buffer: Buffer) => boolean);\n  greedy?: boolean;\n  choices?: { [key: number]: string | Parser };\n  defaultChoice?: string | Parser;\n  zeroTerminated?: boolean;\n  clone?: boolean;\n  stripNull?: boolean;\n  key?: string;\n  tag?: string | ((item: any) => number);\n  offset?: number | string | ((item: any) => number);\n  wrapper?: (buffer: Buffer) => Buffer;\n}\n\ntype Types = PrimitiveTypes | ComplexTypes;\n\ntype ComplexTypes =\n  | \"bit\"\n  | \"string\"\n  | \"buffer\"\n  | \"array\"\n  | \"choice\"\n  | \"nest\"\n  | \"seek\"\n  | \"pointer\"\n  | \"saveOffset\"\n  | \"wrapper\"\n  | \"\";\n\ntype Endianness = \"be\" | \"le\";\n\ntype PrimitiveTypes =\n  | \"uint8\"\n  | \"uint16le\"\n  | \"uint16be\"\n  | \"uint32le\"\n  | \"uint32be\"\n  | \"uint64le\"\n  | \"uint64be\"\n  | \"int8\"\n  | \"int16le\"\n  | \"int16be\"\n  | \"int32le\"\n  | \"int32be\"\n  | \"int64le\"\n  | \"int64be\"\n  | \"floatle\"\n  | \"floatbe\"\n  | \"doublele\"\n  | \"doublebe\";\n\ntype PrimitiveTypesWithoutEndian =\n  | \"uint8\"\n  | \"uint16\"\n  | \"uint32\"\n  | \"int8\"\n  | \"int16\"\n  | \"int32\"\n  | \"int64\"\n  | \"uint64\";\n\ntype BitSizes =\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25\n  | 26\n  | 27\n  | 28\n  | 29\n  | 30\n  | 31\n  | 32;\n\nconst PRIMITIVE_SIZES: { [key in PrimitiveTypes]: number } = {\n  uint8: 1,\n  uint16le: 2,\n  uint16be: 2,\n  uint32le: 4,\n  uint32be: 4,\n  int8: 1,\n  int16le: 2,\n  int16be: 2,\n  int32le: 4,\n  int32be: 4,\n  int64be: 8,\n  int64le: 8,\n  uint64be: 8,\n  uint64le: 8,\n  floatle: 4,\n  floatbe: 4,\n  doublele: 8,\n  doublebe: 8,\n};\n\nconst PRIMITIVE_NAMES: { [key in PrimitiveTypes]: string } = {\n  uint8: \"Uint8\",\n  uint16le: \"Uint16\",\n  uint16be: \"Uint16\",\n  uint32le: \"Uint32\",\n  uint32be: \"Uint32\",\n  int8: \"Int8\",\n  int16le: \"Int16\",\n  int16be: \"Int16\",\n  int32le: \"Int32\",\n  int32be: \"Int32\",\n  int64be: \"BigInt64\",\n  int64le: \"BigInt64\",\n  uint64be: \"BigUint64\",\n  uint64le: \"BigUint64\",\n  floatle: \"Float32\",\n  floatbe: \"Float32\",\n  doublele: \"Float64\",\n  doublebe: \"Float64\",\n};\n\nconst PRIMITIVE_LITTLE_ENDIANS: { [key in PrimitiveTypes]: boolean } = {\n  uint8: false,\n  uint16le: true,\n  uint16be: false,\n  uint32le: true,\n  uint32be: false,\n  int8: false,\n  int16le: true,\n  int16be: false,\n  int32le: true,\n  int32be: false,\n  int64be: false,\n  int64le: true,\n  uint64be: false,\n  uint64le: true,\n  floatle: true,\n  floatbe: false,\n  doublele: true,\n  doublebe: false,\n};\n\nexport class Parser {\n  varName = \"\";\n  type: Types = \"\";\n  options: ParserOptions = {};\n  next?: Parser;\n  head?: Parser;\n  compiled?: Function;\n  endian: Endianness = \"be\";\n  constructorFn?: Function;\n  alias?: string;\n  useContextVariables = false;\n\n  constructor() {}\n\n  static start() {\n    return new Parser();\n  }\n\n  private primitiveGenerateN(type: PrimitiveTypes, ctx: Context) {\n    const typeName = PRIMITIVE_NAMES[type];\n    const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n    ctx.pushCode(\n      `${ctx.generateVariable(\n        this.varName\n      )} = dataView.get${typeName}(offset, ${littleEndian});`\n    );\n    ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n  }\n\n  private primitiveN(\n    type: PrimitiveTypes,\n    varName: string,\n    options: ParserOptions\n  ): this {\n    return this.setNextParser(type as Types, varName, options);\n  }\n\n  private useThisEndian(type: PrimitiveTypesWithoutEndian): PrimitiveTypes {\n    return (type + this.endian.toLowerCase()) as PrimitiveTypes;\n  }\n\n  uint8(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"uint8\", varName, options);\n  }\n\n  uint16(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(this.useThisEndian(\"uint16\"), varName, options);\n  }\n\n  uint16le(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"uint16le\", varName, options);\n  }\n\n  uint16be(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"uint16be\", varName, options);\n  }\n\n  uint32(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(this.useThisEndian(\"uint32\"), varName, options);\n  }\n\n  uint32le(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"uint32le\", varName, options);\n  }\n\n  uint32be(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"uint32be\", varName, options);\n  }\n\n  int8(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"int8\", varName, options);\n  }\n\n  int16(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(this.useThisEndian(\"int16\"), varName, options);\n  }\n\n  int16le(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"int16le\", varName, options);\n  }\n\n  int16be(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"int16be\", varName, options);\n  }\n\n  int32(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(this.useThisEndian(\"int32\"), varName, options);\n  }\n\n  int32le(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"int32le\", varName, options);\n  }\n\n  int32be(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"int32be\", varName, options);\n  }\n\n  private bigIntVersionCheck() {\n    if (!DataView.prototype.getBigInt64)\n      throw new Error(\"BigInt64 is unsupported on this runtime\");\n  }\n\n  int64(varName: string, options: ParserOptions = {}): this {\n    this.bigIntVersionCheck();\n    return this.primitiveN(this.useThisEndian(\"int64\"), varName, options);\n  }\n\n  int64be(varName: string, options: ParserOptions = {}): this {\n    this.bigIntVersionCheck();\n    return this.primitiveN(\"int64be\", varName, options);\n  }\n\n  int64le(varName: string, options: ParserOptions = {}): this {\n    this.bigIntVersionCheck();\n    return this.primitiveN(\"int64le\", varName, options);\n  }\n\n  uint64(varName: string, options: ParserOptions = {}): this {\n    this.bigIntVersionCheck();\n    return this.primitiveN(this.useThisEndian(\"uint64\"), varName, options);\n  }\n\n  uint64be(varName: string, options: ParserOptions = {}): this {\n    this.bigIntVersionCheck();\n    return this.primitiveN(\"uint64be\", varName, options);\n  }\n\n  uint64le(varName: string, options: ParserOptions = {}): this {\n    this.bigIntVersionCheck();\n    return this.primitiveN(\"uint64le\", varName, options);\n  }\n\n  floatle(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"floatle\", varName, options);\n  }\n\n  floatbe(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"floatbe\", varName, options);\n  }\n\n  doublele(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"doublele\", varName, options);\n  }\n\n  doublebe(varName: string, options: ParserOptions = {}): this {\n    return this.primitiveN(\"doublebe\", varName, options);\n  }\n\n  private bitN(size: BitSizes, varName: string, options: ParserOptions): this {\n    options.length = size;\n    return this.setNextParser(\"bit\", varName, options);\n  }\n\n  bit1(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(1, varName, options);\n  }\n\n  bit2(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(2, varName, options);\n  }\n\n  bit3(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(3, varName, options);\n  }\n\n  bit4(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(4, varName, options);\n  }\n\n  bit5(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(5, varName, options);\n  }\n\n  bit6(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(6, varName, options);\n  }\n\n  bit7(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(7, varName, options);\n  }\n\n  bit8(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(8, varName, options);\n  }\n\n  bit9(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(9, varName, options);\n  }\n\n  bit10(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(10, varName, options);\n  }\n\n  bit11(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(11, varName, options);\n  }\n\n  bit12(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(12, varName, options);\n  }\n\n  bit13(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(13, varName, options);\n  }\n\n  bit14(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(14, varName, options);\n  }\n\n  bit15(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(15, varName, options);\n  }\n\n  bit16(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(16, varName, options);\n  }\n\n  bit17(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(17, varName, options);\n  }\n\n  bit18(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(18, varName, options);\n  }\n\n  bit19(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(19, varName, options);\n  }\n\n  bit20(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(20, varName, options);\n  }\n\n  bit21(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(21, varName, options);\n  }\n\n  bit22(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(22, varName, options);\n  }\n\n  bit23(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(23, varName, options);\n  }\n\n  bit24(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(24, varName, options);\n  }\n\n  bit25(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(25, varName, options);\n  }\n\n  bit26(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(26, varName, options);\n  }\n\n  bit27(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(27, varName, options);\n  }\n\n  bit28(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(28, varName, options);\n  }\n\n  bit29(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(29, varName, options);\n  }\n\n  bit30(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(30, varName, options);\n  }\n\n  bit31(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(31, varName, options);\n  }\n\n  bit32(varName: string, options: ParserOptions = {}): this {\n    return this.bitN(32, varName, options);\n  }\n\n  namely(alias: string): this {\n    aliasRegistry.set(alias, this);\n    this.alias = alias;\n    return this;\n  }\n\n  skip(length: ParserOptions[\"length\"], options: ParserOptions = {}): this {\n    return this.seek(length, options);\n  }\n\n  seek(relOffset: ParserOptions[\"length\"], options: ParserOptions = {}): this {\n    if (options.assert) {\n      throw new Error(\"assert option on seek is not allowed.\");\n    }\n\n    return this.setNextParser(\"seek\", \"\", { length: relOffset });\n  }\n\n  string(varName: string, options: ParserOptions): this {\n    if (!options.zeroTerminated && !options.length && !options.greedy) {\n      throw new Error(\n        \"One of length, zeroTerminated, or greedy must be defined for string.\"\n      );\n    }\n\n    if ((options.zeroTerminated || options.length) && options.greedy) {\n      throw new Error(\n        \"greedy is mutually exclusive with length and zeroTerminated for string.\"\n      );\n    }\n\n    if (options.stripNull && !(options.length || options.greedy)) {\n      throw new Error(\n        \"length or greedy must be defined if stripNull is enabled.\"\n      );\n    }\n\n    options.encoding = options.encoding || \"utf8\";\n\n    return this.setNextParser(\"string\", varName, options);\n  }\n\n  buffer(varName: string, options: ParserOptions): this {\n    if (!options.length && !options.readUntil) {\n      throw new Error(\"length or readUntil must be defined for buffer.\");\n    }\n\n    return this.setNextParser(\"buffer\", varName, options);\n  }\n\n  wrapped(varName: string | ParserOptions, options?: ParserOptions): this {\n    if (typeof options !== \"object\" && typeof varName === \"object\") {\n      options = varName;\n      varName = \"\";\n    }\n\n    if (!options || !options.wrapper || !options.type) {\n      throw new Error(\"Both wrapper and type must be defined for wrapped.\");\n    }\n\n    if (!options.length && !options.readUntil) {\n      throw new Error(\"length or readUntil must be defined for wrapped.\");\n    }\n\n    return this.setNextParser(\"wrapper\", varName as string, options);\n  }\n\n  array(varName: string, options: ParserOptions): this {\n    if (!options.readUntil && !options.length && !options.lengthInBytes) {\n      throw new Error(\n        \"One of readUntil, length and lengthInBytes must be defined for array.\"\n      );\n    }\n\n    if (!options.type) {\n      throw new Error(\"type is required for array.\");\n    }\n\n    if (\n      typeof options.type === \"string\" &&\n      !aliasRegistry.has(options.type) &&\n      !(options.type in PRIMITIVE_SIZES)\n    ) {\n      throw new Error(`Array element type \"${options.type}\" is unkown.`);\n    }\n\n    return this.setNextParser(\"array\", varName, options);\n  }\n\n  choice(varName: string | ParserOptions, options?: ParserOptions): this {\n    if (typeof options !== \"object\" && typeof varName === \"object\") {\n      options = varName;\n      varName = \"\";\n    }\n\n    if (!options) {\n      throw new Error(\"tag and choices are are required for choice.\");\n    }\n\n    if (!options.tag) {\n      throw new Error(\"tag is requird for choice.\");\n    }\n\n    if (!options.choices) {\n      throw new Error(\"choices is required for choice.\");\n    }\n\n    for (const keyString in options.choices) {\n      const key = parseInt(keyString, 10);\n      const value = options.choices[key];\n\n      if (isNaN(key)) {\n        throw new Error(`Choice key \"${keyString}\" is not a number.`);\n      }\n\n      if (\n        typeof value === \"string\" &&\n        !aliasRegistry.has(value) &&\n        !((value as string) in PRIMITIVE_SIZES)\n      ) {\n        throw new Error(`Choice type \"${value}\" is unkown.`);\n      }\n    }\n\n    return this.setNextParser(\"choice\", varName as string, options);\n  }\n\n  nest(varName: string | ParserOptions, options?: ParserOptions): this {\n    if (typeof options !== \"object\" && typeof varName === \"object\") {\n      options = varName;\n      varName = \"\";\n    }\n\n    if (!options || !options.type) {\n      throw new Error(\"type is required for nest.\");\n    }\n\n    if (!(options.type instanceof Parser) && !aliasRegistry.has(options.type)) {\n      throw new Error(\"type must be a known parser name or a Parser object.\");\n    }\n\n    if (!(options.type instanceof Parser) && !varName) {\n      throw new Error(\n        \"type must be a Parser object if the variable name is omitted.\"\n      );\n    }\n\n    return this.setNextParser(\"nest\", varName as string, options);\n  }\n\n  pointer(varName: string, options: ParserOptions): this {\n    if (!options.offset) {\n      throw new Error(\"offset is required for pointer.\");\n    }\n\n    if (!options.type) {\n      throw new Error(\"type is required for pointer.\");\n    }\n\n    if (\n      typeof options.type === \"string\" &&\n      !(options.type in PRIMITIVE_SIZES) &&\n      !aliasRegistry.has(options.type)\n    ) {\n      throw new Error(`Pointer type \"${options.type}\" is unkown.`);\n    }\n\n    return this.setNextParser(\"pointer\", varName, options);\n  }\n\n  saveOffset(varName: string, options: ParserOptions = {}): this {\n    return this.setNextParser(\"saveOffset\", varName, options);\n  }\n\n  endianness(endianness: \"little\" | \"big\"): this {\n    switch (endianness.toLowerCase()) {\n      case \"little\":\n        this.endian = \"le\";\n        break;\n      case \"big\":\n        this.endian = \"be\";\n        break;\n      default:\n        throw new Error('endianness must be one of \"little\" or \"big\"');\n    }\n\n    return this;\n  }\n\n  endianess(endianess: \"little\" | \"big\"): this {\n    return this.endianness(endianess);\n  }\n\n  useContextVars(useContextVariables = true): this {\n    this.useContextVariables = useContextVariables;\n\n    return this;\n  }\n\n  create(constructorFn: Function): this {\n    if (!(constructorFn instanceof Function)) {\n      throw new Error(\"Constructor must be a Function object.\");\n    }\n\n    this.constructorFn = constructorFn;\n\n    return this;\n  }\n\n  private getContext(importPath: string): Context {\n    const ctx = new Context(importPath, this.useContextVariables);\n\n    ctx.pushCode(\n      \"var dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);\"\n    );\n\n    if (!this.alias) {\n      this.addRawCode(ctx);\n    } else {\n      this.addAliasedCode(ctx);\n      ctx.pushCode(`return ${FUNCTION_PREFIX + this.alias}(0).result;`);\n    }\n\n    return ctx;\n  }\n\n  getCode(): string {\n    const importPath = \"imports\";\n    return this.getContext(importPath).code;\n  }\n\n  private addRawCode(ctx: Context) {\n    ctx.pushCode(\"var offset = 0;\");\n    ctx.pushCode(\n      `var vars = ${this.constructorFn ? \"new constructorFn()\" : \"{}\"};`\n    );\n\n    ctx.pushCode(\"vars.$parent = null;\");\n    ctx.pushCode(\"vars.$root = vars;\");\n\n    this.generate(ctx);\n    this.resolveReferences(ctx);\n\n    ctx.pushCode(\"delete vars.$parent;\");\n    ctx.pushCode(\"delete vars.$root;\");\n\n    ctx.pushCode(\"return vars;\");\n  }\n\n  private addAliasedCode(ctx: Context) {\n    ctx.pushCode(`function ${FUNCTION_PREFIX + this.alias}(offset, context) {`);\n    ctx.pushCode(\n      `var vars = ${this.constructorFn ? \"new constructorFn()\" : \"{}\"};`\n    );\n    ctx.pushCode(\n      \"var ctx = Object.assign({$parent: null, $root: vars}, context || {});\"\n    );\n    ctx.pushCode(`vars = Object.assign(vars, ctx);`);\n\n    this.generate(ctx);\n\n    ctx.markResolved(this.alias!);\n    this.resolveReferences(ctx);\n\n    ctx.pushCode(\n      \"Object.keys(ctx).forEach(function (item) { delete vars[item]; });\"\n    );\n    ctx.pushCode(\"return { offset: offset, result: vars };\");\n    ctx.pushCode(\"}\");\n\n    return ctx;\n  }\n\n  private resolveReferences(ctx: Context) {\n    const references = ctx.getUnresolvedReferences();\n    ctx.markRequested(references);\n    references.forEach((alias) => {\n      aliasRegistry.get(alias)?.addAliasedCode(ctx);\n    });\n  }\n\n  compile() {\n    const importPath = \"imports\";\n    const ctx = this.getContext(importPath);\n    this.compiled = new Function(\n      importPath,\n      \"TextDecoder\",\n      `return function (buffer, constructorFn) { ${ctx.code} };`\n    )(ctx.imports, TextDecoder);\n  }\n\n  sizeOf(): number {\n    let size = NaN;\n\n    if (Object.keys(PRIMITIVE_SIZES).indexOf(this.type) >= 0) {\n      size = PRIMITIVE_SIZES[this.type as PrimitiveTypes];\n\n      // if this is a fixed length string\n    } else if (\n      this.type === \"string\" &&\n      typeof this.options.length === \"number\"\n    ) {\n      size = this.options.length;\n\n      // if this is a fixed length buffer\n    } else if (\n      this.type === \"buffer\" &&\n      typeof this.options.length === \"number\"\n    ) {\n      size = this.options.length;\n\n      // if this is a fixed length array\n    } else if (\n      this.type === \"array\" &&\n      typeof this.options.length === \"number\"\n    ) {\n      let elementSize = NaN;\n      if (typeof this.options.type === \"string\") {\n        elementSize = PRIMITIVE_SIZES[this.options.type as PrimitiveTypes];\n      } else if (this.options.type instanceof Parser) {\n        elementSize = this.options.type.sizeOf();\n      }\n      size = this.options.length * elementSize;\n\n      // if this a skip\n    } else if (this.type === \"seek\") {\n      size = this.options.length as number;\n\n      // if this is a nested parser\n    } else if (this.type === \"nest\") {\n      size = (this.options.type as Parser).sizeOf();\n    } else if (!this.type) {\n      size = 0;\n    }\n\n    if (this.next) {\n      size += this.next.sizeOf();\n    }\n\n    return size;\n  }\n\n  // Follow the parser chain till the root and start parsing from there\n  parse(buffer: Buffer | Uint8Array) {\n    if (!this.compiled) {\n      this.compile();\n    }\n\n    return this.compiled!(buffer, this.constructorFn);\n  }\n\n  private setNextParser(\n    type: Types,\n    varName: string,\n    options: ParserOptions\n  ): this {\n    const parser = new Parser();\n\n    parser.type = type;\n    parser.varName = varName;\n    parser.options = options;\n    parser.endian = this.endian;\n\n    if (this.head) {\n      this.head.next = parser;\n    } else {\n      this.next = parser;\n    }\n    this.head = parser;\n\n    return this;\n  }\n\n  // Call code generator for this parser\n  private generate(ctx: Context) {\n    if (this.type) {\n      switch (this.type) {\n        case \"uint8\":\n        case \"uint16le\":\n        case \"uint16be\":\n        case \"uint32le\":\n        case \"uint32be\":\n        case \"int8\":\n        case \"int16le\":\n        case \"int16be\":\n        case \"int32le\":\n        case \"int32be\":\n        case \"int64be\":\n        case \"int64le\":\n        case \"uint64be\":\n        case \"uint64le\":\n        case \"floatle\":\n        case \"floatbe\":\n        case \"doublele\":\n        case \"doublebe\":\n          this.primitiveGenerateN(this.type, ctx);\n          break;\n        case \"bit\":\n          this.generateBit(ctx);\n          break;\n        case \"string\":\n          this.generateString(ctx);\n          break;\n        case \"buffer\":\n          this.generateBuffer(ctx);\n          break;\n        case \"seek\":\n          this.generateSeek(ctx);\n          break;\n        case \"nest\":\n          this.generateNest(ctx);\n          break;\n        case \"array\":\n          this.generateArray(ctx);\n          break;\n        case \"choice\":\n          this.generateChoice(ctx);\n          break;\n        case \"pointer\":\n          this.generatePointer(ctx);\n          break;\n        case \"saveOffset\":\n          this.generateSaveOffset(ctx);\n          break;\n        case \"wrapper\":\n          this.generateWrapper(ctx);\n          break;\n      }\n      if (this.type !== \"bit\") this.generateAssert(ctx);\n    }\n\n    const varName = ctx.generateVariable(this.varName);\n    if (this.options.formatter && this.type !== \"bit\") {\n      this.generateFormatter(ctx, varName, this.options.formatter);\n    }\n\n    return this.generateNext(ctx);\n  }\n\n  private generateAssert(ctx: Context) {\n    if (!this.options.assert) {\n      return;\n    }\n\n    const varName = ctx.generateVariable(this.varName);\n\n    switch (typeof this.options.assert) {\n      case \"function\":\n        {\n          const func = ctx.addImport(this.options.assert);\n          ctx.pushCode(`if (!${func}.call(vars, ${varName})) {`);\n        }\n        break;\n      case \"number\":\n        ctx.pushCode(`if (${this.options.assert} !== ${varName}) {`);\n        break;\n      case \"string\":\n        ctx.pushCode(\n          `if (${JSON.stringify(this.options.assert)} !== ${varName}) {`\n        );\n        break;\n      default:\n        throw new Error(\n          \"assert option must be a string, number or a function.\"\n        );\n    }\n    ctx.generateError(\n      `\"Assertion error: ${varName} is \" + ${JSON.stringify(\n        this.options.assert.toString()\n      )}`\n    );\n    ctx.pushCode(\"}\");\n  }\n\n  // Recursively call code generators and append results\n  private generateNext(ctx: Context): Context {\n    if (this.next) {\n      ctx = this.next.generate(ctx);\n    }\n\n    return ctx;\n  }\n\n  private generateBit(ctx: Context) {\n    // TODO find better method to handle nested bit fields\n    const parser = JSON.parse(JSON.stringify(this));\n    parser.options = this.options;\n    parser.generateAssert = this.generateAssert.bind(this);\n    parser.generateFormatter = this.generateFormatter.bind(this);\n    parser.varName = ctx.generateVariable(parser.varName);\n    ctx.bitFields.push(parser);\n\n    if (\n      !this.next ||\n      (this.next && [\"bit\", \"nest\"].indexOf(this.next.type) < 0)\n    ) {\n      const val = ctx.generateTmpVariable();\n\n      ctx.pushCode(`var ${val} = 0;`);\n\n      const getMaxBits = (from = 0) => {\n        let sum = 0;\n        for (let i = from; i < ctx.bitFields.length; i++) {\n          const length = ctx.bitFields[i].options.length as number;\n          if (sum + length > 32) break;\n          sum += length;\n        }\n        return sum;\n      };\n\n      const getBytes = (sum: number) => {\n        if (sum <= 8) {\n          ctx.pushCode(`${val} = dataView.getUint8(offset);`);\n          sum = 8;\n        } else if (sum <= 16) {\n          ctx.pushCode(`${val} = dataView.getUint16(offset);`);\n          sum = 16;\n        } else if (sum <= 24) {\n          ctx.pushCode(\n            `${val} = (dataView.getUint16(offset) << 8) | dataView.getUint8(offset + 2);`\n          );\n          sum = 24;\n        } else {\n          ctx.pushCode(`${val} = dataView.getUint32(offset);`);\n          sum = 32;\n        }\n        ctx.pushCode(`offset += ${sum / 8};`);\n        return sum;\n      };\n\n      let bitOffset = 0;\n      const isBigEndian = this.endian === \"be\";\n\n      let sum = 0;\n      let rem = 0;\n\n      ctx.bitFields.forEach((parser, i) => {\n        let length = parser.options.length as number;\n        if (length > rem) {\n          if (rem) {\n            const mask = -1 >>> (32 - rem);\n            ctx.pushCode(\n              `${parser.varName} = (${val} & 0x${mask.toString(16)}) << ${\n                length - rem\n              };`\n            );\n            length -= rem;\n          }\n          bitOffset = 0;\n          rem = sum = getBytes(getMaxBits(i) - rem);\n        }\n        const offset = isBigEndian ? sum - bitOffset - length : bitOffset;\n        const mask = -1 >>> (32 - length);\n\n        ctx.pushCode(\n          `${parser.varName} ${\n            length < (parser.options.length as number) ? \"|=\" : \"=\"\n          } ${val} >> ${offset} & 0x${mask.toString(16)};`\n        );\n\n        // Ensure value is unsigned\n        if ((parser.options.length as number) === 32) {\n          ctx.pushCode(`${parser.varName} >>>= 0`);\n        }\n\n        if (parser.options.assert) {\n          parser.generateAssert(ctx);\n        }\n\n        if (parser.options.formatter) {\n          parser.generateFormatter(\n            ctx,\n            parser.varName,\n            parser.options.formatter\n          );\n        }\n\n        bitOffset += length;\n        rem -= length;\n      });\n\n      ctx.bitFields = [];\n    }\n  }\n\n  private generateSeek(ctx: Context) {\n    const length = ctx.generateOption(this.options.length!);\n    ctx.pushCode(`offset += ${length};`);\n  }\n\n  private generateString(ctx: Context) {\n    const name = ctx.generateVariable(this.varName);\n    const start = ctx.generateTmpVariable();\n    const encoding = this.options.encoding!;\n    const isHex = encoding.toLowerCase() === \"hex\";\n    const toHex = 'b => b.toString(16).padStart(2, \"0\")';\n\n    if (this.options.length && this.options.zeroTerminated) {\n      const len = this.options.length;\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(\n        `while(dataView.getUint8(offset++) !== 0 && offset - ${start} < ${len});`\n      );\n      const end = `offset - ${start} < ${len} ? offset - 1 : offset`;\n      ctx.pushCode(\n        isHex\n          ? `${name} = Array.from(buffer.subarray(${start}, ${end}), ${toHex}).join('');`\n          : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, ${end}));`\n      );\n    } else if (this.options.length) {\n      const len = ctx.generateOption(this.options.length);\n      ctx.pushCode(\n        isHex\n          ? `${name} = Array.from(buffer.subarray(offset, offset + ${len}), ${toHex}).join('');`\n          : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(offset, offset + ${len}));`\n      );\n      ctx.pushCode(`offset += ${len};`);\n    } else if (this.options.zeroTerminated) {\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(\"while(dataView.getUint8(offset++) !== 0);\");\n      ctx.pushCode(\n        isHex\n          ? `${name} = Array.from(buffer.subarray(${start}, offset - 1), ${toHex}).join('');`\n          : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset - 1));`\n      );\n    } else if (this.options.greedy) {\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(\"while(buffer.length > offset++);\");\n      ctx.pushCode(\n        isHex\n          ? `${name} = Array.from(buffer.subarray(${start}, offset), ${toHex}).join('');`\n          : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset));`\n      );\n    }\n    if (this.options.stripNull) {\n      ctx.pushCode(`${name} = ${name}.replace(/\\\\x00+$/g, '')`);\n    }\n  }\n\n  private generateBuffer(ctx: Context) {\n    const varName = ctx.generateVariable(this.varName);\n\n    if (typeof this.options.readUntil === \"function\") {\n      const pred = this.options.readUntil;\n      const start = ctx.generateTmpVariable();\n      const cur = ctx.generateTmpVariable();\n\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(`var ${cur} = 0;`);\n      ctx.pushCode(`while (offset < buffer.length) {`);\n      ctx.pushCode(`${cur} = dataView.getUint8(offset);`);\n      const func = ctx.addImport(pred);\n      ctx.pushCode(\n        `if (${func}.call(${ctx.generateVariable()}, ${cur}, buffer.subarray(offset))) break;`\n      );\n      ctx.pushCode(`offset += 1;`);\n      ctx.pushCode(`}`);\n      ctx.pushCode(`${varName} = buffer.subarray(${start}, offset);`);\n    } else if (this.options.readUntil === \"eof\") {\n      ctx.pushCode(`${varName} = buffer.subarray(offset);`);\n    } else {\n      const len = ctx.generateOption(this.options.length!);\n\n      ctx.pushCode(`${varName} = buffer.subarray(offset, offset + ${len});`);\n      ctx.pushCode(`offset += ${len};`);\n    }\n\n    if (this.options.clone) {\n      ctx.pushCode(`${varName} = buffer.constructor.from(${varName});`);\n    }\n  }\n\n  private generateArray(ctx: Context) {\n    const length = ctx.generateOption(this.options.length!);\n    const lengthInBytes = ctx.generateOption(this.options.lengthInBytes!);\n    const type = this.options.type;\n    const counter = ctx.generateTmpVariable();\n    const lhs = ctx.generateVariable(this.varName);\n    const item = ctx.generateTmpVariable();\n    const key = this.options.key;\n    const isHash = typeof key === \"string\";\n\n    if (isHash) {\n      ctx.pushCode(`${lhs} = {};`);\n    } else {\n      ctx.pushCode(`${lhs} = [];`);\n    }\n    if (typeof this.options.readUntil === \"function\") {\n      ctx.pushCode(\"do {\");\n    } else if (this.options.readUntil === \"eof\") {\n      ctx.pushCode(\n        `for (var ${counter} = 0; offset < buffer.length; ${counter}++) {`\n      );\n    } else if (lengthInBytes !== undefined) {\n      ctx.pushCode(\n        `for (var ${counter} = offset + ${lengthInBytes}; offset < ${counter}; ) {`\n      );\n    } else {\n      ctx.pushCode(\n        `for (var ${counter} = ${length}; ${counter} > 0; ${counter}--) {`\n      );\n    }\n\n    if (typeof type === \"string\") {\n      if (!aliasRegistry.get(type)) {\n        const typeName = PRIMITIVE_NAMES[type as PrimitiveTypes];\n        const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type as PrimitiveTypes];\n        ctx.pushCode(\n          `var ${item} = dataView.get${typeName}(offset, ${littleEndian});`\n        );\n        ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type as PrimitiveTypes]};`);\n      } else {\n        const tempVar = ctx.generateTmpVariable();\n        ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset, {`);\n        if (ctx.useContextVariables) {\n          const parentVar = ctx.generateVariable();\n          ctx.pushCode(`$parent: ${parentVar},`);\n          ctx.pushCode(`$root: ${parentVar}.$root,`);\n          if (!this.options.readUntil && lengthInBytes === undefined) {\n            ctx.pushCode(`$index: ${length} - ${counter},`);\n          }\n        }\n        ctx.pushCode(`});`);\n        ctx.pushCode(\n          `var ${item} = ${tempVar}.result; offset = ${tempVar}.offset;`\n        );\n        if (type !== this.alias) ctx.addReference(type);\n      }\n    } else if (type instanceof Parser) {\n      ctx.pushCode(`var ${item} = {};`);\n      const parentVar = ctx.generateVariable();\n      ctx.pushScope(item);\n\n      if (ctx.useContextVariables) {\n        ctx.pushCode(`${item}.$parent = ${parentVar};`);\n        ctx.pushCode(`${item}.$root = ${parentVar}.$root;`);\n        if (!this.options.readUntil && lengthInBytes === undefined) {\n          ctx.pushCode(`${item}.$index = ${length} - ${counter};`);\n        }\n      }\n\n      type.generate(ctx);\n\n      if (ctx.useContextVariables) {\n        ctx.pushCode(`delete ${item}.$parent;`);\n        ctx.pushCode(`delete ${item}.$root;`);\n        ctx.pushCode(`delete ${item}.$index;`);\n      }\n      ctx.popScope();\n    }\n\n    if (isHash) {\n      ctx.pushCode(`${lhs}[${item}.${key}] = ${item};`);\n    } else {\n      ctx.pushCode(`${lhs}.push(${item});`);\n    }\n\n    ctx.pushCode(\"}\");\n\n    if (typeof this.options.readUntil === \"function\") {\n      const pred = this.options.readUntil;\n      const func = ctx.addImport(pred);\n      ctx.pushCode(\n        `while (!${func}.call(${ctx.generateVariable()}, ${item}, buffer.subarray(offset)));`\n      );\n    }\n  }\n\n  private generateChoiceCase(\n    ctx: Context,\n    varName: string,\n    type: string | Parser\n  ) {\n    if (typeof type === \"string\") {\n      const varName = ctx.generateVariable(this.varName);\n      if (!aliasRegistry.has(type)) {\n        const typeName = PRIMITIVE_NAMES[type as PrimitiveTypes];\n        const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type as PrimitiveTypes];\n        ctx.pushCode(\n          `${varName} = dataView.get${typeName}(offset, ${littleEndian});`\n        );\n        ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type as PrimitiveTypes]}`);\n      } else {\n        const tempVar = ctx.generateTmpVariable();\n        ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset, {`);\n        if (ctx.useContextVariables) {\n          ctx.pushCode(`$parent: ${varName}.$parent,`);\n          ctx.pushCode(`$root: ${varName}.$root,`);\n        }\n        ctx.pushCode(`});`);\n        ctx.pushCode(\n          `${varName} = ${tempVar}.result; offset = ${tempVar}.offset;`\n        );\n        if (type !== this.alias) ctx.addReference(type);\n      }\n    } else if (type instanceof Parser) {\n      ctx.pushPath(varName);\n      type.generate(ctx);\n      ctx.popPath(varName);\n    }\n  }\n\n  private generateChoice(ctx: Context) {\n    const tag = ctx.generateOption(this.options.tag!);\n    const nestVar = ctx.generateVariable(this.varName);\n\n    if (this.varName) {\n      ctx.pushCode(`${nestVar} = {};`);\n\n      if (ctx.useContextVariables) {\n        const parentVar = ctx.generateVariable();\n        ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n        ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n      }\n    }\n    ctx.pushCode(`switch(${tag}) {`);\n    for (const tagString in this.options.choices) {\n      const tag = parseInt(tagString, 10);\n      const type = this.options.choices[tag];\n\n      ctx.pushCode(`case ${tag}:`);\n      this.generateChoiceCase(ctx, this.varName, type);\n      ctx.pushCode(\"break;\");\n    }\n    ctx.pushCode(\"default:\");\n    if (this.options.defaultChoice) {\n      this.generateChoiceCase(ctx, this.varName, this.options.defaultChoice);\n    } else {\n      ctx.generateError(`\"Met undefined tag value \" + ${tag} + \" at choice\"`);\n    }\n    ctx.pushCode(\"}\");\n\n    if (this.varName && ctx.useContextVariables) {\n      ctx.pushCode(`delete ${nestVar}.$parent;`);\n      ctx.pushCode(`delete ${nestVar}.$root;`);\n    }\n  }\n\n  private generateNest(ctx: Context) {\n    const nestVar = ctx.generateVariable(this.varName);\n\n    if (this.options.type instanceof Parser) {\n      if (this.varName) {\n        ctx.pushCode(`${nestVar} = {};`);\n\n        if (ctx.useContextVariables) {\n          const parentVar = ctx.generateVariable();\n          ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n          ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n        }\n      }\n\n      ctx.pushPath(this.varName);\n      this.options.type.generate(ctx);\n      ctx.popPath(this.varName);\n\n      if (this.varName && ctx.useContextVariables) {\n        if (ctx.useContextVariables) {\n          ctx.pushCode(`delete ${nestVar}.$parent;`);\n          ctx.pushCode(`delete ${nestVar}.$root;`);\n        }\n      }\n    } else if (aliasRegistry.has(this.options.type!)) {\n      const tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(\n        `var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset, {`\n      );\n      if (ctx.useContextVariables) {\n        const parentVar = ctx.generateVariable();\n        ctx.pushCode(`$parent: ${parentVar},`);\n        ctx.pushCode(`$root: ${parentVar}.$root,`);\n      }\n      ctx.pushCode(`});`);\n      ctx.pushCode(\n        `${nestVar} = ${tempVar}.result; offset = ${tempVar}.offset;`\n      );\n      if (this.options.type !== this.alias) {\n        ctx.addReference(this.options.type!);\n      }\n    }\n  }\n\n  private generateWrapper(ctx: Context) {\n    const wrapperVar = ctx.generateVariable(this.varName);\n    const wrappedBuf = ctx.generateTmpVariable();\n    if (typeof this.options.readUntil === \"function\") {\n      const pred = this.options.readUntil;\n      const start = ctx.generateTmpVariable();\n      const cur = ctx.generateTmpVariable();\n\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(`var ${cur} = 0;`);\n      ctx.pushCode(`while (offset < buffer.length) {`);\n      ctx.pushCode(`${cur} = dataView.getUint8(offset);`);\n      const func = ctx.addImport(pred);\n      ctx.pushCode(\n        `if (${func}.call(${ctx.generateVariable()}, ${cur}, buffer.subarray(offset))) break;`\n      );\n      ctx.pushCode(`offset += 1;`);\n      ctx.pushCode(`}`);\n      ctx.pushCode(`${wrappedBuf} = buffer.subarray(${start}, offset);`);\n    } else if (this.options.readUntil === \"eof\") {\n      ctx.pushCode(`${wrappedBuf} = buffer.subarray(offset);`);\n    } else {\n      const len = ctx.generateOption(this.options.length!);\n      ctx.pushCode(`${wrappedBuf} = buffer.subarray(offset, offset + ${len});`);\n      ctx.pushCode(`offset += ${len};`);\n    }\n\n    if (this.options.clone) {\n      ctx.pushCode(`${wrappedBuf} = buffer.constructor.from(${wrappedBuf});`);\n    }\n\n    const tempBuf = ctx.generateTmpVariable();\n    const tempOff = ctx.generateTmpVariable();\n    const tempView = ctx.generateTmpVariable();\n    const func = ctx.addImport(this.options.wrapper);\n    ctx.pushCode(\n      `${wrappedBuf} = ${func}.call(this, ${wrappedBuf}).subarray(0);`\n    );\n    ctx.pushCode(`var ${tempBuf} = buffer;`);\n    ctx.pushCode(`var ${tempOff} = offset;`);\n    ctx.pushCode(`var ${tempView} = dataView;`);\n    ctx.pushCode(`buffer = ${wrappedBuf};`);\n    ctx.pushCode(`offset = 0;`);\n    ctx.pushCode(\n      `dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);`\n    );\n    if (this.options.type instanceof Parser) {\n      if (this.varName) {\n        ctx.pushCode(`${wrapperVar} = {};`);\n      }\n      ctx.pushPath(this.varName);\n      this.options.type.generate(ctx);\n      ctx.popPath(this.varName);\n    } else if (aliasRegistry.has(this.options.type!)) {\n      const tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(\n        `var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(0);`\n      );\n      ctx.pushCode(`${wrapperVar} = ${tempVar}.result;`);\n      if (this.options.type !== this.alias) {\n        ctx.addReference(this.options.type!);\n      }\n    }\n    ctx.pushCode(`buffer = ${tempBuf};`);\n    ctx.pushCode(`dataView = ${tempView};`);\n    ctx.pushCode(`offset = ${tempOff};`);\n  }\n\n  private generateFormatter(\n    ctx: Context,\n    varName: string,\n    formatter: Function\n  ) {\n    if (typeof formatter === \"function\") {\n      const func = ctx.addImport(formatter);\n      ctx.pushCode(\n        `${varName} = ${func}.call(${ctx.generateVariable()}, ${varName});`\n      );\n    }\n  }\n\n  private generatePointer(ctx: Context) {\n    const type = this.options.type;\n    const offset = ctx.generateOption(this.options.offset!);\n    const tempVar = ctx.generateTmpVariable();\n    const nestVar = ctx.generateVariable(this.varName);\n\n    // Save current offset\n    ctx.pushCode(`var ${tempVar} = offset;`);\n\n    // Move offset\n    ctx.pushCode(`offset = ${offset};`);\n\n    if (this.options.type instanceof Parser) {\n      ctx.pushCode(`${nestVar} = {};`);\n\n      if (ctx.useContextVariables) {\n        const parentVar = ctx.generateVariable();\n        ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n        ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n      }\n\n      ctx.pushPath(this.varName);\n      this.options.type.generate(ctx);\n      ctx.popPath(this.varName);\n\n      if (ctx.useContextVariables) {\n        ctx.pushCode(`delete ${nestVar}.$parent;`);\n        ctx.pushCode(`delete ${nestVar}.$root;`);\n      }\n    } else if (aliasRegistry.has(this.options.type!)) {\n      const tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(\n        `var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset, {`\n      );\n      if (ctx.useContextVariables) {\n        const parentVar = ctx.generateVariable();\n        ctx.pushCode(`$parent: ${parentVar},`);\n        ctx.pushCode(`$root: ${parentVar}.$root,`);\n      }\n      ctx.pushCode(`});`);\n      ctx.pushCode(\n        `${nestVar} = ${tempVar}.result; offset = ${tempVar}.offset;`\n      );\n      if (this.options.type !== this.alias) {\n        ctx.addReference(this.options.type!);\n      }\n    } else if (Object.keys(PRIMITIVE_SIZES).indexOf(this.options.type!) >= 0) {\n      const typeName = PRIMITIVE_NAMES[type as PrimitiveTypes];\n      const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type as PrimitiveTypes];\n      ctx.pushCode(\n        `${nestVar} = dataView.get${typeName}(offset, ${littleEndian});`\n      );\n      ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type as PrimitiveTypes]};`);\n    }\n\n    // Restore offset\n    ctx.pushCode(`offset = ${tempVar};`);\n  }\n\n  private generateSaveOffset(ctx: Context) {\n    const varName = ctx.generateVariable(this.varName);\n    ctx.pushCode(`${varName} = offset`);\n  }\n}\n","/*\n * Bitcoin BIP32 path helpers\n * (C) 2016 Alex Beregszaszi\n */\n\nconst HARDENED = 0x80000000\n\nvar BIPPath = function (path) {\n  if (!Array.isArray(path)) {\n    throw new Error('Input must be an Array')\n  }\n  if (path.length === 0) {\n    throw new Error('Path must contain at least one level')\n  }\n  for (var i = 0; i < path.length; i++) {\n    if (typeof path[i] !== 'number') {\n      throw new Error('Path element is not a number')\n    }\n  }\n  this.path = path\n}\n\nBIPPath.validatePathArray = function (path) {\n  try {\n    BIPPath.fromPathArray(path)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nBIPPath.validateString = function (text, reqRoot) {\n  try {\n    BIPPath.fromString(text, reqRoot)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nBIPPath.fromPathArray = function (path) {\n  return new BIPPath(path)\n}\n\nBIPPath.fromString = function (text, reqRoot) {\n  // skip the root\n  if (/^m\\//i.test(text)) {\n    text = text.slice(2)\n  } else if (reqRoot) {\n    throw new Error('Root element is required')\n  }\n\n  var path = text.split('/')\n  var ret = new Array(path.length)\n  for (var i = 0; i < path.length; i++) {\n    var tmp = /(\\d+)([hH\\']?)/.exec(path[i])\n    if (tmp === null) {\n      throw new Error('Invalid input')\n    }\n    ret[i] = parseInt(tmp[1], 10)\n\n    if (ret[i] >= HARDENED) {\n      throw new Error('Invalid child index')\n    }\n\n    if (tmp[2] === 'h' || tmp[2] === 'H' || tmp[2] === '\\'') {\n      ret[i] += HARDENED\n    } else if (tmp[2].length != 0) {\n      throw new Error('Invalid modifier')\n    }\n  }\n  return new BIPPath(ret)\n}\n\nBIPPath.prototype.toPathArray = function () {\n  return this.path\n}\n\nBIPPath.prototype.toString = function (noRoot, oldStyle) {\n  var ret = new Array(this.path.length)\n  for (var i = 0; i < this.path.length; i++) {\n    var tmp = this.path[i]\n    if (tmp & HARDENED) {\n      ret[i] = (tmp & ~HARDENED) + (oldStyle ? 'h' : '\\'')\n    } else {\n      ret[i] = tmp\n    }\n  }\n  return (noRoot ? '' : 'm/') + ret.join('/')\n}\n\nBIPPath.prototype.inspect = function () {\n  return 'BIPPath <' + this.toString() + '>'\n}\n\nmodule.exports = BIPPath\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"./crypto\");\nconst bs58check = require('bs58check');\nconst ecc = require('tiny-secp256k1');\nconst typeforce = require('typeforce');\nconst wif = require('wif');\nconst UINT256_TYPE = typeforce.BufferN(32);\nconst NETWORK_TYPE = typeforce.compile({\n    wif: typeforce.UInt8,\n    bip32: {\n        public: typeforce.UInt32,\n        private: typeforce.UInt32,\n    },\n});\nconst BITCOIN = {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'bc',\n    bip32: {\n        public: 0x0488b21e,\n        private: 0x0488ade4,\n    },\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n};\nconst HIGHEST_BIT = 0x80000000;\nconst UINT31_MAX = Math.pow(2, 31) - 1;\nfunction BIP32Path(value) {\n    return (typeforce.String(value) && value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/) !== null);\n}\nfunction UInt31(value) {\n    return typeforce.UInt32(value) && value <= UINT31_MAX;\n}\nclass BIP32 {\n    constructor(__D, __Q, chainCode, network, __DEPTH = 0, __INDEX = 0, __PARENT_FINGERPRINT = 0x00000000) {\n        this.__D = __D;\n        this.__Q = __Q;\n        this.chainCode = chainCode;\n        this.network = network;\n        this.__DEPTH = __DEPTH;\n        this.__INDEX = __INDEX;\n        this.__PARENT_FINGERPRINT = __PARENT_FINGERPRINT;\n        typeforce(NETWORK_TYPE, network);\n        this.lowR = false;\n    }\n    get depth() {\n        return this.__DEPTH;\n    }\n    get index() {\n        return this.__INDEX;\n    }\n    get parentFingerprint() {\n        return this.__PARENT_FINGERPRINT;\n    }\n    get publicKey() {\n        if (this.__Q === undefined)\n            this.__Q = ecc.pointFromScalar(this.__D, true);\n        return this.__Q;\n    }\n    get privateKey() {\n        return this.__D;\n    }\n    get identifier() {\n        return crypto.hash160(this.publicKey);\n    }\n    get fingerprint() {\n        return this.identifier.slice(0, 4);\n    }\n    get compressed() {\n        return true;\n    }\n    // Private === not neutered\n    // Public === neutered\n    isNeutered() {\n        return this.__D === undefined;\n    }\n    neutered() {\n        return fromPublicKeyLocal(this.publicKey, this.chainCode, this.network, this.depth, this.index, this.parentFingerprint);\n    }\n    toBase58() {\n        const network = this.network;\n        const version = !this.isNeutered()\n            ? network.bip32.private\n            : network.bip32.public;\n        const buffer = Buffer.allocUnsafe(78);\n        // 4 bytes: version bytes\n        buffer.writeUInt32BE(version, 0);\n        // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ....\n        buffer.writeUInt8(this.depth, 4);\n        // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n        buffer.writeUInt32BE(this.parentFingerprint, 5);\n        // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n        // This is encoded in big endian. (0x00000000 if master key)\n        buffer.writeUInt32BE(this.index, 9);\n        // 32 bytes: the chain code\n        this.chainCode.copy(buffer, 13);\n        // 33 bytes: the public key or private key data\n        if (!this.isNeutered()) {\n            // 0x00 + k for private keys\n            buffer.writeUInt8(0, 45);\n            this.privateKey.copy(buffer, 46);\n            // 33 bytes: the public key\n        }\n        else {\n            // X9.62 encoding for public keys\n            this.publicKey.copy(buffer, 45);\n        }\n        return bs58check.encode(buffer);\n    }\n    toWIF() {\n        if (!this.privateKey)\n            throw new TypeError('Missing private key');\n        return wif.encode(this.network.wif, this.privateKey, true);\n    }\n    // https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions\n    derive(index) {\n        typeforce(typeforce.UInt32, index);\n        const isHardened = index >= HIGHEST_BIT;\n        const data = Buffer.allocUnsafe(37);\n        // Hardened child\n        if (isHardened) {\n            if (this.isNeutered())\n                throw new TypeError('Missing private key for hardened child key');\n            // data = 0x00 || ser256(kpar) || ser32(index)\n            data[0] = 0x00;\n            this.privateKey.copy(data, 1);\n            data.writeUInt32BE(index, 33);\n            // Normal child\n        }\n        else {\n            // data = serP(point(kpar)) || ser32(index)\n            //      = serP(Kpar) || ser32(index)\n            this.publicKey.copy(data, 0);\n            data.writeUInt32BE(index, 33);\n        }\n        const I = crypto.hmacSHA512(this.chainCode, data);\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // if parse256(IL) >= n, proceed with the next value for i\n        if (!ecc.isPrivate(IL))\n            return this.derive(index + 1);\n        // Private parent key -> private child key\n        let hd;\n        if (!this.isNeutered()) {\n            // ki = parse256(IL) + kpar (mod n)\n            const ki = ecc.privateAdd(this.privateKey, IL);\n            // In case ki == 0, proceed with the next value for i\n            if (ki == null)\n                return this.derive(index + 1);\n            hd = fromPrivateKeyLocal(ki, IR, this.network, this.depth + 1, index, this.fingerprint.readUInt32BE(0));\n            // Public parent key -> public child key\n        }\n        else {\n            // Ki = point(parse256(IL)) + Kpar\n            //    = G*IL + Kpar\n            const Ki = ecc.pointAddScalar(this.publicKey, IL, true);\n            // In case Ki is the point at infinity, proceed with the next value for i\n            if (Ki === null)\n                return this.derive(index + 1);\n            hd = fromPublicKeyLocal(Ki, IR, this.network, this.depth + 1, index, this.fingerprint.readUInt32BE(0));\n        }\n        return hd;\n    }\n    deriveHardened(index) {\n        typeforce(UInt31, index);\n        // Only derives hardened private keys by default\n        return this.derive(index + HIGHEST_BIT);\n    }\n    derivePath(path) {\n        typeforce(BIP32Path, path);\n        let splitPath = path.split('/');\n        if (splitPath[0] === 'm') {\n            if (this.parentFingerprint)\n                throw new TypeError('Expected master, got child');\n            splitPath = splitPath.slice(1);\n        }\n        return splitPath.reduce((prevHd, indexStr) => {\n            let index;\n            if (indexStr.slice(-1) === `'`) {\n                index = parseInt(indexStr.slice(0, -1), 10);\n                return prevHd.deriveHardened(index);\n            }\n            else {\n                index = parseInt(indexStr, 10);\n                return prevHd.derive(index);\n            }\n        }, this);\n    }\n    sign(hash, lowR) {\n        if (!this.privateKey)\n            throw new Error('Missing private key');\n        if (lowR === undefined)\n            lowR = this.lowR;\n        if (lowR === false) {\n            return ecc.sign(hash, this.privateKey);\n        }\n        else {\n            let sig = ecc.sign(hash, this.privateKey);\n            const extraData = Buffer.alloc(32, 0);\n            let counter = 0;\n            // if first try is lowR, skip the loop\n            // for second try and on, add extra entropy counting up\n            while (sig[0] > 0x7f) {\n                counter++;\n                extraData.writeUIntLE(counter, 0, 6);\n                sig = ecc.signWithEntropy(hash, this.privateKey, extraData);\n            }\n            return sig;\n        }\n    }\n    verify(hash, signature) {\n        return ecc.verify(hash, this.publicKey, signature);\n    }\n}\nfunction fromBase58(inString, network) {\n    const buffer = bs58check.decode(inString);\n    if (buffer.length !== 78)\n        throw new TypeError('Invalid buffer length');\n    network = network || BITCOIN;\n    // 4 bytes: version bytes\n    const version = buffer.readUInt32BE(0);\n    if (version !== network.bip32.private && version !== network.bip32.public)\n        throw new TypeError('Invalid network version');\n    // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ...\n    const depth = buffer[4];\n    // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n    const parentFingerprint = buffer.readUInt32BE(5);\n    if (depth === 0) {\n        if (parentFingerprint !== 0x00000000)\n            throw new TypeError('Invalid parent fingerprint');\n    }\n    // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n    // This is encoded in MSB order. (0x00000000 if master key)\n    const index = buffer.readUInt32BE(9);\n    if (depth === 0 && index !== 0)\n        throw new TypeError('Invalid index');\n    // 32 bytes: the chain code\n    const chainCode = buffer.slice(13, 45);\n    let hd;\n    // 33 bytes: private key data (0x00 + k)\n    if (version === network.bip32.private) {\n        if (buffer.readUInt8(45) !== 0x00)\n            throw new TypeError('Invalid private key');\n        const k = buffer.slice(46, 78);\n        hd = fromPrivateKeyLocal(k, chainCode, network, depth, index, parentFingerprint);\n        // 33 bytes: public key data (0x02 + X or 0x03 + X)\n    }\n    else {\n        const X = buffer.slice(45, 78);\n        hd = fromPublicKeyLocal(X, chainCode, network, depth, index, parentFingerprint);\n    }\n    return hd;\n}\nexports.fromBase58 = fromBase58;\nfunction fromPrivateKey(privateKey, chainCode, network) {\n    return fromPrivateKeyLocal(privateKey, chainCode, network);\n}\nexports.fromPrivateKey = fromPrivateKey;\nfunction fromPrivateKeyLocal(privateKey, chainCode, network, depth, index, parentFingerprint) {\n    typeforce({\n        privateKey: UINT256_TYPE,\n        chainCode: UINT256_TYPE,\n    }, { privateKey, chainCode });\n    network = network || BITCOIN;\n    if (!ecc.isPrivate(privateKey))\n        throw new TypeError('Private key not in range [1, n)');\n    return new BIP32(privateKey, undefined, chainCode, network, depth, index, parentFingerprint);\n}\nfunction fromPublicKey(publicKey, chainCode, network) {\n    return fromPublicKeyLocal(publicKey, chainCode, network);\n}\nexports.fromPublicKey = fromPublicKey;\nfunction fromPublicKeyLocal(publicKey, chainCode, network, depth, index, parentFingerprint) {\n    typeforce({\n        publicKey: typeforce.BufferN(33),\n        chainCode: UINT256_TYPE,\n    }, { publicKey, chainCode });\n    network = network || BITCOIN;\n    // verify the X coordinate is a point on the curve\n    if (!ecc.isPoint(publicKey))\n        throw new TypeError('Point is not on the curve');\n    return new BIP32(undefined, publicKey, chainCode, network, depth, index, parentFingerprint);\n}\nfunction fromSeed(seed, network) {\n    typeforce(typeforce.Buffer, seed);\n    if (seed.length < 16)\n        throw new TypeError('Seed should be at least 128 bits');\n    if (seed.length > 64)\n        throw new TypeError('Seed should be at most 512 bits');\n    network = network || BITCOIN;\n    const I = crypto.hmacSHA512(Buffer.from('Bitcoin seed', 'utf8'), seed);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return fromPrivateKey(IL, IR, network);\n}\nexports.fromSeed = fromSeed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHash = require('create-hash');\nconst createHmac = require('create-hmac');\nfunction hash160(buffer) {\n    const sha256Hash = createHash('sha256')\n        .update(buffer)\n        .digest();\n    try {\n        return createHash('rmd160')\n            .update(sha256Hash)\n            .digest();\n    }\n    catch (err) {\n        return createHash('ripemd160')\n            .update(sha256Hash)\n            .digest();\n    }\n}\nexports.hash160 = hash160;\nfunction hmacSHA512(key, data) {\n    return createHmac('sha512', key)\n        .update(data)\n        .digest();\n}\nexports.hmacSHA512 = hmacSHA512;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bip32_1 = require(\"./bip32\");\nexports.fromSeed = bip32_1.fromSeed;\nexports.fromBase58 = bip32_1.fromBase58;\nexports.fromPublicKey = bip32_1.fromPublicKey;\nexports.fromPrivateKey = bip32_1.fromPrivateKey;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = require('./wordlists/czech.json');\n    wordlists.czech = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/korean.json');\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/french.json');\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/italian.json');\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/spanish.json');\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/japanese.json');\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/portuguese.json');\n    wordlists.portuguese = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/english.json');\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHash = require(\"create-hash\");\nconst pbkdf2_1 = require(\"pbkdf2\");\nconst randomBytes = require(\"randombytes\");\nconst _wordlists_1 = require(\"./_wordlists\");\nlet DEFAULT_WORDLIST = _wordlists_1._default;\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\nconst WORDLIST_REQUIRED = 'A wordlist is required but a default could not be found.\\n' +\n    'Please pass a 2048 word array explicitly.';\nfunction pbkdf2Promise(password, saltMixin, iterations, keylen, digest) {\n    return Promise.resolve().then(() => new Promise((resolve, reject) => {\n        const callback = (err, derivedKey) => {\n            if (err) {\n                return reject(err);\n            }\n            else {\n                return resolve(derivedKey);\n            }\n        };\n        pbkdf2_1.pbkdf2(password, saltMixin, iterations, keylen, digest, callback);\n    }));\n}\nfunction normalize(str) {\n    return (str || '').normalize('NFKD');\n}\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => lpad(x.toString(2), '0', 8)).join('');\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = createHash('sha256')\n        .update(entropyBuffer)\n        .digest();\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\nfunction salt(password) {\n    return 'mnemonic' + (password || '');\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n    const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n    return pbkdf2_1.pbkdf2Sync(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\nfunction mnemonicToSeed(mnemonic, password) {\n    return Promise.resolve().then(() => {\n        const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n        const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n        return pbkdf2Promise(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n    });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = normalize(mnemonic).split(' ');\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return lpad(index.toString(2), '0', 11);\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length % 4 !== 0) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = Buffer.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return entropy.toString('hex');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    if (!Buffer.isBuffer(entropy)) {\n        entropy = Buffer.from(entropy, 'hex');\n    }\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length > 32) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length % 4 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    const entropyBits = bytesToBinary(Array.from(entropy));\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map((binary) => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093' // Japanese wordlist\n        ? words.join('\\u3000')\n        : words.join(' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    rng = rng || randomBytes;\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nfunction setDefaultWordlist(language) {\n    const result = _wordlists_1.wordlists[language];\n    if (result) {\n        DEFAULT_WORDLIST = result;\n    }\n    else {\n        throw new Error('Could not find wordlist for language \"' + language + '\"');\n    }\n}\nexports.setDefaultWordlist = setDefaultWordlist;\nfunction getDefaultWordlist() {\n    if (!DEFAULT_WORDLIST) {\n        throw new Error('No Default Wordlist set');\n    }\n    return Object.keys(_wordlists_1.wordlists).filter((lang) => {\n        if (lang === 'JA' || lang === 'EN') {\n            return false;\n        }\n        return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);\n    })[0];\n}\nexports.getDefaultWordlist = getDefaultWordlist;\nvar _wordlists_2 = require(\"./_wordlists\");\nexports.wordlists = _wordlists_2.wordlists;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\nfunction baseEncode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, 'utf8');\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readBuffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else {\n                writer.writeArray(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj) {\n    const writer = new BinaryWriter();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n        }\n        if (fieldType.kind === 'option') {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer) {\n    const reader = new BinaryReader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer) {\n    const reader = new BinaryReader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.bowser=t():e.bowser=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(\".0\");return e.map(n.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1}else if(u[0][a]<u[1][a])return-1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];\"object\"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t]}))};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||\"\"},e}();t.default=i,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];\"string\"==typeof a?(i[t]=a,s+=1):\"object\"==typeof a&&(r[t]=a,n+=1)})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(n=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe:function(e){var t={name:\"Opera Touch\"},r=i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:\"Electron\"},r=i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:\"Miui\"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=i.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||i.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default}})}));","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(3);\nfunction isBrowserHeaders(arg) {\n    return typeof arg === \"object\" && typeof arg.headersMap === \"object\" && typeof arg.forEach === \"function\";\n}\nvar BrowserHeaders = (function () {\n    function BrowserHeaders(init, options) {\n        if (init === void 0) { init = {}; }\n        if (options === void 0) { options = { splitValues: false }; }\n        var _this = this;\n        this.headersMap = {};\n        if (init) {\n            if (typeof Headers !== \"undefined\" && init instanceof Headers) {\n                var keys = util_1.getHeaderKeys(init);\n                keys.forEach(function (key) {\n                    var values = util_1.getHeaderValues(init, key);\n                    values.forEach(function (value) {\n                        if (options.splitValues) {\n                            _this.append(key, util_1.splitHeaderValue(value));\n                        }\n                        else {\n                            _this.append(key, value);\n                        }\n                    });\n                });\n            }\n            else if (isBrowserHeaders(init)) {\n                init.forEach(function (key, values) {\n                    _this.append(key, values);\n                });\n            }\n            else if (typeof Map !== \"undefined\" && init instanceof Map) {\n                var asMap = init;\n                asMap.forEach(function (value, key) {\n                    _this.append(key, value);\n                });\n            }\n            else if (typeof init === \"string\") {\n                this.appendFromString(init);\n            }\n            else if (typeof init === \"object\") {\n                Object.getOwnPropertyNames(init).forEach(function (key) {\n                    var asObject = init;\n                    var values = asObject[key];\n                    if (Array.isArray(values)) {\n                        values.forEach(function (value) {\n                            _this.append(key, value);\n                        });\n                    }\n                    else {\n                        _this.append(key, values);\n                    }\n                });\n            }\n        }\n    }\n    BrowserHeaders.prototype.appendFromString = function (str) {\n        var pairs = str.split(\"\\r\\n\");\n        for (var i = 0; i < pairs.length; i++) {\n            var p = pairs[i];\n            var index = p.indexOf(\":\");\n            if (index > 0) {\n                var key = p.substring(0, index).trim();\n                var value = p.substring(index + 1).trim();\n                this.append(key, value);\n            }\n        }\n    };\n    BrowserHeaders.prototype.delete = function (key, value) {\n        var normalizedKey = util_1.normalizeName(key);\n        if (value === undefined) {\n            delete this.headersMap[normalizedKey];\n        }\n        else {\n            var existing = this.headersMap[normalizedKey];\n            if (existing) {\n                var index = existing.indexOf(value);\n                if (index >= 0) {\n                    existing.splice(index, 1);\n                }\n                if (existing.length === 0) {\n                    delete this.headersMap[normalizedKey];\n                }\n            }\n        }\n    };\n    BrowserHeaders.prototype.append = function (key, value) {\n        var _this = this;\n        var normalizedKey = util_1.normalizeName(key);\n        if (!Array.isArray(this.headersMap[normalizedKey])) {\n            this.headersMap[normalizedKey] = [];\n        }\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayValue) {\n                _this.headersMap[normalizedKey].push(util_1.normalizeValue(arrayValue));\n            });\n        }\n        else {\n            this.headersMap[normalizedKey].push(util_1.normalizeValue(value));\n        }\n    };\n    BrowserHeaders.prototype.set = function (key, value) {\n        var normalizedKey = util_1.normalizeName(key);\n        if (Array.isArray(value)) {\n            var normalized_1 = [];\n            value.forEach(function (arrayValue) {\n                normalized_1.push(util_1.normalizeValue(arrayValue));\n            });\n            this.headersMap[normalizedKey] = normalized_1;\n        }\n        else {\n            this.headersMap[normalizedKey] = [util_1.normalizeValue(value)];\n        }\n    };\n    BrowserHeaders.prototype.has = function (key, value) {\n        var keyArray = this.headersMap[util_1.normalizeName(key)];\n        var keyExists = Array.isArray(keyArray);\n        if (!keyExists) {\n            return false;\n        }\n        if (value !== undefined) {\n            var normalizedValue = util_1.normalizeValue(value);\n            return keyArray.indexOf(normalizedValue) >= 0;\n        }\n        else {\n            return true;\n        }\n    };\n    BrowserHeaders.prototype.get = function (key) {\n        var values = this.headersMap[util_1.normalizeName(key)];\n        if (values !== undefined) {\n            return values.concat();\n        }\n        return [];\n    };\n    BrowserHeaders.prototype.forEach = function (callback) {\n        var _this = this;\n        Object.getOwnPropertyNames(this.headersMap)\n            .forEach(function (key) {\n            callback(key, _this.headersMap[key]);\n        }, this);\n    };\n    BrowserHeaders.prototype.toHeaders = function () {\n        if (typeof Headers !== \"undefined\") {\n            var headers_1 = new Headers();\n            this.forEach(function (key, values) {\n                values.forEach(function (value) {\n                    headers_1.append(key, value);\n                });\n            });\n            return headers_1;\n        }\n        else {\n            throw new Error(\"Headers class is not defined\");\n        }\n    };\n    return BrowserHeaders;\n}());\nexports.BrowserHeaders = BrowserHeaders;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserHeaders_1 = __webpack_require__(0);\nexports.BrowserHeaders = BrowserHeaders_1.BrowserHeaders;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction iterateHeaders(headers, callback) {\n    var iterator = headers[Symbol.iterator]();\n    var entry = iterator.next();\n    while (!entry.done) {\n        callback(entry.value[0]);\n        entry = iterator.next();\n    }\n}\nexports.iterateHeaders = iterateHeaders;\nfunction iterateHeadersKeys(headers, callback) {\n    var iterator = headers.keys();\n    var entry = iterator.next();\n    while (!entry.done) {\n        callback(entry.value);\n        entry = iterator.next();\n    }\n}\nexports.iterateHeadersKeys = iterateHeadersKeys;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterateHeaders_1 = __webpack_require__(2);\nfunction normalizeName(name) {\n    if (typeof name !== \"string\") {\n        name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError(\"Invalid character in header field name\");\n    }\n    return name.toLowerCase();\n}\nexports.normalizeName = normalizeName;\nfunction normalizeValue(value) {\n    if (typeof value !== \"string\") {\n        value = String(value);\n    }\n    return value;\n}\nexports.normalizeValue = normalizeValue;\nfunction getHeaderValues(headersAsNative, key) {\n    var headers = toWindowHeaders(headersAsNative);\n    if (headers instanceof Headers && headers.getAll) {\n        return headers.getAll(key);\n    }\n    var getValue = headers.get(key);\n    if (getValue && typeof getValue === \"string\") {\n        return [getValue];\n    }\n    return getValue;\n}\nexports.getHeaderValues = getHeaderValues;\nfunction toWindowHeaders(headersAsNative) {\n    return headersAsNative;\n}\nfunction getHeaderKeys(headersAsNative) {\n    var headers = toWindowHeaders(headersAsNative);\n    var asMap = {};\n    var keys = [];\n    if (headers.keys) {\n        iterateHeaders_1.iterateHeadersKeys(headers, function (key) {\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    else if (headers.forEach) {\n        headers.forEach(function (_, key) {\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    else {\n        iterateHeaders_1.iterateHeaders(headers, function (entry) {\n            var key = entry[0];\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    return keys;\n}\nexports.getHeaderKeys = getHeaderKeys;\nfunction splitHeaderValue(str) {\n    var values = [];\n    var commaSpaceValues = str.split(\", \");\n    commaSpaceValues.forEach(function (commaSpaceValue) {\n        commaSpaceValue.split(\",\").forEach(function (commaValue) {\n            values.push(commaValue);\n        });\n    });\n    return values;\n}\nexports.splitHeaderValue = splitHeaderValue;\n\n\n/***/ })\n/******/ ]);\n});","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\nvar incr32 = require('./incr32')\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n","var ciphers = require('./encrypter')\nvar deciphers = require('./decrypter')\nvar modes = require('./modes/list.json')\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var Buffer = require('safe-buffer').Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n","function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","var modeModules = {\n  ECB: require('./ecb'),\n  CBC: require('./cbc'),\n  CFB: require('./cfb'),\n  CFB8: require('./cfb8'),\n  CFB1: require('./cfb1'),\n  OFB: require('./ofb'),\n  CTR: require('./ctr'),\n  GCM: require('./ctr')\n}\n\nvar modes = require('./list.json')\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n","var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var BN = require('bn.js')\nvar randomBytes = require('randombytes')\n\nfunction blind (priv) {\n  var r = getr(priv)\n  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed()\n  return { blinder: blinder, unblinder: r.invm(priv.modulus) }\n}\n\nfunction getr (priv) {\n  var len = priv.modulus.byteLength()\n  var r\n  do {\n    r = new BN(randomBytes(len))\n  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))\n  return r\n}\n\nfunction crt (msg, priv) {\n  var blinds = blind(priv)\n  var len = priv.modulus.byteLength()\n  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus)\n  var c1 = blinded.toRed(BN.mont(priv.prime1))\n  var c2 = blinded.toRed(BN.mont(priv.prime2))\n  var qinv = priv.coefficient\n  var p = priv.prime1\n  var q = priv.prime2\n  var m1 = c1.redPow(priv.exponent1).fromRed()\n  var m2 = c2.redPow(priv.exponent2).fromRed()\n  var h = m1.isub(m2).imul(qinv).umod(p).imul(q)\n  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len)\n}\ncrt.getr = getr\n\nmodule.exports = crt\n","module.exports = require('./browser/algorithms.json')\n","var Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar stream = require('readable-stream')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar verify = require('./verify')\n\nvar algorithms = require('./algorithms.json')\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = Buffer.from(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar EC = require('elliptic').ec\nvar BN = require('bn.js')\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction sign (hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type')\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = priv.modulus.byteLength()\n  var pad = [0, 1]\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) pad.push(hash[i])\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.keyFromPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return Buffer.from(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (s.cmpn(0) === 0) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) r = [0].concat(r)\n  if (s[0] & 0x80) s = [0].concat(s)\n\n  var total = r.length + s.length + 4\n  var res = [0x30, total, 0x02, r.length]\n  res = res.concat(r, [0x02, s.length], s)\n  return Buffer.from(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = Buffer.from(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length)\n    x = Buffer.concat([zeros, x])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = Buffer.alloc(hlen)\n  v.fill(1)\n  var k = Buffer.alloc(hlen)\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  return { k: k, v: v }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) bits.ishrn(shift)\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = Buffer.from(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length)\n    out = Buffer.concat([zeros, out])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t\n  var k\n\n  do {\n    t = Buffer.alloc(0)\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n      t = Buffer.concat([t, kv.v])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction verify (sig, hash, key, signType, tag) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type')\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = pub.modulus.byteLength()\n  var pad = [1]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = Buffer.from(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n  sig = Buffer.from(sig.fromRed().toArray())\n  var out = padNum < 8 ? 1 : 0\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) out = 1\n\n  i = -1\n  while (++i < len) out |= sig[i] ^ pad[i]\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q)\n  return v.cmp(r) === 0\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig')\n  if (b.cmp(q) >= q) throw new Error('invalid sig')\n}\n\nmodule.exports = verify\n","'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert = require('assert');\n\nvar Zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\nvar GZIP_HEADER_ID1 = 0x1f;\nvar GZIP_HEADER_ID2 = 0x8b;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {\n    throw new TypeError('Bad argument');\n  }\n\n  this.dictionary = null;\n  this.err = 0;\n  this.flush = 0;\n  this.init_done = false;\n  this.level = 0;\n  this.memLevel = 0;\n  this.mode = mode;\n  this.strategy = 0;\n  this.windowBits = 0;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.gzip_id_bytes_read = 0;\n}\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  assert(this.init_done, 'close before init');\n  assert(this.mode <= exports.UNZIP);\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n\n  this.dictionary = null;\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {\n  assert.equal(arguments.length, 8);\n\n  assert(this.init_done, 'write before init');\n  assert(this.mode !== exports.NONE, 'already finalized');\n  assert.equal(false, this.write_in_progress, 'write already in progress');\n  assert.equal(false, this.pending_close, 'close is pending');\n\n  this.write_in_progress = true;\n\n  assert.equal(false, flush === undefined, 'must provide flush value');\n\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = Buffer.alloc(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  this.strm.avail_in = in_len;\n  this.strm.input = input;\n  this.strm.next_in = in_off;\n  this.strm.avail_out = out_len;\n  this.strm.output = out;\n  this.strm.next_out = out_off;\n  this.flush = flush;\n\n  if (!async) {\n    // sync version\n    this._process();\n\n    if (this._checkError()) {\n      return this._afterSync();\n    }\n    return;\n  }\n\n  // async version\n  var self = this;\n  process.nextTick(function () {\n    self._process();\n    self._after();\n  });\n\n  return this;\n};\n\nZlib.prototype._afterSync = function () {\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  return [avail_in, avail_out];\n};\n\nZlib.prototype._process = function () {\n  var next_expected_header_byte = null;\n\n  // If the avail_out is left at 0, then it means that it ran out\n  // of room.  If there was avail_out left over, then it means\n  // that all of the input was consumed.\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflate(this.strm, this.flush);\n      break;\n    case exports.UNZIP:\n      if (this.strm.avail_in > 0) {\n        next_expected_header_byte = this.strm.next_in;\n      }\n\n      switch (this.gzip_id_bytes_read) {\n        case 0:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {\n            this.gzip_id_bytes_read = 1;\n            next_expected_header_byte++;\n\n            if (this.strm.avail_in === 1) {\n              // The only available byte was already read.\n              break;\n            }\n          } else {\n            this.mode = exports.INFLATE;\n            break;\n          }\n\n        // fallthrough\n        case 1:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {\n            this.gzip_id_bytes_read = 2;\n            this.mode = exports.GUNZIP;\n          } else {\n            // There is no actual difference between INFLATE and INFLATERAW\n            // (after initialization).\n            this.mode = exports.INFLATE;\n          }\n\n          break;\n        default:\n          throw new Error('invalid number of gzip magic number bytes read');\n      }\n\n    // fallthrough\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      this.err = zlib_inflate.inflate(this.strm, this.flush\n\n      // If data was encoded with dictionary\n      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {\n        // Load it\n        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);\n        if (this.err === exports.Z_OK) {\n          // And try to decode again\n          this.err = zlib_inflate.inflate(this.strm, this.flush);\n        } else if (this.err === exports.Z_DATA_ERROR) {\n          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n          // Make it possible for After() to tell a bad dictionary from bad\n          // input.\n          this.err = exports.Z_NEED_DICT;\n        }\n      }\n      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {\n        // Bytes remain in input buffer. Perhaps this is another compressed\n        // member in the same archive, or just trailing garbage.\n        // Trailing zero bytes are okay, though, since they are frequently\n        // used for padding.\n\n        this.reset();\n        this.err = zlib_inflate.inflate(this.strm, this.flush);\n      }\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n};\n\nZlib.prototype._checkError = function () {\n  // Acceptable error states depend on the type of zlib stream.\n  switch (this.err) {\n    case exports.Z_OK:\n    case exports.Z_BUF_ERROR:\n      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {\n        this._error('unexpected end of file');\n        return false;\n      }\n      break;\n    case exports.Z_STREAM_END:\n      // normal statuses, not fatal\n      break;\n    case exports.Z_NEED_DICT:\n      if (this.dictionary == null) {\n        this._error('Missing dictionary');\n      } else {\n        this._error('Bad dictionary');\n      }\n      return false;\n    default:\n      // something else.\n      this._error('Zlib error');\n      return false;\n  }\n\n  return true;\n};\n\nZlib.prototype._after = function () {\n  if (!this._checkError()) {\n    return;\n  }\n\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  // call the write() cb\n  this.callback(avail_in, avail_out);\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype._error = function (message) {\n  if (this.strm.msg) {\n    message = this.strm.msg;\n  }\n  this.onerror(message, this.err\n\n  // no hope of rescue.\n  );this.write_in_progress = false;\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');\n\n  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');\n  assert(level >= -1 && level <= 9, 'invalid compression level');\n\n  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');\n\n  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');\n\n  this._init(level, windowBits, memLevel, strategy, dictionary);\n  this._setDictionary();\n};\n\nZlib.prototype.params = function () {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset = function () {\n  this._reset();\n  this._setDictionary();\n};\n\nZlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {\n  this.level = level;\n  this.windowBits = windowBits;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n\n  this.flush = exports.Z_NO_FLUSH;\n\n  this.err = exports.Z_OK;\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {\n    this.windowBits += 16;\n  }\n\n  if (this.mode === exports.UNZIP) {\n    this.windowBits += 32;\n  }\n\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {\n    this.windowBits = -1 * this.windowBits;\n  }\n\n  this.strm = new Zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Init error');\n  }\n\n  this.dictionary = dictionary;\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype._setDictionary = function () {\n  if (this.dictionary == null) {\n    return;\n  }\n\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to set dictionary');\n  }\n};\n\nZlib.prototype._reset = function () {\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n    case exports.GZIP:\n      this.err = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n    case exports.GUNZIP:\n      this.err = zlib_inflate.inflateReset(this.strm);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to reset stream');\n  }\n};\n\nexports.Zlib = Zlib;","'use strict';\n\nvar Buffer = require('buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar binding = require('./binding');\nvar util = require('util');\nvar assert = require('assert').ok;\nvar kMaxLength = require('buffer').kMaxLength;\nvar kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = 16 * 1024;\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nvar bkeys = Object.keys(binding);\nfor (var bk = 0; bk < bkeys.length; bk++) {\n  var bkey = bkeys[bk];\n  if (bkey.match(/^Z/)) {\n    Object.defineProperty(exports, bkey, {\n      enumerable: true, value: binding[bkey], writable: false\n    });\n  }\n}\n\n// translation table for return codes.\nvar codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nvar ckeys = Object.keys(codes);\nfor (var ck = 0; ck < ckeys.length; ck++) {\n  var ckey = ckeys[ck];\n  codes[codes[ckey]] = ckey;\n}\n\nObject.defineProperty(exports, 'codes', {\n  enumerable: true, value: Object.freeze(codes), writable: false\n});\n\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function (o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function (o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function (o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function (o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function (o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function (o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function (o) {\n  return new Unzip(o);\n};\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf;\n    var err = null;\n\n    if (nread >= kMaxLength) {\n      err = new RangeError(kRangeErrorMessage);\n    } else {\n      buf = Buffer.concat(buffers, nread);\n    }\n\n    buffers = [];\n    engine.close();\n    callback(err, buf);\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string') buffer = Buffer.from(buffer);\n\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');\n\n  var flushFlag = engine._finishFlushFlag;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n// raw - no header\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n// auto-detect header.\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\nfunction isValidFlushFlag(flag) {\n  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;\n}\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts, mode) {\n  var _this = this;\n\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush && !isValidFlushFlag(opts.flush)) {\n    throw new Error('Invalid flush flag: ' + opts.flush);\n  }\n  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {\n    throw new Error('Invalid flush flag: ' + opts.finishFlush);\n  }\n\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._handle = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._handle.onerror = function (message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    _close(self);\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);\n\n  this._buffer = Buffer.allocUnsafe(this._chunkSize);\n  this._offset = 0;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n\n  Object.defineProperty(this, '_closed', {\n    get: function () {\n      return !_this._handle;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function (level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function () {\n      assert(self._handle, 'zlib binding closed');\n      self._handle.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function () {\n  assert(this._handle, 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function (callback) {\n  this._transform(Buffer.alloc(0), '', callback);\n};\n\nZlib.prototype.flush = function (kind, callback) {\n  var _this2 = this;\n\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || kind === undefined && !callback) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback) process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback) this.once('end', callback);\n  } else if (ws.needDrain) {\n    if (callback) {\n      this.once('drain', function () {\n        return _this2.flush(kind, callback);\n      });\n    }\n  } else {\n    this._flushFlag = kind;\n    this.write(Buffer.alloc(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function (callback) {\n  _close(this, callback);\n  process.nextTick(emitCloseNT, this);\n};\n\nfunction _close(engine, callback) {\n  if (callback) process.nextTick(callback);\n\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle) return;\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nfunction emitCloseNT(self) {\n  self.emit('close');\n}\n\nZlib.prototype._transform = function (chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));\n\n  if (!this._handle) return cb(new Error('zlib binding closed'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag\n  // (or whatever flag was provided using opts.finishFlush).\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last) flushFlag = this._finishFlushFlag;else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function (chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function (er) {\n      error = er;\n    });\n\n    assert(this._handle, 'zlib binding closed');\n    do {\n      var res = this._handle.writeSync(flushFlag, chunk, // in\n      inOff, // in_off\n      availInBefore, // in_len\n      this._buffer, // out\n      this._offset, //out_off\n      availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    if (nread >= kMaxLength) {\n      _close(this);\n      throw new RangeError(kRangeErrorMessage);\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    _close(this);\n\n    return buf;\n  }\n\n  assert(this._handle, 'zlib binding closed');\n  var req = this._handle.write(flushFlag, chunk, // in\n  inOff, // in_off\n  availInBefore, // in_len\n  this._buffer, // out\n  this._offset, //out_off\n  availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    // When the callback is used in an async write, the callback's\n    // context is the `req` object that was created. The req object\n    // is === this._handle, and that's why it's important to null\n    // out the values after they are done being used. `this._handle`\n    // can stay in memory longer than the callback and buffer are needed.\n    if (this) {\n      this.buffer = null;\n      this.callback = null;\n    }\n\n    if (self._hadError) return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n\n      if (!async) return true;\n\n      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async) return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n","'use strict'\n\nvar createHash = require('create-hash')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nmodule.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["n","require","e","t","o","default","l","a","i","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","d","s","documentElement","clientWidth","c","style","setProperty","window","innerHeight","r","p","isMobile","innerHTML","m","HTMLElement","constructor","super","this","attachShadow","mode","shadowRoot","textContent","append","content","cloneNode","onClose","getElementById","getAttribute","DEFLY_WALLET_REDIRECT_MODAL_ID","addEventListener","removeModalWrapperFromDOM","f","w","x","isAndroid","y","h","connectedCallback","width","height","data","image","dotsOptions","color","imageOptions","crossOrigin","margin","cornersSquareOptions","cornersDotOptions","g","u","_","k","v","b","handleAccordion","handleChangeView","querySelectorAll","onClickDownload","onClickBack","length","forEach","onClickCopy","renderQRCode","target","Element","classList","contains","parentElement","remove","toggle","imageSize","add","position","left","top","opacity","value","body","focus","select","execCommand","removeChild","E","arguments","undefined","detectBrowser","encodeURIComponent","C","L","D","setAttribute","isIOS","includes","replace","onClickLaunch","A","S","M","DEFLY_WALLET_MODAL_CLASSNAME","B","DEFLY_WALLET_CONNECT_MODAL_ID","F","R","T","open","closed","I","z","O","W","H","host","V","G","P","Z","addAudioForConnection","setTimeout","src","autoplay","loop","N","fr","ip","op","nm","ddd","assets","layers","ind","ty","sr","ks","ix","to","ti","ao","hasMask","masksProperties","inv","pt","ef","np","mn","en","sw","sh","sc","st","bm","parent","shapes","it","hd","sk","sa","cix","lc","lj","ml","markers","j","q","$","DEFLY_WALLET_SIGN_TXN_TOAST_ID","renderLottieAnimation","loadAnimation","container","renderer","animationData","U","Y","DEFLY_WALLET_SIGN_TXN_MODAL_ID","Q","customElements","define","Promise","next","throw","done","then","apply","Error","_len","Array","_key","captureStackTrace","name","message","localStorage","slice","Math","floor","random","bridgeURL","shouldUseSound","silent","fetch","json","cache","use_sound","Object","assign","servers","console","log","Uint8Array","from","atob","charCodeAt","navigator","test","userAgent","_ref","close","global","Buffer","resolve","exports","DeflyWalletConnect","bridge","connector","shouldShowSignTxnToast","chainId","platform","getItem","JSON","parse","isConnected","connect","connected","killSession","storageId","qrcodeModal","createSession","querySelector","on","accounts","setItem","stringify","selectedAccount","detail","reconnectSession","disconnect","removeItem","signTransactionWithMobile","id","Date","now","pow","jsonrpc","method","params","sendCustomRequest","forcePushNotification","filter","Boolean","map","reject","signTransaction","flatMap","signers","txn","encodeUnsignedTransaction","toString","isArray","authAddr","msig","closeDeflyWalletSignTxnToast","match","brave","getParser","getBrowserName","Network","TokenBalanceType","AssetTransfersCategory","AssetTransfersOrder","NftTokenType","NftSpamClassification","NftExcludeFilters","NftFilters","NftOrdering","GetTransfersForOwnerTransferType","SortingOrder","NftSaleMarketplace","NftSaleTakerType","RefreshState","OpenSeaSafelistRequestStatus","AlchemySubscription","SimulateAssetType","SimulateChangeType","DecodingAuthority","DebugCallType","GasOptimizedTransactionStatus","WebhookVersion","WebhookType","CommitmentLevel","DebugTracerType","DEFAULT_ALCHEMY_API_KEY","DEFAULT_NETWORK","ETH_MAINNET","getAlchemyHttpUrl","network","apiKey","getAlchemyWsUrl","AlchemyApiType","EthersNetwork","ETH_ROPSTEN","ETH_GOERLI","ETH_KOVAN","ETH_RINKEBY","ETH_SEPOLIA","OPT_MAINNET","OPT_KOVAN","OPT_GOERLI","ARB_MAINNET","ARB_RINKEBY","ARB_GOERLI","MATIC_MAINNET","MATIC_MUMBAI","ASTAR_MAINNET","POLYGONZKEVM_MAINNET","POLYGONZKEVM_TESTNET","CustomNetworks","sepolia","noop","AlchemyConfig","config","maxRetries","url","authToken","batchRequests","requestTimeout","_getRequestUrl","apiType","NFT","WEBHOOK","getProvider","_baseAlchemyProvider","__awaiter$1","AlchemyProvider","getWebSocketProvider","_baseAlchemyWssProvider","AlchemyWebSocketProvider","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","_normalizeError","missing","form","normalize","push","join","String","fromCharCode","_checkNormalize","LogLevel$1","ErrorCode","LogLevel","HEX","Logger$1","version","defineProperty","enumerable","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","levels","DEBUG","_len2","_key2","INFO","warn","_len3","_key3","WARNING","makeError","code","errors","UNKNOWN_ERROR","messageDetails","keys","key","hex","reason","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","assert","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","kind","checkAbstract","static","censorship","permanent","globalLogger","__awaiter","thisArg","_arguments","generator","fulfilled","step","rejected","result","logger","defineReadOnly","object","resolveProperties","promises","all","reduce","accum","opaque","bigint","boolean","number","string","_isFrozen","isFrozen","_deepCopy","freeze","item","deepCopy","fromHex","hexString","BigNumber","toNumber","toHex","num","toHexString","formatBlock","block","Number","isInteger","getNftContractFromRaw","rawNftContract","address","contractMetadata","symbol","totalSupply","tokenType","parseNftTokenType","openSea","parseOpenSeaMetadata","contractDeployer","deployedBlockNumber","getBaseNftFromRaw","rawBaseNft","contractAddress","contract","tokenId","_a","tokenMetadata","getNftFromRaw","rawNft","spamInfo","isSpam","classifications","parseSpamInfo","_b","_c","_d","_e","_f","_g","title","description","parseNftDescription","timeLastUpdated","metadataError","rawMetadata","metadata","tokenUri","parseNftTokenUri","media","parseNftTokenUriArray","getNftSalesFromRaw","rawNftSales","pageKey","nftSales","rawNftSale","marketplace","parseNftSaleMarketplace","quantity","buyerAddress","sellerAddress","taker","parseNftTaker","sellerFee","marketplaceFee","protocolFee","royaltyFee","blockNumber","logIndex","bundleIndex","transactionHash","LOOKSRARE","SEAPORT","X2Y2","WYVERN","CRYPTOPUNKS","UNKNOWN","BUYER","SELLER","getNftRarityFromRaw","rawNftRarity","prevalence","trait_type","traitType","getContractsForOwnerFromRaw","rawContractsForOwner","totalCount","contracts","numDistinctTokensOwned","totalBalance","opensea","ERC721","ERC1155","NO_SUPPORTED_NFT_STANDARD","NOT_A_CONTRACT","uri","raw","gateway","arr","enumb","floorPrice","collectionName","safelistRequestStatus","values","imageUrl","externalUrl","twitterUsername","discordUrl","lastIngestedAt","IS_BROWSER","nullsToUndefined","obj","getAssetTransfers","srcMethod","provider","fromAddress","_getAddress","toAddress","_send","fromBlock","toBlock","maxCount","getTransactionReceipts","getLogs","getNetwork","getFilter","logs","send","removed","format","formatter","filterLog","bind","array","resolvedFilter","_getBlockTag","CoreNamespace","getBalance","addressOrName","blockTag","getCode","getStorageAt","getTransactionCount","getBlock","blockHashOrBlockTag","getBlockWithTransactions","getBlockNumber","getGasPrice","getFeeData","ready","call","transaction","estimateGas","getTransaction","getTransactionReceipt","sendTransaction","signedTransaction","waitForTransaction","confirmations","timeout","findContractDeployer","currentBlockNum","firstBlock","binarySearchFirstBlock","txReceipts","matchingReceipt","receipts","find","receipt","deployerAddress","getTokenBalances","contractAddressesOrOptions","ERC20","getTokensForOwner","options","contractAddresses","response","formattedBalances","tokenBalances","balance","rawBalance","tokenBalance","token","tokens","index","decimals","formatUnits","getTokenMetadata","resolveName","lookupAddress","start","end","mid","DebugNamespace","traceCall","blockIdentifier","tracer","parseTracerParams","traceTransaction","traceBlock","isHexString","hexStripZeros","hexValue","onlyTopCall","tracerConfig","sanitizeTokenType","WARN","ERROR","SILENT","logLevelToConsoleFn","DEFAULT_LOG_LEVEL","logDebug","_len4","_key4","loggerClient","logInfo","_len5","_key5","logWarn","_len6","_key6","val","TypeError","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","toISOString","_len11","_key11","VERSION","sendAxiosRequest","baseUrl","restApiName","methodName","overrides","requestUrl","headers","axios","ExponentialBackoff","maxAttempts","initialDelayMs","backoffMultiplier","maxDelayMs","numAttempts","currentDelayMs","isInBackoff","backoff","backoffDelayWithJitterMs","withJitterMs","max","min","delayMs","requestHttpWithBackoff","lastError","attempt","err","status","isRetryableHttpError","retryableCodes","paginateEndpoint","reqPageKey","resPageKey","hasNext","requestParams","__await","getNftMetadata","tokenUriTimeoutInMs","refreshCache","getNftMetadataBatch","getNftsForOwner","owner","withMetadata","omitMetadataToWithMetadata","omitMetadata","filters","excludeFilters","includeFilters","pageSize","orderBy","ownedNfts","res","nftFromGetNftResponse","parseInt","blockHash","nftTokenTypeToCategory","SPECIALNFT","refresh","ownedNft","isNftWithMetadata","nftFromGetNftContractResponse","getNftsForTransfers","metadataTransfers","transfers","transfer","rawContract","category","erc1155Metadata","parse1155Transfer","getTokensFromTransfer","hash","blockNum","nfts","nft","parseReingestionState","reingestionState","DOES_NOT_EXIST","ALREADY_QUEUED","IN_PROGRESS","FINISHED","QUEUED","QUEUE_FAILED","NftNamespace","optionsOrTokenType","getContractMetadata","getContractMetadataBatch","getNftsForOwnerIterator","__asyncValues","getNftsForContract","startToken","limit","nextToken","getNftsForContractIterator","getOwnersForContract","owners","ownerAddresses","getOwnersForNft","getContractsForOwner","getTransfersForOwner","transferType","ownerAddress","excludeZeroValue","TO","transfersResponse","getTransfersForContract","order","getMintedNfts","checkNftOwnership","verifyNftOwnership","acc","curr","isSpamContract","getSpamContracts","getFloorPrice","getNftSales","computeRarity","searchContractMetadata","query","summarizeNftAttributes","refreshNftMetadata","tokenIdString","first","second","refreshContract","refreshState","progress","NotifyNamespace","getAllWebhooks","verifyConfig","sendWebhookRequest","webhooks","parseRawWebhookResponse","getAddresses","webhookOrId","webhookId","addresses","pagination","total_count","cursors","after","parseRawAddressActivityResponse","webhook_id","getGraphqlQuery","graphqlQuery","graphql_query","parseRawCustomGraphqlWebhookResponse","getNftFilters","token_id","contract_address","parseRawNftFiltersResponse","updateWebhook","update","is_active","isActive","nft_filters_to_add","addFilters","nftFilterToParam","nft_filters_to_remove","removeFilters","nft_metadata_filters_to_add","addMetadataFilters","nft_metadata_filters_to_remove","removeMetadataFilters","addresses_to_add","resolveAddresses","addAddresses","addresses_to_remove","removeAddresses","newAddresses","createWebhook","appId","MINED_TRANSACTION","DROPPED_TRANSACTION","nftFilterObj","NETWORK_TO_WEBHOOK_NETWORK","get","NFT_ACTIVITY","NFT_METADATA_UPDATE","nft_filters","nft_metadata_filters","ADDRESS_ACTIVITY","GRAPHQL","webhook_type","webhook_url","app_id","parseRawWebhook","deleteWebhook","resolvedAddresses","rawAddress","WEBHOOK_NETWORK_TO_NETWORK","set","Map","rawWebhook","timeCreated","time_created","signingKey","signing_key","GAS_OPTIMIZED_TX_FEE_MULTIPLES","TransactNamespace","sendPrivateTransaction","maxBlockNumber","hexBlockNumber","tx","preferences","cancelPrivateTransaction","txHash","simulateAssetChangesBundle","transactions","simulateAssetChanges","simulateExecutionBundle","simulateExecution","getMaxPriorityFeePerGas","sendGasOptimizedTransaction","transactionOrSignedTxs","wallet","_sendGasOptimizedTransaction","gasLimit","priorityFee","baseFee","baseFeePerGas","gasSpreadTransactions","feeMultiplier","maxFeePerGas","round","maxPriorityFeePerGas","generateGasSpreadTransactions","signedTransactions","getGasOptimizedTransactionStatus","trackingId","rawTransactions","ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE","ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE","ALCHEMY_EVENT_TYPES","EthersEvent","tag","listener","once","_lastBlockNumber","_inflight","event","split","comps","topics","topic","deserializeTopics","pollable","indexOf","deserializeAddressField","hashesOnly","includeRemoved","addressStr","addressPair","deserializeAddressesField","isAlchemyEvent","getAlchemyEventTag","PENDING_TRANSACTIONS","serializeAddressField","serializeBooleanField","serializePendingTransactionsEvent","MINED_TRANSACTIONS","serializeAddressesField","serializeMinedTransactionsEvent","verifyAlchemyEventName","eventName","field","WebSocketNamespace","processedEvent","_resolveEnsAlchemyEvent","removeAllListeners","listenerCount","listeners","processedAddresses","_resolveNameOrError","resolved","Alchemy","settings","core","ws","transact","notify","module","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","transitionalDefaults","Cancel","onCanceled","requestData","requestHeaders","responseType","cancelToken","unsubscribe","signal","removeEventListener","isFormData","request","XMLHttpRequest","auth","username","password","unescape","Authorization","btoa","fullPath","baseURL","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","onreadystatechange","readyState","responseURL","onabort","onerror","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","setRequestHeader","isUndefined","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","aborted","Axios","mergeConfig","createInstance","defaultConfig","context","instance","prototype","extend","create","instanceConfig","CancelToken","isCancel","spread","isAxiosError","__CANCEL__","executor","resolvePromise","promise","_listeners","onfulfilled","_resolve","throwIfRequested","splice","source","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","handlers","use","eject","fn","isAbsoluteURL","combineURLs","requestedURL","enhanceError","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","toJSON","fileName","lineNumber","columnNumber","stack","config1","config2","getMergedValue","isPlainObject","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","validateStatus","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","rawValue","parser","encoder","isString","trim","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","encode","serializedParams","parts","isDate","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","payload","originURL","msie","urlParsingNode","resolveURL","href","protocol","search","hostname","port","pathname","charAt","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","line","substr","callback","thing","deprecatedWarnings","formatMessage","opt","desc","opts","schema","allowUnknown","getPrototypeOf","isFunction","hasOwnProperty","ArrayBuffer","isView","pipe","product","assignValue","str","stripBOM","Symbol","toStringTag","__esModule","TextEncoder","TextDecoder","encodeInto","subarray","setUint32","getInt32","getUint32","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","BigInt","sec","nsec","DataView","getTime","byteOffset","byteLength","decode","builtInEncoders","builtInDecoders","encoders","decoders","register","tryToEncode","defaultCodec","extensionCodec","maxDepth","initialBufferSize","sortKeys","forceFloat32","ignoreUndefined","forceIntegerToFloat","pos","view","bytes","getUint8Array","reinitializeState","doEncode","encodeNil","encodeBoolean","encodeNumber","encodeString","encodebigint","encodeObject","ensureBufferSizeToWrite","resizeBuffer","writeU8","isSafeInteger","writeU16","writeU32","writeU64","writeI8","writeI16","writeI32","writeI64","writeF32","writeF64","writeBig64","writeStringHeader","encodeExtension","encodeArray","encodeBinary","encodeMap","writeU8a","countWithoutUndefined","sort","setUint8","setInt8","setUint16","setInt16","setInt32","setFloat32","setFloat64","abs","padStart","maxKeyLength","maxLengthPerKey","hit","miss","caches","canBeCached","store","getInt8","maxStrLength","maxBinLength","maxArrayLength","maxMapLength","maxExtLength","keyDecoder","totalPos","headByte","setBuffer","appendBuffer","hasRemaining","createNoExtraBytesError","RangeError","doDecodeSingleSync","doDecodeSync","decodeAsync","decodeArrayStream","decodeMultiAsync","decodeStream","readArraySize","complete","sent","readHeadByte","pushMapState","pushArrayState","decodeUtf8String","readF32","readF64","readU8","readU16","readU32","readU64","readI8","readI16","readI32","readI64","lookU8","lookU16","lookU32","decodeBinary","decodeExtension","size","pop","readCount","stateIsMapKey","getUint8","getUint16","getInt16","getFloat32","getFloat64","X","asyncIterator","getReader","releaseLock","MAX_LEN","ADDR_BYTE_SIZE","SINGLE_BYTE_SIZE","SINGLE_BOOL_SIZE","LENGTH_ENCODE_BYTE_SIZE","staticArrayRegexp","ufixedRegexp","ABIType","endsWith","arrayArgType","ABIArrayDynamicType","stringMatches","arrayLengthStr","arrayLength","arrayType","ABIArrayStaticType","startsWith","digitsOnly","every","typeSizeStr","typeSize","ABIUintType","ABIByteType","ufixedSize","ufixedPrecision","ABIUfixedType","ABIBoolType","ABIAddressType","ABIStringType","tupleContent","ABITupleType","parseTupleContent","tupleTypes","bitSize","equals","other","isDynamic","byteLen","bigIntToBytes","byteString","bytesToBigInt","denominator","precision","decodeAddress","publicKey","encodeAddress","encodedBytes","encodedLength","mergedBytes","readUIntBE","byteValue","argType","childType","staticLength","ceil","toABITupleType","fill","convertedTuple","encodedTuple","childTypes","concatArrays","argTypes","typeStrings","child","some","findBoolLR","boolNum","trunc","heads","tails","isDynamicIndex","tupleType","before","compressedInt","compressMultipleBool","encodedTupleValue","headLength","headElement","tailLength","headValue","dynamicSegments","valuePartition","iterIndex","buf","dynamicIndex","right","seg","boolIndex","boolMask","currLen","segIndex","returnValues","valueTi","tupleStrings","depth","word","char","valueList","boolVal","typeList","delta","until","ABITransactionType","ABIReferenceType","abiTypeIsTransaction","any","pay","keyreg","acfg","axfer","afrz","appl","abiCheckTransactionType","abiTypeIsReference","account","application","asset","ABIMethod","returns","getSignature","arg","getSelector","genericHash","txnCount","_ref2","signature","argsStart","argsEnd","parseMethodSignature","getMethodByName","methods","filteredMethods","ABIContract","networks","ABIInterface","generateAccount","nacl","addr","secretKey","Bid","bidderKey","bidAmount","bidID","auctionKey","auctionID","maxPrice","decodedBidderKey","decodedAuctionKey","get_obj_for_encoding","bidder","cur","price","auc","aid","signBid","encodedMsg","encoding","toBeSigned","sig","note","bid","HTTPClient","setSendTransactionHeaders","Algod","_this","baseServer","tokenHeader","noteb64ToNote","noteb64","async","headerObj","healthCheck","ok","statusAfterBlock","roundNumber","pendingTransactions","maxTxns","statusCode","truncatedTxns","versions","ledgerSupply","transactionByAddress","last","firstRound","lastRound","transactionByAddressAndDate","fromDate","toDate","transactionById","txid","transactionInformation","pendingTransactionInformation","accountInformation","assetInformation","suggestedFee","sendRawTransaction","txHeaders","post","sendRawTransactions","txns","merged","getTransactionParams","suggestParams","flatFee","fee","genesisID","genesisHash","genesishashb64","URLTokenBaseHTTPError","URLTokenBaseHTTPClient","defaultHeaders","fixedBaseServer","baseServerURL","URL","getURL","relativePath","fixedRelativePath","entries","searchParams","headersObj","bodyErrorMessage","arrayBuffer","decoded","formatFetchResponseHeaders","checkHttpError","formatFetchResponse","tolowerCaseKeys","bcOrTokenHeader","bc","text","jsonOptions","parseJSON","err_","rawResponse","parseBody","prepareResponse","getAcceptFormat","fullHeaders","accept","removeFalsyOrEmpty","prepareResponseError","serializeData","delete","Kmd","ServiceClient","walletName","walletPassword","walletMDK","req","wallet_name","wallet_driver_name","wallet_password","master_derivation_key","walletID","wallet_id","walletHandle","wallet_handle_token","newWalletName","private_key","display_mnemonic","toByte","signed_transaction","public_key","threshold","pks","multisig_version","pw","pk","partial","partial_multisig","AccountInformation","JSONRequest","intDecoding","exclude","AccountAssetInformation","assetID","AccountApplicationInformation","applicationID","Block","prepare","setHeaders","hdrs","Compile","sourcemap","Dryrun","dr","blob","Genesis","GetAssetByID","GetApplicationByID","GetBlockHash","GetApplicationBoxByName","encodedName","encodeURI","Box","GetApplicationBoxes","BoxesResponse","HealthCheck","PendingTransactionInformation","PendingTransactions","PendingTransactionsByAddress","GetTransactionProof","txID","hashType","hashtype","Status","StatusAfterBlock","SuggestedParamsRequest","Supply","Versions","LightBlockHeaderProof","StateProof","AlgodClient","tokenOrBaseClient","versionsCheck","stxOrStxs","SendRawTransaction","accountAssetInformation","accountApplicationInformation","getBlockHash","pendingTransactionsInformation","pendingTransactionByAddress","SuggestedParams","supply","compile","dryrun","getAssetByID","getApplicationByID","getApplicationBoxByName","boxName","getApplicationBoxes","genesis","getTransactionProof","getLightBlockHeaderProof","getStateProof","Account","BaseModel","amount","amountWithoutPendingRewards","minBalance","pendingRewards","rewards","totalAppsOptedIn","totalAssetsOptedIn","totalCreatedApps","totalCreatedAssets","appsLocalState","appsTotalExtraPages","appsTotalSchema","createdApps","createdAssets","participation","rewardBase","sigType","totalBoxBytes","totalBoxes","attribute_map","ApplicationLocalState","from_obj_for_encoding","ApplicationStateSchema","AssetHolding","Application","Asset","AccountParticipation","AccountApplicationResponse","appLocalState","createdApp","ApplicationParams","AccountAssetResponse","assetHolding","createdAsset","AssetParams","selectionParticipationKey","voteFirstValid","voteKeyDilution","voteLastValid","voteParticipationKey","stateProofKey","AccountStateDelta","EvalDeltaKeyValue","keyValue","TealKeyValue","_ref3","approvalProgram","clearStateProgram","creator","extraProgramPages","globalState","globalStateSchema","localStateSchema","numUint","numByteSlice","assetId","_ref4","total","clawback","defaultFrozen","manager","metadataHash","nameB64","reserve","unitName","unitNameB64","urlB64","BlockHashResponse","blockhash","BlockResponse","cert","BoxDescriptor","boxes","BuildVersion","_ref5","branch","buildNumber","channel","commitHash","major","minor","CatchpointAbortResponse","catchupMessage","CatchpointStartResponse","CompileResponse","DisassembleResponse","DryrunRequest","_ref6","apps","latestTimestamp","protocolVersion","sources","DryrunSource","DryrunResponse","DryrunTxnResult","fieldName","txnIndex","appIndex","DryrunState","_ref7","pc","scratch","TealValue","_ref8","disassembly","appCallMessages","appCallTrace","budgetAdded","budgetConsumed","cost","globalDelta","localDeltas","logicSigDisassembly","logicSigMessages","logicSigTrace","ErrorResponse","EvalDelta","action","uint","proof","treedepth","NodeStatusResponse","_ref9","catchupTime","lastVersion","nextVersion","nextVersionRound","nextVersionSupported","stoppedAtUnsupportedRound","timeSinceLastRound","catchpoint","catchpointAcquiredBlocks","catchpointProcessedAccounts","catchpointProcessedKvs","catchpointTotalAccounts","catchpointTotalBlocks","catchpointTotalKvs","catchpointVerifiedAccounts","catchpointVerifiedKvs","lastCatchpoint","PendingTransactionResponse","_ref10","poolError","applicationIndex","assetClosingAmount","assetIndex","closeRewards","closingAmount","confirmedRound","globalStateDelta","innerTxns","localStateDelta","receiverRewards","senderRewards","PendingTransactionsResponse","topTransactions","totalTransactions","PostTransactionsResponse","stateproof","StateProofMessage","_ref11","blockheaderscommitment","firstattestedround","lastattestedround","lnprovenweight","voterscommitment","SupplyResponse","currentRound","onlineMoney","totalMoney","TransactionParametersResponse","_ref12","consensusVersion","genesisId","minFee","TransactionProofResponse","_ref13","idx","stibhash","Version","build","genesisHashB64","isByteArray","forPosting","txnBytesToPost","_get_obj_for_encoding","binary","targetPropValue","elem","_is_primitive","MakeHealthCheck","LookupAssetBalances","currencyGreaterThan","greater","currencyLessThan","lesser","includeAll","base64StringFunnel","LookupAccountTransactions","notePrefix","prefix","txType","minRound","maxRound","beforeTime","afterTime","rekeyTo","LookupAssetTransactions","addressRole","role","excludeCloseTo","LookupBlock","headerOnly","LookupTransactionByID","LookupAccountByID","LookupAccountAssets","LookupAccountCreatedAssets","LookupAccountAppLocalStates","LookupAccountCreatedApplications","LookupAssetByID","LookupApplications","LookupApplicationLogs","appID","sender","senderAddress","LookupApplicationBoxByIDandName","SearchAccounts","SearchForTransactions","SearchForAssets","unit","SearchForApplications","SearchForApplicationBoxes","IndexerClient","makeHealthCheck","lookupAssetBalances","lookupAssetTransactions","lookupAccountTransactions","lookupBlock","lookupTransactionByID","lookupAccountByID","lookupAccountAssets","lookupAccountCreatedAssets","lookupAccountAppLocalStates","lookupAccountCreatedApplications","lookupAssetByID","lookupApplications","lookupApplicationLogs","searchAccounts","searchForTransactions","searchForAssets","searchForApplications","searchForApplicationBoxes","lookupApplicationBoxByIDandName","closedAtRound","createdAtRound","deleted","AccountResponse","AccountsResponse","deletedAtRound","closedOutAtRound","optedInAtRound","ApplicationLocalStatesResponse","appsLocalStates","ApplicationLogData","ApplicationLogsResponse","applicationId","logData","ApplicationResponse","ApplicationsResponse","_ref14","applications","_ref15","destroyedAtRound","AssetBalancesResponse","_ref16","balances","MiniAssetHolding","_ref17","optedOutAtRound","AssetHoldingsResponse","_ref18","_ref19","AssetResponse","_ref20","AssetsResponse","_ref21","_ref22","previousBlockHash","seed","timestamp","transactionsRoot","transactionsRootSha256","participationUpdates","stateProofTracking","txnCounter","upgradeState","upgradeVote","ParticipationUpdates","BlockRewards","StateProofTracking","Transaction","BlockUpgradeState","BlockUpgradeVote","_ref23","feeSink","rewardsCalculationRound","rewardsLevel","rewardsPool","rewardsRate","rewardsResidue","_ref24","currentProtocol","nextProtocol","nextProtocolApprovals","nextProtocolSwitchOn","nextProtocolVoteBefore","_ref25","upgradeApprove","upgradeDelay","upgradePropose","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","HashFactory","_ref32","_ref33","dbAvailable","isMigrating","IndexerStateProofMessage","_ref34","blockHeadersCommitment","firstAttestedRound","latestAttestedRound","lnProvenWeight","votersCommitment","MerkleArrayProof","_ref35","hashFactory","treeDepth","_ref36","_ref37","expiredParticipationAccounts","StateProofFields","_ref38","partProofs","positionsToReveal","reveals","saltVersion","sigCommit","sigProofs","signedWeight","StateProofReveal","StateProofParticipant","_ref39","verifier","weight","StateProofVerifier","_ref40","participant","sigSlot","StateProofSigSlot","_ref41","lowerSigWeight","StateProofSignature","_ref42","falconSignature","merkleArrayIndex","verifyingKey","_ref43","nextRound","onlineTotalWeight","_ref44","commitment","keyLifetime","StateSchema","_ref45","_ref46","_ref47","_ref48","firstValid","lastValid","applicationTransaction","assetConfigTransaction","assetFreezeTransaction","assetTransferTransaction","createdApplicationIndex","createdAssetIndex","group","intraRoundOffset","keyregTransaction","lease","paymentTransaction","roundTime","stateProofTransaction","TransactionApplication","TransactionAssetConfig","TransactionAssetFreeze","TransactionAssetTransfer","TransactionKeyreg","TransactionPayment","TransactionSignature","TransactionStateProof","_ref49","applicationArgs","foreignApps","foreignAssets","onCompletion","_ref50","_ref51","newFreezeStatus","_ref52","receiver","closeAmount","closeTo","_ref53","nonParticipation","_ref54","closeRemainderTo","TransactionResponse","_ref55","_ref56","logicsig","multisig","TransactionSignatureLogicsig","TransactionSignatureMultisig","_ref57","logic","multisigSignature","_ref58","subsignature","TransactionSignatureMultisigSubsignature","_ref59","_ref60","stateProof","stateProofType","TransactionsResponse","_ref61","client","IntDecoding","setIntDecoding","tokenHeaderIdentifier","tokenHeaderOrStrOrBaseClient","convertTokenStringToTokenHeader","setIntEncoding","getIntEncoding","RETURN_PREFIX","AtomicTransactionComposerStatus","populateForeignArray","valueToAdd","zeroValue","offset","AtomicTransactionComposer","BUILDING","methodCalls","signedTxns","txIDs","getStatus","clone","theClone","signer","grp","addTransaction","txnAndSigner","MAX_GROUP_SIZE","addMethodCall","methodArgs","suggestedParams","onComplete","clearProgram","numGlobalInts","numGlobalByteSlices","numLocalInts","numLocalByteSlices","extraPages","OnApplicationComplete","basicArgTypes","basicArgValues","txnArgs","refArgTypes","refArgValues","refArgIndexToBasicArgIndex","boxReferences","argValue","isTransactionWithSigner","resolvedRefIndexes","foreignAccounts","refType","refValue","addressType","uint64Type","refAppID","refAssetID","MAX_APP_ARGS","lastArgTupleTypes","lastArgTupleValues","appArgsEncoded","appCall","makeApplicationCallTxnFromObject","appArgs","buildGroup","assignGroupID","txnWithSigner","BUILT","SIGNED","txnsWithSigners","txnGroup","indexesPerSigner","has","orderedSigners","batchedSigs","indexes","signerIndex","sigs","stxn","decodeSignedTransaction","SUBMITTED","stxns","gatherSignatures","do","waitRounds","COMMITTED","submit","firstMethodCallIndex","findIndex","indexToWaitFor","confirmedTxnInfo","waitForConfirmation","methodResults","methodResult","rawReturnValue","pendingInfo","txInfo","lastLog","returnValue","decodeError","MICROALGOS_TO_ALGOS_RATIO","INVALID_MICROALGOS_ERROR_MSG","microalgosToAlgos","microalgos","algosToMicroalgos","algos","decodePrograms","ap","createDryrun","appInfos","acctInfos","accts","TransactionType","appAccounts","appForeignApps","aidx","getApplicationAddress","appForeignAssets","appApprovalProgram","appClearProgram","appLocalInts","appLocalByteSlices","appGlobalInts","appGlobalByteSlices","assetPromises","Set","assetInfo","appPromises","appInfo","ai","acctPromises","acct","acctInfo","app","DryrunStackValue","sv","DryrunTraceLine","DryrunTrace","trace","truncate","maxValueWidth","scratchToString","prevScratch","currScratch","newScratchIdx","newScratch","stackToString","reverse","DryrunTransactionResult","dtr","required","optionals","traces","appCallRejected","logicSigRejected","drt","spc","maxWidth","lines","padEnd","topOfStackFirst","maxLengths","prev","newVal","appTrace","conf","lsigTrace","DryrunResult","drrResp","ALGORAND_ZERO_ADDRESS_STRING","MULTISIG_PREIMG2ADDR_PREFIX","APP_ID_PREFIX","MALFORMED_ADDRESS_ERROR_MSG","CHECKSUM_ADDRESS_ERROR_MSG","INVALID_MSIG_VERSION_ERROR_MSG","INVALID_MSIG_THRESHOLD_ERROR_MSG","INVALID_MSIG_PK_ERROR_MSG","UNEXPECTED_PK_LEN_ERROR_MSG","base32","ALGORAND_ADDRESS_BYTE_LENGTH","cs","checksum","isValidAddress","fromMultisigPreImg","fromMultisigPreImgAddrs","addrs","encodeUint64","bi","byteArray","ERROR_CONTAINS_EMPTY_STRING","emptyCheck","containsEmpty","firstEmptyKey","msgpack","allocUnsafe","writeBigUInt64BE","decodeUint64","decodingMode","padding","readBigUInt64BE","isBig","TxGroup","hashes","errorMsg","txGroupHashes","txlist","txgroupForEnc","computeGroupID","txnBuilder","rawTxID","txgroup","toBeHashed","gid","opcodes","parseUvarint","readIntConstBlock","program","numInts","bytesUsed","ints","numberFound","readByteConstBlock","byteArrays","itemLen","readPushIntOp","readPushByteOp","readProgram","vlen","langspec","Opcode","Cost","Size","foundInts","foundByteArrays","foundInt","foundByteArray","checkProgram","success","checkIntConstBlock","checkByteConstBlock","checkPushIntOp","checkPushByteOp","langspecEvalMaxVersion","langspecLogicSigVersion","SourceMap","names","mappings","pcList","vlq","pcToLine","lineToPc","lastLine","lineDelta","getLineForPc","getPcsForLine","logicSig","templates","DynamicFee","closeRemainder","leaseBytes","randomBytes","referenceProgramBytes","injectionVector","injectionTypes","valTypes","INT","ADDRESS","BASE64","injectedBytes","inject","programBytes","lsig","LogicSig","getProgram","getAddress","getDynamicFeeTransactions","privateKey","verify","ALGORAND_MIN_TX_FEE","keyPairFromSecretKey","txnObj","addLease","feePayTxn","feePayTxnObj","feePayTxnWithGroup","txnObjWithGroup","lstx","stx1","signTxn","stx2","concatStx","signDynamicFee","programOutputs","sign","sha256","keccak256","HTLC","hashFunction","hashImage","expiryRound","maxFee","referenceProgramB64","signTransactionWithHTLCUnlock","preImageAsBase64","preImageBytes","readResult","expectedHashedOutput","tempTxn","signLogicSigTransaction","dynamicFeeTemplate","htlcTemplate","limitOrderTemplate","splitTemplate","periodicPayTemplate","LimitOrder","getSwapAssetsTransaction","Split","getSplitFundsTransaction","PeriodicPayment","getPeriodicPaymentWithdrawalTransaction","makeTxn","assetid","ratn","ratd","minTrade","assetAmount","microAlgoAmount","buyerKeyPair","buyerAddr","noCloseRemainder","contractAssetID","contractOwner","makeLogicSig","makePaymentTxn","makeAssetTransferTxn","noAssetRevocationTarget","txGroup","algosForAssetsSigned","signLogicSigTransactionObject","assetsForAlgosSigned","withdrawalWindow","period","duration","receiverBytes","leaseBuffer","noNote","receiverOne","receiverTwo","rat1","rat2","minPay","amountForReceiverOne","gcdFn","gcd","ratio","amountForReceiverTwo","putUvarint","orig","offsets","valueTypes","placeholderLength","beforeReplacement","afterReplacement","chunks","decodedLength","intBuf","lenBuf","sanityCheckProgram","lineBreakOrd","blankSpaceOrd","tildeOrd","isPrintable","programStr","programArgs","encoded","verifyMultisig","signProgram","subsigs","thr","subsig","singleSignMultisig","appendToMultisig","myPk","decodedObj","LogicSigAccount","sigkey","lsigAccount","isDelegated","msigMetadata","signMultisig","lsigObject","lsigAddress","signedTxn","sgnr","signLogicSigTransactionWithAddress","logicSigFromByte","fromByte","SIGN_PROGRAM_DATA_PREFIX","tealSign","programHash","tealSignFromProgram","SIGN_BYTES_PREFIX","MULTISIG_BAD_SENDER_ERROR_MSG","algoTxn","signBytes","verifyBytes","toBeVerified","encodeObj","decodeObj","ERROR_MULTISIG_BAD_SENDER","ERROR_INVALID_MICROALGOS","convert","LogicTemplates","LogicTemplatesCommonJSExport","makePaymentTxnWithSuggestedParams","reKeyTo","makePaymentTxnWithSuggestedParamsFromObject","makeKeyRegistrationTxnWithSuggestedParams","voteKey","selectionKey","voteFirst","voteLast","makeKeyRegistrationTxn","makeKeyRegistrationTxnWithSuggestedParamsFromObject","makeAssetCreateTxnWithSuggestedParams","assetName","assetURL","assetMetadataHash","assetTotal","assetDecimals","assetDefaultFrozen","assetUnitName","assetManager","assetReserve","assetFreeze","assetClawback","makeAssetCreateTxn","makeAssetCreateTxnWithSuggestedParamsFromObject","makeAssetConfigTxnWithSuggestedParams","strictEmptyAddressChecking","makeAssetConfigTxn","makeAssetConfigTxnWithSuggestedParamsFromObject","makeAssetDestroyTxnWithSuggestedParams","makeAssetDestroyTxn","makeAssetDestroyTxnWithSuggestedParamsFromObject","makeAssetFreezeTxnWithSuggestedParams","freezeTarget","freezeState","freezeAccount","makeAssetFreezeTxn","makeAssetFreezeTxnWithSuggestedParamsFromObject","makeAssetTransferTxnWithSuggestedParams","revocationTarget","assetRevocationTarget","makeAssetTransferTxnWithSuggestedParamsFromObject","makeApplicationCreateTxn","appOnComplete","makeApplicationCreateTxnFromObject","makeApplicationUpdateTxn","makeApplicationUpdateTxnFromObject","makeApplicationDeleteTxn","makeApplicationDeleteTxnFromObject","makeApplicationOptInTxn","makeApplicationOptInTxnFromObject","makeApplicationCloseOutTxn","makeApplicationCloseOutTxnFromObject","makeApplicationClearStateTxn","makeApplicationClearStateTxnFromObject","makeApplicationNoOpTxn","makeApplicationNoOpTxnFromObject","FAIL_TO_DECODE_MNEMONIC_ERROR_MSG","toUint11Array","buffer8","buffer11","accBits","octet","applyWords","nums","english","computeChecksum","mnemonicFromSeed","words","checksumWord","seedFromMnemonic","mnemonic","uint8Array","ui11","toUint8Array","mnemonicToSecretKey","secretKeyToMnemonic","mnemonicToMasterDerivationKey","masterDerivationKeyToMnemonic","mdk","MULTISIG_MERGE_WRONG_PREIMAGE_ERROR_MSG","MULTISIG_NO_MUTATE_ERROR_MSG","createMultisigTransaction","txnForEncoding","msigAddr","snd","createMultisigTransactionWithSignature","rawSig","encodedMsig","keyExist","MultisigTransaction","addRekey","partialSignTxn","rawSignTxn","partialSignWithMultisigSignature","signerAddr","txnForEnc","mergeMultisigTransactions","multisigTxnBlobs","refSigTx","refTxID","refAuthAddr","refPreImage","refMsigAddr","newSubsigs","unisig","preimg","uniSubsig","current","compare","counter","verifiedCounter","signMultisigTransaction","expectedFromRaw","appendSignMultisigTransaction","multisigTxnBlob","multisigTxObj","msigTxn","partialSignedBlob","appendSignRawMultisigSignature","multisigAddress","sha512","keyPairFromSeed","keyPair","isValidSignatureLength","len","msg","bytesEqual","verifyKey","PUBLIC_KEY_LENGTH","SECRET_KEY_LENGTH","HASH_BYTES_LENGTH","SEED_BTYES_LENGTH","makeBasicAccountTransactionSigner","indexesToSign","signed","makeLogicSigAccountTransactionSigner","makeMultiSigAccountTransactionSigner","sks","partialSigs","translateBoxReferences","references","bx","reference","referenceId","referenceName","isOwnReference","translateBoxReference","getKeyregKey","input","inputName","inputAsBuffer","addressAsString","foreignAppIndex","foreignAssetIndex","box","removeUndefinedProperties","estimateSize","stateProofMessage","amt","fv","lv","gen","gh","lx","rekey","rcv","votekey","selkey","sprfkey","votefst","votelst","votekd","nonpart","caid","apar","df","dc","an","un","au","am","aamt","arcv","xaid","aclose","asnd","faid","fadd","apid","apan","apls","nui","nbs","apgs","apfa","apas","apep","apbx","apap","apsu","apaa","apat","decodedAddress","sptype","spmsg","sp","isTransactionType","addressBytes","bytesToSign","sTxn","pubKeyFromSk","attachSignature","signerPublicKey","enMsg","mutableLease","feePerByte","_getDictForDisplay","forPrinting","prettyPrint","transactionObject","objToEncode","decodeUnsignedTransaction","transactionBuffer","partlyDecodedObject","stxnDecoded","instantiateTxnIfNeeded","transactionLike","stpf","JSONbig","JSONbigWithoutConfig","useNativeBigInt","strict","setPrototypeOf","arrayEqual","arrs","sum","mutableCopy","isNode","node","startRound","self","__self__","DOMException","support","Blob","viewClasses","normalizeName","normalizeValue","iteratorFor","items","iterator","Headers","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","readAsText","readBlobAsText","chars","readArrayBufferAsText","formData","oldValue","Request","credentials","upcased","normalizeMethod","referrer","rawHeaders","Response","bodyInit","redirectStatuses","redirect","init","xhr","abortXhr","polyfill","ponyfill","ctx","src_exports","__export","ApiError","ApiError2","AptosAccount","AptosClient","BCS","bcs_exports","CoinClient","FailedTransactionError","FaucetClient","HexString","TokenClient","TokenTypes","token_types_exports","TransactionBuilder","TransactionBuilderABI","TransactionBuilderEd25519","TransactionBuilderMultiEd25519","TransactionBuilderRemoteABI","TxnBuilderTypes","aptos_types_exports","TypeTagParser","Types","generated_exports","WaitForTransactionError","derivePath","deserializePropertyMap","deserializeValueBasedOnTypeTag","getAddressFromAccountOrAddress","getPropertyValueRaw","import_tweetnacl2","__toESM","bip39","import_utils3","import_sha33","import_hmac","import_sha512","import_utils","pathRegex","replaceDerive","HARDENED_OFFSET","getMasterKeyFromSeed","hmac","hexToBytes","digest","chainCode","CKDPriv","indexBytes","zero","isValidPath","isNaN","segments","el","parentKeys","segment","import_utils2","fromUint8Array","bytesToHex","noPrefix","toShortString","sleep","timeMs","resolve2","DEFAULT_MAX_GAS_AMOUNT","APTOS_COIN","Memoize","ttlMs","tags","propertyKey","descriptor","getNewFunction","clearCacheTagsMap","originalMethod","propMapName","returnedValue","that","configurable","myMap","hashKey","timestampKey","isExpired","paginateWithCursor","apiFunction","accountAddress","limitPerRequest","out","cursor","ensure","ledgerVersion","__headers","AccountAddress","AccountAuthenticator","AccountAuthenticatorEd25519","AccountAuthenticatorMultiEd25519","ArgumentABI","AuthenticationKey","ChainId","ChangeSet","Ed25519PublicKey","Ed25519Signature","EntryFunction","EntryFunctionABI","Identifier","Module","ModuleId","MultiAgentRawTransaction","MultiEd25519PublicKey","MultiEd25519Signature","RawTransaction","RawTransactionWithData","RotationProofChallenge","Script","ScriptABI","SignedTransaction","StructTag","TransactionArgument","TransactionArgumentAddress","TransactionArgumentBool","TransactionArgumentU128","TransactionArgumentU16","TransactionArgumentU256","TransactionArgumentU32","TransactionArgumentU64","TransactionArgumentU8","TransactionArgumentU8Vector","TransactionAuthenticator","TransactionAuthenticatorEd25519","TransactionAuthenticatorMultiAgent","TransactionAuthenticatorMultiEd25519","TransactionPayload","TransactionPayloadEntryFunction","TransactionPayloadScript","TransactionScriptABI","TypeArgumentABI","TypeTag","TypeTagAddress","TypeTagBool","TypeTagSigner","TypeTagStruct","TypeTagU128","TypeTagU16","TypeTagU256","TypeTagU32","TypeTagU64","TypeTagU8","TypeTagVector","UserTransaction","WriteSet","Deserializer","Serializer","bcsSerializeBool","bcsSerializeBytes","bcsSerializeFixedBytes","bcsSerializeStr","bcsSerializeU128","bcsSerializeU16","bcsSerializeU32","bcsSerializeU8","bcsSerializeUint64","bcsToBytes","deserializeVector","serializeVector","serializeVectorWithFunc","MAX_U32_NUMBER","MAX_U64_BIG_INT","MAX_U128_BIG_INT","MAX_U256_BIG_INT","ensureBufferWillHandleSize","newBuffer","serialize","serializeWithFunction","bytesLength","dv","serializeStr","textEncoder","serializeBytes","serializeU32AsUleb128","serializeFixedBytes","serializeBool","serializeU8","serializeU16","serializeU32","serializeU64","low","high","serializeU128","serializeU256","valueArray","getBytes","checkNumberRange","minValue","maxValue","childFunction","valueBigInt","__decorateClass","deserializeStr","deserializeBytes","deserializeUleb128AsU32","deserializeFixedBytes","deserializeBool","bool","deserializeU8","deserializeU16","deserializeU32","deserializeU64","deserializeU128","deserializeU256","byte","serializer","func","deserializer","cls","list","deserialize","import_sha3","_AccountAddress","LENGTH","CORE_CODE_ADDRESS","_Ed25519PublicKey","toBytes","_Ed25519Signature","public_keys","begin","_MultiEd25519Signature","signatures","bitmap","BITMAP_LEN","bits","dupCheckSet","bit","load","secondary_signer_addresses","secondary_signers","_deserializer","isStringTypeTag","module_name","type_args","structTag","moduleName","typeArgs","sequence_number","max_gas_amount","gas_unit_price","expiration_timestamp_secs","chain_id","ty_args","function_name","module2","fromStr","natural","moduleId","raw_txn","authenticator","rawTxn","secondarySignerAddresses","getHashSalt","sha3_256","type_tag","typeTag","doc","tyArgs","import_sha32","_AuthenticationKey","pubKeyBytes","MULTI_ED25519_SCHEME","ED25519_SCHEME","derivedAddress","DERIVE_RESOURCE_ACCOUNT_SCHEME","structName","sequenceNumber","originator","currentAuthKey","newPublicKey","_AptosAccount","privateKeyHex","mnemonics","normalizeMnemonics","part","mnemonicToSeedSync","privateKeyBytes","fromSeed","authKey","pubKey","fromEd25519PublicKey","sourceAddress","signBuffer","signHexString","toSign","toPrivateKeyObject","publicKeyHex","accountOrAddress","$AccountData","$AccountSignature","$AccountSignature_Ed25519Signature","$AccountSignature_MultiEd25519Signature","$Address","$AptosError","$AptosErrorCode","$Block","$BlockMetadataTransaction","$DecodedTableData","$DeleteModule","$DeleteResource","$DeleteTableItem","$DeletedTableData","$DirectWriteSet","$Ed25519Signature","$EncodeSubmissionRequest","$EntryFunctionId","$EntryFunctionPayload","$Event","$EventGuid","$GasEstimation","$GenesisPayload","$GenesisPayload_WriteSetPayload","$GenesisTransaction","$HashValue","$HealthCheckSuccess","$HexEncodedBytes","$IdentifierWrapper","$IndexResponse","$ModuleBundlePayload","$MoveAbility","$MoveFunction","$MoveFunctionGenericTypeParam","$MoveFunctionVisibility","$MoveModule","$MoveModuleBytecode","$MoveModuleId","$MoveResource","$MoveScriptBytecode","$MoveStruct","$MoveStructField","$MoveStructGenericTypeParam","$MoveStructTag","$MoveStructValue","$MoveType","$MoveValue","$MultiAgentSignature","$MultiEd25519Signature","$PendingTransaction","$RawTableItemRequest","$RoleType","$ScriptPayload","$ScriptWriteSet","$StateCheckpointTransaction","$StateKeyWrapper","$SubmitTransactionRequest","$TableItemRequest","$Transaction","$TransactionPayload","$TransactionPayload_EntryFunctionPayload","$TransactionPayload_ModuleBundlePayload","$TransactionPayload_ScriptPayload","$TransactionSignature","$TransactionSignature_Ed25519Signature","$TransactionSignature_MultiAgentSignature","$TransactionSignature_MultiEd25519Signature","$Transaction_BlockMetadataTransaction","$Transaction_GenesisTransaction","$Transaction_PendingTransaction","$Transaction_StateCheckpointTransaction","$Transaction_UserTransaction","$TransactionsBatchSingleSubmissionFailure","$TransactionsBatchSubmissionResult","$U128","$U256","$U64","$UserTransaction","$VersionedEvent","$ViewRequest","$WriteModule","$WriteResource","$WriteSet","$WriteSetChange","$WriteSetChange_DeleteModule","$WriteSetChange_DeleteResource","$WriteSetChange_DeleteTableItem","$WriteSetChange_WriteModule","$WriteSetChange_WriteResource","$WriteSetChange_WriteTableItem","$WriteSetPayload","$WriteSet_DirectWriteSet","$WriteSet_ScriptWriteSet","$WriteTableItem","AccountsService","AptosErrorCode","AptosGeneratedClient","BaseHttpRequest","BlocksService","CancelError","CancelablePromise","EventsService","GeneralService","MoveFunctionVisibility","OpenAPI","RoleType","TablesService","TransactionsService","ViewService","import_axios","import_form_data","request2","isCancelled","_isResolved","_isRejected","_isCancelled","_cancelHandlers","_promise","_reject","onCancel","cancelHandler","catch","finally","onFinally","CookieJar","jar2","jar","setCookie","cookieStr","origin","getCookies","nameLow","sameSite","isDefined","isStringWithValue","stream","getQueryString","qs","resolver","getHeaders","TOKEN","USERNAME","PASSWORD","additionalHeaders","HEADERS","formHeaders","Accept","headers2","mediaType","getUrl","ENCODE_PATH","substring","BASE","getFormData","getRequestBody","requestConfig","WITH_CREDENTIALS","axiosError","sendRequest","responseBody","getResponseBody","responseHeader","getResponseHeader","catchErrorCodes","AxiosHttpRequest","httpRequest","getAccount","getAccountResources","getAccountModules","getAccountResource","resourceType","getAccountModule","getBlockByHeight","blockHeight","withTransactions","getBlockByVersion","getEventsByCreationNumber","creationNumber","getEventsByEventHandle","eventHandle","spec","healthy","durationSecs","getLedgerInfo","getTableItem","tableHandle","requestBody","getRawTableItem","getTransactions","submitTransaction","getTransactionByHash","txnHash","getTransactionByVersion","txnVersion","getAccountTransactions","submitBatchTransactions","simulateTransaction","estimateMaxGasAmount","estimateGasUnitPrice","estimatePrioritizedGasUnitPrice","encodeSubmission","estimateGasPrice","HttpRequest","CREDENTIALS","blocks","events","general","tables","AptosErrorCode2","MoveFunctionVisibility2","RoleType2","properties","isRequired","authentication_key","error_code","vm_error_code","block_height","block_hash","block_timestamp","first_version","last_version","state_change_hash","event_root_hash","state_checkpoint_hash","gas_used","vm_status","accumulator_root_hash","changes","epoch","previous_block_votes_bitvec","proposer","failed_proposer_indices","key_type","value_type","state_key_hash","resource","handle","function","type_arguments","guid","creation_number","account_address","deprioritized_gas_estimate","gas_estimate","prioritized_gas_estimate","ledger_version","oldest_ledger_version","ledger_timestamp","node_role","oldest_block_height","git_hash","modules","visibility","is_entry","generic_type_params","return","constraints","friends","exposed_functions","structs","bytecode","abi","is_native","abilities","fields","pattern","execute_as","script","transaction_index","transaction_failures","write_set","import_sha34","stringStructTag","assertType","types","bail","isWhiteSpace","isValidAlphabetic","tagStr","tokenize","consume","targetToken","parseCommaList","endToken","allowTraillingComma","parseTypeTag","tokenTy","tokenVal","moduleTokenTy","nameTokenTy","tyTags","ensureBoolean","ensureNumber","ensureBigInt","serializeArg","argVal","signingFunction","rawTxnBuilder","ty_tags","mergedArray","rawToSigned","signingMessage","getSigningMessage","abis","builderConfig","abiMap","scriptABI","funcABI","maxGasAmount","expSecFromNow","abiArgs","argToTransactionArgument","setSequenceNumber","seqNumber","buildTransactionPayload","typeTags","ty_arg","bcsArgs","toBCSArgs","scriptArgs","toTransactionArguments","gasUnitPrice","senderAccount","expTimestampSec","aptosClient","fullName","fetchABI","funcAbi","typeArgABIs","param","entryFunctionABI","rest","getChainId","_AptosClient","nodeUrl","doNotFixNodeUrl","fixNodeUrl","accountFrom","sigHexStr","_signingMessage","invalidSigBytes","rawTransaction","generateBCSTransaction","eventHandleStruct","submitSignedBCSTransaction","accountOrPubkey","generateBCSSimulation","createBitmap","submitBCSSimulation","bcsBody","queryParams","estimate_gas_unit_price","estimate_max_gas_amount","estimate_prioritized_gas_unit_price","extraArgs","timeoutSecs","checkSuccess","lastTxn","isPending","isApiError","isRequestError","waitForTransactionWithResult","gasEstimate","expireTimestamp","generateRawTransaction","bcsTxn","packageMetadata","codeSerializer","generateSignSubmitTransaction","forAccount","resources","accountResource","coin","toPrivateKeyBytes","helperAccount","challenge","challengeHex","proofSignedByCurrentPrivateKey","proofSignedByNewPrivateKey","addressOrAuthKey","address_map","origAddress","clearCache","cleared","maps","mp","clear","parseApiError","errorCode","vmErrorCode","lastSubmittedTransaction","TOKEN_ABIS","COIN_ABIS","transactionBuilder","coinTypeToTransfer","coinType","createReceiverIfMissing","faucetUrl","faucetRequester","tnxHashes","tnxHash","PropertyValue","PropertyMap","getPropertyType","typ","results","rawPropertyMap","pm","newValue","pv","de","Token","TokenData","collection","maximum","default_properties","mutability_config","token_properties","maxAmount","royalty_payee_address","royalty_points_denominator","royalty_points_numerator","property_keys","property_values","property_types","property_version","propertyVersion","multiAgentTxn","senderSignature","senderAuthenticator","receiverSignature","receiverAuthenticator","multiAgentAuthenticator","optIn","tokenName","PropertyVersion","creatorAddress","tokenOwner","collection_name","collection_data","getCollectionTableItemRequest","creatorHex","token_data","getTokenTableItemRequest","rawTokenData","tokenDataId","getTokenForAccount","token_data_id","tokenStore","rawToken","AxiosError","CanceledError","parseProtocol","ECONNABORTED","ERR_NETWORK","ETIMEDOUT","ERR_BAD_REQUEST","toFormData","ERR_CANCELED","inherits","generateHTTPMethod","isForm","descriptors","defineProperties","customProps","toFlatObject","ERR_BAD_RESPONSE","isFileList","isObjectPayload","contentType","_FormData","env","exec","convertValue","isTypedArray","parentKey","fullKey","toArray","ERR_DEPRECATED","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","kindOf","kindOfTest","TypedArray","superConstructor","props","sourceObj","destObj","searchString","lastIndex","asn1","bignum","base","constants","Entity","_createNamed","Base","Generated","entity","_initNamed","_getDecoder","enc","_getEncoder","reporter","Reporter","DecoderBuffer","EncoderBuffer","isEncoderBuffer","isDecoderBuffer","save","restore","isEmpty","readUInt8","skip","fail","_reporterState","alloc","copy","Node","state","_baseState","children","reverseArgs","choice","optional","useDecoder","explicit","implicit","_wrap","stateProps","cstate","_init","equal","_useArgs","def","newKey","_decode","wrapResult","prevObj","present","prevKey","enterKey","_peekTag","isError","_decodeGeneric","_decodeChoice","enterObject","_decodeTag","track","_getUse","leaveObject","exitKey","leaveKey","_decodeList","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeBool","_decodeInt","_use","_createEncoderBuffer","_encode","_encodeValue","_skipDefault","primitive","_encodeChoice","_encodePrimitive","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool","_isNumstr","_isPrintstr","ReporterError","rethrow","pathLen","inherited","tagClass","tagClassByName","tagByName","_reverse","der","DERDecoder","tree","DERNode","derDecodeTag","oct","derDecodeLen","decodedTag","_skipUntilEnd","decoder","possibleEnd","unused","readUInt16BE","numstr","printstr","relative","identifiers","ident","subident","tmp","year","mon","day","hour","UTC","pem","PEMDecoder","label","re","base64","DEREncoder","two","encodedTag","encodeTag","lenOctets","writeUInt16BE","objid","time","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","numArray","dataBuffer","defaultBuffer","PEMEncoder","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","red","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","limbLen","limbPow","mod","imuln","_iaddn","dest","_expand","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","lo","carry","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","ret","toBuffer","toArrayLike","ArrayType","reqLength","littleEndian","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","wbit","iadd","isub","sub","comb10MulTo","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","convert13b","stub","ph","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","egcd","isEven","yp","xp","im","isOdd","jm","_invmp","x1","x2","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","_strip","output","outLen","mod3","one","nOne","lpow","wnd","currentLen","mont","_typeof","isDeepEqual","isDeepStrictEqual","_require$codes","codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","_require$types","isPromise","isRegExp","objectAssign","objectIs","is","lazyLoadComparison","comparison","warned","NO_EXCEPTION_SENTINEL","innerFail","innerOk","argLen","generatedMessage","actual","expected","operator","stackStartFn","internalMessage","argsLen","emitWarning","errArgs","notEqual","deepEqual","notDeepEqual","deepStrictEqual","notDeepStrictEqual","strictEqual","notStrictEqual","Comparison","Constructor","_classCallCheck","compareExceptionKey","expectedException","getActual","checkIsPromise","waitForActual","promiseFn","resultPromise","expectsError","details","fnType","expectsNoError","throws","rejects","doesNotThrow","doesNotReject","ifError","newErr","origStack","tmp2","tmp1","_defineProperty","_defineProperties","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Function","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Parent","__proto__","this_len","blue","green","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","copyError","inspectValue","compact","customInspect","Infinity","showHidden","breakLength","showProxy","sorted","getters","createErrDiff","lastPos","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","stderr","isTTY","columns","repeat","maxLines","_actualLines","printedLines","skippedMsg","expectedLine","actualLine","divergingLines","_Error","stackTraceLimit","getColorDepth","_res","knownOperators","protoProps","staticProps","subClass","superClass","_inherits","custom","recurseTimes","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread","util","createErrorType","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","determiner","inspected","_slicedToArray","_arrayWithHoles","_arr","_n","_s","_i","_iterableToArrayLimit","_nonIterableRest","regexFlagsSupported","flags","arrayFromSet","arrayFromMap","objectGetOwnPropertySymbols","numberIsNaN","uncurryThis","propertyIsEnumerable","objectToString","isAnyArrayBuffer","isMap","isSet","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","getOwnNonIndexProperties","innerDeepEqual","val1","val2","memos","buf1","buf2","val1Tag","keys1","keys2","keyCheck","areSimilarTypedArrays","areSimilarFloatArrays","_keys","_keys2","valueOf","isEqualBoxedPrimitive","getEnumerables","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","val2MemoA","val2MemoB","areEq","objEquiv","setHasEqualElement","memo","setValues","findLooseMatchingPrimitives","prim","setMightHaveLoosePrim","altValue","mapMightHaveLoosePrim","curB","mapHasEqualEntry","key1","item1","key2","aValues","bValues","_val","setEquiv","aEntries","_aEntries$i","item2","bEntries","_i2","_bEntries$_i","mapEquiv","keysA","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","axiosKeys","otherKeys","pkg","currentVerArr","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","_Buffer","ALPHABET","BASE_MAP","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","pad_string_1","fromBase64","toBase64","base64url","stringLength","padLength","paddedStringLength","ALPHABET_MAP","polymodStep","pre","prefixChk","chk","__decode","LIMIT","lowered","uppered","lastIndexOf","wordChars","inBits","outBits","pad","maxV","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","reversed","globalObject","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","LOG_BASE","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","yc","intCheck","toExponential","toFixedPoint","zs","configObject","convertBase","parseNumeric","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","alphabetHasNormalDecimalDigits","alphabet","caseChanged","isNum","_isBigNumber","rm","c0","ne","maxOrMin","normalise","sd","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","crypto","getRandomValues","EXPONENTIAL_AT","RANGE","isBigNumber","minimum","pow2_53","random53bitInt","dp","rand","Uint32Array","plus","decimal","toBaseOut","baseIn","baseOut","arrL","callerIsToString","multiply","temp","xlo","xhi","klo","khi","aL","bL","subtract","more","prod","prodL","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","p1","p2","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","isModExp","nIsBig","nIsNeg","nIsOdd","times","integerValue","isEqualTo","isFinite","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isNegative","isPositive","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","shiftedBy","squareRoot","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","intDigits","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","Context","importPath","useContextVariables","scopes","bitFields","tmpVariableCount","imports","reverseImports","generateVariable","generateOption","addImport","generateError","pushCode","generateTmpVariable","pushPath","popPath","pushScope","popScope","addReference","alias","requested","markResolved","markRequested","aliasList","getUnresolvedReferences","aliasRegistry","FUNCTION_PREFIX","PRIMITIVE_SIZES","uint16le","uint16be","uint32le","uint32be","int8","int16le","int16be","int32le","int32be","int64be","int64le","uint64be","uint64le","floatle","floatbe","doublele","doublebe","PRIMITIVE_NAMES","PRIMITIVE_LITTLE_ENDIANS","Parser","varName","primitiveGenerateN","typeName","primitiveN","setNextParser","useThisEndian","uint16","uint32","int16","int32","bigIntVersionCheck","getBigInt64","int64","uint64","bitN","bit1","bit2","bit3","bit4","bit5","bit6","bit7","bit8","bit9","bit10","bit11","bit12","bit13","bit14","bit15","bit16","bit17","bit18","bit19","bit20","bit21","bit22","bit23","bit24","bit25","bit26","bit27","bit28","bit29","bit30","bit31","bit32","namely","seek","relOffset","zeroTerminated","greedy","stripNull","readUntil","wrapped","wrapper","lengthInBytes","choices","keyString","nest","pointer","saveOffset","endianness","endianess","useContextVars","constructorFn","getContext","addAliasedCode","addRawCode","generate","resolveReferences","compiled","sizeOf","elementSize","generateBit","generateString","generateBuffer","generateSeek","generateNest","generateArray","generateChoice","generatePointer","generateSaveOffset","generateWrapper","generateAssert","generateFormatter","generateNext","getMaxBits","bitOffset","isBigEndian","isHex","pred","lhs","isHash","tempVar","parentVar","generateChoiceCase","nestVar","tagString","defaultChoice","wrapperVar","wrappedBuf","tempBuf","tempOff","tempView","HARDENED","BIPPath","validatePathArray","fromPathArray","validateString","reqRoot","fromString","toPathArray","noRoot","oldStyle","bs58check","ecc","typeforce","wif","UINT256_TYPE","BufferN","NETWORK_TYPE","UInt8","bip32","public","UInt32","private","BITCOIN","messagePrefix","bech32","pubKeyHash","scriptHash","HIGHEST_BIT","UINT31_MAX","BIP32Path","UInt31","BIP32","__D","__Q","__DEPTH","__INDEX","__PARENT_FINGERPRINT","lowR","parentFingerprint","pointFromScalar","identifier","hash160","fingerprint","compressed","isNeutered","neutered","fromPublicKeyLocal","toBase58","writeUInt32BE","writeUInt8","toWIF","derive","isHardened","hmacSHA512","IL","IR","isPrivate","Ki","pointAddScalar","readUInt32BE","ki","privateAdd","fromPrivateKeyLocal","deriveHardened","splitPath","prevHd","indexStr","extraData","writeUIntLE","signWithEntropy","fromPrivateKey","isPoint","fromBase58","inString","fromPublicKey","createHash","createHmac","sha256Hash","bip32_1","wordlists","_default","czech","chinese_simplified","chinese_traditional","korean","french","italian","spanish","japanese","JA","portuguese","EN","pbkdf2_1","_wordlists_1","DEFAULT_WORDLIST","INVALID_MNEMONIC","INVALID_ENTROPY","WORDLIST_REQUIRED","lpad","padString","binaryToByte","bin","bytesToBinary","deriveChecksumBits","entropyBuffer","CS","salt","mnemonicToEntropy","wordlist","dividerIndex","entropyBits","checksumBits","entropyBytes","entropy","entropyToMnemonic","mnemonicBuffer","saltBuffer","pbkdf2Sync","mnemonicToSeed","saltMixin","iterations","keylen","pbkdf2","derivedKey","pbkdf2Promise","generateMnemonic","strength","rng","validateMnemonic","setDefaultWordlist","language","getDefaultWordlist","lang","_wordlists_2","move","_move","for","modrn","allocate","_toArrayLikeLE","_toArrayLikeBE","isNegNum","__createBinding","k2","__setModuleDefault","__decorate","decorators","decorate","__importStar","__importDefault","deserializeUnchecked","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","maybeResize","writeUInt16LE","writeUInt32LE","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","handlingRangeError","propertyDescriptor","readUInt16LE","readUInt32LE","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","serializeField","fieldType","writer","serializeStruct","structSchema","deserializeField","deserializeStruct","classType","getFirstMatch","getSecondMatch","matchAndReturnConst","getWindowsVersionName","getMacOSVersionName","getAndroidVersionName","getVersionPrecision","compareVersions","getBrowserAlias","BROWSER_ALIASES_MAP","getBrowserTypeByAlias","BROWSER_MAP","ENGINE_MAP","OS_MAP","PLATFORMS_MAP","Bada","BlackBerry","Chrome","Chromium","Electron","Epiphany","Firefox","Focus","Generic","Googlebot","Maxthon","Opera","PhantomJS","Puffin","QupZilla","QQ","QQLite","Safari","Sailfish","SeaMonkey","Sleipnir","Swing","Tizen","Vivaldi","WeChat","Roku","amazon_silk","android","bada","blackberry","chrome","chromium","electron","epiphany","firefox","generic","googlebot","google_search","k_meleon","maxthon","edge","mz","naver","opera","opera_coast","phantomjs","puffin","qupzilla","qq","qqlite","safari","sailfish","samsung_internet","seamonkey","sleipnir","swing","tizen","uc","vivaldi","webos","wechat","yandex","tablet","mobile","desktop","tv","WindowsPhone","Windows","MacOS","iOS","Android","WebOS","Linux","ChromeOS","PlayStation4","EdgeHTML","Blink","Trident","Presto","Gecko","WebKit","getResult","_ua","parsedResult","getUA","parseBrowser","browser","describe","getBrowser","getBrowserVersion","getOS","os","parseOS","getOSName","getOSVersion","getPlatform","parsePlatform","getPlatformType","getEngine","engine","parseEngine","getEngineName","satisfies","isOS","isPlatform","isBrowser","compareVersion","isEngine","versionName","vendor","model","Rand","_rand","getByte","msCrypto","factory","installedModules","__webpack_require__","getter","property","util_1","BrowserHeaders","splitValues","headersMap","getHeaderKeys","getHeaderValues","splitHeaderValue","appendFromString","pairs","normalizedKey","existing","arrayValue","normalized_1","keyArray","normalizedValue","toHeaders","headers_1","BrowserHeaders_1","iterateHeaders","entry","iterateHeadersKeys","iterateHeaders_1","headersAsNative","getAll","getValue","asMap","commaSpaceValue","commaValue","asUInt32Array","scrubVec","cryptBlock","keySchedule","SUB_MIX","SBOX","nRounds","t0","t1","t2","t3","SUB_MIX0","SUB_MIX1","SUB_MIX2","SUB_MIX3","s0","s1","s2","s3","ksRow","RCON","INV_SBOX","INV_SUB_MIX","sx","x4","x8","AES","_reset","blockSize","keySize","keyWords","ksRows","invKeySchedule","ik","ksR","tt","_nRounds","_keySchedule","_invKeySchedule","encryptBlockRaw","encryptBlock","decryptBlock","m1","scrub","aes","Transform","GHASH","incr32","StreamCipher","iv","decrypt","_cipher","ck","_ghash","_finID","ghash","toPad","ivBits","tail","writeUIntBE","calcIv","_prev","_secCache","_decrypt","_alen","_mode","_authTag","_called","_update","chunk","rump","encrypt","_final","final","xorTest","getAuthTag","setAuthTag","setAAD","ciphers","deciphers","modes","createCipher","Cipher","createCipheriv","Cipheriv","createDecipher","Decipher","createDecipheriv","Decipheriv","listCiphers","getCiphers","AuthCipher","MODES","ebtk","Splitter","_last","_autopadding","suite","flush","padded","unpad","setAutoPadding","setTo","autoPadding","PADDING","padBuff","ZEROES","fromArray","_multiply","lsbVi","Vi","Zi","abl","bl","encryptStart","encryptByte","byteParam","shiftIn","chunkNum","modeModules","ECB","CBC","CFB","CFB8","CFB1","OFB","CTR","GCM","DES","aesModes","desModes","keyLen","ivLen","CipherBase","des","instantiate","EDE","modeName","_des","des3","getr","priv","modulus","prime1","prime2","crt","blinds","blinder","publicExponent","unblinder","blind","blinded","c1","c2","qinv","coefficient","exponent1","m2","exponent2","algorithms","Sign","algorithm","Writable","_hashType","_hash","_tag","_signType","Verify","createSign","createVerify","_write","EC","parseKeys","curves","getKey","algo","hlen","hbits","bits2int","bits2octets","obits","makeKey","kv","makeR","signType","curve","curveId","keyFromPrivate","toDER","ecSign","priv_key","dsaSign","checkValue","pub","pubkey","subjectPrivateKey","ecVerify","pub_key","unpacked","montp","dsaVerify","padNum","Zstream","zlib_deflate","zlib_inflate","NONE","DEFLATE","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","UNZIP","Zlib","dictionary","init_done","memLevel","strategy","windowBits","write_in_progress","pending_close","gzip_id_bytes_read","deflateEnd","strm","inflateEnd","in_off","in_len","out_off","out_len","writeSync","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","avail_in","next_in","avail_out","next_out","_process","_checkError","_afterSync","nextTick","_after","next_expected_header_byte","deflate","inflate","Z_NEED_DICT","inflateSetDictionary","Z_OK","Z_DATA_ERROR","Z_STREAM_END","reset","Z_BUF_ERROR","_error","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","_setDictionary","deflateInit2","Z_DEFLATED","inflateInit2","deflateSetDictionary","deflateReset","inflateReset","binding","kMaxLength","kRangeErrorMessage","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_DEFAULT_WINDOWBITS","Z_MIN_CHUNK","Z_MAX_CHUNK","Z_DEFAULT_CHUNK","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","Z_DEFAULT_MEMLEVEL","Z_MIN_LEVEL","Z_MAX_LEVEL","Z_DEFAULT_LEVEL","Z_DEFAULT_COMPRESSION","bkeys","bk","bkey","Z_ERRNO","Z_STREAM_ERROR","Z_MEM_ERROR","Z_VERSION_ERROR","ckeys","ckey","zlibBuffer","buffers","nread","flow","onEnd","removeListener","zlibBufferSync","flushFlag","_finishFlushFlag","_processChunk","Deflate","Inflate","Gzip","Gunzip","DeflateRaw","InflateRaw","Unzip","isValidFlushFlag","flag","_opts","_chunkSize","chunkSize","finishFlush","_flushFlag","_handle","_hadError","errno","_close","emit","_buffer","_offset","_level","_strategy","emitCloseNT","createDeflate","createInflate","createDeflateRaw","createInflateRaw","createGzip","createGunzip","createUnzip","deflateSync","gzip","gzipSync","deflateRaw","deflateRawSync","unzip","unzipSync","inflateSync","gunzip","gunzipSync","inflateRaw","inflateRawSync","_flush","_transform","_this2","_writableState","ended","ending","needDrain","cb","availInBefore","availOutBefore","inOff","er","availInAfter","availOutAfter","have","newReq","basex","base58","checksumFn","decodeRaw","newChecksum","bs58checkBase","possibleNames","globalThis","asyncGeneratorStep","_next","_throw","toPropertyKey","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","newObj","hasPropertyDescriptor","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","mark","awrap","iter","skipTempReset","stop","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","toPrimitive","runtime","regeneratorRuntime","accidentalStrictMode","hexToBytes2","sha3Hash","sha3Hash2","bytesToHex2","nacl2","sha3Hash3","sha3Hash4","_arrayLikeToArray","arr2","_createClass","_extends","_inheritsLoose","_iterableToArray","enumerableOnly","symbols","_objectSpread2","getOwnPropertyDescriptors","_objectWithoutProperties","excluded","sourceSymbolKeys","_objectWithoutPropertiesLoose","sourceKeys","arrayWithHoles","_x","_r","unsupportedIterableToArray","nonIterableRest","_toArray","_toConsumableArray","arrayLikeToArray","iterableToArray","_toPropertyKey","_unsupportedIterableToArray","minLen"],"sourceRoot":""}