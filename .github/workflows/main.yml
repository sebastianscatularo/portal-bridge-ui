name: Portal Bridge

on:
  push:
    branches:
      - feat/github-actions-build

jobs:
  version:
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
    runs-on: ubuntu-latest
    permissions:
      repositories: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - run: git config --global user.name 'xLabs'
      - run: git config --global user.email 'devops@xlabs.xyz'
      - run: npm version patch -m "[RELEASE] %s"
      - run: git push --follow-tags origin $GITHUB_REF

  build:
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node environment
        uses: actions/setup-node@v3
        with:
          node-version: v16.19.1
          registry-url: https://npm.pkg.github.com

      - name: Cache Node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies 
        run: npm install

      - name: Build
        env:
          NODE_OPTIONS: --max-old-space-size=5120
          GENERATE_SOURCEMAP: false
        run: npm run build

      - name: Publish
        run: pushd build && npm run git-hash && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
      if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Trigger deploy
          run: curl -X POST ${{ secrets.DEPLOY_HOOK_URL }}
